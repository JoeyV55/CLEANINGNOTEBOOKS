issueNumber,prNumber,Util,Network,DB,Interpreter,i18n,Logic,Test,IO,UI,Security,corpus
3107.0,3117,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,fix tostring of nonserializablememoizingsupplier ee cdd c f e ead c e a use splitter instead of stringsplit in internetdomainnamee f aa d b eed f d c af c ec use splitter for ipv too this eliminates usage of javautilregex from this file which is used via stringsplit otherwise a a de ef eea f a cbbce e e fccce use diamond eb c a d edbf edcca cd cd automated rollback of a ef b b fe c e db a a f eit looks like the original change can cause an infinite loop in localcacheloadingvaluereferenceget c a ff c f d b b fe dont enable use of unsafegetlong on aarch devicesandroid devices may report to run aarch while running in bit mode and thencrash when loading bit values at unaligned addresses bbcf cf cfae ddf e f d da e
3485.0,3495,1.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,remove beta from setfuture relnotesremoved beta from setfuture c c ad abbbe a d e c upgrade maven gpg plugin to fixes githubcom google guava pull c a ffa a d a f e a fe clarify behavior of immutablelistcopyof for null argument f fb ba a e a feb make the incidentedges documentation a little bit more clearb a ab decf d dcd f d f simplify implementation of graphsreachablenodes b c a e c f f bc c dcebe make the adjacentnodes documentation a little bit more clear a a b a f a fa a ede delete deprecated callwithtimeout fa f c edff cd c f a decf
2677.0,3635,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,check the array indexes in quantilesscaleandindexes is non empty fixes a ddaa d b e ed bb e be ee simplify some codefixes e def a a d aef a e f document the jdk alternative to iteratorsforenumeration fixes e be b c f abb c f ab d f d add a mime type mpeg dash mpd files fixes relnotes net added the mediatype constant for mpeg dash ccf c be b ec f ef e fix the logic that decides whether to use currentrequestthreadfactory under app enginewhile there also support thread renaming under app enginefixes to the cl in which i experimented with before backing it out bd b c f e b f e a c
3210.0,3635,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,check the array indexes in quantilesscaleandindexes is non empty fixes a ddaa d b e ed bb e be ee simplify some codefixes e def a a d aef a e f document the jdk alternative to iteratorsforenumeration fixes e be b c f abb c f ab d f d add a mime type mpeg dash mpd files fixes relnotes net added the mediatype constant for mpeg dash ccf c be b ec f ef e fix the logic that decides whether to use currentrequestthreadfactory under app enginewhile there also support thread renaming under app enginefixes to the cl in which i experimented with before backing it out bd b c f e b f e a c
3211.0,3635,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,check the array indexes in quantilesscaleandindexes is non empty fixes a ddaa d b e ed bb e be ee simplify some codefixes e def a a d aef a e f document the jdk alternative to iteratorsforenumeration fixes e be b c f abb c f ab d f d add a mime type mpeg dash mpd files fixes relnotes net added the mediatype constant for mpeg dash ccf c be b ec f ef e fix the logic that decides whether to use currentrequestthreadfactory under app enginewhile there also support thread renaming under app enginefixes to the cl in which i experimented with before backing it out bd b c f e b f e a c
3382.0,3635,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,check the array indexes in quantilesscaleandindexes is non empty fixes a ddaa d b e ed bb e be ee simplify some codefixes e def a a d aef a e f document the jdk alternative to iteratorsforenumeration fixes e be b c f abb c f ab d f d add a mime type mpeg dash mpd files fixes relnotes net added the mediatype constant for mpeg dash ccf c be b ec f ef e fix the logic that decides whether to use currentrequestthreadfactory under app enginewhile there also support thread renaming under app enginefixes to the cl in which i experimented with before backing it out bd b c f e b f e a c
3580.0,3635,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,check the array indexes in quantilesscaleandindexes is non empty fixes a ddaa d b e ed bb e be ee simplify some codefixes e def a a d aef a e f document the jdk alternative to iteratorsforenumeration fixes e be b c f abb c f ab d f d add a mime type mpeg dash mpd files fixes relnotes net added the mediatype constant for mpeg dash ccf c be b ec f ef e fix the logic that decides whether to use currentrequestthreadfactory under app enginewhile there also support thread renaming under app enginefixes to the cl in which i experimented with before backing it out bd b c f e b f e a c
3453.0,3636,1.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,add testlib readme b f e b e bde fd c d aade change quantiles compute methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes fixes quantiles compute methods which return a map now return a map with entries in the same order in which the indexes were provided a d ac c d ad de f d f f
3633.0,3637,1.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,bump version which went out of date since the previous cl was created f a c d d ec fc a e fefa use if statement instead of for statement for a single item e e b b c dbd badd b af e upgrade maven source plugin from to fixes document the jdk alternative to moreobjectsfirstnonnull fixes https githubcom google guava pull da d b d f a e ccf fa b
3652.0,3654,1.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,switch to an internal annotation for ignoring jrerequirements relnotesremoved dependency on animal sniffer annotations ce af d b a e ebaf b e d ca rename package private duration apis saturatedto os to ossaturated saturatedtomillis tomillissaturated goodtimef a ea ae ddd d fcd fe f suppress more goodtime errors e c c aa acebe bb bda de f
3507.0,3677,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,fix tostring exception handling change from c fb cc b f b b a f cathis is not an ideal code fix but it restores the previous functionality and adds a test that verifies the exception handling logic b dfbfc f b f d a a bb e f f c handle stackoverflowerror from both pendingtostring and appenduserobjectadds a bunch of tests to validate error handling in tostring code verify that a future completing during the tostring call results in a done formatted string verify that an exception thrown by pendingtostring doesnt cause tostring to fail verify that cycles dont cause tostring to fail verify that deep chains of setfuture dont cause tostring to failrelnotescatch stackoverflowerror in abstractfuturetostring to prevent long chains of futures from failing tostring calls d d b e ad d ba a c f update documentation a d bb fc ba da b d b b
3745.0,3748,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,refactor lambda can be replaced method reference d ab f dcb a cd a f e faa e
3761.0,3765,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,add test case stable incidentedgeorder with a self loop to abstractstandard un directedgraphtestaee a c bbfecced f c d a add test for stable incidentedgeorder support for mutable undirected valuegraphs in valuegraphtest aba dd e e fcd e b fa e e fix off by one error in asciidigitsasciidigits initialization b d f e ae d e ce a disable gwt rpc by default in the open source releaserelnotes guava types can no longer be sent over gwt rpc to _temporarily_ reenable support set the guavagwtemergency_reenable_rpc system property to true ff cd f d e fb d e d da af f
3800.0,3805,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,simplify redundant collectionaddall calls ae a d c e f cef f c abd f
3501.0,3830,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,double slicing bytesource fb b bc d d a b bb c b af
3829.0,3830,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,double slicing bytesource fb b bc d d a b bb c b af
3816.0,3831,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,add some unit tests for base url in baseencoding e c a e efb dd d cc f
3418.0,3856,1.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,remove beta from service and servicemanager this leaves abstractlisteningexecutorservice as beta relevant to i have tweaked jesses initial pr to leave abstractexecutionthreadservicetriggershutdown and abstractservicedocancelstart as beta since we arent sure we like the locking behavior of the former and weve realized that listenerstopping _might_ be a reasonable substitute for both relnotes utilconcurrent removed beta from service and related classes d b ed a df eea eea
3806.0,3856,1.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,remove beta from service and servicemanager this leaves abstractlisteningexecutorservice as beta relevant to i have tweaked jesses initial pr to leave abstractexecutionthreadservicetriggershutdown and abstractservicedocancelstart as beta since we arent sure we like the locking behavior of the former and weve realized that listenerstopping _might_ be a reasonable substitute for both relnotes utilconcurrent removed beta from service and related classes d b ed a df eea eea
3873.0,3876,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,fix github by reimplementing cartesian{setlist}containsrelnotes d ce a a aa ba dba a
3883.0,3885,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,move comment to a more appropriate locationthe comment was added along with putcoalescing in cl a a f a a bb d a c bcbeb
3886.0,3887,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,treerangemapsubrangemapputcoalescingthe short circuiting on an attempt to put an empty range caused the contract of putcoalescing to be violated e e abc d de ed e b cb c d a
3890.0,3892,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,fix powersetequals when comparing to another powerset whose items are the same but in a different iteration orderrelnotes where powersetequals powerset would erroneously return false if the powersets underlying sets were equal but in a different iteration order befd ced edc a c eb a f
3891.0,3892,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,fix powersetequals when comparing to another powerset whose items are the same but in a different iteration orderrelnotes where powersetequals powerset would erroneously return false if the powersets underlying sets were equal but in a different iteration order befd ced edc a c eb a f
3880.0,3893,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,adds constants for cross origin embedder policy report only headers w constants for cross origin embedder policy report only headersa f e ad b b c ac cf e implement trylockuninterruptibly c d ecc c d adbcde ad f
3878.0,3899,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,in immutableintarray use arrayscopyof when expanding the internal array bdb c a ad e cda f dc implemented lastindexof in cartesianlist da dd e bc e e a ac e e ce b f
3911.0,3922,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read only operation fixes a df b beb c b d e cb b add comparatorsmin maxrelnotes collect added two element min and max methods to comparatorsfc e e ccc bf dc d discourage orderingmin e e and max e e in favor of comparatorsmin e e comparator and max e e comparator relnotesdiscourage the use of orderingmin e e and max e e bf e d f ade a ed f
3912.0,3922,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read only operation fixes a df b beb c b d e cb b add comparatorsmin maxrelnotes collect added two element min and max methods to comparatorsfc e e ccc bf dc d discourage orderingmin e e and max e e in favor of comparatorsmin e e comparator and max e e comparator relnotesdiscourage the use of orderingmin e e and max e e bf e d f ade a ed f
3908.0,3971,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,add awaitterminationuninterruptibly fixes somewhat relevant to relevant to since it creates a checkreturnvalue variant of a javautilconcurrent method that returns false to indicate timeoutrelnotes utilconcurrent added awaitterminationuninterruptibly ec b a b ea bd c f ec c db
4012.0,4020,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,make closingfuture available in open source guava beta relnotes utilconcurrent add closingfuture e dee f d e f a fix typos and remove unnecessary words c b bde a cd f af d b e e bump checker qual from to for unfortunate reasons involving internal legacy infrastructure this is easier than merging but at least it gets us on the newest major version that makes it easier to see that its safe to resolve a conflict between say and by just using the newer onea ad ee fa fcc edc f e c ddd b d remove spurious annotation to fix travis buildf d c c c dcd e ace f
4018.0,4020,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,make closingfuture available in open source guava beta relnotes utilconcurrent add closingfuture e dee f d e f a fix typos and remove unnecessary words c b bde a cd f af d b e e bump checker qual from to for unfortunate reasons involving internal legacy infrastructure this is easier than merging but at least it gets us on the newest major version that makes it easier to see that its safe to resolve a conflict between say and by just using the newer onea ad ee fa fcc edc f e c ddd b d remove spurious annotation to fix travis buildf d c c c dcd e ace f
4004.0,4029,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,fix assertionerror from rangegap a f a f c cf a cd f efdd fix random typos in guavafixes d be bbe a a aeb aa eaa add back webapp to public suffix listd e c c e a b c ea b ce e b d externally restore donotmock to closingfuturecombiner and externally add donotmock to closingfuture itselfthis implements an alternative workaround for replacing the one submitted in cl b c f e cfb cd cfd fb a dbe
4007.0,4029,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,fix assertionerror from rangegap a f a f c cf a cd f efdd fix random typos in guavafixes d be bbe a a aeb aa eaa add back webapp to public suffix listd e c c e a b c ea b ce e b d externally restore donotmock to closingfuturecombiner and externally add donotmock to closingfuture itselfthis implements an alternative workaround for replacing the one submitted in cl b c f e cfb cd cfd fb a dbe
4019.0,4030,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,fix unsupportedoperationexception from treerangesetsubrangeset add ce e f cabb c d c dd aad deal with classisinstance checks which are guaranteed to be false fa f cb e d f c b be e b bf change forwardingmapremove object parameter name from object to key to match mapremove object key fixes https githubcom google guava issues cbe e aec e f b bd f
4036.0,5252,1.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,internal changes to classpath a d deb fa f a e d df internal changes to classpathb e b f f b ed f e c fc ad remove unnecessary parens c a ff f dad abef c c e da b also print android test failures db a b bd fa a f d ddda fix classpathtest on android jdk e c da c fa ae dceb e ea
5265.0,5268,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,clarify hashmultimap docs about concurrencycloses e b b b c ea bf df eb f removed all references to now useless workaroundfixes fixes da c cf eb e fe f ee
5266.0,5268,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,clarify hashmultimap docs about concurrencycloses e b b b c ea bf df eb f removed all references to now useless workaroundfixes fixes da c cf eb e fe f ee
5272.0,5275,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,clarify how to use iteratortester when using iteratortester intellij idea automatically imports abstractiteratortesterknownorder however abstractiteratortester is private and it is not obvious that one was meant to import iteratortesterknownorder instead therefore this commit updates thejavadoc to give an example of how to use the api properly c e a b a bc fda d add a bunch of warnings to executionsequencersee discussion on cl b dfb ebeff ac d f a ccfce a eac
5276.0,5277,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,dont call tostring on the results of successful futuresrelnotesabstractfuturetostring no longer includes the tostring of the result df dfe db cabfe d a b abfc fix example in documentation for iteratortester i made a mistake and accidentally included an example that does notcompile specifically importing knownorder as is does not compileinstead one needs to import iteratortesterknownorder see formore informationi also changed the example to use collectionsunmodifiablelist rather than arraylist because arraylistiterator does not satisfyall the requirements of iteratorfeaturemodifiable afdbd fc f d f e bfcbad d b c
5250.0,5278,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,clarify that interner should be preferred instead of stringintern the existing language implies its intended _only_ for other typessee also document what happens when futurecallback throws exception d ac c d c b d fea c e f
3974.0,5415,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,remove redundant else blocks relnotesn a
