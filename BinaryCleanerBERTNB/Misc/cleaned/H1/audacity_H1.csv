issueNumber,prNumber,Util,APM,Network,DB,Error Handling,Logging,Lang,Data Structure,i18n,Setup,Logic,IO,UI,Parser,Event Handling,App,GIS,Multimedia,CG,corpus
38,39,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,this is basically a recreation of without any stylistic changes only fixing the uninitialized variables
946,43,0,0,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,1,0,if an effect has two input channels but only one output channel we cannot read from the second output buffer as there isnâ€™t onethis hopefully fixes http bugzillaaudacityteamorg show_bugcgiid
163,165,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,update to pr using vector now instead of dynamic array size ive never seen where this didnt work in years but better to keep standard compliant this is not critical to performance so better to forget using alloca as wellalso w w recalculated every iteration so it can work with new fisheye feature i did not special case this for the non openmp as it was before since its very small component of the total and i imagine the compiler can do that for usi left the const ref change alone per james comment imo it is just a bizarre thing to do i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops
464,465,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
602,603,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,if pull request isnt yet reviewed and accepted please review and merge this smaller one firstfix possible memory leaks and crashes when opening of sqlite database failsthere are now exceptions thrown in some new places with messages for the user that might be improved
699,700,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,this fixes cve by setting the permissions for the user tmp folder to closes
984,986,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,resolves fix uses the approach proposed by david bailes short description of the changes and the motivation to make the changes i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1048,1050,0,0,1,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,resolves check for updates dialog will very probably not unexpectedly interrupt recordings possibly spoiling them if there is a screen reader there is one slender timing possibility mentioned in code comments where it might yet happen more thread synchronizations might fix that but do not seem worth the extra effort now i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1164,1167,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,resolves check for updates has been so that its modal dialog will wait until any recording in progress finishes but that was not enough it should also not interrupt the timer recording wait dialog this commit fixes that too i have tested it with amodified build making more frequent checks i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1191,1192,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,1,0,1,0,resolves these can happen in only two ways using the application from the toolsmenu or using the windows intaller programa review of all uses of wxfileconfig deleteall proves thisthe one special boolsetting object was moved from updatemanager to prefscpp toavoid a dependency cycle among source code files i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1200,1204,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1181,1207,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves resolves adds affordances to a wave clips note track item labels contains requested fixes and improvements link above i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1251,1207,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves resolves adds affordances to a wave clips note track item labels contains requested fixes and improvements link above i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1042,1208,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,in particular so that warnings on exit in the debug build on windows aresuppressedmaybe its not important to suppress them or maybe they suggest all is notcorrect in the msvc implementation of this c featureresolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1174,1219,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,this bug still available in case using old settings file or manual set it into settings fileresolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1183,1265,0,0,0,1,1,0,0,1,0,1,1,1,1,0,0,1,0,1,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1268,1271,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1243,1297,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvementswindows with error information for temporary directory cases https user imagesentcom d cc eb a b e b ec e png
1298,1300,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves stack trace showed main thread was shutting down network manager which was waiting to join a response thread which was executing the lambda in updatemanager which was using the global audioio object which was destroyed before that at least on the main threadthis is a simple fix destroy audioio after that not before i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1305,1306,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,the check for macro directory now only happens if directory is selected and existsresolves short description of the changes and the motivation to make the changes i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1312,1313,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves the bug is difficult to reproduce but this is a plausible fix for it given what we know from a stack trace i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1294,1314,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,0,0,problem was the loss of an override of pluginmanager getid for a morespecific pointer typeresolves short description of the changes and the motivation to make the changes i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1162,1322,0,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,0,1,0,toolkit neutral library for audacitys exception handling system i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1199,1323,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1060,1328,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,resolves a library of classes that manage global variable settings that persist between runs of the application i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1329,1344,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,1,and in started crashing instead just disallow it again nofunctionality lostresolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1159,1345,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves depends on pr extract a tool kit neutral library for some mathematical and sample processing utilities make only the library directly dependent on libsoxrnote that only the last five commits are proper to this pr i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1160,1359,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,resolves a library for general file handling utilities and definitions of certain significant file paths which does not depend on wxcore though it does still depend heavily on wxbase i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1376,1377,0,0,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0,1,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1403,1416,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,resolves beginnings of built in tools for easy creation of automated functional regression tests in alpha builds onlycertain events can be recorded to journaltxt in the folder with audacitycfg if this has been enabled in the tools menu and then played back if that file is specified with the j command line optionso far only menu items that require no dialogs or their shortcut keystroke equivalents or certain toolbar buttons that invoke those commands can be played back some simple sessions such as just exiting the program can replayaudacity returns a non zero status to the shell if journal playback fails because the programs state is out of sync with what the journal file expects no examples yet of how to force that failure i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1163,1429,0,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,1,resolves library of useful utilities for decoupling of sub systems and making them open ended the big o of solidbeware here be dragons much use of c templates i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1363,1437,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1421,1441,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,which broke at a f dresolves resolves events were failing to be processed because event types were set incorrectly i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1369,1441,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,which broke at a f dresolves resolves events were failing to be processed because event types were set incorrectly i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1375,1475,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resizing area added to the wavetrackview and wavetrackaffordancecontrol making possible to have an enlarged resizing area with px distance between channels i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1158,1478,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,resolves extract a library for serialization and deserialization of objects in xml form and a registry for serializable objectsattached directly to the project i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1404,1482,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,resolves the journalling system is now enhanced enough that it can replay some interactions with modal dialogs including pushbuttons choice controls text boxes and sliders i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1496,1495,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,resolves rewrite dithercpp more clearly with c functions not macrosjust a preliminary to a preliminary to some audioio cleanup i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1501,1502,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1476,1502,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1477,1502,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
998,1504,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves resolves working context menus for background area and audio clipsnotes about some details where the issue description differs from this implementation or is underspecified all important words are capitalized consistent with other menu items for instance split clip split clip will split only the picked clip whether or not the track is selected at the pick point this is unlike the toolbar menu which splits all selected tracks at the selection paste will paste at the pick point ignoring the selection unlike the other ways of invoking paste mute unmute track has shift u as its default keystroke see extra tracks sub menu and see interface preferences to enable the extra menu the popup menu command will do that to the track you pick in ignoring which tracks are in selected state export audio rather than export project because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name the clip context menu appears only when clicking on the wave or spectrogram areas not on the drag bar or in voids between clips the accelerator keys appear not necessarily as the defaults in the pictures of course but are consistent with whatever keystrokes have been chosen in preferences context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be for instance adding new tracks is not permitted during recording or playback i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1144,1527,1,0,0,0,1,1,0,1,0,1,1,1,1,0,1,0,1,1,0,resolves extract a library of utilities for querying the available audio devices finding their preferred sample rates holding certain related global preferences variables and also the interface class meter for transferring buffers of samples for purposes of display updatesthis does not contain the complete playback and recording audio engine when wavetrack is a library it will need only this part to set default sample rates of wave tracks appropriatelydoing this separation now is also desirable as a prelude to other refactorings of the audio engine i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1182,1533,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,resolves i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1153,1586,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves platform neutral library defining the audacityproject object and associated projectstatus which just holds some strings there is also some fixing of some possible null pointer dereferences of the global active project which might be null on macos i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1152,1587,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves depends on pr extract a toolkit neutral library for mapping of screen x coordinates to times and y coordinates to amplitudes or frequencies i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1143,1588,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,resolves depends on a library holding the global preferences for project rate and sample format and defining the per project holding sample rate it depend on lib audio devices to decide the default ratewhen wave tracks are separated into a library that will depend on this for construction of tracks but will avoid dependency on all of audioio i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1580,1594,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,resolves some refactoring tasks in audioio before disentangling the midi playback parts i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1590,1602,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,the dialog wont actually reappear but the same value will be returned tothe programthese message boxes are special native ones that dont use the wxwidgets eventframework therefore the system for journalling of mouse button presses doesnot work with them treat them speciallya generalized facility added to namespace journal in case this pattern needs tobe repeated for other actionsresolves short description of the changes and the motivation to make the changes i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1258,1614,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves short description of the changes and the motivation to make the changes i signed cla i made sure the code compiles on my machine i made sure there are no unnecessary changes in the code i made sure the title of the pr reflects the core meaning of the issue you are solving i made sure the commit message s contain a description and answer the question why do those changes fix that particular issue or why are those changes really necessary as improvements
1444,1616,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,resolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1544,1616,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,resolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
398,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1034,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1170,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1201,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1331,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1433,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1466,1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves resolves resolves resolves resolves resolves supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library provided functionsthis pr allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in inl files which are later included in c files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version dependent code fixes few incompatibilities between ffmpeg versions sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat and avformat are supported i dont see much reason to support and when will be released and current dev branches are it will be added to the list this should be a trivial taskbuilds were tested against and surprisingly support was different and the most difficult from while the major version stayed the same ffmpeg was downloaded from the official page the system library on manjaro i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1333,1630,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,changing editing a clip can move other clips option default value to falseresolves changing editing a clip can move other clips option default value to false i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1581,1637,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,resolves next refactoring steps for audioioall of the logic specific to midi playback is removed from audioiocpp and invoked instead through an abstract base class audioioext a new separate file midiplaycpp registers its extension policy with audioiothese steps shrink the big file audioiocpp from to lines and are also preparations for putting note track into its own optional extension modulethe unnecessary separate thread for midi playback is removed for simplicity and some callbacks happen directly in the portaudio thread that means some memory allocations may happen on that thread when midi plays see preparemidiiterator but future refactorings will correct thatthe dependency of lib audio devices on portmidi is severeda few other changes remove some dependencies on notetrack and use settings objects from prefscpp to eliminate some duplicated literals and direct use of gprefs in midiplaycpp i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1582,1638,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0,resolves the play head position is drawn on screen by the main thread which is told the track time corresponding to the last played samples by the portaudio threadthat thread in turn sometimes got this value from information in a queue from the third worker thread which reads from the tracks in larger batches of samples as when scrubbing but other times did its own calculations taking into account whether pay is straight or looping assuming loop bounds and whether it uses a time track as wellthis pull request changes that so that the portaudio thread never calculates but always takes the value from the queuethis is a preparation so that the producer of that queue can vary the correspondence of samples in transit with points on the time ruler in yet other ways i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1631,1639,0,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,1,0,0,and some other caseswherever audacity simulates button press events set the event object to be thebutton so that windoweventserialization in journaleventscpp can determinea pathname for the window associated with the eventthe change in keyboardcapture is enough for the default buttons of dialogs theother changes are necessary but not sufficient for fixing journalling of some ofaudacitys custom widgets on any operating systemresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1658,1664,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1,resolves depends on more refactoring of audioiocpp and playbackschedulecpp so that there is less of the logic for special playback cases like looping and scrubbing in those files i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1382,1675,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves ensure install_prefix is set correctly the cmake variable install_prefix is now correctly passed into the program make audacity portable audacity now checks for resources at a location relative to the executable instead of a location each time
1644,1677,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,resolves the set clip macro command now can change a clip name toothe command is also accessible in menus under extra scriptables i you must first enable the extra menus in the interface preferences lwinterberg see this manual page needing update use x to fill the checkboxes below like i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1660,1678,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves this makes and more completeadd an item to the wave clip context menu for renaming i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
998,1678,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves this makes and more completeadd an item to the wave clip context menu for renaming i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1400,1679,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves resolves work in progress i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1401,1679,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves resolves work in progress i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1613,1711,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1427,1717,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1689,1736,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves also fixes clipping usage i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1755,1756,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves add a new toggle button to the control toolbar i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1751,1758,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,resolves on macos the dynamic library loader behaves differentlyall dyld_ environment variables are read only during the application startup this premulates the behavior of other os by manually trying to load every library from every directory listed i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1702,1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves resolves resolves reimplement the cut preview feature the c shortcut key also ctrl click on play button less special casely by using another subclass of playbackpolicy it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1703,1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves resolves resolves reimplement the cut preview feature the c shortcut key also ctrl click on play button less special casely by using another subclass of playbackpolicy it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1568,1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves resolves resolves reimplement the cut preview feature the c shortcut key also ctrl click on play button less special casely by using another subclass of playbackpolicy it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1566,1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves resolves resolves resolves reimplement the cut preview feature the c shortcut key also ctrl click on play button less special casely by using another subclass of playbackpolicy it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1411,1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resolves resolves resolves resolves resolves resolves most of the recently requested changes to ux for the spectral brush dialog i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1772,1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resolves resolves resolves resolves resolves resolves most of the recently requested changes to ux for the spectral brush dialog i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1773,1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resolves resolves resolves resolves resolves resolves most of the recently requested changes to ux for the spectral brush dialog i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1775,1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resolves resolves resolves resolves resolves resolves most of the recently requested changes to ux for the spectral brush dialog i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1776,1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resolves resolves resolves resolves resolves resolves most of the recently requested changes to ux for the spectral brush dialog i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1777,1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves resolves resolves resolves resolves resolves resolves most of the recently requested changes to ux for the spectral brush dialog i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1651,1793,0,0,0,1,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves also fixes wrong name assigned to a clip when recording to a new track i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1459,1799,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,this change ensures that page size will be k even if system sqlite was used mostly relevant for linux resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1460,1802,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,resolves this pr introduces a different approach to estimating the sampleblock size on disk it does not account for the sqlite internal structures size so well but the difference is relatively negligible we use this estimation to decide if we need to compact the database on disk as we do not allow database vacuuming for performance reasons the performance of the heuristic can be further improved as used_blocks total_blocks should work just fine however this would require more changes to the code projectfileio gettotalusage and projectfileio getcurrentusage are also used in now disabled compaction dialog however using gettotalusage was probably not the idea anyway because it never accounted for the project and autosave tables getcurrentusage still gives a very good estimate of how much disk space is used i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1704,1808,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,1,resolves start looping play then adjust the bounds of the selection the looping play will respond to those changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1157,1816,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves extract a library for the theme system i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1698,1832,0,0,0,1,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1825,1836,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,resolves change default settings for scale type to mel top of scale to hz window size to and zero padding to also cleaning up a lot of preference usage in spectrogram settings to avoid repetition of literals for paths and defaults i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1759,1840,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1813,1841,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,resolves the whats new section will be shown only if show_whats_new_section is passedthe update dialog is populated dynamically from the latestxml contents i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1803,1843,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,resolves make the shortcut key for multi tool again f as in and forever before that i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1820,1848,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves resolves this would fix the failure of delete to work in right channel for the brush tool if that is enabled in the buildit also fixes the non functionality of delete and all other keystrokes for editing the title of a clip in a right channel of a stereo track with nonaligned clips i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1847,1848,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves resolves this would fix the failure of delete to work in right channel for the brush tool if that is enabled in the buildit also fixes the non functionality of delete and all other keystrokes for editing the title of a clip in a right channel of a stereo track with nonaligned clips i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1838,1854,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves that when a label track is the focus tab and shift tab only select a label rather than opening it for editing in a custom text box which is not accessible for screen readers its useful for the name of the label to be readstraightforward fixalso added i n hint in transportmenuscpp where there is the same message for screen readers i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1710,1857,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves this does not resolve all as suggested in the issue description but may offer satisfactory workaroundsfor label track behavior the esc key already removes the insertion cursor if there is one but now if there no insertion cursor but there is a label navigated to by tab then esc clears the navigation state this allows esc and then return to change the selected state of the label trackfor wave track behavior the return or number pad enter key behavior will remain hard coded it is also hard coded for label track text editing about which there isnt a complaintnote that if a clip is not selected then pressing enter does nothing i assume thats just a bug in the implementation this is the return key will be intercepted for editing only in case the selection coincides with the extent of a clipwith this change you can change the selection such as with j or left arrow in default key bindings so it becomes a point then return toggles the selected state of the wave trackyou may be unsatisfied that restoring the time selection to what it was before requires further tab key presses maybe further improvement is possible and you davidbailes might suggest another commit to accomplish that i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1863,1864,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,0,resolves that there are clip names they should be added to messages sent to screen readersthis commit adds the clip names to the messages sent by various existing clip commands i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1833,1865,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves also select all command is available when label is edited i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1870,1871,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves a user presses tab or shift tab to select the next previous clip a message is sent to any screen reader i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1858,1872,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves exit clip name editing when a mouse click causes the trackpanel to lose focusnote that this implementation commits any unfinished text edit with a undo history item it doesnt cancel it as if by the escape key i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1835,1874,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,resolves resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1834,1874,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,resolves resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1814,1883,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1890,1894,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0,resolves some lagginess has to be tolerated because there must be a queue of somelength between the trackbufferexchange thread and the portaudio thread buthow short can it bein case of playback looping that lag is now set to an arbitrary hard coded second in loopingplaybackpolicy suggestedbuffertimes which is less thanthe old default latency of seconds see playbackpolicy suggestedbuffertimes which perhaps was a value motivated by older generations of hardwareso if you adjust looping play bounds while the play head is within secondof the end of the loop thats second of real time not track time in caseyou also have a time warping time track then you might yet notice the playhead not doing quite what you want should we make that latency user tunable or more challengingly for usdetect hardware limitations and make it adaptive i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1842,1898,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,this inserts a menu item under editalso share code with the clip context menuresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1752,1914,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,currently this is implemented for macos users onlywindows has not yet published the api linux requires gtk and we build against gtk currentlyresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1739,1916,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1896,1930,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,resolves this is unlike the case of loss of focus when clicking outside of audacitywhich was the case at ec e i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1927,1936,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1884,1938,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1903,1940,0,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,this commit introduces a new mechanism to allow projects components to specify the audacity version they require to be loaded it is possible to set the version based on the features that are currently in use smart clips use this new approach to require at least audacity if there are trimmed clips in the projectresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1934,1947,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves the keyboard to rename a clip in an audio track regardless of which clip is selected the same clip in the audio track is always renamedfix in wavetrackaffordancecontrols starteditnameofmatchingclip the call to starteditclipname edits the name of mfocusclip so set the value of mfocusclip not meditedclip i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1260,1950,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves resolves resolves this completes the user interface for playback looping with three click and drag actions in the timeline dragging a completely new play region arrow cursor resizing an existing region east west arrows moving an existing region hand please observe also the context menu item to make selection follow play region drags works yellow snap guidelines at edges of labels or clips and of the selection when it isnt following the play region escape key aborts all drags left click without drag still starts playback i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1706,1950,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves resolves resolves this completes the user interface for playback looping with three click and drag actions in the timeline dragging a completely new play region arrow cursor resizing an existing region east west arrows moving an existing region hand please observe also the context menu item to make selection follow play region drags works yellow snap guidelines at edges of labels or clips and of the selection when it isnt following the play region escape key aborts all drags left click without drag still starts playback i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1707,1950,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves resolves resolves this completes the user interface for playback looping with three click and drag actions in the timeline dragging a completely new play region arrow cursor resizing an existing region east west arrows moving an existing region hand please observe also the context menu item to make selection follow play region drags works yellow snap guidelines at edges of labels or clips and of the selection when it isnt following the play region escape key aborts all drags left click without drag still starts playback i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1946,1958,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,also real link to the video is now addedresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1822,1965,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,0,resolves a recurrence of bugs and these worked around a bug in the soxrlibrary recent rearrangements of playback engine sometimes failed to do theworkaround i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1961,1967,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves moving the whole play region should never change its length when it snaps either end i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1962,1976,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,there are still edge cases left while editing the clip name the fix for them will be complex and is out of scope for the release branch hotfixresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1780,1978,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves for label tracks enter hardcoded for renaming the selected label is the same shortcut used by default by the command for toggling the selectedness of the trackfix use the shortcut ctrl f for renaming the selected labelwarning this has been implemented by hardcoding this shortcut rather than providing a context sensitive command for renaming both clips and labels this was done due to a shortage of time this hardcoded shortcut should be removed after the release of in changing the shortcut from enter to ctrl f in labeltrackview docapturekey in the line if isvalidindex mtexteditindex project isvalidindex mnavigationindex project {the case isvalidindex mnavigationindex project was removed this had been added in commit a ad d presumably to capture the enter key this was an incorrect change and caused issue a label can be created by typing regardless of option settingso this commit also fixes that issue i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1860,1981,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1931,1985,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves same fix is applied to both clip names and labels i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1924,1992,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0,do not play a short bit from time zero do not briefly show play head thereuse the start time option which prepares all before the firsttrackbufferexchange call and not the older seek mechanism that instead seta variable and let the portaudio thread to react to it possibly the threaddid not see the change in variable promptly enough explaining the symptomresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1971,1993,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves make correct hot zones for drags in the timeline when looping is disabled i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1984,2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves resolves resolves resolves behavior of playback when looping is not enabled should be as before play from left edge of the selection either to right edge if that is different or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button when button is up play as non looped when it is down jump only leftward to the start of the loop and only when playback reaches the right edge so if playback is right of the loop it also continues to the end and stops i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1994,2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves resolves resolves resolves behavior of playback when looping is not enabled should be as before play from left edge of the selection either to right edge if that is different or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button when button is up play as non looped when it is down jump only leftward to the start of the loop and only when playback reaches the right edge so if playback is right of the loop it also continues to the end and stops i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1995,2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves resolves resolves resolves behavior of playback when looping is not enabled should be as before play from left edge of the selection either to right edge if that is different or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button when button is up play as non looped when it is down jump only leftward to the start of the loop and only when playback reaches the right edge so if playback is right of the loop it also continues to the end and stops i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
2003,2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves resolves resolves resolves behavior of playback when looping is not enabled should be as before play from left edge of the selection either to right edge if that is different or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button when button is up play as non looped when it is down jump only leftward to the start of the loop and only when playback reaches the right edge so if playback is right of the loop it also continues to the end and stops i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1999,2007,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,1,1,resolves and two other problems dragging of looping region partly into negative time should not make it disappear yellow snap guideline should be visible at right edge of last clip remove arbitrary restriction on selection of play regions with error message cannot lock region beyond end of project i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1990,2013,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
1969,2014,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
2011,2015,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,1,1,this change is required to maintain consistency between default and cleared play regionsresolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
2019,2023,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
2029,2030,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,resolves short description of the changes and the motivation to make the changes i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
2036,2039,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,resolves fix drawing of envelope points correctly for trimming or time shifting or both i signed cla the title of the pull request describes an issue it addresses if changes are extensive then there is a sequence of easily reviewable commits each commits message describes its purpose and effects there are no behavior changes unnecessary for the stated purpose of the prrecommended each commit compiles and runs on my machine without known undesirable changes of behavior
