issueNumber,prNumber,Util,NLP,APM,Network,DB,Interpreter,Logging,i18n,DevOps,Logic,Test,IO,UI,Security,App,corpus
136.0,137,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,unify and simplify gui actions using lambdas for the simpler actions some code cleanup extract string commands as string constants to actionsjava and use the constants in jabrefframe basepanel and rightclickmenu use the constants already defined in keybinds to get keystrokes for the actions in jabrefframe basepanel entryeditor and rightclickmenu e ad d remove quickfix for sfnet bug and implement feature properly instead of deactivating show hide toolbar when no database is open the action has been move to jabrefframe and works now even if no database is opensee also
1285.0,143,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix sf bug restores the cursor resp caret position when a field is store during editingthis fixes sfnet bug be done backport to dev_ ask for confirmation on sfnet and close the issue there
122.0,175,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,increase saving speed intended to this pr turned into a major api change it replaces string in the return types of bibtexentrytype with list this allows to return immutable lists instead of mutable arrays and improves the stability of the program additionally the rewrite allowed to replace a lot of duplicate object creation with instance variableswith respect to the immutability of the new lists removes the necessity to create defensive copies and therefore avoids a lot of cloning
191.0,200,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,added conversion menu on right click in text field accessing these conversions without going through clean up can be quite useful
114.0,211,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix latex field formatter another attempt to fix the line wrapping as far as i can see some of the current behavior is due to the formatting implemented in latexfieldformatter this pr tries to rectify some of this behavior by explicitly excluding the review and abstract fields from line wrappingrelated
185.0,211,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix latex field formatter another attempt to fix the line wrapping as far as i can see some of the current behavior is due to the formatting implemented in latexfieldformatter this pr tries to rectify some of this behavior by explicitly excluding the review and abstract fields from line wrappingrelated
186.0,211,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix latex field formatter another attempt to fix the line wrapping as far as i can see some of the current behavior is due to the formatting implemented in latexfieldformatter this pr tries to rectify some of this behavior by explicitly excluding the review and abstract fields from line wrappingrelated
173.0,219,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,ieee journal abbreviations why see what is does bugfix correct abbreviations are loaded when storing preferences through the advanced tab ieee abbreviations are either plain text or in latex code form for each of them a separate file exist now the config option use_ieee loads the latex one if it is true and the plain one otherwise
208.0,287,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,doaj search search for directory of open access journals quite functional but the remaining things should probably be done help page decide on where the bibjsonconverter class should be positioned input more fields issn better more error checking handle search results with more than entries properly fill empty methods in doajfetcher update status bar add test for bibjsonconverter enable stopping search implements what is discussed in
328.0,330,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,added more and better information with unsaved database capturedialog this case it was a new database otherwise the full path is shown
367.0,370,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,add compatibility check for utf this pr attempts to we have a bit of a problem utf came from these lines java try inputstreamreader reader openfile filetoopen suppliedencoding fallbackencoding { bibtexparser bp new bibtexparser reader parserresult pr bpparse prsetencoding readergetencoding it is set in this method call thats the java api the inputstreamreader says that the proper name of the encoding is utf my solution is an ugly compatibility hack in which we just insert the manually ugly but works what do you think
388.0,418,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,proxy authentication support feature this pull request enables support for proxy authentication via command line arguments d and jabref preferences network tab
167.0,422,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,move edit mode switch to file tab to make it more prominent and a file based thing in the future
315.0,452,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,revise maintable complete check and rewrite of maintable and related classesthis will fix and implement show tooltip for header columns show tooltip for contents which are too long for table columns add ability to drag and drop specialfield columns allow storing position of specialfield columns postponed to another pr remove table column for pdf ps which is obsolete remove option show one letter heading for icon columns which is now obsolete changed default order in main table all file based icons file url doi all bibtex field based icons bibtexkey entrytype author title all special field icons postponed think about must be implemented vernünftig matthias entry table fit table horizontally from the minutes postponed final cleanup changelog
384.0,452,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,revise maintable complete check and rewrite of maintable and related classesthis will fix and implement show tooltip for header columns show tooltip for contents which are too long for table columns add ability to drag and drop specialfield columns allow storing position of specialfield columns postponed to another pr remove table column for pdf ps which is obsolete remove option show one letter heading for icon columns which is now obsolete changed default order in main table all file based icons file url doi all bibtex field based icons bibtexkey entrytype author title all special field icons postponed think about must be implemented vernünftig matthias entry table fit table horizontally from the minutes postponed final cleanup changelog
443.0,452,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,revise maintable complete check and rewrite of maintable and related classesthis will fix and implement show tooltip for header columns show tooltip for contents which are too long for table columns add ability to drag and drop specialfield columns allow storing position of specialfield columns postponed to another pr remove table column for pdf ps which is obsolete remove option show one letter heading for icon columns which is now obsolete changed default order in main table all file based icons file url doi all bibtex field based icons bibtexkey entrytype author title all special field icons postponed think about must be implemented vernünftig matthias entry table fit table horizontally from the minutes postponed final cleanup changelog
445.0,452,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,revise maintable complete check and rewrite of maintable and related classesthis will fix and implement show tooltip for header columns show tooltip for contents which are too long for table columns add ability to drag and drop specialfield columns allow storing position of specialfield columns postponed to another pr remove table column for pdf ps which is obsolete remove option show one letter heading for icon columns which is now obsolete changed default order in main table all file based icons file url doi all bibtex field based icons bibtexkey entrytype author title all special field icons postponed think about must be implemented vernünftig matthias entry table fit table horizontally from the minutes postponed final cleanup changelog
490.0,452,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,revise maintable complete check and rewrite of maintable and related classesthis will fix and implement show tooltip for header columns show tooltip for contents which are too long for table columns add ability to drag and drop specialfield columns allow storing position of specialfield columns postponed to another pr remove table column for pdf ps which is obsolete remove option show one letter heading for icon columns which is now obsolete changed default order in main table all file based icons file url doi all bibtex field based icons bibtexkey entrytype author title all special field icons postponed think about must be implemented vernünftig matthias entry table fit table horizontally from the minutes postponed final cleanup changelog
498.0,452,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,revise maintable complete check and rewrite of maintable and related classesthis will fix and implement show tooltip for header columns show tooltip for contents which are too long for table columns add ability to drag and drop specialfield columns allow storing position of specialfield columns postponed to another pr remove table column for pdf ps which is obsolete remove option show one letter heading for icon columns which is now obsolete changed default order in main table all file based icons file url doi all bibtex field based icons bibtexkey entrytype author title all special field icons postponed think about must be implemented vernünftig matthias entry table fit table horizontally from the minutes postponed final cleanup changelog
458.0,459,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,use default directory when adding files to an entry see the current implementation is hard to understand i dont get how these three existing folder preferences are used also the method itself should be simplified and return a list
470.0,472,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,show author editor and journal publisher in the main table by default implements
314.0,491,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,add close all others in database tab menu see
167.0,500,1,0,0,1,0,1,1,1,0,1,1,1,1,1,1,database type detection please see bibdatabasetypedetectionjava for reviewsome refactoring and a class for auto detection of database types algorithm should we introduce a hard coded field like encodings inside the bib file fast enough what about false detection refactoring bibtexdatabase bibdatabase bibtexentry bibentryalso see
495.0,500,1,0,0,1,0,1,1,1,0,1,1,1,1,1,1,database type detection please see bibdatabasetypedetectionjava for reviewsome refactoring and a class for auto detection of database types algorithm should we introduce a hard coded field like encodings inside the bib file fast enough what about false detection refactoring bibtexdatabase bibdatabase bibtexentry bibentryalso see
495.0,501,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,prototype for new entrytype interface this is a prototype for an idea to resolve the issues discussed in and right now the entry type is converted from a string representation in the bibtex file to an entrytype by the parser the problem with this approach is that the parser has to know about the bibtex vs biblatex mode the idea was to add an intermediate step string in bibtex file entryclass by parser entrytype by some factory using information from the preferences there is an enum standardentryclass holding all the standard types regardless of bibtex or biblatex so article mvbook etc all are there to support also unknown entry types we have the class nonstandardentryclass so for example parsing article{} results in class standardentryclassarticle while gibberish{} yields class nonstandardentryclass with name gibberish in this way the type information is stored in a relative convenient form better then a string the idea of an enum implementing an interface was taken from the way java handles standard file locations see the oracle blog or another blog the entryclass does not know about required and optional fields these information are provided by the entrytypefactory for example entrytypefactory prefs gettypefor standardentryclassarticle getrequiredfields gives the required fields please ignore all the my prefixes in the class names
116.0,560,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,write all field keys in lower case write all field keys in lower case no more camel casing of field names eg title is written instead of title howpublished instead of howpublished and doi instead of doi the configuration option use camel case for field names eg howpublished instead of howpublished is gonerefs
565.0,567,1,0,0,0,0,1,1,1,0,1,1,1,1,0,1,implements highlighting matches works now also for regular expr… …essions in preview panel and entry editor
564.0,568,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fixed cite command changes are immediately reflected in the pus… …h to application actions and not only after restart
116.0,569,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,remove field saving options as decided in all field saving options should be removedthis pr purges the options from the gui and cleans up related reader and formatter classes this simplification greatly reduces the complexity of bibentrywriter
593.0,594,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,solved and cleaned up the oo code a bit hopefully solved try it out at cleaned up the code a bit based on pmd the actual fix is on lines in ooutiljava
545.0,595,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,fixed acm fetcher works again fixed and some pmd cleanup
495.0,605,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,change entrytype to string in bibentry this pr tries to resolve the issues discussed in and right now the entry type is converted from a string representation in the bibtex file to an entrytype by the parser the problem with this approach is that the parser has to know about the bibtex vs biblatex mode the idea was to just store the string in the bibentry and only get the corresponding entrytype whenever it is really necessary
647.0,648,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,partly implemented added the possibility to copy the preview panel text not exactly what is requested in but probably quite usefulnote that the key binding is not working nor is the print preview key working so ill open an issue for that
650.0,660,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,add test for parsing accents i tried to replicate the problems of but in the progress realized that the problem lied in the bib file provided there and not in the parser so the added test is rather useless but i figured it does not hurt to have more tests
621.0,677,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,make bibtex parser more robust against missing newlines as described in and the parser has some problems when an entry or preamble follows directly the file encoding header on the same line ie encoding myencoding article{} actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for and since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content
669.0,677,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,make bibtex parser more robust against missing newlines as described in and the parser has some problems when an entry or preamble follows directly the file encoding header on the same line ie encoding myencoding article{} actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for and since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content
667.0,683,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,remove url sanitizer as it is malfunctioning and unclear where needed… also see jabref developers if someone knows a use case where this is needed and why we can try to reimplement it properly but this way it really makes no sense imho
410.0,690,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,simplify matching complexity of unlinked file finder reenables functionality important point removed one fileexists check in fileutiljava expandpath i think one check after replacing and \ is enough without checking the expanded path with directory in front cache is filled at initial creation for bibdatabase therefore no checks against the whole database for each file entry parse logic for file field should moved from the filelisttablemodel to filefieldjavawe could still improve quite a lot here but maybe its good enough tm for now
520.0,711,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,remove global sorting functionality refs global file sorting options are removed sort functionality is still available but no localized to every file and the file sorting options are stored in the file
706.0,715,1,0,0,1,0,1,1,1,0,1,1,1,1,0,1,file based bibtex mode see changes file based setting of bibtex biblatex mode which is stored as a metadata in the bib file if no metadata is found jabref tries to detect the mode by checking if there are biblatex entry types which results in biblatex mode and otherwise in bibtex mode except one has set the biblatex mode setting in the global preferences in that case it would use the biblatex mode ui changes completely no restart necessaryplease provide feedback
116.0,716,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,introduce save actions this pr introduces the save actions feature described in it is possible to configure a netsfjabreflogicformatterformatter to be applied for the content of a specific field all formatters in netsfjabreflogicformatter are available to support file sharing the save actions are configured in the meta data of a file as a comment in the following syntax comment{jabref meta saveactions titlelowercasechanger} this above save action applies the lowercasechanger for the content of every title field on savein the future we need to enable the configuration of save actions via the ui in the database properties
621.0,718,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,improve database writer the aim of this pr is to improve the database writer in particular and also add tests to the writer and parser and do some refactorings to make test writing easier changes to serialization fix and by adding new lines after encoding and preamble the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry comments and preamble are serialized with capitalized first letter ie comment instead of comment and preamble instead of preamble this should follow the convention for entries there is no space anymore between string and the bracket and after the bracket ie string{name {string}} instead of string { name {string} } implemented add possibility to reformat all entries on save under preferences file refactorings renamed fileactions to bibdatabasewriter merged code for export and save in bibdatabasewriter extracted savesettings class from fileactions to own file and extended it & renamed to savepreferences note that this class has some setters against the recently established convention for preference classes since there are quite a few cases where the values from the preferences have to be overriden change usage of arrays to list in many places remove unused boolean parameters checksearch checkgroup moved writing of metadata and customentrytypesmanager to bibdatabasewriter extracted and reused gui code for displaying and editing sort preferences saveorderconfigdisplay
669.0,718,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,improve database writer the aim of this pr is to improve the database writer in particular and also add tests to the writer and parser and do some refactorings to make test writing easier changes to serialization fix and by adding new lines after encoding and preamble the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry comments and preamble are serialized with capitalized first letter ie comment instead of comment and preamble instead of preamble this should follow the convention for entries there is no space anymore between string and the bracket and after the bracket ie string{name {string}} instead of string { name {string} } implemented add possibility to reformat all entries on save under preferences file refactorings renamed fileactions to bibdatabasewriter merged code for export and save in bibdatabasewriter extracted savesettings class from fileactions to own file and extended it & renamed to savepreferences note that this class has some setters against the recently established convention for preference classes since there are quite a few cases where the values from the preferences have to be overriden change usage of arrays to list in many places remove unused boolean parameters checksearch checkgroup moved writing of metadata and customentrytypesmanager to bibdatabasewriter extracted and reused gui code for displaying and editing sort preferences saveorderconfigdisplay
756.0,718,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,improve database writer the aim of this pr is to improve the database writer in particular and also add tests to the writer and parser and do some refactorings to make test writing easier changes to serialization fix and by adding new lines after encoding and preamble the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry comments and preamble are serialized with capitalized first letter ie comment instead of comment and preamble instead of preamble this should follow the convention for entries there is no space anymore between string and the bracket and after the bracket ie string{name {string}} instead of string { name {string} } implemented add possibility to reformat all entries on save under preferences file refactorings renamed fileactions to bibdatabasewriter merged code for export and save in bibdatabasewriter extracted savesettings class from fileactions to own file and extended it & renamed to savepreferences note that this class has some setters against the recently established convention for preference classes since there are quite a few cases where the values from the preferences have to be overriden change usage of arrays to list in many places remove unused boolean parameters checksearch checkgroup moved writing of metadata and customentrytypesmanager to bibdatabasewriter extracted and reused gui code for displaying and editing sort preferences saveorderconfigdisplay
705.0,719,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,removed preference setting solves it can be discussed if the setting in the auto generate group dialog should be removed as well
454.0,734,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,add an optional tab that shows fields that are not displayed inside t… …he predefined tabs
738.0,739,1,0,0,1,0,1,1,0,0,1,1,1,0,1,1,use urldownload instead of getresults for fetching stuff relates to fixed some things in gvkparser to hopefully get rid of the final coverity warnings there
751.0,752,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fixed this should should be merged in without waiting for confirmation
741.0,755,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,fix npe at saving does not reset save flag and a lot of other null pointer exceptions gettype and getstandardtype now return an optional instead of possible null values
685.0,807,1,0,0,1,0,1,1,1,1,1,1,1,1,0,1,fixes mysql export for more than one entry fixes the export of more than one entry through the connection option added ability to add server specific connection parameters in dbstrings because mysql and postresql parameter names differusing setcatalog instead of use database recommended in mysql doc see section initial database for connection
492.0,842,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,fixed all text is copied if nothing is marked and preview of pa… fixed when nothing is selected the whole field is copied if the field is empty the right click copy item is disabledpreview of text to be pasted in tool tip now maximum characters should it be longer
685.0,843,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,fixes the mysql export for more than one entry fixes the export of more than one entry through the connection option added ability to add server specific connection parameters in dbstrings because mysql and postresql parameter names differusing setcatalog instead of use database recommended in mysql doc see section initial database for connection oscargus simonharrer edit i dont know why it says there is a conflict i did a fetch from upstream checked out upstream master and created a new branch
834.0,851,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,ignore non displayable fields for indent during writing
859.0,864,1,0,0,0,0,1,1,1,0,1,1,1,1,0,0,add dialog to show all preferences in their raw form plus some filtering relates to adds a dialog which shows all preferences in a table by their type key value and default value table can be sorted table can be filtered to show only the preferences which deviate from their default value this is the most helpful one and it revealed various bugs when having a closer look count is shown as well reachable through options preferences show preferences button is below import export preferences converts default values of null to empty string change in changelogmd described
815.0,874,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,fixing openoffice citation with curly braces and manual connection browsing change in changelogmd described fixed clicking on browse for manual openoffice does now workfixed curly braces in oo lo citation no longer ignored code cleanup replaced actionlistener with lamdbasone point for discussion defaultformbuilder jgoodies is deprecated is there already a replacement for the creation i found this thread koppor
856.0,874,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,fixing openoffice citation with curly braces and manual connection browsing change in changelogmd described fixed clicking on browse for manual openoffice does now workfixed curly braces in oo lo citation no longer ignored code cleanup replaced actionlistener with lamdbasone point for discussion defaultformbuilder jgoodies is deprecated is there already a replacement for the creation i found this thread koppor
295.0,877,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,add ability to run arbitrary formatters as cleanup actions add ability to run arbitrary formatters as cleanup actions by reusing save actions thus some old cleanup entries could be removed this also implements moreover an erase formatter is added which just deletes the corresponding field untitled changes rename saveactions to fieldformattercleanups some smaller refactorings to reuse saveactions mainly to separate them from metadata change in changelogmd described
466.0,879,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,rename pdf cleanup now also changes case of file name change in changelogmd described
883.0,884,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fixed should solve change in changelogmd described no tests already passed this is a gui issue yes
890.0,903,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,fixed this should change in changelogmd described not relevant
455.0,915,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,add button in preference dialog to reset preferences implements and or change in changelogmd described only ui change
707.0,925,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,add tests for metadata parsing this solves and prepares the way to refactor the metadata classi added a few methods to the metadata class to make testing more convenient many calls to getdata in fact can be replaced by these new methods i think this is something for a new prone question to write the tests in a nice way i had to overwrite a few equals methods in particular for the lowercasechanger should i also override equals for all other formatters
649.0,926,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,key bindings are now working in preview panel until now the toolbar within the preview panel held the key bindings which werent active when the toolbar wasnt created now the preview panel itself carries the key bindings change in changelogmd described
410.0,929,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,find unlinked files freezes when using for pdf fixed reason was an illegalargumentexception thrown by doi class when pasting the contents of the whole first pdf page to the constructor the doi class can only handle real dois and does not extract strings that might look like a doi from the text therefore the whole doi scraper was removed in the whole pdfimporter class is screwed and a monkeypatch it should be reimplemented from scratch
936.0,937,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,preview panel is now updated when an entry is cut deleted when an entry is cut deleted the preview panel will be hidden due to the fact that no entry is selected anymore change in changelogmd described
941.0,944,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,removed fetch in title from database fetchers removed translation of fetcher names because that are proper nouns
796.0,947,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix for undoing deletion cutting multiple entries workaround for when an undo with multiple entries is undone each entry is undone one at a time the problem herein lies that when the first entry is undone the insertion in the database triggers the creation and insertion of an namedcompund into the undomanager which kills the main undo the one with the multiple entries which result in just one entry being undonewith this workaround each entry has its own namedcompund which solves the problem but the user has to call the undoaction several times ctrl z for each entry change in changelogmd described
941.0,948,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,introduce search and error while fetching from instead of having separate strings for each fetcher the placeholder is used nowrefs
920.0,974,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,always trim fields on save and remove trimformatter the consensus in was that fields should always be written without leading or trailing whitespace this is done in this pr and the trimformatter is removed by the way empty fields are never written as one of the added tests shows change in changelogmd described
978.0,979,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,refactored singlebibtexfield based on the initial ideas in the class singlebibtexfield is extracted and two enumsets are used for implementing the existing functionality
623.0,988,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,when clicking on a tab the first field now has the focus change in changelogmd described this is referes to i just had to add the activatevisible method to the changelistener to ensure the focus is set
958.0,992,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,better layout of databasepropertiesdialog does not fully solve but at least betteri do not fully understand why the formatter part doesnt scale horizontally
991.0,996,1,0,0,1,0,1,1,0,0,1,1,1,1,1,0,fix entry deletion from database a bug introduced in b aee bae b aa ef f b d bd while moving from map to list as the data structure for the stored bibentries is has been forgotten to adjust the removeentry method change in changelogmd described
957.0,999,1,0,0,0,0,0,0,1,0,1,1,0,1,0,0,db properties layout and save order config changed change in changelogmd described and fix height of the dialog and add spacing between ok cancel button and borderchanged jcomboxbox to editable and removed the unnecessary textfieldsadded jcombobox for selecting the fields to apply the selected formatter tochanged position of delete buttonremoved indexoutofbound exception when no item is selectededit i just see this pr is
958.0,999,1,0,0,0,0,0,0,1,0,1,1,0,1,0,0,db properties layout and save order config changed change in changelogmd described and fix height of the dialog and add spacing between ok cancel button and borderchanged jcomboxbox to editable and removed the unnecessary textfieldsadded jcombobox for selecting the fields to apply the selected formatter tochanged position of delete buttonremoved indexoutofbound exception when no item is selectededit i just see this pr is
1001.0,1010,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,added initial tests for exportformat really trivial and early test but could maybe avoid bugs like to happen and form a foundation to extend on
1012.0,1014,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,improved exception handling in tests cases never catch an exceptionremoved unnecessary exceptionsthrow specific exceptions never only exceptionref
103.0,1037,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,implemented added a button that can be used to determine if the search results should be updated on every pressed key or on enter only based on the suggestion in two issues select a good icon the current one is quite intuitive if it wasnt for the fact that the symbol is rarely used for selecting a state when using autocompleting and search on enter enter needs to be pressed twice once to select the completing once to search searchontype will be available at in minutes or so change in changelogmd described
1034.0,1037,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,implemented added a button that can be used to determine if the search results should be updated on every pressed key or on enter only based on the suggestion in two issues select a good icon the current one is quite intuitive if it wasnt for the fact that the symbol is rarely used for selecting a state when using autocompleting and search on enter enter needs to be pressed twice once to select the completing once to search searchontype will be available at in minutes or so change in changelogmd described
963.0,1041,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,write database type in lower case into the bib file this finally a quick fix has been introduced in eea e but that does not cover the lower case writing of the type comment{jabref meta database_type bibtex} finally gets comment{jabref meta databasetype bibtex} change in changelogmd described this has been introduced in the development versions after the last release thus no entry required tests have been adapted to match this new implementation
103.0,1050,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,restructrued cleanup formatters dialog reworked cleanup formatter dlg description updates when and item is selected also on startup the field is now also multilane with auto resizing and word wrap after deleting a selected item in the list the next one previous is selected changed layout to be more consistent renamings to be more precise and moving in new packageadded tests change in changelogmd described cleanupentriesdialog https cloudentcom assets fa ac f f e d c a ad png
1051.0,1054,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,fix sorting of entries on save fix sorting of entries on save this shouldnt affect the sorting of export so is unrelated to in the end it was just a wrong boolean in the preference change in changelogmd described no i think the issue was introduced in this version kind of there is a test for the sorting now but it passed before any fix no test added for the boolean in the preference
1055.0,1056,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fixes npe in export to external db fixes npe in export to external dbadd db type to export succesful messagereformatting no changelog because i think it was new introduced by the redesign of the entry sorting passing null
1062.0,1064,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,merge entry with doi information now also applies changes to entry type change in changelogmd described
672.0,1089,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,filelist field size now dependent on its content the filelist within the entryeditor now automatically resizes its columns dependent on the length of its content java change in changelogmd described
393.0,1116,1,0,0,1,0,1,1,1,0,1,0,1,1,1,0,open jdk problems with look and feels see still not sure if this only applies to openjdk and gtk l&f or also to oracle jdk and gtk l&fmetal l&f seems to work but looks uglyidea is to try metal on openjdk and wait if more bug reports pop up even for oracle maybe we should close at least one of the two bug reports that seem to be related to openjdk and gtk or maybe even open a new one with possible solutionsalso see see we can just ignore this and wait for it to be fixed in openjdk and add a hint to our faq and documentation
638.0,1116,1,0,0,1,0,1,1,1,0,1,0,1,1,1,0,open jdk problems with look and feels see still not sure if this only applies to openjdk and gtk l&f or also to oracle jdk and gtk l&fmetal l&f seems to work but looks uglyidea is to try metal on openjdk and wait if more bug reports pop up even for oracle maybe we should close at least one of the two bug reports that seem to be related to openjdk and gtk or maybe even open a new one with possible solutionsalso see see we can just ignore this and wait for it to be fixed in openjdk and add a hint to our faq and documentation
1130.0,1135,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,and re enable gui test koppor its just a simple if smile
1134.0,1138,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,importformatreader test added initial tests for importformatreader now seven different formats are imported without specifying the format and the number of imported entries is checked should avoid bugs like i also removed unused methods and moved a totally unrelated method to a better home
318.0,1149,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,replace normalizenamesformatter by authorlist and so and refs removes comma as delimiter of author names in normalizenamesformatter the problem is that comma separated authors cannot be distingued from one author in bibtex format for example name della first could be three names separated by commas or if interpreted as valid bibtex string it is one author with lastnamename jrpartdella firstnamefirst add colon as delimiter of author names in authorlistparser thanks at all but especially oscargus for creating many tests made implementing this pr way easier change in changelogmd described
1163.0,1168,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,by removing the strange functionality which enabled sorting… we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that means this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs
936.0,1192,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,preview panel is now updated when an entry is cut deleted again when i fixed some time ago pr i made a tiny errorthe issue was to hide the preview panel when deleting cutting an entry but it also hid it when aborting the delete confirmation dialogi too refactored both actions a little to make it easier for future changesi also removed in undoableremoveentry and undoableinsertentry the id generation
1080.0,1207,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,restructure importers the aim of this pr is to reduce the overlap between the importer package and some code in gui in particular the class opendatabaseaction moreover and are fixedin detail the following things were changed the abstract importformat class is almost completely rewritten please have a look at this class almost all other changes are a direct consequence of the edits made to the importformat class the biggest change is that the import method returns a parserresult instead of a list of entries in this way metadata can also be imported and error messages are communicated more effectively instead of throwing ioexceptions moreover the import method operates on a reader instead of an input stream in order to reduce some common code in all importers add method importdatabase path file charset encoding to the importer interface which opens the file and passes the stream to the other import method the bibteximporter overwrites this new import method and uses the logic from opendatabaseactionloaddatabase to determine the encoding of the bib file change opendatabaseaction to operate against the bibtex importer remove get set iscustomimporter was not really used just for sorting now everything is alphabetical empty entries are no longer imported thus a few test had to be changed remark the methods getextension and getdescription are not implemented by almost any importer this should be done maybe this is something for the stupro will add the changelog entry and add a few tests later change in changelogmd described
1153.0,1207,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,restructure importers the aim of this pr is to reduce the overlap between the importer package and some code in gui in particular the class opendatabaseaction moreover and are fixedin detail the following things were changed the abstract importformat class is almost completely rewritten please have a look at this class almost all other changes are a direct consequence of the edits made to the importformat class the biggest change is that the import method returns a parserresult instead of a list of entries in this way metadata can also be imported and error messages are communicated more effectively instead of throwing ioexceptions moreover the import method operates on a reader instead of an input stream in order to reduce some common code in all importers add method importdatabase path file charset encoding to the importer interface which opens the file and passes the stream to the other import method the bibteximporter overwrites this new import method and uses the logic from opendatabaseactionloaddatabase to determine the encoding of the bib file change opendatabaseaction to operate against the bibtex importer remove get set iscustomimporter was not really used just for sorting now everything is alphabetical empty entries are no longer imported thus a few test had to be changed remark the methods getextension and getdescription are not implemented by almost any importer this should be done maybe this is something for the stupro will add the changelog entry and add a few tests later change in changelogmd described
405.0,1215,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,improved conversion maps and conversion speed the html unicode latex conversion map source was based on regular expressions making it a jungle of backslashes now replace is used instead of replaceall so fewer backslashes and theoretically a bit fasteri also added benchmarking for the following conversions html to latex used at import cleanup and save action latex to html used for preview latex to unicode used for table rendering and i got a slight improvement although i cannot really tell why the two latter are faster now as they are based on cleaned versions one reason might be that the tests are based on latex symbols with more backslashes in them for the old casebefore benchmarkshtmltolatexconversion ▒ ops sbenchmarkslatextohtmlconversion ▒ ops sbenchmarkslatextounicodeconversion ▒ ops safter benchmarkshtmltolatexconversion ▒ ops sbenchmarkslatextohtmlconversion ▒ ops sbenchmarkslatextounicodeconversion ▒ ops shere one can see that only searching the string to be converted once is far better than running replace on all possible characters which is not surprising but require quite complicated codefinally with the simpler strings it was easier to add most all of the curly brackets required to solve
1188.0,1217,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,added integrity checker for odd number of will sometimes help for and
1212.0,1217,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,added integrity checker for odd number of will sometimes help for and
1091.0,1229,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,apply and ensure correct import sort order see
1188.0,1238,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,added integrity checker to detect html encoded characters in fields based on discussions in
124.0,1246,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fixed this should so that it is possible to set empty strings is jstyle files as key
1245.0,1246,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fixed this should so that it is possible to set empty strings is jstyle files as key
1251.0,1278,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,tried to but all tests pass will merge this in if the tests all pass on the ci server change in changelogmd described
625.0,1281,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,replace bibtexentryassert by overwriting bibentryequals method as proposed in a proper bibentryequals is provided in this pr and used for the tests this as a few advantages detect differences which are not visible in the canonical string representation so far this hit empty fields and different line breaks get more meaningful test failure messages for lists instead of expected got the added entry is displayed assertassertequals just works and no custom written assertequals method has to be usedi clicked around a bit but couldnt find any unexpected side effects due to the overwritten equals method if this pr is accepted then i would inline the bibtexentryassertassertequals methods change in changelogmd described
1271.0,1282,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,authors with compound first names are parsed properly change in changelogmd described
871.0,1298,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,added option to copy version information in the about dialog added option to copy version information of jabref in the about dialog as described in this will help with filing issues and bug reports as the version of jabref os and java will be copied change in changelogmd described screen shot at https cloudentcom assets a bbc b e bbf b cb b cdpng
1290.0,1300,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,change jabref help to online help all translations must be added again
1290.0,1301,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,change jabref help to online help change in changelogmd described
1294.0,1304,1,0,1,0,0,0,0,0,0,1,0,1,1,0,0,implemented jstyle file filter and opening in last dir filter filter for jstyle files extended browseaction to display file filterfixed npe when selecting invalid jstyle prevented style dialog from opening change in changelogmd described
1295.0,1310,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,npe when sorting tabs selected tab might be null when sorting tabs the logic is really strange in general so this fixes the problem but we need to rework the actions enabling in general imho
1312.0,1318,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,update localization instructions corrected gradlew task name koppor stefan kolb
1347.0,1349,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,open urls does not work with query strings this should work with query strings like normal urlshowever the question is does this impact the opening of any other file path or anything we need to be careful as this is a generic open method maybe thats also the problem because it needs to handle any kind of uri siedlerchr tobiasdiez please take a look
1294.0,1350,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,fix npe on selecting invalid jstyle follow up from npe was raised in comparator because name was initialized with null instead of empty stringonly store preferences if style is valid oscargus the fix has the side effect that a file where the name can not be parsed correctly is displayed as empty style i attached the problematic style file which was provided in however valid still returns true as you have worked recently with the styles things do you know what is required for a jstyle koppor maybe you know thisthen we could improved the validity check campus_formatenglishtxt https githubcom jabref jabref files campus_formatenglishtxt emptyjstyle https cloudentcom assets d c a e e eb e f ffa epng
1353.0,1355,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,update preview panel on generate bibtexkey fix for fixed some missing unlockssome formatting change in changelogmd described
1351.0,1368,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,removed possibility to automatically add braces via option preferen… …ces file store the following fields with braces around capital letters please use save actions instead for adding braces automaticallyrefs
872.0,1383,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,implemented error console in javafx this is the error console in jabref being implemented in javafx the console is highly flexible in positioning and styling its components through a fxml and corresponding css stylesheetalso to show better the error console content log output exception i have allowed to resize error console windows manually error console dialog update the error console screenshot new feature copy log user can copy the log report issue user can report directly issues from console have done change in changelogmd described
1334.0,1384,1,0,0,1,0,1,1,0,0,1,0,0,1,0,0,display correct number of entries in static groups fix of nice bonus total number of entries is displayed after all entries group change in changelogmd described bug not present in
135.0,1388,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix sorting issue the logic is fucked but this should fix the issueproblem was that when sort in original order was selected the corresponding variable newsortorder would still read the disabled sort order inside the jdialog
1381.0,1389,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,file links containing blanks are broken if non default viewer is set runtimeexec with a string splits on white spaces
1063.0,1397,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,add fields for nbibimporter and add testfile regarding medlineplain importer doesnt have all fields that the nbib format has so i added the fields to the medlineplain format and added a test testfile for the nbib formata list of the elements that should be imported now can be found here
1399.0,1401,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,export to html html code is not well formed always write the footer no matter if encoding is given or not
1408.0,1409,1,0,1,0,0,0,0,0,0,1,0,1,1,0,0,cleanup guiglobals implements cleans up the guiglobals class and move latexfieldformatter to the bibtex package which is now independent of the gui packageas a final step i would move the class netsfjabrefimporterfileformatfieldcontentparser to the bibtex package which would make the package self contained apart from imports to the preferences and related classes and would move the whole bibtex package into logic are there objections to this
1342.0,1429,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,show description of case converters as tooltip change in changelogmd described
1420.0,1440,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,auto downloader should respect file pattern and propose correct filename https cloudentcom assets a fa e a cfac d png
651.0,1443,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,improve parsing of author names containing braces change in changelogmd described
888.0,1453,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,refactor placement of parsing and writing logic according to the following conventions all objects which can be read from a string have public static type parse stringy input method all objects which can be written to a string have a public stringy getasstring methodshould change in changelogmd described
661.0,1459,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,create update checker for the enduser implements the updater regularly checks if there is a new stable version of jabref available via github api there is a dialog will popup newversion download update points directly to fosshub ignore this update will ignore this specific version on automatic version checks remind me later will inform the user on the next version check automatic or manual of this version view changelog points directly to the changelog specific to this version eg v would point to help there is another button to check for updates updatetab preferences you can see the current version when the version was last checked and a button to check it now if theres a new version available and a download button if a version was ignored and a button to unignore it you can also define how often the automatic check should occur
1455.0,1460,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,npe when retrieving bibtex data from doi see
145.0,1463,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix for this after changing the preferences the maintable is using a new splitpane object to divide table and entryeditor in the course of creating the actual table existing entryeditors are closed which causes a saving of the current entryeditor height in the prefs as this is calculated based on the already new splitpane a wrong value is storedto prevent this the previous state of the divider for the splitpane is restored based on the prefs before the maintable is recreated change in changelogmd described
1450.0,1463,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix for this after changing the preferences the maintable is using a new splitpane object to divide table and entryeditor in the course of creating the actual table existing entryeditors are closed which causes a saving of the current entryeditor height in the prefs as this is calculated based on the already new splitpane a wrong value is storedto prevent this the previous state of the divider for the splitpane is restored based on the prefs before the maintable is recreated change in changelogmd described
1026.0,1471,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,preserve user comments in bib file so i am finally having my take at the current solution was surprisingly easy so far despite what i had written before it looks explicitly for our encoding prefix in the file encoding and kills lines that contain it but only lines preceding an entry it will not delete something that is inside an entry other user comments are left untouched and are _always_ written out again even if the entry is reformatteduser comments that are above meta data bibtex strings or the preamble will still be removed though changing that would require large scale changes to these items in our model since we would also need to store the parsed serialization for them which we do not do so farthis should receive significant automated but also manual testing since it modifies a quite critical part and has the potential to destroy bib files i will add a few more tests for this pr change in changelogmd described
1434.0,1474,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,static groups are now longer displayed as dynamic ones reason for this bug explictegroup now derives from keywordgroup and thus was sometimes displayed as a keyword group change in changelogmd described
1063.0,1479,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,rewrite medlineimporter with jaxb and add nbib fields regarding rewritten the medlineimporter to be more specific the importdatabase method so that it uses a jaxb parser now instead of a sax parser ive also added the nbib fields to the importer tests for the changes will be coming change in changelogmd described
1482.0,1483,1,0,0,0,0,1,1,0,0,1,1,0,1,0,0,correct number of matched entries is displayed for refining subgroups the issue was that for the number of hits jabref only checked if thegroup taken separately matched the entry that is it was completelyignored that the group sits in a tree and might be set up to refine thesearch of the parent taking the example given in entriessatisfy the condition articlé original but only are also matched by articlé change in changelogmd described
1485.0,1486,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,export shorttitle as standard field shorttitle shorttitleincludes the obvious migration problems which i dont know if they really occur
1444.0,1487,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,implement getextension and getdescription for importers implement getextension and getdescription for importers change in changelogmd described
1507.0,1511,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,keywords are now separated by the delimiter specified in the preferences also did some small refactorings renamings change in changelogmd described
1396.0,1526,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,journal abbreviations dialog ported to javafx i tried to extract the logic in a test driven approach to completely separate ui and ui model and to have a high code test coverage the design of the dialog was made after the ui model was finisehd and is close to what was specified in change in changelogmd described listview https cloudentcom assets b e ff d c e cpng listvieweditname https cloudgithubusercontentcom assets e fc e ad bfeaa aab png listviewbuiltinlist https cloudgithubusercontentcom assets f a e e f c e db png
825.0,1549,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,searchbar across all bib files instead each having its own implemented the searchbar is now in the top toolbar instead of each tab having its own always at the right on tab change the tab gets updatedthe autocomplete is bound to the current tab maybe extend this one in another pr the old global search opening all findings in a new window is gone do we really need it jabref_globalsearch change in changelogmd described
1338.0,1563,1,0,0,1,0,1,1,0,0,1,0,1,1,1,0,added button to crossref entry editor field to select parent entry based on the idea in a button is added in the crossref entry editor field to select the parent entry in the main table it is not exactly the same thing as suggested in though change in changelogmd described
1530.0,1567,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix integrity checker should ignore unescaped hashes in url field addresses change in changelogmd described
1356.0,1572,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,implement implements and provides a formatter that converts html to unicode converting characters and eliminating tags change in changelogmd described
126.0,1581,1,0,1,0,0,0,0,0,0,1,1,1,1,0,0,fixed i finally got around to understand the reasons for and parts of it turned out that commands starting with c was handled in a special way and that {\v{s}} was for unknown reasons used as line tabulation setas a result not only does jabref now render \v{s} and \chi correctly it also renders combining accents see screen shot img width altcapture src change in changelogmd described
1264.0,1581,1,0,1,0,0,0,0,0,0,1,1,1,1,0,0,fixed i finally got around to understand the reasons for and parts of it turned out that commands starting with c was handled in a special way and that {\v{s}} was for unknown reasons used as line tabulation setas a result not only does jabref now render \v{s} and \chi correctly it also renders combining accents see screen shot img width altcapture src change in changelogmd described
1527.0,1583,1,0,0,1,0,1,1,0,0,1,0,1,1,1,0,fixed and some refactoring cleanups fixed and did some refactoring and cleanups change in changelogmd described
124.0,1584,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,added layout dateformatter see added a configurable layout formatter for dates change in changelogmd described
1249.0,1584,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,added layout dateformatter see added a configurable layout formatter for dates change in changelogmd described
1345.0,1590,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,implemented cleanup issn implemented cleanup that adds a missing dash in the issn field if it looks like an issn checksum is not controlled but eight digits where the last may be an x change in changelogmd described
159.0,1599,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,fixed this should change in changelogmd described
1592.0,1599,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,fixed this should change in changelogmd described
1579.0,1601,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,move event moves the event package into model as discussed in no need for changelog since this has no externally visible effect commits will be squashed on merge
1579.0,1604,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,move preferences moves preferences related classes into a new top level package as outlined in this is a pure refactoring no functional changes it doesnt fix the dependencies on preferences but separates them from the remaining classes in the root packageadditionally the class jabrefpreferencesfilterdialog is moved into the gui package where it belongs this also allows to rename the class and reduce its visibilitycommits can be squashed on merge
1613.0,1616,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,use jabref default icon for uninstaller for now using standard icon for now should be replaced by specific uninstaller icon after redesign
482.0,1616,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,use jabref default icon for uninstaller for now using standard icon for now should be replaced by specific uninstaller icon after redesign
1321.0,1622,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,improved latex to unicode html formatters to output more sensible val… see main thing is that \latex{} outputs latex same for all unknown commands also behaves a bit better for some other situations with unknown commands and there are now tests for it to make sure that it happens change in changelogmd described
1632.0,1638,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,keep comment text in a bib file implements user comments marked by comment are now kept in the bib file regardless of whether they use brackets or not change in changelogmd described manually tested changed features in running jabref
1665.0,1666,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,rewrite bibtexml importer with jaxb parser regarding ive rewritten the bibtexml importer it was written with a sax parser and ive used a jaxb parser i will be addings some more tests for the changes ive madenote exporting in bibtexml format and then trying to import in bibtexml format is not working because of manually tested changed features in running jabref
898.0,1666,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,rewrite bibtexml importer with jaxb parser regarding ive rewritten the bibtexml importer it was written with a sax parser and ive used a jaxb parser i will be addings some more tests for the changes ive madenote exporting in bibtexml format and then trying to import in bibtexml format is not working because of manually tested changed features in running jabref
1288.0,1671,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,newly opened bib file is not focused open a new file and it is correctly focused afterwards open a file that was already opened before is correctly focused afterwards open a file two times and it is only opened once
1669.0,1678,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,fixed oo lo manual connection dialog on linux doesnt fix the whole issue but at least the bug in the ui code so that the manual connection dialog can be drawn on linux
1682.0,1683,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,do not cite entries without a key in openoffice libreoffice check that all entries to be cited have non empty keys show a popup if there are empty keys and generate keys if instructed to do soreferences change in changelogmd described manually tested changed features in running jabref
1716.0,1717,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fixes broken serialization of bibentries containing an change in changelogmd described manually tested changed features in running jabref helpjabreforg this is rather crucial it would be great if someone else checks what i have done to explain get the text before the entry string prolog parsedserializationsubstring parsedserializationlastindexof did not work properly if an is used within an entryhowever determining from the complete parsed serialization where the entry begins and what are comments before the entry is not so trivial thus i added another attribute in the bibentry commentsbeforeentry in which the serialized form of the comments stored in front of the entry is directly saved during parsing the entry
1726.0,1732,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,changed possibly giant undo redo texts in status field now it only says undo or redo although the much more detailed information can be obtained from the tooltipnothing in changelog since this is an inter version issue
1724.0,1733,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,fixed concurrentmodificationexception when removing a field in the so… really simple it turned outno changelog since im not sure if it was in manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1519.0,1734,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,removed seiten from pagetotal and fixed a totally unrelated npe fixed and an unrelated npe due to bad documentation it says that it can be null but it couldnt and there is a use case where it now is null added tests for the fixed npe change in changelogmd described tests added manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1499.0,1755,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,fixed name column rendering and fixed and better to format the author names before converting latex to unicode bah img width altcapture src change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
153.0,1755,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,fixed name column rendering and fixed and better to format the author names before converting latex to unicode bah img width altcapture src change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1531.0,1755,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,fixed name column rendering and fixed and better to format the author names before converting latex to unicode bah img width altcapture src change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1750.0,1765,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,export to office first fix for i will continue reworking some other fields too and will add some more tests change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1767.0,1770,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,implements add help button to access new help page refs manually tested changed features in running jabref
1776.0,1780,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,fix arxiv fetcher not working correctly remove cookie handler implementationour urldownload works without or own cookiehandler cookies tooedit worked partly for me with arxividall unit test and manual tests work againi think the problem was that due to the inheritance our cookie handler was called in every connection no idea why it failed with arxiv only stefan kolb
1795.0,1797,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,improved main table rendering when using eg title author earlier on a name formatter was used if any of the fields in a column contained person names now it is determined by the used field marginally related to or at least one step towards a solution figuring out which field actually was used before img width altcapture src width altcapture src can be seen the author editor column is still rendered as it should change in changelogmd described manually tested changed features in running jabref
1803.0,1812,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,working directory is set to full path including filename
1804.0,1823,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fixed url field is not removed by integrity check better to disable the check than remove the field from the entry change in changelogmd described one may think of adding a test that no fields are removed from the entry in the integrity check but i havent done that here ideally the entry should have every possible field included manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1687.0,1837,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,month field ascending descending sorting swapped when sorting according to month ascending descending are switched change in changelogmd described manually tested changed features in running jabref
184.0,1848,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,allow setting the etal string empty implements earlier it was not allowed to set the etal string in the authors layout formatter to be empty however as clear from there is at least one use case for it and it is not obvious why it wasnt allowed earliera side note it is still not allowed to set sep and lastsep empty maybe there are good reasons for that change in changelogmd described helpjabreforg https githubcom jabref helpjabreforg issues
1841.0,1848,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,allow setting the etal string empty implements earlier it was not allowed to set the etal string in the authors layout formatter to be empty however as clear from there is at least one use case for it and it is not obvious why it wasnt allowed earliera side note it is still not allowed to set sep and lastsep empty maybe there are good reasons for that change in changelogmd described helpjabreforg https githubcom jabref helpjabreforg issues
1841.0,1857,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fixed npe when loading a style file that has no default style found when trying although non related change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1663.0,1865,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fixed better multi monitor support location of windows is keep also for multi monitor setups location of window is only reverted when it is not displaybale no multi monitor anymore wrong preferences removed duplicate maximized state logic dialogs are centered as overlay over the main window not always on the main screen jabref developers please try on your multi monitor setup work and or a home the location of the windows should stay the same or should be adapted to a visible alternate location also the maximized state should be remembered correctly on all monitors do you see any dialogs that are not correctly centered in multi monitor scenario jabref on nd screen dialog on main screen
1496.0,1869,1,0,0,0,0,0,1,0,0,1,1,1,1,0,1,download many files in one go implements and also allows selecting multiple documents to find full text documents for i think that it doesnt always show a dialog for every failed files when having multiple ongoing downloadsplease try it out at change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1881.0,1888,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,do not mark a new database as changed i missed an if statement when inverting an if else in change in changelogmd described introduced in development version only fortunately manually tested changed features in running jabref
1882.0,1893,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,fix invalid bibtexkey freeze reference change in changelogmd described manually tested changed features in running jabref
1506.0,1894,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,implemented title and camel key modifiers implemented change in changelogmd described helpjabreforg https githubcom jabref helpjabreforg issues
1092.0,1899,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,move files to subfolders in file directory implementation for already implemented copy and move methods from change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues jabreffiledirpattern https cloudentcom assets ad b dc e e f fe d c ebpng
1897.0,1906,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,check integrity year check added added last four nonpunctuation characters should be numerals in check integrity year change in changelogmd described manually tested changed features in running jabref
1912.0,1914,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,check integrity edition check implemented implemented a check for the field edition the check differentiates between bibtex and biblatex mode of the database change in changelogmd described manually tested changed features in running jabref
1922.0,1926,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,extract all integrity checker classes to its own file issue change in changelogmd described manually tested changed features in running jabref
119.0,1928,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,support citationstyles implements the user can choose multiple citationstyles which he can cycle threw in the preview panel forward with f backwards shift f both are in the context menu and the menu bar as discussed i removed the nd preview preview before preview_before preview after preview_after preferences before preferences_before preferences after preferences_after didnt include the localization other the english on purpose because they create unnecessary conflicts when rebasing quite often i push them when everything else is fine the help page has to be updated too i do that as soon as this pr is merged change in changelogmd described manually tested changed features in running jabref helpjabreforg currently i read the available citationstyles at runtime i had problems reading them from the gradle dependency thus currently they are only found when jabref is started from the jar
1851.0,1931,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,export number field as number if not patent or issue in office xml add export key field not to be confused with bibtexkey field add test for custom entry type and key field refs documentation has to be updated change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1920.0,1942,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,mods importer regarding adds an importer for the mods xml format the importer is written with a jaxb parserdetails on the format and the newest xml schema can be found here used the newest schema version change in changelogmd described manually tested changed features in running jabref
1943.0,1944,1,0,0,1,0,1,1,1,0,1,0,1,1,0,0,try around with xmlunit see for details change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1877.0,1950,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,towards hierarchical keywords this pr is the first step towards supporting hierarchical keywords refactor the keyword related code to use new classes keywordlist and keyword unified keyword delimiter to be a single character and in this way fixed the issues mentioned in and move keyword delimiter from preferences to metadata database properties new pr add hierarchical delimiter and change parsing logic in keywordlist accordingly new pr change ui to support hierarchical keywords new prnote i also moved the stringutil class to model in some sense it is jabrefs own string class and removed entryutil only had methods related to strings stringutil or keywords keywordlist change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
628.0,1950,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,towards hierarchical keywords this pr is the first step towards supporting hierarchical keywords refactor the keyword related code to use new classes keywordlist and keyword unified keyword delimiter to be a single character and in this way fixed the issues mentioned in and move keyword delimiter from preferences to metadata database properties new pr add hierarchical delimiter and change parsing logic in keywordlist accordingly new pr change ui to support hierarchical keywords new prnote i also moved the stringutil class to model in some sense it is jabrefs own string class and removed entryutil only had methods related to strings stringutil or keywords keywordlist change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
705.0,1950,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,towards hierarchical keywords this pr is the first step towards supporting hierarchical keywords refactor the keyword related code to use new classes keywordlist and keyword unified keyword delimiter to be a single character and in this way fixed the issues mentioned in and move keyword delimiter from preferences to metadata database properties new pr add hierarchical delimiter and change parsing logic in keywordlist accordingly new pr change ui to support hierarchical keywords new prnote i also moved the stringutil class to model in some sense it is jabrefs own string class and removed entryutil only had methods related to strings stringutil or keywords keywordlist change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1949.0,1952,1,0,0,1,0,1,1,0,0,1,1,1,1,1,1,fix wrong path in error message an error message directs to the wrong preference tab change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1959.0,1962,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,minor improvements to the javafx about dialog follow up of bartsch dev had a great idea to use his version class to get the changelog url since it already provides a method for it i only adjusted it slightly so dev versions will be redirected to links will also stay gighlighted after they have been visited normal version snapshot versions a new label will be added for the complete version string snapshot change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1958.0,1970,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,verbatim url field is no longer checked for html encoded chars change in changelogmd described manually tested changed features in running jabref
1979.0,1981,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,icon does not change when toggling global search issue
1937.0,2005,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,check avaiable help lanugages when opening specific help page if help lang not avaiable use englishfix for change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2012.0,2015,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,implemented integrity monthchecker monthchecker added change in changelogmd described manually tested changed features in running jabref
463.0,2027,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,disable context menu action on selection of multiple entries if multiple entries are selected some context menu toolbar and menu actions are now disableddisabled actions print entry preview attach file edit entry open folder enable only if file exist open file enable only if file exist open url or doi enable only if url or doi exist merge entries enable only on select of two entries these actions make no sense to be used when there are multiple entries selectedfor further information have a look at context menu before change _ h _ menu after change _ h _ menu before change _ h _ menu after change _ h _ menu before change _ h _ menu after change _ h _ menu before change _ h _ menu after change _ h _ menu before change _ h _ menu after change _ h _ button edit entry before change _ h _ button edit entry after change _ h _ button merge entries before change _ h _ button merge entries after change _ h _ take a look for merge thx 😄 change in changelogmd described manually tested changed features in running jabref internal qs
1074.0,2028,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,fix ris import regarding doi import should now work with the do field also ive added some fields that are available in the ris specification ive also done some code cleanups should be also fixed now ive added the scopus file as test file manually tested changed features in running jabref
1647.0,2028,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,fix ris import regarding doi import should now work with the do field also ive added some fields that are available in the ris specification ive also done some code cleanups should be also fixed now ive added the scopus file as test file manually tested changed features in running jabref
2029.0,2031,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,fix localization task hints fixes replaces hints to the old gradle localization task names with the new ones
1542.0,2034,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,fix bad web search error messages i rewrote the error messages when the fetchers fail or added them
549.0,2037,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,added new menu and action to copy bibtex key as url added a new sub menu item to the menu and the right click menu to quickly copy the bibtex key as a hyperlink to the entries url as described in in case of an empty url the bibtex key will be copied by its own rightclickmenuentry bibtex keys as hyperlink with their url source screen shot at bibtex keys as hyperlink with their url markdown formated screen shot at change in changelogmd described manually tested changed features in running jabref
490.0,2040,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,right click menus should allow copying doi url right clicking on the doi field in the main table or the entry editor shows a sub menu where the user can copy the url of the doi to the clipboard refs right click menu when doi field isnt present rightclick click menu in entry editor when doi field is not empty entryrightclick click menu in entry editor when doi field is empty emptydoi add the menu to the entry editor change in changelogmd described manually tested changed features in running jabref
1993.0,2043,1,0,0,0,0,1,0,0,0,1,0,1,0,0,1,use parallel stream while searching with this the search should be much faster on platforms where multiple cores are available
2054.0,2055,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,fix ignore version made a rookie mistake and ignored the already ignored version againreworked the preferences to the new design
2012.0,2066,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,medline fetcher using new infrastructure rewrite the medline fetcherrefs manually tested changed features in running jabref
2064.0,2067,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,undo undo see
1808.0,2069,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,fix changing the font size not working when importing preferences i initialized the fontselectordialog with the variable that keeps changes made in the dialog instead of the current globals this seems to fix both issues named here change in changelogmd described manually tested changed features in running jabref
2021.0,2070,1,0,0,1,1,1,1,0,0,1,0,1,1,0,0,fix execution of preference migrations follow up of to fix the key pattern part of preference migrations are executed too late after other operations already worked on the prefs node execute them directly in the main class
2064.0,2075,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,other fields fix and changes these are the claimed improvements removed optional fields from other fields bibtex removed deprecated fields from other fields biblatex see change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1886.0,2082,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,quick fix google scholar entry fetching google scholar fetching was broken again see with this fix at least getting the first search hits is possible again configuration is no longer possible in the current form and google generally limits the responses per page to hits however even using this will cause a captcha challenge for jabref as only hits are allowed a rewrite to the new fetcherinfrastructure should now be possible thus omitting the step approach change in changelogmd described manually tested changed features in running jabref helpjabreforg update of might be useful to indicate that only hits are currently shown
2078.0,2088,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,rewrite mods exporter and add test follow up of and regarding rewrites the mods exporter with a jaxb parser in comparison to the last pr i do not longer rely on the namespaceprefixmapper i added an annotation in the package infojava which also does the namespace prefix mapping only problem is that this annotation cannot be automatically generated by a gradle or ant script thats why added the package infojava to src main java net mods manually tested changed features in running jabref
1993.0,2091,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,speed up search refers to at the request of koppor i speed up the search by using a second map of fields inside bibentry which stores the field latex freei also internalize these fields and set the necessary jvm arguments in install j i hope those are right todo identifiy all the uses of the latextounicodeformatter and replace it
2021.0,2094,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,make all files selectable in file chooser dialogs make all files selectable in filechooser fixed change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1993.0,2102,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,store latex free fields in bibentry based on the discussion in and the work of bartsch dev in this pr aims to improve the speed of search by storing latex free versions of field values in a cache it aims at a balance between better performance and an acceptable memory footprint basically all ideas from are implemented a cached store of latex free fields which is computed on demand string internalization and regex performance improvements in latextounicode here are measurements with the new branch benchmark mode cnt score error unitbenchmarkslatextounicodeconversion thrpt ops sbenchmarksparallelsearch thrpt ops sbenchmarkssearch thrpt ops s the memory footprint of a database with entries is mb on my machineand on current master benchmark mode cnt score error unitbenchmarkslatextounicodeconversion thrpt ops sbenchmarksparallelsearch thrpt ops sbenchmarkssearch thrpt ops s the memory footprint of the same entry database is mball in all this looks like a hefty performance improvement at little memory cost change in changelogmd described manually tested changed features in running jabref
2104.0,2106,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,crash after saving bibtex source with parsing error change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2109.0,2114,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,ctrl s parsing error message ctrl s doesnt trigger parsing error messageproblem conflict of local shortcut of the entry editor with the global shortcutsolution local shortcut removed the action assigned to local and global shortcut is essentially the same save database change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2050.0,2121,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fix codecov issue fix for ive added a gradle task that copys the resource to where they should be
2142.0,2129,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,dont change the selected entry after search if you edit an entry fixes when the search is active and you edit an entry until the entry doesnt match the search an longer the first match would be selectednow if you edit an entry the selected entry wont change
1670.0,2145,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,change download url to downloadsjabreforg we want to get back control of the download site we offer thus we created with a redirection to fosshubrefs
2098.0,2161,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,fix group drag and drop this and change in changelogmd described introduced in dev builds manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2119.0,2161,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,fix group drag and drop this and change in changelogmd described introduced in dev builds manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2133.0,2163,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fix highlighting issues earlier highlighting was done manually by adding tags to matches in the html text being sent to the pane instead i have opted to make use of the highlighting features of the jeditorpane class this gives the additional benefit that the highlight colour is changed automatically based on the system theme changes created jeditorpanewithhighlighting class removed matchhighlighter class and its tests removed highlighting related tests from layoutentrytest change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2168.0,2169,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,fix failing ads test added missing fields
2166.0,2175,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix memory leak in entry editor this is to list of changes updated microba to latest version unregister entryeditor as a listener to entry implement searchqueryhighlightobservable using entrybus make entryeditor unregister all fields that are listening on the global search bar
2177.0,2179,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,clear bibtexkey exception nullpointerexception caused by clearing bibtexkey field in entry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2184.0,2196,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,fix for add space after separator seems to be as simple as thatchange has been introduced as the delimitor is no longer saved as a string but as a character which chops away the space after the comma change in changelogmd described introduced in dev builds manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1908.0,2198,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,integrity hotkey the check integrity action seems to be in need of a hotkey see i used ctrl f for this action because f is currently used to cleanup entries these functions seem to be related so it would make sense to group them change in changelogmd described manually tested changed features in running jabref if you changed the localization did you run gradle ate internal qs
2208.0,2211,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,prevent the search to get focus when deleting pasting an entry fixes when you delete an entry the focus will no longer jump to the searchbar instead it will select the next entry also counts for pasting
2210.0,2212,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,improvements to the javafx error console the log messages in the list view of the error console can now be selected and copied the error message will also automatically scroll to the newest log message refs
2210.0,2213,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix strange styling behaviour of the error console this should fix the wrong styling behaviour of the different log messages when scrolling it seems like the styling error came because we never resetted the style classes of the cells when adding new onesi also created a generic listfactory class similar to so this issue wont occur in the future refs
2222.0,2223,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,urldownload now resolves redirects by default
2220.0,2225,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix editor freeze possibly fixes mainly i removed swingutilitiesinvokelater i also added some lines to remove the event listener from the old entry editors
2218.0,2226,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fix for reenable ads fetcher see fetcher is now working again change in changelogmd described affected search based fetcher still unreleased tests created for changes pass again manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2228.0,2229,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,fix medline fetcher by using https fix for change in changelogmd described helpjabreforg write blog post regarding november ncbi servers will redirect or reject all requests
2233.0,2236,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,biblatex mode add month and year field to deprecated tab issue in biblatex the date field is recommended for backward compatibility the bibtex fields month and year are also accepted ive added both fields to the deprecated fields tab although the year field is present in the required fields tab too change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2249.0,2262,1,0,0,0,0,1,1,0,0,1,0,0,0,0,0,change log level to debug fixes a side aspects mentioned in currently a search will throw errors if one types author as the search term is still incomplete those exceptions should not be visible to the normal user
684.0,2266,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,when an isbn is not available on ebookde the error message is more clear when fetching a valid isbn from ebookde but the site has no data of the isbn the error message just showed filenotfoundexception this pr fixes thatthe issue itself is a kind of regression as it has been fixed for verison see change in changelogmd described n a manually tested changed features in running jabref helpjabreforg n a if you changed the localization did you run gradle ate
1359.0,2283,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,implement collect telemetry in this pr microsoft azure application insights is used to record the following information about how jabref is used number of users and sessions dialogs opened so far only the about dialog is tracked as proof of concept new database is opened along with how many entries it contains all exceptions are automatically recorded a few user information country os screen size jabref version java version if you give your ok i will continue and implement the following track all dialogs add opt out preferencein we decided to use google analytics for this but as microsoft already provided a nice interface for java i went for this route change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2279.0,2286,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,copy file attributes should and tooedit needs testing for remove posixfilepermission as this will throw an exception on win change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate add copy_attributes flag
2285.0,2286,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,copy file attributes should and tooedit needs testing for remove posixfilepermission as this will throw an exception on win change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate add copy_attributes flag
2219.0,2300,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,fix local metadata synchronization fixes issue issue is fixed by overloading and using the parse method in metadataparser the reason was a reset of the local field metadata in dbmssynchronizer this caused other instances containing this field not to be up to date change in changelogmd described manually tested changed features in running jabref
2221.0,2301,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,readd drop down content selectors first attempt at readding the code for refs code does not compile yet some adjustments need to be made regarding metadata stuff etc change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2311.0,2314,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,rework dblpfetcher to new structure also change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2206.0,2328,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,add bibtex key deviation check refs adds integrity check to determine all entries which bibtex keys deviate from the set bibtex key generation pattern change in changelogmd described manually tested changed features in running jabref if you changed the localization did you run gradle ate
2261.0,2331,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve entrytype customization goals entry customization based on bibdatabasemode working for custom entry types defined in bib db storage is working for new customized entries instead of creating three four prefs strings for each customized entry type in the form custom_type_ _name custom_type_ _req two distinct pref nodes one for bibtex one for biblatex for customized entry types are used which simply use the custom type name as key and the string serialization as value parsing can be reused loading is working for newly created customized entries write prefs migration is performed on first startup of new version existing prefs will be put as new custom types for defaultbibdatabasemode old prefs are not deleted enable testing with cleanup after test execution bibtex biblatex various bug fixes and improvements eg refactor rewrite parts of entrycustomizationdialog to improve performance refs and also clearing of bibtexkeypatterns using reset preferences deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types check resetting overridden default entry types does not work sometimes even crashes not reproducible in reworked state ask stefan kolb whether still an issue related to caused by running through all entries in all open dbs x if a customized type is declared in a file it will be tried to import the declarations if a customtype already exists a warning should be shown that it will be overwritten before this pr no import of already existing customizations custom import before now more control custom import new x a customized standard type should not appear in the custom section of the new entry dialog and not in the custom entries section of the change entry type menu x changelog
2318.0,2331,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve entrytype customization goals entry customization based on bibdatabasemode working for custom entry types defined in bib db storage is working for new customized entries instead of creating three four prefs strings for each customized entry type in the form custom_type_ _name custom_type_ _req two distinct pref nodes one for bibtex one for biblatex for customized entry types are used which simply use the custom type name as key and the string serialization as value parsing can be reused loading is working for newly created customized entries write prefs migration is performed on first startup of new version existing prefs will be put as new custom types for defaultbibdatabasemode old prefs are not deleted enable testing with cleanup after test execution bibtex biblatex various bug fixes and improvements eg refactor rewrite parts of entrycustomizationdialog to improve performance refs and also clearing of bibtexkeypatterns using reset preferences deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types check resetting overridden default entry types does not work sometimes even crashes not reproducible in reworked state ask stefan kolb whether still an issue related to caused by running through all entries in all open dbs x if a customized type is declared in a file it will be tried to import the declarations if a customtype already exists a warning should be shown that it will be overwritten before this pr no import of already existing customizations custom import before now more control custom import new x a customized standard type should not appear in the custom section of the new entry dialog and not in the custom entries section of the change entry type menu x changelog
365.0,2331,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve entrytype customization goals entry customization based on bibdatabasemode working for custom entry types defined in bib db storage is working for new customized entries instead of creating three four prefs strings for each customized entry type in the form custom_type_ _name custom_type_ _req two distinct pref nodes one for bibtex one for biblatex for customized entry types are used which simply use the custom type name as key and the string serialization as value parsing can be reused loading is working for newly created customized entries write prefs migration is performed on first startup of new version existing prefs will be put as new custom types for defaultbibdatabasemode old prefs are not deleted enable testing with cleanup after test execution bibtex biblatex various bug fixes and improvements eg refactor rewrite parts of entrycustomizationdialog to improve performance refs and also clearing of bibtexkeypatterns using reset preferences deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types check resetting overridden default entry types does not work sometimes even crashes not reproducible in reworked state ask stefan kolb whether still an issue related to caused by running through all entries in all open dbs x if a customized type is declared in a file it will be tried to import the declarations if a customtype already exists a warning should be shown that it will be overwritten before this pr no import of already existing customizations custom import before now more control custom import new x a customized standard type should not appear in the custom section of the new entry dialog and not in the custom entries section of the change entry type menu x changelog
366.0,2331,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve entrytype customization goals entry customization based on bibdatabasemode working for custom entry types defined in bib db storage is working for new customized entries instead of creating three four prefs strings for each customized entry type in the form custom_type_ _name custom_type_ _req two distinct pref nodes one for bibtex one for biblatex for customized entry types are used which simply use the custom type name as key and the string serialization as value parsing can be reused loading is working for newly created customized entries write prefs migration is performed on first startup of new version existing prefs will be put as new custom types for defaultbibdatabasemode old prefs are not deleted enable testing with cleanup after test execution bibtex biblatex various bug fixes and improvements eg refactor rewrite parts of entrycustomizationdialog to improve performance refs and also clearing of bibtexkeypatterns using reset preferences deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types check resetting overridden default entry types does not work sometimes even crashes not reproducible in reworked state ask stefan kolb whether still an issue related to caused by running through all entries in all open dbs x if a customized type is declared in a file it will be tried to import the declarations if a customtype already exists a warning should be shown that it will be overwritten before this pr no import of already existing customizations custom import before now more control custom import new x a customized standard type should not appear in the custom section of the new entry dialog and not in the custom entries section of the change entry type menu x changelog
772.0,2331,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve entrytype customization goals entry customization based on bibdatabasemode working for custom entry types defined in bib db storage is working for new customized entries instead of creating three four prefs strings for each customized entry type in the form custom_type_ _name custom_type_ _req two distinct pref nodes one for bibtex one for biblatex for customized entry types are used which simply use the custom type name as key and the string serialization as value parsing can be reused loading is working for newly created customized entries write prefs migration is performed on first startup of new version existing prefs will be put as new custom types for defaultbibdatabasemode old prefs are not deleted enable testing with cleanup after test execution bibtex biblatex various bug fixes and improvements eg refactor rewrite parts of entrycustomizationdialog to improve performance refs and also clearing of bibtexkeypatterns using reset preferences deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types check resetting overridden default entry types does not work sometimes even crashes not reproducible in reworked state ask stefan kolb whether still an issue related to caused by running through all entries in all open dbs x if a customized type is declared in a file it will be tried to import the declarations if a customtype already exists a warning should be shown that it will be overwritten before this pr no import of already existing customizations custom import before now more control custom import new x a customized standard type should not appear in the custom section of the new entry dialog and not in the custom entries section of the change entry type menu x changelog
2335.0,2339,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fix biblatex cleanup for date field this moved biblatex cleanup to new test change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1323.0,2344,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,follow up for batch fulltext downloader rename menu item to plural for finding full texts disable menu item when there are no documents selected for fulltext retrieval fix layout of file dialog and increase size of file path significantlyold https cloudentcom assets bb ce bca e b f e f d dpng new image https cloudgithubusercontentcom assets a bca e d png
1446.0,2348,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,only add non empty paths suggest current bib folder when no defaults are set
1779.0,2349,1,0,0,1,0,1,1,0,0,1,0,1,1,1,0,integrity checker improvements follow up for linking to bibentries inside the integrity checker should be done via a reference to the entry not the key focus by id rather than bibtexkey also the field bibtexkey can now be focused i changed the internal list from unmodifiable and returned another unmodifiable list this needs some close examination in my opinion as im not sure if i introduced any side effects please also test the feature if it is still working as expected
2012.0,2358,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,use bibtexformat for month field in medlinefetcher checks if the month field is present in the case its present the month field is set to bibtex format using monthutil
1681.0,2361,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,fix a few group related issues this pr and since i didnt understood the groups code i also refactored it main changes split keywordgroup class into wordkeywordgroup which splits field content into words and then matches them and regexkeywordgroup that uses a regular expression for this job extract serialization of groups to groupserializer previously every group decided about its own serialization via the tostring method move a few things from model and logic to gui since they mostly contained ui related stuff eg groupdesrciptions change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1873.0,2361,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,fix a few group related issues this pr and since i didnt understood the groups code i also refactored it main changes split keywordgroup class into wordkeywordgroup which splits field content into words and then matches them and regexkeywordgroup that uses a regular expression for this job extract serialization of groups to groupserializer previously every group decided about its own serialization via the tostring method move a few things from model and logic to gui since they mostly contained ui related stuff eg groupdesrciptions change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2334.0,2361,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,fix a few group related issues this pr and since i didnt understood the groups code i also refactored it main changes split keywordgroup class into wordkeywordgroup which splits field content into words and then matches them and regexkeywordgroup that uses a regular expression for this job extract serialization of groups to groupserializer previously every group decided about its own serialization via the tostring method move a few things from model and logic to gui since they mostly contained ui related stuff eg groupdesrciptions change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2209.0,2364,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,be more friendly when using journal alias field id like to copy bibtex entries to biblatex databases and vice versa when using required fields only this works perfectly when in biblatex mode jabref does not display the value of journal in the required fields because jabref demands the field journaltitle this is not only confusing for me but also for other users i know that a clean solution is this however wont happen this yeari also know that a bibtex to biblatex converter and biblatex to bibtex converter is another solution this however forces users to run these when copying and pasting between databases this could be solved by running these converters silently when copying and pasting when jabref is used in parallel to other software such as notepad this does not help i cannot force everyone to use jabref thus simply supporting journal in jabref is the solution for me the biblatex manual states journal field literal an alias for journaltitle provided for bibtex compatibility see § thus it is not deprecated but an alias and should imho be considered as full alternative for journaltitle i am aware that this patch makes it hard for users using full biblatex with journaltitle instead of journal i am assuming that not much users are aware of the different modes of jabref and that they switch back and forth for the same file or for the bibentries we now show both journaltitle and journal if these fields exists in as required fieldsthis whole discussion somehow refs minor improvement enhanced integrity checks testing for biblatex only fields to be aware of more fields eg location all fetchers return now bibtex before arxiv and msbib created biblatex screenshot current jabref grabbed_ screenshot updated jabref grabbed_ checklist change in changelogmd described manually tested changed features in running jabref n a helpjabreforg n a if you changed the localization did you run gradle ate
521.0,2364,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,be more friendly when using journal alias field id like to copy bibtex entries to biblatex databases and vice versa when using required fields only this works perfectly when in biblatex mode jabref does not display the value of journal in the required fields because jabref demands the field journaltitle this is not only confusing for me but also for other users i know that a clean solution is this however wont happen this yeari also know that a bibtex to biblatex converter and biblatex to bibtex converter is another solution this however forces users to run these when copying and pasting between databases this could be solved by running these converters silently when copying and pasting when jabref is used in parallel to other software such as notepad this does not help i cannot force everyone to use jabref thus simply supporting journal in jabref is the solution for me the biblatex manual states journal field literal an alias for journaltitle provided for bibtex compatibility see § thus it is not deprecated but an alias and should imho be considered as full alternative for journaltitle i am aware that this patch makes it hard for users using full biblatex with journaltitle instead of journal i am assuming that not much users are aware of the different modes of jabref and that they switch back and forth for the same file or for the bibentries we now show both journaltitle and journal if these fields exists in as required fieldsthis whole discussion somehow refs minor improvement enhanced integrity checks testing for biblatex only fields to be aware of more fields eg location all fetchers return now bibtex before arxiv and msbib created biblatex screenshot current jabref grabbed_ screenshot updated jabref grabbed_ checklist change in changelogmd described manually tested changed features in running jabref n a helpjabreforg n a if you changed the localization did you run gradle ate
1721.0,2368,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,never manually set id of a bibentry the internal id of a bibentry should never be set manually closes done removed constructors that allow setting the id of an entry __every__ bibentry now gets an id on creation a clone of a bibentry __always gets a unique id__ now only option to change id of an entry is now via setid pending is idgenerator really global and consistent between calls now can we import bibentries without an open database see c importers used a static id value before not sure if this change has any side effects setid may still be replaced for some occurences maybe we can even remove this execpt for a few test cases or so
2370.0,2372,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,relevance and read status field actions were switched
2011.0,2375,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,preserve sign inside bibtex fields via cleanup you can now use latexcleanup inside quality cleanups to escape to \
938.0,2388,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,rename xmp data to xmp metadata i worked with the import inspection dialog which offers to offer entry creation based on xmp meta data refs the dialog renders as follows grabbed_ issue is that is uses both xmp data and xmp metadata for the same thing i wanted to rename xmp metadata to xmp data but xmp metadata appears in jabref much more often thus i decided to keep xmp metadata and just adapt two other strings to that writingnew rendering grabbed_ maybe we should use xmp metadata without dash or even xmp meta data
2390.0,2396,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,introduce explicit list of all_biblatex_only_fields this the last implementation used entryconverterfield_aliases_ltx_to_tex this implementation is based on bibtexentrytypes and biblatexentrytypes issue jabrefpreferencescustom_tab_name_num_ should be used to really determine the fields to check this however is really a huge architectural reworkit has to be checked in following seldom situation field x is defined in jabrefs biblatexentrytypes field x is added by the user to a general tabjabref now complains that x is biblatex only further changes isbn and isbn are now bibtex fields too reason even though both are not listed in wikipedia and the lncs style ftp ftpspringerde pub tex latex llncs latex e splncs bst i see them so hard tied to a book and article that i would add it in the case of a doi jabref more or less enforces it by offering that field in the general tab moreover it is part of plainnatbst and natbib is a popular package fieldnamecomment instead of fieldnamecomments affects oaiimporter only preferences use fieldname constants at setlanguagedependentdefaultvalues change in changelogmd described n a manually tested changed features in running jabref n a helpjabreforg n a if you changed the localization did you run gradle ate
2394.0,2400,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,groups matching with brackets in name change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2403.0,2405,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,datepicker fix fix for and as i was just touching this stuff again i replaced our custom easydateformat class with a standard datetimeformatter change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
240.0,2410,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,change in changelogmd described manually tested changed features in running jabref if you changed the localization did you run gradle ate
2385.0,2415,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix several file cleanup rename issues separated move rename cleanup logicmove rename files in general tab file now use internally the cleanup operations logicseparated gui context menu operations for move cleanuprename files no longer moves files it only renames themfiles are not overwritten if they exist or have the same name todo apply new targetfiledir in test todo adapt test finally todo rework gui action code fix for and includes fix for and jabrefgeneralfilefield describe the changes you have made here change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2454.0,2415,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix several file cleanup rename issues separated move rename cleanup logicmove rename files in general tab file now use internally the cleanup operations logicseparated gui context menu operations for move cleanuprename files no longer moves files it only renames themfiles are not overwritten if they exist or have the same name todo apply new targetfiledir in test todo adapt test finally todo rework gui action code fix for and includes fix for and jabrefgeneralfilefield describe the changes you have made here change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2526.0,2415,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix several file cleanup rename issues separated move rename cleanup logicmove rename files in general tab file now use internally the cleanup operations logicseparated gui context menu operations for move cleanuprename files no longer moves files it only renames themfiles are not overwritten if they exist or have the same name todo apply new targetfiledir in test todo adapt test finally todo rework gui action code fix for and includes fix for and jabrefgeneralfilefield describe the changes you have made here change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2319.0,2416,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,fix collapse sub tree functionality for groups tree fix of function collapse subtree is working again change in changelogmd described ui only manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2417.0,2424,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,by removing the url when creating an entry by doi change in changelogmd described
2417.0,2425,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,doi no longer contains url counterproposal to 😈 change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2427.0,2428,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,arxiv fetcher works with prefix change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2458.0,2459,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix conversion of tilde n and although i said that i would not work on jabref for the next two weeks here is a pr this stuff is addictive and i need help author name formatting in the main table is handled different from the formatting of the remaining columns and we simply forgot to perform the unicode conversion also for the author column change in changelogmd described manually tested changed features in running jabref
2458.0,2464,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,fix conversion of n and \{n} from latex to unicode this is a follow up for fixing the combinations \n and \\{n} are converted from latex to different symbols in unicodethis was really hard to track down it was not a problem in our conversion maps but in latextounicode the ultimate reason is that this code is just an utter mess of hacks and i could only fix this by adding another ugly map on top of this heapwe have already identified this class to cause performance issues and as you can see here it is very difficult to maintain we should consider removing the functionality and rewriting it from scratch or preferably replace it with an external library after all converting a latex string to unicode seems sufficiently well defined that there is some library for this out there change in changelogmd described manually tested changed features in running jabref
2472.0,2473,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,remove html code from acm fetcher remove html code from acm fetcher change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2486.0,2487,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,make sure that unregistered event sources do not stop jabref from shu… …tting down unregistering event sources that have not been registered before should not stop jabref from shutting down orderly this pr logs such a problem instead of halting the shutdown of the program change in changelogmd described manually tested changed features in running jabref
2481.0,2490,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,classcastexception because of wrong cast will merge as soon as build passes change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2251.0,2496,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,change key binding for cleanup from f to alt f this solution is the quick solution by changing the shortcut the alternative is to change the actiontable etcl change in changelogmd described no n a manually tested changed features in running jabref n a helpjabreforg n a if you changed the localization did you run gradle ate
2498.0,2499,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,display latex free version of field content in entry preview panel the pr implements a new method in bibentry getresolvedfieldoraliaslatexfree that builds upon our existing latexfree methods and extends this functionality to resolved fields this method can be reused in the ui parts of jabref that should rather display a unicode version of a field than a latex version such as the entry preview change in changelogmd described manually tested changed features in running jabref
2500.0,2507,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,fix apostrophe conversion this repairs the apostrophe handling in the latex to unicode conversion broken by and maintains the special handling of apostrophes in conjunction with the character n that intended to fix it increases complexity and reduces performance in the unicode conversion a tiny bit through the additional checks that are now in there ultimately the goal should be to replace the conversion with an external library change in changelogmd described manually tested changed features in running jabref
2506.0,2510,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,fix journal title in ris importer fix for the problem was that the t field was used for the journal title if it comes first now t is only used for the journal title if the field jo does not appear ive also added the file from science direct as test case
2451.0,2519,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,fix repeated escaping of sign extracted regexe in patternsfix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2451.0,2521,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix sign cleanup fix previous stackoverflow errror with large inputfollow up from
2522.0,2527,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix error when path is no valid directory fixes the exception folder parameter must be a valid folderinternal fix onlywhen no working directory is set and last used path was an actual file file dialog could not be opened
2431.0,2531,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,check more results returned by crossref api for matching changes we will now check results instead of just the first one for a matching title
2063.0,2532,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,switch to latex unicode motivation is discussed in fixes many conversion problems such as those discussed in and change in changelogmd described manually tested changed features in running jabref
207.0,2532,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,switch to latex unicode motivation is discussed in fixes many conversion problems such as those discussed in and change in changelogmd described manually tested changed features in running jabref
2465.0,2532,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,switch to latex unicode motivation is discussed in fixes many conversion problems such as those discussed in and change in changelogmd described manually tested changed features in running jabref
209.0,2550,1,0,0,1,1,1,1,1,0,1,0,1,1,0,0,bib database library
2546.0,2554,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,replaced lrumap with a guava cache this is intended as a fix for note that the guava caches would allow for automated reloading of the entries but this is not undertaken in this implementation instead everything should work as before with the lrumap change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1179.0,2558,1,0,0,0,0,1,0,0,0,1,0,1,0,0,1,move whole codebase to package orgjabref implements change in changelogmd described not relevant existing tests are still passing manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2580.0,2583,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,keyword special field synchronization synch should now work appropriatelyfew questions here koppor and all others if keyword sync is enabled there is the possibility that we have multiple rank rank keywordsonly the first one is synched with the special field was this always like this seems like a bug to me if we change the preferences from write special fields to file to keyword synchronization the data gets lost did i introduce this or was this a bug
2571.0,2586,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,and another unhandled exception fix two unhandled exceptions stringindexoutofboundsexception reported in the forum easy fix by illegalargumentexception reason was that the writing code threw a illegalargumentexception when the field content contains unbalanced braces ie title {some text containing { } however illegalargumentexception is a runtime exception and so it was easy to miss that one should catch this exception properly fixed by introducing the checked exception invalidfieldvalueexception in the longer term we should probably replace this check completely by the integrity checkerrest is a bit of automatic code reformat that my intellij now performs for some reason on every commit change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1904.0,2588,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,implement filter groups add textbox add the bottom of the groups panel which allows for filtering the groups by name implements snipimage change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2596.0,2601,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,remove ordinalstosuperscriptformatter from recommended biblatex save actions the latextounicode is conflicting with the ordinalstosuperscriptformatter but both are recommended for the same fields for biblatex this pr removes the latter since biblatex is usually used together with utf and unicode conversion should be sufficient
2589.0,2610,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,fix title related key patterns in bibtexkeypatternutil related to and the class bibtexkeypatternutil ive added cases for title and camel to try and make them conform to the documentation was also working on this issue here i found out that caseformatlower_camelto caseformatupper_camel entrygetfield fieldnametitle orelse replaceall \\s didnt work because to be able to transform the title into upper_camel this way the title has to be in lower_camel case initially which is often not the caseive added some test cases and changed a few others to conform to the documentation i still need to take a look at the failing tests change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2604.0,2610,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,fix title related key patterns in bibtexkeypatternutil related to and the class bibtexkeypatternutil ive added cases for title and camel to try and make them conform to the documentation was also working on this issue here i found out that caseformatlower_camelto caseformatupper_camel entrygetfield fieldnametitle orelse replaceall \\s didnt work because to be able to transform the title into upper_camel this way the title has to be in lower_camel case initially which is often not the caseive added some test cases and changed a few others to conform to the documentation i still need to take a look at the failing tests change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2600.0,2611,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,fix exception when parsing groups which contain a top level group fixes the import of the problem occurred when after the definition of a subgroup of level a group definition with level followed explicitgroup \ \ explicitgroup \ \ explicitgroup \ \ change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2501.0,2614,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,cleanup window has a scrollbar now fix for issue change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2613.0,2623,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix provided a macos specific routine for opening tex editors to import citations to the solution has been tested with texstudio and texmaker change in changelogmd described manually tested changed features in running jabref
2572.0,2625,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,change dialog of download fulltext to save dialog fix for when running get fulltext the dialog is now a save dialog which enables to select a different folder or even a different filename the initial filename which jabref assigns is now also visible in the file dialog change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate savefile https cloudentcom assets cd e ed d c png https cloudgithubusercontentcom assets ed a e e a be bd eaapng
1173.0,2634,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,finally write the new group properties to the bib file icon with color description expanded status and automatic groups serialize and parse icon with customizable color that is shown in the groups panel implements a feature request in the forum description text that is shown on mouse hover implements old feature requests and automatic groups that automatically create subgroups based on a certain criteria eg a subgroup for every author or keyword implements and expansion status implementing these changes i had to introduce a new staticgroup label in the bib file that replaces the old explicitgroup the problem was that the old group with legacy bib references explicitgroup staticgroup\ \ \ \ \ otherwise couldnt be distinguished from a new explicit group with icon and color staticgroup staticgroup\ \expansion\icon\color\description\ i think we really should switch to at some point change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1428.0,2634,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,finally write the new group properties to the bib file icon with color description expanded status and automatic groups serialize and parse icon with customizable color that is shown in the groups panel implements a feature request in the forum description text that is shown on mouse hover implements old feature requests and automatic groups that automatically create subgroups based on a certain criteria eg a subgroup for every author or keyword implements and expansion status implementing these changes i had to introduce a new staticgroup label in the bib file that replaces the old explicitgroup the problem was that the old group with legacy bib references explicitgroup staticgroup\ \ \ \ \ otherwise couldnt be distinguished from a new explicit group with icon and color staticgroup staticgroup\ \expansion\icon\color\description\ i think we really should switch to at some point change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
210.0,2639,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,add option to copy title of bibentries implements issue from koppor an option to copy the title of a bibtex entry when right clicking one or more to the clipboardalso adds the option to copy the title using edit copy title edit_menu change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2573.0,2641,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,improve issue reporting a bit see i also wanted to add the log details to the report without the necessity to paste them later on dunno why this was implemented this way initially see however the explorer will cut off the arguments at some point so this did not work for mei think it is not convenient if the user needs to add this info manuallymaybe someone else has an idea how to change thisi still think the current addition for now https cloudentcom assets d b f e ea a c png image https cloudgithubusercontentcom assets e d f e c f ef dcf a png
2484.0,2644,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,refactor oo connection also trying to simplify oo detection logic removed cancel option in auto detection logic removed some of the preferences variables for oo directories and try to keep only the root directory and search for the necessary files inside this directory added two file finder helper methods inside fileutil lots of variable method and class renamings used javanio were possible some graphical ui improvementstested on windows with libreoffice and multiple installations windows open office will only work with bit jre javalangunsatisfiedlinkerror c \program files x \openoffice \program\jpipedll cant load ia bit dll on a amd bit platform linux libreoffice unoiljar is missing however it would even work without that jar not sure whats the problem here and why it is gone two other jars java_uno and unoloader are there looks like we can maybe include the uno libraries from gradle rather than loading them from the classpath of the installation maybe a license problem koppor for ubuntu you need to install the additional package linux open office osx openoffice osx libreoffice
2455.0,2645,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,add crossref as fetcher for everything id entry search based amounted to an almost rewrite of the existing crossref fetcher then adding the new functionality was done in lines 😄 besides this change i have done a few refactorings related to fetchers and the doi more fetcher things in logic entryfetchers webfetchers and moved the identifier classes from logic to model this pr also contains commits from my previous prsince well i will never learn it change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2483.0,2659,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,oo formatting openoffice text formatting now handles nested tags properly it was a set so nested tags were not kept and consequently the first closing tag removes both opening tags formerly some test text i i now i ii i
2660.0,2661,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,add possibility to clear the log at runtime tobiasdiez the dialog is not modal but does not update itself when new events arrive ie needs to be closed and opened again to see new events is this expected can we fix this
2599.0,2666,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,add sorting of all groups and subgroups recursively implements some features from recursively sort all groups or selected groups replaced screenshot the sorting is not always directly correct visible after sorting this is somehow an update problem of the gui i think when you switch db back and forth its correctly there change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2667.0,2681,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,and fix swing errors are catched properly and without freezing hopefully fixes that the error console is not updated properly as well as that swing errors lead to frezzing at least for me it works now without problems stefan kolb lynyus can you please also check itfor the error console i took the suggestion by matthiasgeiger the freezing after a swing message occurred since ̀ loggerwarn no localized message exception message defined falling back to getmessage lead to recursive calls actually log j has some logic to prevent deadlocks but these dont take effect since the original message is thrown in the swing thread while the above no localized messsage is posted in the javafx thread i simply changed it to log level debug which effectively hides it in most cases as a positive side effect the scroll issue mentioned in is also fixed change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2680.0,2681,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,and fix swing errors are catched properly and without freezing hopefully fixes that the error console is not updated properly as well as that swing errors lead to frezzing at least for me it works now without problems stefan kolb lynyus can you please also check itfor the error console i took the suggestion by matthiasgeiger the freezing after a swing message occurred since ̀ loggerwarn no localized message exception message defined falling back to getmessage lead to recursive calls actually log j has some logic to prevent deadlocks but these dont take effect since the original message is thrown in the swing thread while the above no localized messsage is posted in the javafx thread i simply changed it to log level debug which effectively hides it in most cases as a positive side effect the scroll issue mentioned in is also fixed change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2676.0,2684,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,fileannotationtab now only shows the filename not the full path
1497.0,2688,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,export single corporate author to ms office xml if the author in jabref is enclosed in curly braces eg {jabref developers} it is now recognized as corporate author and exported in the corresponding fieldthis should also work for editor and other ms office author fields refs change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
628.0,2703,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,implement hierarchical keywords the automatic keywords group now supports hierarchical keywords the changes mainly concentrate on the keywords classso this may have some unwanted side effects in other parts but i didnt noticed anything unusual in my tests note bib files containing an automatic keyword from prior tests can no longer be opened and the lines containing automatickeywordgroup have to be deleted change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2664.0,2711,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,avoid conversion of single underscores single underscores that are not followed by { are not converted to unicode during the latex to unicode conversion this is not actually correct according to the rules of latex but seems to be an important exception required by our usersthis is achieved by the following replace all single underscores with jabrefunderscore do the unicode conversion replace jabrefunderscore with an underscoretodo we should find a better magic word instead of jabrefunderscore because every character will be processed by latex unicode and that costs performance however it should still be long and unique enough so that we avoid accidental conversions suggestions anyone change in changelogmd described manually tested changed features in running jabref
2617.0,2719,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,extend architecture tests to javafx and javafxcollections extends the architecture tests to also cover javafx and javafxcollections as discussed in it seems that it is high time for this since javafx classes are already being misused as this pr uncovers thus this currently fails the build the misuses are orgjabreflogicexportergroupserializer groupserializertest groupsparsertest uses javafxscenepaintcolor orgjabreflogicjournalsabbreviation uses javafxbeanspropertysimplestringproperty test orgjabreflogicl nlocalizationparser uses fxmlloader platformimplalthough we might think about making exceptions for the beans and tests i dont see why the color class should be directly accessed in the gui change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2722.0,2727,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fixed freeze on mac os x when creating editing groups fixed that jabref for mac os x was freezing not responding when using the add subgroup or edit group feature also fixed some menu items which had the wrong functionality refs manually tested changed features in running jabref
2701.0,2732,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,fix too may files found i would like to offer my fix for the issue jabref would find too many files when they are search with the year _ auth pattern the reason seems to be a null database passed to the bibtexkeypatternutilmakelabel bibentry string character bibdatabase method and a null pointer exception is triggered as a result the auth part of the pattern was erased and ignored with the suggested fix jabref uses the auth part of the pattern and finds just the files with the matching author as expected a relevant unit test was added no other tests were broken change in changelogmd described no functionality changes restored the previous state unit test added no gui changes none helpjabreforg the issue still open if you changed the localization did you run gradle ate no localisation changes
2739.0,2744,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,null pointer exception on get fulltext fixing issue a check in the bibdatabasecontextgetfiledirectories string filedirectorypreferences method is added bibdatabasecontextjava to make sure that dbpathgetparent is not null before its toabsolutepath method is called this fixes null pointer exception when searching files for databases opened without explicit path as in the cli jabref bibliographybib commandasserts were added to make sure that dbpathgetparent and other variables are not null before invoking methods change in changelogmd described internal bug fix no functionality added changelog not changed test added to cover new code regression tests added to make sure old functionality works as before no ui changes manually tested on the linuxmint installation from the build distributions jabref devtar file helpjabreforg help pages need not be changed if you changed the localization did you run gradle ate no localisation changes
2095.0,2747,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,replace datenbank by bibliothek this addresses for german
2739.0,2751,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,sauliusg fix null pointer exception on get fulltext followup from sauliusg pr fix for
2766.0,2774,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,if file is not found annotations might be null still the real reason is a missing file
2777.0,2778,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fixes handling of unknown pdannotation types refs
2806.0,2816,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,date editor also accepts incomplete dates should fix and change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2825.0,2826,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,fix invalid folder when passed file path is empty string return the correct working dirfix for internal beta change only change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2786.0,2845,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,implement allow selection of multiple groups this pr re implements the ability to select multiple groups users can switch between or and and selection mode in the preferences as this was the last remaining feature not implemented in the new groups interface finally most of the swing code could be removed change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2859.0,2862,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,fix export and import of ms office day year month acessed fields fix possible npe in date parsing change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2785.0,2864,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,implement resort groups using drag & drop with this pr it is now possible to resort groups using drag and dropwhen the user drags a group over the center of another one then the target group is highlighted as follows the source group is added as a child in contrast when the user hovers over the bottom or top part of a group then a line is added that indicates that the source group is added at this point ie between test and test in this picture image are still some problems with the selection status after a drag and drop change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2843.0,2875,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix entry editor and this was a tricky bug javafx creates empty dummy cells at the end of a list view for some reason the list view for the linked files had an initial size of e and well creating that many dummy cells takes a while probably longer than the universe took to create humans and eventually lead to a freeze of the javafx threadthe fix was easy just add maxheight and be happy finally after trying to debug the problem for ages change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2851.0,2875,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix entry editor and this was a tricky bug javafx creates empty dummy cells at the end of a list view for some reason the list view for the linked files had an initial size of e and well creating that many dummy cells takes a while probably longer than the universe took to create humans and eventually lead to a freeze of the javafx threadthe fix was easy just add maxheight and be happy finally after trying to debug the problem for ages change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2881.0,2882,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,fix loading of preferencesservice the else part tried to instantiate the interface otherwisefix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2890.0,2891,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,adjust tests ads fetcher returns url dblp no longer works with negative operators internal change only some adjusted tests
2854.0,2921,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,readd context menu to linked files editor this was the last feature missing from the old file list editor the old class could thus be deleted change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2901.0,2923,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix key combination related exceptions use keycombination match methodmanual tests sucessful some unit tests fail for unknown reasons change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2931.0,2935,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,open urls for recommneded articles in the browser added a generic hyperlinklistener which opens any hyperlink in a new browser windowby defeault javafx opens all urls in the same webview window change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2855.0,2937,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix propagation of key events back to the jabref main frame related to the new entry editorwe need to consume the key events on the jfx panel to stop propagation back to the main framefix for and the other lkeybindings ctrl c ctr x change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2938.0,2939,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,ask before deleting associated files from disk in entry add new dialog describe the changes you have made here change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1323.0,2943,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,add a shortcut to quality look up full text documents this pr adds a shortcut key alt f to the function quality look up full text documents ive found that a issue was already raised in after finishing the code revision hence i happened to use the modifier alt rather than ctrl change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
549.0,2952,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix the function edit copy bibtex key and link this pr fixes the function edit copy bibtex key and link to pass a hyperlink rather than an html statement a copied hyperlink is more useful than an html statement in practice like when writing emails this is related with change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2949.0,2957,1,0,0,0,0,1,1,0,0,1,1,1,1,0,1,fix closing entry editor with esc rename escape to esc for javafxrenamed enum variables as key for the constant was amibiuousfirst part of internal change only from the new entry editoredit you may need to reset the keybinding for close_entry_editor in the manage keybinding dialog as the old stored value from the prefs no longer works for javafx change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2968.0,2972,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,add remove link context menu entry in file editor fix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2960.0,2991,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,check for different editions in the duplicate check by checking for different editions before the actual duplicate checkif both bibentries have a edition field that mismatches it cannot be a duplicate change in changelogmd described
2993.0,2995,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,less backups addresses the frequent events are due to the bidirectional binding which transfers every change directly into the bibentry if we want fewer events the only solution will probably be to break the binding which would be very disappointing for the javafx implementation in my point of view the problem is not on the side of event creation after all every change should trigger an event and javafx triggers many changes imho this should be fixed in how we react to eventsi also noticed the exception but do not get a dialog this seems to happen because of the save operation invoked by the backupa solution might be to do less backups by doing backups only every x events and not for every event ignoring fieldchangeevents in the backup adding the size of the field change in the fieldchangeevent class so that you can ignore it if only character changedthis pr combines options and ie the backup manager ignores events that are very minor and only does a backup if enough of them have happened currently set to five what do you think change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2787.0,2997,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,changes in the entry editor mark the database as dirty partial fix to changes in the entry editor now mark the database as dirty this are somewhat proactive even only opening the entry editor will mark the database as changed id say this isnt a problem id rather have it do the marking than forget oneessentially this adds another listener to the properties in the entry editor that propagates the change whenever the property changes i havent figured out how to do this for groups change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2998.0,3002,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,improve auto completion change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2970.0,3005,1,0,0,0,0,1,1,1,0,1,1,1,1,0,1,javafx replacement for file dialog the open functionality has been removed directly possible in the entry editorcontextmenu on maintable attach file now opens a file chooser dialog and afterwards this dialog for editing eg adding a description resizable to max screen size on my with x grafik describe the changes you have made here change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2980.0,3007,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,add preference migration for keybdingings fix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2888.0,3019,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,update source tab when an entry is changed attempts to fix the remaining part of the source tab is now updated each time an entry is changed in the editorthere no part of a bibentry that represents the source tab per se to which we could bind therefore this pr adds a listener to the source tab it now listens to entrychangedevents and if the entry that it represents is changed then it updates its content change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3020.0,3024,1,0,1,1,0,1,1,0,0,1,1,1,1,0,0,link missing docbookeditors formatter in layoutentry it seems that we overlooked the createdocbookeditors layout formatter in the formatter map in layoutentry reported in change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2853.0,3030,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,fix keybinding in entry editor in localized installation check keycode to avoid localization problemsfollow up from change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3035.0,3048,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,fix ads fetcher fix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3034.0,3083,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,make font size in entry editor and group panel customizable this fix for is inspired and based on due to my limited git knowledge i was not able to directly hijack the other pr sorry lenhard change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3074.0,3092,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fetcher timestamp
3052.0,3095,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,fix for issue this is an atempt to fix the problem with entry editor focus as described in in detail when entryeditor opens up it is not focused automatically the desired behavior is to focus the first textfield on any of the entryeditor s tabsthe way the fix is implemented when entryeditor is opened the jfxpanel in which is the tabpane of the entryeditor is getting the focus the focus is given implicitly to a focustraversable node contained in the jfxpanel the selection of the node seems to be random even though consistent for a given tree of nodes as far as ive tested it consistently focuses the first textfield on any tab which is the desired behavior i make this pull requested as suggested in discussion by siedlerchr i should mention that i ran gradle check which results in tests failed in my setup but this was also the result when i ran the test before making any change change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3063.0,3097,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,store changes in source tab when new entry is selected the problem was that the source tab only stored changes on focus change and this did not happen when you just select a new entry in the main tablethe pr modifies an attribute in the entryeditor movingtodifferententry and turns it into a booleanproperty so that you can bind to it and react to changesedit also fixes a second unreported issue now the base panel is marked as dirty when you type something in the source tabedit fixes also now the other fields tab is rebuilt whenever an other field is newly added or removed at the bibentry this is achieved with the event system and a new subtype of fieldchangedevent change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3086.0,3097,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,store changes in source tab when new entry is selected the problem was that the source tab only stored changes on focus change and this did not happen when you just select a new entry in the main tablethe pr modifies an attribute in the entryeditor movingtodifferententry and turns it into a booleanproperty so that you can bind to it and react to changesedit also fixes a second unreported issue now the base panel is marked as dirty when you type something in the source tabedit fixes also now the other fields tab is rebuilt whenever an other field is newly added or removed at the bibentry this is achieved with the event system and a new subtype of fieldchangedevent change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3103.0,3104,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,source tab doi by making sure that updates to the source tab are always performed on the fxapplication thread change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3101.0,3105,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,remove entries from prior groups if move operation is selected there is one problem left to conclude this it does the proper operation on the selected entries and updates the group tree however it does not update the coloring in the group tree tobiasdiez could you give me a hint on how i can achieve this change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1903.0,3111,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,trigger group display update when grouping changes attempts to makes the maintable update whenever grouping changes and not just when group selection changes change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3113.0,3116,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,move event processing from source tab into entry editor solves the most critical part of the source tab did not properly unregister itself from the event bus for some reason i did not manage to get this working when the source tab takes care of deregistration therefore i moved all event handling out of the source tab and into the entry editorusing jvisualvm i can see that garbage collection works with this pr cycling through the main table with the entry editor open increases used ram when you force garbage collection the used heap goes down to close to zero again instead of staying at a higher plateau see attached screenshot heap this fixes the memory leak the overall heap size doesnt go down but thats a different issue change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2718.0,3120,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,additional filter functionality for check integrity popup i added new filter all and filter none buttons they can be clicked by the user tocheck uncheck all options in the filter menu when one of the buttons gets clicked the system will iterate through the existing menu components and toggle the checkmarks and info displayedi wasnt sure on the best placement of the buttons in the window so went with the simplest solution localization info with text for aforementioned buttons
3136.0,3137,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,re add normalize to bibtex name format context menu item and menu i… …tem tooltips also re adds tooltips to context menu items which had been commented out change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2941.0,3141,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples this pr sets a minimum size for all textareas in the entryeditor the value of px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only problem is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3117.0,3141,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples this pr sets a minimum size for all textareas in the entryeditor the value of px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only problem is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3130.0,3141,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples this pr sets a minimum size for all textareas in the entryeditor the value of px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only problem is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2539.0,3147,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,export pdf linked files because somehow my new changes did not update the pr correctly describe the changes you have made here change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3100.0,3154,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,add preference to disable validation in the entry editor by default adds a preference option for enabling disabling validation in the entry editor but not the ui the reason is because the validation is simply broken at the moment the preference option is set to false by default and there is no ui to change it so this turns off validation in the entry editor we can add the ui to turn it on later when the display bug in controlsfx has been fixedwhen this is merged the related issues can be removed from the milestone change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3145.0,3154,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,add preference to disable validation in the entry editor by default adds a preference option for enabling disabling validation in the entry editor but not the ui the reason is because the validation is simply broken at the moment the preference option is set to false by default and there is no ui to change it so this turns off validation in the entry editor we can add the ui to turn it on later when the display bug in controlsfx has been fixedwhen this is merged the related issues can be removed from the milestone change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2946.0,3156,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,close entry editor when the shown entry is removed externally fixes the remaining part of when you externally delete an entry that is opened in the entry editor and accept the change in the dialog in jabref then the entry editor closes that way it prevents you from editing an entry that does no longer existas a side note the basepanel is ripe for a refactoring there are a good dozen classes that i could extract in the light of only doing bug fixes before the release ill avoid that now but when weve released this class gets it change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3157.0,3158,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,fix freezing on browse in protected terms dialog when adding from entrry editorchanged open file dialog to save file dialog change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3161.0,3162,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,update protected terms list in context menu when a new list is added the result of the dialog needs to be evaluated after the dialog is actually finished and the update of the context menu needs to be called change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3130.0,3163,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix unparseable fileannotation dates this should be the last aspect for being able to close hviethen should consider using another pdf annotation tool however the fault is of course on our side since we didnt validate the date format before change in changelogmd described manually tested changed features in running jabref
3165.0,3169,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,allow removal of online links from entry dont call pathsget on link to prevent an exception change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3170.0,3171,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,add undo functionality to the source tab the problem here as far as i understand was that the undo didnt happen on the fxapplication threadon top of that i found the the source tab isnt integrated in the undo framework at all so i have added this as well however it doesnt work problem free it seems that the fx codearea consumes undo events as well so when you hit undo in the sourcetab the codearea does the undo and then the undomanager tries to do it again and fails it has no consequence though apart from an exception the undo happens anywaysince this is an improvement add undo to source tab again i would like to merge this even if its not perfect i have zero time to dig deeper into these fx problems and i assume that no one else will do it so we can just merge the current state change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3081.0,3182,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,fix focus and keybinding in search arrow keys left right up and down no work as expected and the up down enter can be used to select an entry from the autocomplete menu change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
316.0,3202,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,followup to issue entry editor now adds missing curly braces on closing change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3190.0,3203,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,when groups are removed also remove them from entries change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3199.0,3204,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,drop latex editor support this removes latexeditor support push to latexeditor in jabref as stated in the last update to latexeditor was made in see and the software can be considered outdatedi removed latexeditor from the applications list in pushtoapplications class i deleted the pushtolatexeditor class since it is now unusedgradlew check was successfuli am new here first pull request and also still fairly new to java so any c&c would be greatly appreciated especially let me know if either the practice of commits or this request is not up to standard cheersbenedit removed latexeditor from preferences and corrected the url link style in changelog
2775.0,3209,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,hyphens in last names are properly parsed i missed jabref so much that i even dared to touch the name parsing algorithm the only real changed consists in the few added lines the rest is only code formatting renaming of variables the added tests come from biblatex change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3208.0,3210,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,add file description to gui and fix sync bug change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3172.0,3211,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,added logic to check whether linked file already exists added a check in linkedfileviewmodelrename to see if a file which isbeing renamed already exists in the target location if such a file isfound then an error popup displays informing the user of the conflictuser will be prompted to choose whether to overwrite or cancelalso see for additional details
3229.0,3233,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,implemented issue added an error dialog if the file is open in another process and cannot be renamed this is my first contribution please give me feedback if you see any problems
3230.0,3241,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,update link to renamed file this patch fixes the issue described in the link to the renamed file is successfully updated now change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3143.0,3243,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,fix for issue import entry from clipboard in different formats see use all importers to parse pasted entries this allows the user to paste entries in different formats and not ony bibtex change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2811.0,3248,1,0,0,1,0,1,1,1,0,1,1,1,1,0,1,fix for issue bibtexkey generator does not use crossref information see the bibtex key generator now uses crossreferenced entries if required fields are empty change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2955.0,3272,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,open statistics dialog from correct thread the dialog to ask for collecting anonymous statistics needs to be created inthe swing edt do so using swingutilitiesinvokelater this is a follow up on ef b a and should finally no addition to changelogmd as ef b a already included a corresponding entry change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3263.0,3287,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,change oo paths to libre office in preferences hopefully enough to change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3280.0,3288,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,empty string instead of n a in file annotations jabref developers any votes against this lynyus
3264.0,3303,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,open unix filenames with spaces we need to check if we need to escape the other unix paths too
3307.0,3308,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,add \textendash to the html conversion table by adding \textendash to the html conversion table change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3275.0,3318,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix npe in maintable as observed by stefan kolb in the npe resulted from the strange matches null code this is fixed now not sure if this actually fixes the problem of change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3292.0,3325,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,annotations are now automatically refreshed this pr aims to by removing the refresh button completely and monitoring the pdf files automatically for changes in the progress of the implementation a few refactorings were made extract the file monitoring functionality from fileupdatemonitor to a new class and convert the timestamp based method to the new nio watcher interface extract the conflict handling code by external bib file changes from the base panel to a new class databasechangemonitor where also some of the old code from fileupdatemonitor now finds a new home this class is still a bit ugly but in my opinion better than before i hope that the conflict handling still works as expected i tested it but might have missed some special cases configurations change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3342.0,3343,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,fix npe when calling with bib file as cmd argument follow up issue from use toabsolutepath before calling of getparent change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2802.0,3351,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,use cite_comment not only for external latex editors but also for cop… …y to clipboard hacktoberfest
3311.0,3364,1,1,0,1,0,0,1,0,0,1,0,1,1,0,0,replace linkedfiles backslashes with forward slashes ensures cross platform compatibility tested this under windows and it works fine change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3346.0,3368,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,rework autosetfilelinks change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3376.0,3378,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,treat crossref titles as optional change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3358.0,3388,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,added checking integrity dialog this change is related to jabref looked like it is hanging during long integrity checks i added a dialog with a progress bar to show that it is working checkingintegrity change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3347.0,3401,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix npe when saving new file no changelog entry since bug was introduced after release of change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3311.0,3403,1,0,0,1,0,0,0,0,0,1,0,1,1,0,0,replace linkedfiles backslashes with forward slashes follow up from damn case sensitivy change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3389.0,3404,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,strip invalid prolog when loading citationstyles by skipping invalid parts of the prolog of citation styles change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3046.0,3405,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,no longer allow duplicate fields in customized entry types problems in the entry editor caused by duplicate fields in customized entry types by no longer allowing duplicate fields ie moved from list to set change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3432.0,3438,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,fix removal of special fields when syncing them via keywords fixes a bug where jabref special fields such as printed relevant were not cleared eg removing the printed flag when using synchronization of special fields via the bibtex keywords field change in changelogmd described manually tested changed features in running jabrefsee for more details
3381.0,3443,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,fix for issue because the javafx tooltip used in the globalsearchbar cannot render html tobiasdiez recommended in to create a textflow object in the searchdescriber classes for structuring the text i made the changes to return a textflow and its working fine so far without changing the logic that is used to build the text i moved the searchrulesdescriber package like proposed from the logic package to the gui package the existing tests were moved accordingly but still needs to be rewritten for the new textflow resultsthere are some open questions i would like to ask with no styling of the tooltip the readability was really bad black text on grey background so i changed the styling to look like the other tooltips in the bar hope it was okay to do this in the context of this issue i created a new styleclass for this in the maincss to not change any other styled elements the searchquery class stores a description of the search it is created with the searchdescribers but they are now inside the gui package and return a textflow so there is a javafx dependency in the searchquery class which resides in the logic package at the moment this doesnt sound right to me should the class be moved to the gui package too the groupdialog class uses a searchquery object to get a search description this class is written with swing and is not compatible to the now returned textflow if i understand it right the project is migrating to use javafx so i want to propose that i write a compatibility method in the groupdialog class to create an html string from the given textflow to be compatible while the groupdialog is still using swing sadly the localized strings used in the searchdescribers included the html tag elements so in many cases it is not possible to use existing translations just because the tags are gone im not sure what to do about this it could be possible to remove the tags manually from the translations not sure how long this would takethats how the tooltip looks with the changes screenshot seems to be something wrong with the logic of the tooltip text creation the first few words repeat itself and it already happened prior to my changes see the image in but i didnt had time to look very closely into this should i open a new issue for this problemi hope i didnt forget anything im happy to hear your feedback change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1664.0,3444,1,0,0,0,0,0,1,0,0,1,1,1,1,0,0,implements group based on aux file this pr implements by adding a group that contains all entries referenced in a given aux file so far the code is only a prototype but it already works really well what is missing is that changes in the aux file are automatically recognized and handled this should be easy to accomplish the user interface is very very basic and only contains a text field where the user can specify the path to the aux file in light of the upcoming rewrite of the groups dialog in javafx i dont want to spent to much time at ui stuff i have two questions the implementation so far is against our architecture the new group texgroup is in the model but uses the auxparser from the logic any ideas how to resolve this issue more and more i dont like the strict rule that model is not allowed to access logic how im supposed to create intelligent objects in the model if they are not allowed to use advanced stuff from the logic package the file path right now is stored as an absolute path is this ok if not what should be the base of a relative path the bib file change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2594.0,3454,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,replace swingx with standard swing in order to be able to properly move to java see we need to get rid of all accesses of internal apis unfortunately we also use libraries that make such internal accesses and we need to find a solution for thatone of these libraries is swingx originally by sun it is no longer maintained since quite a while we could not even upgrade to the newest version because of bugs in the library it is time to get rid of this dependency this pr replaces the usage of swingx with regular swing components only the new entries dialog and the side pane are affected for the new entries dialog the change is trivial just using a regular layout manager for the side pane a few changes are needed but i can make it roughly resemble the old layout theres one bigger change though that i happen to like very much the side panes are no longer exclusive you can display them together that means that i can have the web search and the groups panel open at the same time personally i think thats pretty cool and i would like to keep it that way you can of course still disable the side panes independent of each other heres a screenshot sidepane change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3109.0,3459,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix for issue in the comments to issue i already presented my solution approaches for the fileannotationtabs design change this discussion should be continued here there were two situations i have presented a design approach the linked file has no annotations the linked file has annotationsif there are annotations in the linked file two design solution approaches have been discussed either realising it with a list or a table no matter which of these solutions is chosen it would be nice to be able to order the annotations by date author or page so a table might be the clearest solution sorting a list on the other hand side could be realised by implementing a dropdown menu were the user can select what the list should be sorted byi implemented the no annotations approach so that the right side of the fileannotationtab showing the annotations attributes is either disabled if there are no annotations in the linked file or enabled if there are annotations
3435.0,3486,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix threading issues and change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3485.0,3486,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix threading issues and change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3471.0,3497,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,fix npe in search bar in a npe was mentioned im not sure which object was null it should not be the scene since this is just set and the css file should also be always found moreover i could not reproduce the exception so this fix is a shot in the blue change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3500.0,3502,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,update user agent and change acm to https fix acm fetcher change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2533.0,3504,1,0,0,1,0,1,1,1,0,1,0,1,1,0,0,convert entry preview panel to javafx i migrated the entry preview to javafx my hope was to resolve the memory issues but this was sadly not successful thus the issues really come from the citation style cache and not from the display notable differences the default javafx font seems to be bigger in my opinion it looks better that way the description for two options in the right click menu has a display bug the reason is that i use langmenutitle to get the text but menu titles contain the acceleration key binding probably one needs to convert the main toolbar to javafx as well in order to fix this problem change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3359.0,3506,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,automatically remove colon and apostrophe from key pattern colons and apostrophes are now removed from the generated key patterni also refactored the key generator mainly converting the static methods to instance methods change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3493.0,3507,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,add option to remove the link when file is no longer found when pressing the del key and the file can not be found this dialog pops up and you can remove the file from the entry opening x \users\cs\documents\_jabreftemp\bibliographybibopening x \users\cs\documents\_jabreftemp\newbiblatextestbibcould not find file o’keefe feature selection and weighting methods in sentiment analysispdfcould not find file saggion ontology based information extraction for business intelligencepdf change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3491.0,3508,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,implement clicking the pdf icon in the linked files editor opens the file a click on the pdf icon on a linked file in the entry editor opens the file this is consistent with the behavior in the main table and thus i didnt added a new button and or changed the double click behavior as it was suggested in the issue change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3472.0,3509,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,files starting with bibtex key of a similar entry are no longer found by mistake the auto link algorithm just checked if the file starts with the bibtex key this leads to a lot of false positives since einstein apdf is found for the entry einstein although this pdf probably belongs to a second paper by einstein that was published in the same year this is fixed in this prwith the proposed implementation also the pdf file einstein aboutsomethingpdf is no longer found since there is really no possibility in telling the difference to einstein a a second paperpdf thus the user is advised to add some non letter character after the key change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3505.0,3512,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,another try to fix the npe in the search bar fiexes i think i managed to locate the problem of the npe and the missing search bar apparently in some conditions the syntax to access the parent in a path does not work for resources thus the css file is not found resulting in a npe change in changelogmd described bug introduced in dev manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3526.0,3529,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,add null checks in groupchangeviewmodel this avoids the npes in however i cant get the groups side pane to repaint and depict the modified groups tree ive tried different ways via calling the groupssidepane or setting selected groups in the statemanager but no success tobiasdiez how do i force the groupsidepane to display a changed group tree change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2533.0,3533,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fix preview performance this unifies the access to the csl engine the adapter class will hold one instance of it and only recreate it when the style changes this improves the performance of from the second call to the preview drastically and should provide an acceptable speed to in addition i extended the search for citation styles when jabref is run during developmenti will add changelog and friends but for the moment my biggest problem is that the unit tests are broken on master at least for me change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3538.0,3539,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,fix options databinding by adding elements if they are not in the initial map i dunno if this is the best idea but it works change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3476.0,3551,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,make path relative when adding automatically found file change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2852.0,3553,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix group search performance this includes currently changes the input field for the group search is delayed now it waits until the user has finished typing and starts the search afterward this increases the usability and prevents lags during typing the recursivetreeelement caches the current predicate so that branches of the group tree are not tested over and over again this is an ugly solution so far but we need to test if this or something similar but beautiful boosts the performance considerably change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3576.0,3578,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,refactor export code to i refactored the export package so that it now has a similar structure of the importer and a similar code can now be used for imports and exports since the issue didnt occurred for imports this refactoring automatically fixes the problem for the exportnotable changes exportformat is renamed to exporter exportformats is renamed to exportfactory and no longer static fileextensions is renamed to filetype change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3584.0,3588,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,initialize previe before mainpanel to prevent npes on delete no changelod needed as this is a change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3112.0,3591,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,maintable leaves the swing year and comes back in a new javafx dress old are still many many things missing for a fully working version but i thought i give you an early preview feedback welcomehappy new year everybody fixes and fixes known bugs ticked resolved changes to entries dont mark database as changed changes to entries are not reflected in main table cleanup does not work ctrl a in entry editor selects all entries in table not reproducable escape does not close entry editor column width is not correct if the option resize to fit window width is activated select multiple entries by holding mouse button code to fix of features sorting shift click for multi column sort filtering by search and groups context menus for the icons right click menu setting special fields like reading status priority through the main table marked entries are not highlighted drag & drop to and from the table float mode does not work color cells in table depending on whether the field is optional required change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3356.0,3591,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,maintable leaves the swing year and comes back in a new javafx dress old are still many many things missing for a fully working version but i thought i give you an early preview feedback welcomehappy new year everybody fixes and fixes known bugs ticked resolved changes to entries dont mark database as changed changes to entries are not reflected in main table cleanup does not work ctrl a in entry editor selects all entries in table not reproducable escape does not close entry editor column width is not correct if the option resize to fit window width is activated select multiple entries by holding mouse button code to fix of features sorting shift click for multi column sort filtering by search and groups context menus for the icons right click menu setting special fields like reading status priority through the main table marked entries are not highlighted drag & drop to and from the table float mode does not work color cells in table depending on whether the field is optional required change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3532.0,3591,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,maintable leaves the swing year and comes back in a new javafx dress old are still many many things missing for a fully working version but i thought i give you an early preview feedback welcomehappy new year everybody fixes and fixes known bugs ticked resolved changes to entries dont mark database as changed changes to entries are not reflected in main table cleanup does not work ctrl a in entry editor selects all entries in table not reproducable escape does not close entry editor column width is not correct if the option resize to fit window width is activated select multiple entries by holding mouse button code to fix of features sorting shift click for multi column sort filtering by search and groups context menus for the icons right click menu setting special fields like reading status priority through the main table marked entries are not highlighted drag & drop to and from the table float mode does not work color cells in table depending on whether the field is optional required change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3596.0,3597,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,lookup filetypes in enum set to prevent npe due to uninitialized expo… …rterfactory this is my initial idea maybe we can optimize this change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3598.0,3600,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,make it possible to disable autocompletion in the search bar by covering the autocompletion in the search bar with the same preference option as in the entry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3576.0,3606,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,add exporter desc to enum analog to import follow up from jabrefextension change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3605.0,3606,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,add exporter desc to enum analog to import follow up from jabrefextension change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3608.0,3612,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix npe when changing entries between databases not sure if this is the solution for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
1750.0,3632,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,export translator field to msoffice xml upcoming issue from while testing this i noticed that the import was broken due to the recent export filetype extension changes fixed that toodirectly use bookauthors and translator for import from xmladd test change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2607.0,3642,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,extend ris import with multiple fields meeting time is programming time this addresses the import related things described in i basically went through the lists linked by dsifford in the first issue tried to adapt our import if possible and added custom fields when not our importer tests are still running change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3634.0,3642,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,extend ris import with multiple fields meeting time is programming time this addresses the import related things described in i basically went through the lists linked by dsifford in the first issue tried to adapt our import if possible and added custom fields when not our importer tests are still running change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3634.0,3661,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,export no empty lines in ris format this fixes the remaining part of i had a closer look at the export layout logic and wow this is arcane the code is more than years old and almost as bad as the bibtex parser used to bethis pr is based on two decisions i do not want to change the old layouting code if i do i am almost guaranteed to break it in many ways i do not know if the removal of empty lines in exported text is really desirable in all cases maybe users wrote their custom formatters to explicitly include empty lines i cannot tellwe now have one case ris export where empty lines are not desired so i implemented a solution that only changes the behavior of the ris export but leaves all others untouched nonetheless it is very easy single constructor parameter to let other formats use empty line elimination as well the empty line elimination is done using a hardly understandable but fully functional regex change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3645.0,3665,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,migrate importer tests to junit in the course of we realized that our current junit parameterized tests are not executed on the junit travis build this is tracked here i think this is a huge problem because we are missing out on a lot of validation here this pr is a migration of the paramterized ris tests from junit to junit id like to put this forward to discussion so that we can agree on how our parameterized junit tests are to look like when we have agreed we can migrate all tests so please look at the code and write if you are happy with this note that parameters cannot be resolved for lifecycle methods beforeeach in junit hence the structure in the pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3648.0,3670,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,chained modifiers work again the problem was that resultinglabel formatterget format label always used the original input and not the result of the previous modifier change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3679.0,3690,1,0,0,1,0,0,0,0,0,1,1,1,1,0,1,file link deletion dialog improvements this pull request fixes the following issues when a file link in a bibliography entry is deleted by the user a dialog is displayed previously the default first dialog option deleted the linked file from disk the default behaviour has been changed to just removing the file link from the entry this is a fix to issue when clicking the cancel button in the file link deletion dialog the file was being deleted from the list this behaviour has been fixed by changing the return value of the delete method when the cancel button is chosen example screenshot _ x _scrot checklist change in changelogmd described manually tested changed features in running jabref helpjabreforg am unsure whether the remaining checklist items are applicable to this pull requesti would be willing to provide tests for the delete method however the dialogservice member cannot be stubbed in mocked as it is as it is marked final and therefore i cant control the returned chosen option from inside the unit testi would appreciate any pointers and suggestions
3673.0,3691,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix some fx thread issue while investigating i noticed a thread error when changing the entry otherwise i think this could also solve some other issues here change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3344.0,3694,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,differentiate inbooks with different chapters this is my simple solution for issue ive added statement that checks authors titles and chapters of two inbooks what do you thinki have several questions im not sure about using comparesinglefield function for comparing chapters because sometimes they are very similar but different for instance chapter and chapter any idea my is to remove chapter word from strings and then make the comparison should i also add test for incollections what about pages as i noticed they can be a replacement for chapters should i consider them in the code can i add another commits with some cleanup and refactor for the files ive touched i mean adding some finals to make code less error prone etc
3535.0,3708,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,try to change color of magnifier icon i am trying to change the color of the magnifier icon as requested here however the icon refuses a color change it even opts out of the color scheme of jabref since it is black instead of purple despite the fact that the icon is configured as purple in the code tobiasdiez how can i change the color of this icon any change will do really for reasons unknown to me the icon straight out refuses the change change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
364.0,3709,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,group separator escaping
938.0,3710,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,dublin core only supporting dublin core jabref namespace for xmp xmlns bibtex removed some unused methods in gui importer entryfrompdfcreatorjava discussed with koppor and stefan kolb deleted tests for xmputil new ones are in progress change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3613.0,3718,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,add cleanup operation for replacing ligatures i have used the mapping listed here note that german users might be surprised by how this replaces the letter ß change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3323.0,3729,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,improve performance for managing journal abbreviations i was actually surprised to find that no one attacked the issue so far these were really just a few minor changes ultimately the abbreviation class is still flawed because it violates the equals contract and we use it in a set thats why the code might look strange nevertheless it is the fix suggested in the issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3146.0,3751,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,add the menubar to the titlebar in macos titlebar https user imagesentcom bf ba e e d d d dc png
2617.0,3766,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,update architecture tests to catch static imports fixes a part of updates the architecture tests to junit and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3678.0,3767,1,0,0,0,0,0,1,1,0,1,0,0,1,0,0,extend toolbar with more icons and add tool tips i know this is a controversial topic in the maintable beta right now but to get the discussion going a little more and taking inspiration from i took the liberty to extend the toolbar with more buttons herethis is really not meant as a final say it just moves the code in place for some buttons that seem of some value for me they can be removed again resorted and the layout is probably also not perfectheres a screenshot toolbar change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3799.0,3800,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,change open last edited dialgo to javafx halirutan have a look if this works for you because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3796.0,3820,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,pretend that we have every translation for every key change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3818.0,3821,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix copy linked files dialog showing npe when no linked files because github does not support autolinking there ignore the branch name i thought it was a different error the part in the copytask should also be copied to the maintable beta branch the rest is already there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3614.0,3824,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,provides download option in context menu and because github does not support autolinking there inspired by the discussion in i added a download file option in the context menu of a linked file if it is an online link moreover the bug is fixedthis pr was brought to you with the support of coffee from the jabref cup change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3818.0,3824,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,provides download option in context menu and because github does not support autolinking there inspired by the discussion in i added a download file option in the context menu of a linked file if it is an online link moreover the bug is fixedthis pr was brought to you with the support of coffee from the jabref cup change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3818.0,3826,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,show dialog when copy files did not found file follow up from because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3811.0,3865,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,do no longer log invalidfieldvalueexceptions during autosave invalidfieldvalueexceptions are no longer printed into the log when they occur during autosave fields in the entry editor still have the warning sign next to themthe normal save operation ctrl s still triggers a warning dialog saying that the file could not be saved change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3870.0,3871,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,switch colors of search icon for the two search modes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3885.0,3887,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,improvements around external file types because github does not support autolinking there i tried to implement but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after is mergedthus only some relative minor code improvements fixes refactor external file type classes and extract a common externalfiletype interface extract all built in file types to separate enum implementing externalfiletype fix display of external file type editor dialog which is not shown in the current maintable beta version change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3269.0,3904,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,add union intersection toogle to groups menu because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3926.0,3927,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,prevent accidentaly deleting a second file when pressing del key the key listener was triggered twice on pressed released resulting in the selection of the second file because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3929.0,3931,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,correct fetcher messages
674.0,3942,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,add external application selection to preferences wip add external application selection to preferencesthis pull request is in regards to this initial commit adds a button to the settings panel for each external application which allows the user to select an application to make default there is currently a problem with this build where the application will not update the pushtoapplicationbutton i believe the issue has something to do with the interaction between javafx and swing components also i plan on adding keybinding options as well in the future its just taking me a bit of time to familiarize myself with the program between life events let me know what you think so far and on the direction i am taking
393.0,3944,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,replace all ieee urls with ieee tests are broken but they were before needs to be fixed
3269.0,3954,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,add button icon for union intersection in the groups side panel fix display of state for union intersection in preferencesas we currently unfortunately dont have icons for set intersection union set center and set all in the material design font i used the www and the twitter icon to demonstrate the purpose halirutan will then try to integrate the correoct icons in jabref because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3860.0,3965,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fixed url column this url column now shows url or doi correctly and opens on click change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3854.0,3967,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,fix ebookde refs unfortunately not a very clean fix but it is fine againusing the normal inputstream does not return anything probably as it is detected as automated crawlerthe interface with inputstream is just not really fitting here
3966.0,3968,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,fix ieee fetcher by enabling cookie support apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3966.0,3970,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,fixieee followup from my previous prnow document links in the format are supported tooand i also tested the paper linked in the issue from university network that works fine too because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3341.0,3979,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,add text file export for find unlinked files this is to add the feature which allows exporting of the list of files found in find unlinked files to a text filecloses issue im not sure if it is exactly what you are looking for but i thought i would give it a shot hopefully you will be kind though i welcome constructive feedback of course
3239.0,3983,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix ieee preview does not display month on maintable beta branchon month change from combobox on optionalfieldstab month was not appear on ieee stylethe issue get fixed because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3239.0,3984,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix ieee preview does not display month on master branchon month change from combobox on optionalfieldstab month was not appear on ieee style month was not written correctly on sourcetabboth issues get fixed because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3971.0,3988,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,add rfc entry generator id type option because github does not support autolinking there ui image of entry type in dropdown an additional id based entry generator id type has been added in order to fetch more complete bibtex data compared to doi fetches of rfc typefollowing the diva id type classes as template an rfc fetcher class and fetcher test has been addedi added rfc to the id based entry generator list within webfetchers so it is an option in the dialogs dropdowncurrently the rfc fetcher class accepts search requests with or without the rfc prefix is this an okay featureadditionally help in finding the best rfc bibtex api i am using the api referenced in this is my first ever contribution to open source so thanks for your patience 😄 change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3994.0,3996,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,duplicate unmodifiable list for sorting runcommand error nulljavalangunsupportedoperationexception at javautilcollections$unmodifiablelistsort unknown source at orgjabrefguiexporterexporttoclipboardactionrun exporttoclipboardactionjava at sunreflectnativemethodaccessorimplinvoke native method at sunreflectnativemethodaccessorimplinvoke unknown source at sunreflectdelegatingmethodaccessorimplinvoke unknown source at javalangreflectmethodinvoke unknown source at spininvocationevaluate invocationjava at spinoffspinoffevaluator$ run spinoffevaluatorjava at javalangthreadrun unknown source
3986.0,4002,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&f fixes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3995.0,4002,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&f fixes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3973.0,4011,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,reimplement tooltips for file and identifier columns this reimplements tooltips for file url doi and eprint column in the maintable beta change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4013.0,4015,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,fix custom exporter not displayed in file chooser fixed several issues with the custom exporter filename check for layout files was wrong commandline name for custom exports was the filename and not the name opposed to what our help says custom exports could not be added due to our hardcoded enum expanded the enum with mixins describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4014.0,4016,1,0,0,1,0,0,1,0,0,1,1,1,0,0,0,do not trim or remove whitespace from the title based id fetcher because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4018.0,4019,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,fix acm fetcher import of entries removed & sign from id patterntested with a couple of searches works fine because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3419.0,4040,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,convert shareddatabaseconnect dialog to javafx connection works so far no more freezes regarding addtabs in basepanelsomehow the dialog looks odd tobiasdiez any idea what is missing the checkboxes are not visible correct i just see that it looks really odd in he maintable beta branch too eg int he event logedit the conection and the synchronization seems to be working fixes postgressql database connection now supports ssltodo for documentaition create and configure server certs to keystore format i only tested it with postgressql but i see that mysql should also work describe the changes you have made here because github does not support autolinking there todo check conflict merge dialog change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4038.0,4047,1,0,0,1,0,1,1,0,0,1,0,0,1,0,0,a first solution for the cli problem exportfactory is not initialized at this execution pointthe printusage method is used twice the jabrefcli prints the usage if an error occurs during argument parsing and the argumentprocessor prints the usage when help option is chosen i made two solutions for this problem commit some sort of a hack to only get the names of the exporters without altering the processing in the main method commit changed the order of execution in the main method the argument processor needs the export factory i dont know if the processing of the preferences will influence the cli functionality change in changelogmd described manually tested changed features in running jabref
4000.0,4056,1,0,0,0,0,0,1,1,0,1,0,0,1,0,0,extract old bibtex key generation action this is one for the javafx guyswe need a new javafx action here or duplicate parts of the codei already marked the respective code locations with todos we could use the fxdialogservice but there is an additional checkbox for do not ask this question again in the old dialog also i dont know how to properly extract such worker code for javafx otherwise i would have to duplicate the code on all occurences
4041.0,4057,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,to make push to application work again on osx for unknown reasons it seems no longer possible to give the commandas one single string i created a test class and not even simple commandscan be executed im not sure when this changed but giving the commandas a list of arguments works as expected because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3943.0,4058,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,cpu leak see fix java to later version pretty restrictive for the user unfortunately
4098.0,4100,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,migrate review field in entry preview to comment migrate review field in entry preview to commentreplace review with comment in every layout file because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4097.0,4106,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,opens the directory of the currently edited file when opening a new file opens the directory of the currently edited file when opening a new file change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4104.0,4107,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,fix a few things in entry editor because github does not support autolinking there fixes two things reactivate next previous entry shortcuts in entry editor preserve focus of text fields in entry editor when the user switches between entriesplease merge and dont squash change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4115.0,4116,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,dont report journal name as abbreviated when full name abbreviated name because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4120.0,4123,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,fix convert to bibtex moves contents of the file field because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3859.0,4124,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,saves and reloads window state on close and on open saves and reloads window state on close and on openopens by default maximized change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4033.0,4127,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,order of fields in customized entry types is saved correctly because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4134.0,4181,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,no longer freeze when clicking browse in aux import dialog because github does not support autolinking there yet another interaction between swing and javafx threads change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3062.0,4184,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,ctrl f selects search field again because github does not support autolinking there shortcut was simply not registered also remove a bit of legacy code which is no longer needed change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4165.0,4191,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,do not show recommendations per default in v refs lets also discuss what happens to mrdlib in general as far as i know there is something new planned
4201.0,4212,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,make attached files relative to the file directory because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4092.0,4225,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fixed names are not in the standard bibtex format because github does not support autolinking there fixed change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4169.0,4226,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,fix chinese author bibtex key generation we fixed an issue where the default bibtexkeys generation is incorrect for chinese authorsfor example suppose that the author field such as 王 阳 and 张 家发 and 胡 喜军 and 李 保明 the year is and the default bibtexkeys generation is author year the original output is it is obviously incorrect we add some code to address itnow the output is 王 which is specified as user guide well we also add some test code and passed these tests successfully
4202.0,4245,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,fix style issues in about dialog because github does not support autolinking there and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states merge instead of squashing the commits change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3823.0,4246,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,solved file annotation this pull request solved and improved the new line remover removed hyphens and newlines of highlighted texti removed all new lines which dont have preceded or becaues i think or is often used to start a new paragraphtest text test result change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4241.0,4252,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix attach file does not relativize file path attached files were only made relative before if you hit the browse button because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
254.0,4255,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix for issue koppor auto cleanup url because github does not support autolinking there this issue is auto cleanup url links on paste action and add cleanup url menu item to the url fieldmost codes are modified from a previous contributor in the menu item list changed as follows with defalut editor menu change case convert etc i am not sure whether its necessary to add defalut editor menu if not the menu item list would be have run gradlew check but failed but even if i switch to the master branch which is the same as jabref master the build still failed with the same error message like it seems that i did not modify related classes i dont know what went wrong it confuses me a loti am looking forward to your feedback change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3959.0,4258,1,0,0,1,0,1,0,1,1,1,1,1,1,0,1,migrate to junit because github does not support autolinking there migrate some packages imported from junit to junit such as orgjunittest orgjunitjupiterapitest orgjunitexperimentalcategoriescategory orgjunitjupiterapitag and so on at the same time we slightly modify some codes which rely on those packages and doesnt apply to junit but applys to junit for example we change test excepted xxxclass into using assertthrows and lambda category xxxclass into tag “xxx” before into beforeeach and so on change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4192.0,4259,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,remove spin comments comments mentioning spin were removed or replaced with a mention that backgroundtask is now used change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3959.0,4260,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fix for issue migrate all tests to junit because github does not support autolinking there hi im trying to fix the issue and i have some problems here can someone help me some tests dont seem to have a parameter source such as bibtexmlexportertestjava msbibexportformattestfilesjava modsexportformattestfilesjava and so on since i cant get feedback from both travis ci and my ide i couldnt do anything at the moment something about the external libraries for mainarchitecturetestswitharchunitjava testcompile comtngtecharchunit archunit junit isnt enough for migrate this test to junit just a few days ago archunit just supported tests with only junit package but this feature needs a testcompile comtngtecharchunit archunit junit and as far as i know this version has not been released yetfor citekeybasedfilefindertestjava i havent found an extension in junit for the mockitojunitrunnerclass in junit and it seems that their mock official version hasnt been release yet too the database test as i can see those tests have already been migrated partly to junit but the rest of it is the problemive tried to migrate dbmsprocessortestjava but the code is no longer concise after thatfor example image is the old version and image is the new version and that is only part of itthe reason is that i couldnt pass the parameters to the beforeeach method in junit but junit can use those local variable to pass the parameters i think this is where the difference occurred the gui test i just change the category annotation to tag annotation as i have known that those tests are mostly obsolete about cleanupworkertest this test is not hard to migrate from junit to but when i finish and run the tests on my ide two tests failed and the error message is quite weird it seems that the worker doesnt work in junit tests image if there are any errors or something can be improved in other tests that i didnt mention please let me know thanks change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4233.0,4265,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix npe while merging entries because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3861.0,4268,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,convert part of the issue quality cleanup entries because github does not support autolinking there i have done some changes about convert the swing dialogs to javafxits about quality cleanup entriesbut when the component became the node it doesnt work i mean these checkbox wont change its value when i click them change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4148.0,4275,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,changed the behavior of the field formatting dialog i made the loops for formatting all fields in the fieldformattercleanup class test for not being the key_field i originally had this in the cleanupsinglestring method to prevent key_field from being cleaned up reformatted entirely but decided to let the user specifically format that field when the user chooses to format all fields at once however the key_field will be not be reformatted this solves issue https githubcom jabref jabref issues
4233.0,4289,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix npe in merge entries dialog fix fx thread errorconvert file to path because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4072.0,4291,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fix loading and storing of xmp field exclusions koppor i am not that into the xmp stuff are those fields i can add there bibtexfields which i can exclude from the export then it would make sense to have a combobox analogous to the cleanup panel with all fieldsedit decided to add the combobox with all fields because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4296.0,4299,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix freeze on import into current library execute import inspetion dialog in swing thread because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4087.0,4311,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix drag and drop in entry editor comment same issue described consistent with preview panel behavior because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4305.0,4311,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix drag and drop in entry editor comment same issue described consistent with preview panel behavior because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4307.0,4317,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,fix that rename and move file throws file not found exception moreover i refactored a bit how files are renamed moved to the default file directory this should make it easier to reuse the code because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3850.0,4327,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,save sort order column of main table i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit i also fixed an fx threading error when opening a new library the snackbar output was not onfx thread tobiasdiez any idea if i did sth wrong oder have to set the value somewhere else because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4224.0,4327,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,save sort order column of main table i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit i also fixed an fx threading error when opening a new library the snackbar output was not onfx thread tobiasdiez any idea if i did sth wrong oder have to set the value somewhere else because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4329.0,4337,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,fix export of corporate author to msoffice fix testsfix the underlying problem is the same as in however i came up with a workaround for msoffice getting the original field check for corporate author braces start and end get latex free value readd braces for corporate parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4222.0,4338,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,added new keyboard shortcut ctrl e for closing the entry editor enhancement presented here i have added a new keyboard shortcut for closing the entry editor by using ctrl e because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4306.0,4350,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,fix for issue disable rename when filename is the same because github does not support autolinking there potential fix for the method performnameconflictcheck added in linkedfileviewmodel helps check whether or not the filename is already equal to the suggested filename if so it returns true otherwise it returns false this method is then called in linkedfileseditor during createcontextmenuforfile to decide whether or not the rename move or rename and move menu options are to be disabledthe method itself works as i tested it by running the code live with the jvm having the filename suggested filename indeed disabled those three menu options in the context menu the issue however is that im having trouble writing my test case for it im running into a couple of nullpointers being thrown when i try to run my test case checknameconflict in linkedfileviewmodeltest specifically it reports that there are nullpointers when accessing the getsuggestedfilename called in within checknameconflict in the linkedfileviewmodel class change in changelogmd described n a work in progress n a helpjabreforg https githubcom jabref helpjabreforg issues
4288.0,4355,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,auto trim url field because github does not support autolinking there fixes created a formatter to auto trim all kinds of whitespace defined by java change in changelogmd described manually tested changed features in running jabref _no need_ helpjabreforg https githubcom jabref helpjabreforg issues
328.0,4367,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,arxiv fetcher support url in this pr i wanted to fix the issue from i simply used existing code in the same file which just takes the identifier at the end of the url and perform a searchfor example _ to _ _the error dialog does not appear anymore and a new entry is made change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
674.0,4368,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,wip default external application push function because github does not support autolinking there this is a new pull request to replace which address in part it doesnt have keybindings for the applications but it does allow for changing the default application change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4272.0,4369,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fixed testexportasmodsandthenimportasmods because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3838.0,4379,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,change latex command handling only for xml chars refs change in changelogmd described manually tested changed features in running jabreftried to solve this issue in pr this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to
3046.0,4389,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,display deprecated fields in misc entry also in optional fields tab the reason for the original code was to however i couldnt reproduce the issue mentioned there after i removed it the custom entry types dialog effectively prevents you from adding from the same field twice because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4388.0,4389,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,display deprecated fields in misc entry also in optional fields tab the reason for the original code was to however i couldnt reproduce the issue mentioned there after i removed it the custom entry types dialog effectively prevents you from adding from the same field twice because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4272.0,4396,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fixes for all mods exporter tests because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4360.0,4405,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,show dialog before creating entry now when you click new entry in a right toolbar it open an extra dialog where user can select a entry type
4356.0,4408,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,add a preference to add files in entry editor this pr for mainly involves allowing users to choose how they want to link copy rename move files in entry editor through preferences apply same behavior of drag and drop for the whole entry editor instead of a different behavior in file view of the entry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg will log an issue to helpjabreforg if these changes are approved please feel free to suggest any changes thank you https user imagesentcom e d a e a d fb a apng
3537.0,4413,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix group hit counter when adding entries by replacing the eventbus subscription by a javafx listener
1019.0,4415,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,searchable filterable preferences up so far i just created the textbox for searching and fixed a deprecation warningi added paulkra as collaborator on my forklast step so far i was asking myself how i can access the text of the different preferences categories and i was wondering if i need a new interface something like preftabcontents or preftabcontainer for it or extend existing prefstab interface change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4417.0,4418,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix generate bibtex key overwrite warning dialog the problem was that the generatebibtexkeyaction is executed using a taskexecutor and therefore not run on the fx thread unfortunately the exception was swallowed and not reported change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4422.0,4426,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fix arrayindexoutofboundsexception on second pdf import the variable formally known as i is a global variable which had after the first run and therefore threw an exception because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4409.0,4428,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fixed radiobuttons in preference menu previously multiple radiobuttons in preference menu belonging to the same group were selectable simultaneously this issue is now fixed on multiple occasions allowing only one option per group to be selected at the same time issue https githubcom jabref jabref issues
3189.0,4429,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,fix bug when edit group name issue
4438.0,4443,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,add submodule pull to circle ci and fix theme loading css because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3189.0,4470,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,fix group renaming fix group renaming
4467.0,4484,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix save button when you click save and there is no database selected that will act as save as
4113.0,4498,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,improve page checker superseeds the pr and now page ranges like r r are considered to be correct
4365.0,4519,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fixed put html in clipboard i get all tag value and put it in a string
443.0,4531,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix button sizes in issue the sizes of buttons update to current column widths and update to current column order screen shot at pm is still more to fix in this issue the field name is not editablethe value in field name is not identical with table header because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4437.0,4531,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix button sizes in issue the sizes of buttons update to current column widths and update to current column order screen shot at pm is still more to fix in this issue the field name is not editablethe value in field name is not identical with table header because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4437.0,4546,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix for issue some bugs in preference entry table columns im trying to and i think ive got it the column width stuff have been removed and the field name is now editable you need to close and reopen the app for the preference changes to take effectedit it used to be that some files i havent touched were showing errors so i cant build the project to see if my changes actually fixed anything but thats not a problem anymoreorgjabreflogicimporterfileformatendxmlimporterjava has errors because the entire orgjabreflogicimporterfileformatendnote folder is missing and so on change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4544.0,4547,1,1,0,1,0,0,0,0,0,1,0,1,0,0,0,do not extract file ending from urls do not extract file ending from urls
3189.0,4549,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,fixes that renaming a group did not change the group name in the interface
2288.0,4565,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,add uncaught exception message added a simple dialog showing up if an uncaught exception was loggedadded the dialogs text to the german and english language filesfixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4580.0,4587,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,add a variable to track the change in preview style proposed solution for i have added a previewstyle variable to check when the preview style changesfrom my observation the layout is updated every time tabs are switched or preview styles are cycled through with the addition of a variable these situations can be differentiated to print out the notification more appropriately change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4598.0,4601,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,convert duplicateresolverdialog to javafx describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4600.0,4604,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,enable default cursor for new entry sets text field on focus at the end of initialization by running the javafx thread change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4609.0,4613,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix preview style configuration user mentioned that after pressing one of the styles and saving it the style is not updatedto change the preview style he has to move the selected style to the right column before pressing saveselecting styles in the right column can be previewed in the test panel however the style of bibentry is not updated after pressing test to rectify this the citation style is updated in preferencesto ensure preview style configuration is saved the chosen preview style is also saved in the preferencesnote that if preview style at the left column is selected the configuration will not be saved change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4616.0,4618,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,try to fix not on fx thread for search and autocomplete because github does not support autolinking there add the following autosave actions to your database comment{jabref meta databasetype biblatex} comment{jabref meta saveactions enableddate normalize_date pages normalize_page_numbers all text fields latex_to_unicode title html_to_unicode } search for something and press ctrl space to open autocomplete popup enter sth like \emph{dictionary} in the title field and press saveno errrosnoted this in change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4591.0,4642,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,add integrity check for books with edition reported as
4641.0,4644,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fix for issue remove usage of tempdirectory extension from junit pioneer fixes removed the tempdirectory extension from junit pioneer with the built in extension of junit manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message
4628.0,4658,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,fix for cant save new content selectors dialog converted into javafx old functionalities are preserved new validations added error message thrown when dialog invoked but not active connection exists remove keyword button is enabled just in case some keyword is selected change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4610.0,4660,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,changed the way the groupdialog description is displayed fixes changed groupdialog description node to textflow groupdialog is no longer resizable changed the layout of the groupdialog window to be more horizontal ok button is only enabled after some input jabrefgroupdialog change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4614.0,4696,1,0,0,0,1,1,1,0,0,1,0,1,1,0,0,remove resolve duplicate keys dialog because github does not support autolinking there removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply for all entries or only for the duplicated ones through the entry editor and or menu change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4666.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4667.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4668.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4669.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4670.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4671.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4672.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4673.0,4707,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4709.0,4713,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,fix bibkey generated does not handle diacritics clean up the author value in bracketedpattern after it is retrieved from the bibentry change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4714.0,4721,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix entry preview copy exception because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1506.0,4722,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,adding additional modifiers to be used in bibtex key generator as i currently wanted to have a possibility to have capitalized shorttitles in my bibtex keys i reused the already existing capitalizeformatter titlecaseformatter and sentencecaseformatter as modifiers to be used also for the bibtexkeygeneratorthis implements and is more flexible as the solution developed by oscargus at the time in as it can be applied to all other fields and not only to titles change in changelogmd described manually tested changed features in running jabref helpjabreforg needs to be updated
4306.0,4727,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,disable renaming
4728.0,4729,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,saving changes and exiting application when the user clicks _save changes_ option the status ofsaving is not shown unlike before i am not sure what might bethe cause of that because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4584.0,4730,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,improve toolbar icons and their layout group and reorder the toolbar icons and add generate bibtex keys button now it looks like on the martinkarims prototypes screenshots of the new layout right pr because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4724.0,4731,1,0,0,0,0,0,1,0,0,1,1,0,1,0,1,fix default import format pattern remove display arrayadd migration because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4474.0,4738,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,adding support for input methods because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4586.0,4743,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,adds a browse button next to the path text field for aux based groups because github does not support autolinking there fixes a browse button for aux based groups change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4666.0,4744,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,move library specific key pattern dialog call to library menu follow up of and menu entry bibtex key patterns is calling a library specific dialog to set key patterns the global key patterns are managed using options preferencesthus moving it to library menu grabbed_ minor addition setting title of dialog which was empty before change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4583.0,4758,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,modifications to improve contrast of ui elements because github does not support autolinking there fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1019.0,4759,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,feature implement search filter in show preferences add a search box in show preferences window to allow users to filterpreference options because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4023.0,4760,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve remote messaging multiple instances possible and should by reducing the timeout thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast surpasses because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4481.0,4760,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,improve remote messaging multiple instances possible and should by reducing the timeout thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast surpasses because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4755.0,4761,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,enable import button only if entry selected because github does not support autolinking there fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4767.0,4768,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,allow hyphens in bibtexgenygenerator add test hyphens are legal characters and should be allowedonly drawback authors with hyphens in the name eg al ketan and using a pattern like auth are reduced to al because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4764.0,4769,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix removing entries when source code field is out of focus the issue was storesource method is called when entry is out of focus however if another entry is selected then currententry is updated to that and storesource is called with the previous codearea but updating it in the second entry thus causing a duplicationfix was to pass the entry as another argument to storesource because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4754.0,4779,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,fix illegalargumentexception when ranking entries add names for ranking entries event so it does not generate an illegalargumentexceptionthis pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4733.0,4780,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,nightly indicate the build date and git revision add the information of the latest jabref version and its release date in about panel screenshots of the new layout aboutjabref pr because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4762.0,4784,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix opening of entry editor the problem was that the notificationpane was hiding the entry editor preview because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4785.0,4791,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix npe in duplicate resolver dialog init method was accessing the database field before it was initializedfixes pass a new bibdatabsecontext because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4786.0,4791,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix npe in duplicate resolver dialog init method was accessing the database field before it was initializedfixes pass a new bibdatabsecontext because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4736.0,4792,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,relativizes paths to aux files because github does not support autolinking there fixes issue introduced a new latexfiledirectory to metadatajava the path of the aux file is now serialized as a relative path with respect to the latexfiledirectory the getfilepath of texgroup now returns the relative path of the aux file used to create the group each user can define their own latexfiledirectory similar to userfiledirectory i have implemented tests to check for basic parsing serialization and also to check that the relative path is being found correctly when user selects an aux file via the browse button they are shown the relative path of the file in texgroupfilepath in group dialog change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4789.0,4794,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix closing of library not handling backup and autosave manager shutdown the issue was when the tab is closed by clicking x it did not callthe method closetab which handles the closing of backup andautosave manager because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4783.0,4799,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fixes ok button enabling property in group dialog because github does not support autolinking there fixes issue namefieldtextproperty to the ok button so that ok button gets enabled as soon as we enter name of the group change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4783.0,4801,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fixed group creation with default settings fix for the issue now the enabling disabling the ok button with regards to the text fields have been validated properly without changing the logic of the existing code as siedlerchr mentioned now no need to switch to another radio button and back again to enable the ok button because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4441.0,4807,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,item count in a group updated correctly because github does not support autolinking there fixes issue pr fixes the first issue i could not reproduce the second issue the item count should now be updated correctlythe problem was because of the listener not getting notified when changes were being made this was due to the weak listener which was attached to observablelist returned by databasecontextgetdatabase getentries only case where this pr might not work is when we are dealing with a library in which there are no groups other than the all entries that is because the group being utilized in the line texttextproperty bind groupgethits asstring in file gui groups grouptreeviewjava is the group all entries that is present even before you open any library in jabref this causes value to not be set properly but the only time it happens is if the only group you have in the new library is all entries once we are able to fix that this pr should work in all cases change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4679.0,4807,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,item count in a group updated correctly because github does not support autolinking there fixes issue pr fixes the first issue i could not reproduce the second issue the item count should now be updated correctlythe problem was because of the listener not getting notified when changes were being made this was due to the weak listener which was attached to observablelist returned by databasecontextgetdatabase getentries only case where this pr might not work is when we are dealing with a library in which there are no groups other than the all entries that is because the group being utilized in the line texttextproperty bind groupgethits asstring in file gui groups grouptreeviewjava is the group all entries that is present even before you open any library in jabref this causes value to not be set properly but the only time it happens is if the only group you have in the new library is all entries once we are able to fix that this pr should work in all cases change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4805.0,4815,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,enhanced message log worked on removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log j because logevent objects are reused they were copied in logmessagesadd but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for closes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4811.0,4815,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,enhanced message log worked on removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log j because logevent objects are reused they were copied in logmessagesadd but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for closes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4817.0,4818,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,put renaming of file entries in javafx thread for cleanup closes because field changes must be done in the javafx thread i put the field change in a callable to be executed by the javafx threadthis issue might arise for other cleanup tasks as well change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4819.0,4822,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,convert autolinkfilesaction to javafx also convert a few other message boxes to javafx because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4820.0,4835,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,all buttons in custom dialogs react on enter all buttons in custom dialogs react now also on enter the default behavior space in javafx is not affected by this change change in changelogmd described manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message
4735.0,4839,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,fix parser exception when loading tex groups with non existing file catch file not found exception and handle non existing aux files gracefully because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4840.0,4847,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,removed default constructor of fxdialogservice fix for needs test and discussion removed injection mechanism for dialogservice in order to remove its default constructor because through the null value used in the default constructor the nullpointerexceptions were caused change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3531.0,4848,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,fix custom name formatters because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4854.0,4855,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,improve full text search for several files solution proposal for in findfulltextaction task is now used instead of backgroundtask to be able to show a progress dialog which shows the progress for searching files online lookupdialog the functionality for downloading a file in linkedfileviewmodel is split into download and preparedownloadtask to be able to define a custom onsucess action for the background task this is used in findfulltextaction to add the downloaded file to the entry instead of the urlthe functionality provided by linkedfileviewmodeldowload remains as it is so it does not affect the download of a single file via the entryeditor change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3905.0,4860,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,remove deprecated awt apple extension because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4873.0,4876,1,0,0,1,0,1,1,0,0,1,1,1,1,1,0,fix saving of strings fix removing of strings the only problem i now have i cant reliable detect prevent dupliacte stringseg a user can have a string with label a and content b and a user can enter a new string a with content cthe first string would now be overwritten tobiasdiez do you have an idea if we can directly prevent the entering of duplicatesthe addall method simply adds all strings and updates the content if found previously it would always report a duplicate label exceptionmaybe one could check the id value if its present or equals because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4857.0,4892,1,0,0,0,1,1,1,0,0,1,0,1,1,1,0,fixed closing of the shared database login dialog if the user enters wrong authentication details fix for the issue dialog close after pressing ok button fixed closing of the shared database login dialog if the user enters wrong authentication details change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4579.0,4896,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,store column widths as integer store column widths as integer because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2419.0,4910,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,make group dialog resizable allow resizing of the edit add group dialog describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4911.0,4917,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,quick fix for error when opening preferences this is just a hotfix to make the preferences dialog working againi will create another pr for converting the tablecolunns preferences tab to proper mvvm structure with fxml and a new improved layout because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4905.0,4918,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,fixes throwing an exception when id field is present in bib file because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4864.0,4931,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,improve author parsing the author class added an additional space when converting a o to the dotted version a o because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
490.0,4933,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix for issue about the toolbar i dont think the search bar size should be link to side pane size with a bind its not really responsive littlebefore without the bind bigafter change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4932.0,4935,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,throw bibentrynotfound exception in case entry is no longer present when an entry got removed a npe complaining about an empty database was thrown because of some weird unkownbibtexentry thingnow the correct bibentrynotfound exception is thrown showing the problematic reference mark because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4940.0,4943,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,fix threading issue with opening from recent libraries on windows i could not reproduce the original exception but im very convinced that i found the threading culprit because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4844.0,4950,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,fixes remaining issues in because github does not support autolinking there as usual the situation was not as easy as it seemed to be in i reused now the existing renaming logic for renaming to suggested filename which performs some more checks like not to overwrite existing files and also takes the file directory settings into accountthus this should fix the remaining problem mentioned in change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4490.0,4962,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,fix for issue download fulltext for multiple entries prevent keycollion with empty urls
4886.0,4964,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,remove ui threadlist for maintable as it prevents sorting in maintable renenables sortingtried a bit around and could not find any side issue so far because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4913.0,4965,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,fix downloading pdf produces html as extension if we already have a filetype we use that instead of relying on the autodetection because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2115.0,4976,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,include preview in entry editor because github does not support autolinking there first shot at current look mlep grimes should i continue along this path or do we need a different solutionrelated and change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2016.0,4979,1,0,0,1,1,1,1,0,0,1,1,1,1,0,1,fix command line help text now in the cli help text arguments and descriptions have been rewritten for fixing simplifying and detailing them betterit fixes issue cli help change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4977.0,4980,1,0,0,1,0,1,1,1,0,1,1,1,1,0,1,resize different fonts changing entry type now jabref uses the same typography for the two menus to change entry type and for the tooltip it entry_type_menu change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
496.0,4981,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,duplicate check on import should be run in background task created background task for the work done in org jabref gui importer importentriesviewmodeljava
674.0,4991,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,submenu to select push application since the migration to javafx i saw no way to change the push application there were some pull request in the past trying to fix this but they all were forgotten undone so this is my shot trying to implement a very simple way to change the push application closes and closes closes apparently i forgot the fetch before i opened the new branch please ignore the old superfluous commits my changes start with f its still wip its not done yetthe caption of the menu is temporary there is no l n toolbarbutton is not updated and another small problem is left i could not figure out yet and i am hoping for your support i was not able to change the caption of the pushappplicationmenuitem since its bound somehow to another variable do you have any idea how i can change this label img width alttools push src change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4995.0,4996,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix the attach file dialog for starting on the users main directory now the attach file dialog in the right click menu for an entry starts on the working directory instead of the users main directory it is the same behavior as when adding a file from the entry editorit solves change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4997.0,4999,1,0,0,1,0,1,1,1,0,1,0,1,1,0,0,fix iee fetcher add exception dialog on import failcheck if we have keywords field present in json because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4958.0,5010,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,fix field formatter save actions throwing exception on autosave in my opinion this is an ugly hack but still the only option without violating our architectureproblem is that the autocompleter has an input binding which is triggered whenever setfield in bibentry is called in this case part of the apply save actionson autosave we have a background thread in the backupomanager which executes the savedatabaseaction which itself executes the save actionsexectuted in a background thread describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5002.0,5011,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,latex integration project hey this is the pull request where i will be uploading everything related to the latex integration project which tobias mentioned in for the moment i have been coding the backend of the tex parser and preparing tests for these classes before the end of this week i will add support for nested files and cross references and will keep improving the related documentatio y feedback is more than welcome d
674.0,5024,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,select push app in preferences as asked by tobiasdiez here is my alternative proposal this closes by merging closes and closes img width altprefpushtoapp src branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3861.0,5033,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,convert preferencedialog to mvvm one of the last missing things in is the conversion of the preferencedialog and some of its tabs to mvvm i understood that in the future jabrefpreference probably need properties to make them bindable but for now i think this goes beyond this prit works as expected i took the liberty to add a split pane between the conents and the tablist to enable the user to change the width between them so this pr is not just about refactoring the dialog this is very early shot on this matter i dont know if you think its worth moving on with this and to look also into the tabs img width altpreferencedialog src to convert to mvvm general filethe following conversions will be done in other prs as this one would grow too large entry table entry table columns external programs entry preview groups entry editor bibtex key generator import x export sorting x name formatter x xmp metadata x network x advanced x appereance after conversion of the tabs x code cleanup simplification refactoring reordering the preferences change in changelogmd described x manually tested changed features in running jabref x x helpjabreforg https githubcom jabref helpjabreforg issues
5019.0,5034,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,set up general fields character check not correct & alphabetical ordering as asked the character was included on the error message also we included other characters that were not being mentioned on the message we tried to remove the character from key_illegal_characters and key_unwanted_characters on bibtexkeygeneratorjava but we did not know if it would be a good idea because it violates some testsabout the order of the tabs we removed the alphabetical ordering so now it is following the order defined when the tabs are created on the set up general fields option hyphen pr because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5043.0,5048,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,preserve encoding while copy and pasting in maintable encodes and decodes data with utf
5028.0,5056,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,fix order of other fields because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5036.0,5057,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,remove bindingshelper for ui in maintabledatamodel the problem is that the maintable findentry method does not find the new entryfurther debugging showed that the observable list with the entries in the maintable model does not yet include the new inserted entry although its already in the bib databasethis is because due to the bindingsforui around the list in maintable its run on the fx thread and the fx thread is blocked busy with the findentry methodi know this was added because of not on fx thread exceptions but i tested cleanup and external modification of file and it was fine i think the key problem was the old swing stuff at that time change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5023.0,5058,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix automaticalls set file links task not runinng executing the created task would have been helpful 🤦‍♂ because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5066.0,5068,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,add copy linked files action to contextmneu in general tab because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5045.0,5086,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,bugfix modified the existing logic to comply crossref resolution with biblatex specification because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4816.0,5101,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,fixes ris data field because github does not support autolinking there this pull resquest fixes issue importing ris files jabref checks for date fields y pyda and y and uses the first one it finds the problem is that y refers to access date da in most cases is a generic date and py is the publication year reliable field couldnt find references to y primary date however as already cited in and by doing some exports we found y to be pys synonym furthermore when py received a higher priority than y some tests cases didnt pass as there were a missing month field in bib we established a priority system indicated by the datetags lowest index higher priority added test cases for this and changed one of the old ones adding the month field nicely displayed in change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4269.0,5110,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,issue & because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3874.0,5118,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,fix lookup fulltext document not finding files change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4680.0,5121,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,add option to allow for integers in field edition when running database in bibtex mode because github does not support autolinking there issue is a new fork from the old pull requesti added a checkbox in preferences generaltab to allow insert integers in field edition when bibtex mode is running also i modified editionchecker class to permit this configuration as well as the test cases in integritychecktest class change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5002.0,5123,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,add search for citations in latex files back end and gui here is a latex parser tool that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will ask the user for a directory to search tex files then the user could select specific files after that the tool parses these files and shows all the bibliographic entries found in a new dialog box latex_parser issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2581.0,5125,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,fetcher ottobib i developed the fetcher to use ottobib then after it try the ebookde and chimboricom is made the requisition for ottobib
5128.0,5142,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,fix substring exception in find unlinked files refactor to own method and add testthe exception came when the parsed editor string did not end with a colon and two spaces because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4629.0,5150,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,fix for issue because github does not support autolinking there distinguish the user action between menu and button reuse the acitons class to add enum to the description of user action 图片 https user imagesentcom afa e ae d a cec png 图片 https user imagesgithubusercontentcom c afa e c f faapng 图片 https user imagesgithubusercontentcom d f afa e db fe d d png
5152.0,5190,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,border for group color indicator and some space for tooltip refs one of my groupcolors is white which made it hard to see in the jabref windowi added a thin grey border so one can see even white groups on white backgroundalso i made the area the user can put his mousepointer in to show the tooltip a little wider pixels were to small left before right after groupcolorbefore groupcolorafter to review change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5152.0,5191,1,0,0,1,0,1,1,0,0,1,0,1,1,1,0,tooltip and icon added to group cell with a missing tooltip and icon in the color group column i used default_group_icon from jabreficons to supplement the missing icon
5194.0,5195,1,0,0,1,0,0,1,0,0,1,1,1,0,0,0,add citation commands to texparser we added a few more citation commands autocite autocite blockcquote and textcquote this pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5163.0,5197,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,with missing year value in year column with missing year value in year column the query to receive this value was missing in the ieeejava simply added one change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5198.0,5201,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix exception when adding new entry because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4836.0,5210,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste
4845.0,5210,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste
5220.0,5224,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,fix exception when adding field formatter in cleanup entries dialog this
4612.0,5229,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,add doi url eprint field to general tab layout because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5021.0,5230,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,treat unknown fields as multi line fields unknown fields are now treated as multi line fields in the future we should provide an ui interface to specify or change properties of fields because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5245.0,5259,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,avoid erroneous materialdesigniconfactory fix for refactoring of the code for managing icons now all usages of dejensdfxglyphs or dejensdfxglyphsmaterialdesignicons are encapsulated in the package guiicon in there the usage of dejensdfxglyphsmaterialdesigniconsutilsmaterialdesigniconfactory is avoided because of the error described in the issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
522.0,5266,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,issue issue add software and dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in software and dataset entry type entrytype change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5223.0,5266,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,issue issue add software and dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in software and dataset entry type entrytype change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5245.0,5276,1,0,0,1,0,0,1,0,0,1,1,0,0,0,0,add shorten doi field formatter because github does not support autolinking there what this pr addsthis pr is related to added a field formatter called shorten doi formatter which shortens doi using service you run the formatter from _cleanup entries dialog_ by adding it to _run field formatter_ listit looks to work fine it enables one way conversion from doi to short doi implementation details i assumed that short doi is still a legal doi thats why i adjusted the doi class to work with short dois feedback wantedi id like to ask for your feedback about the code at this stage next step add a more accessible ui a toggle button next to the doi field _shortened long version_ this was suggested by koppor this will require adding opposite conversion from short doi to doi as servcie doesnt offer such a feature i see two approaches store the original doi during the conversion for further back conversion drawback you may not convert from short doi to doi if you havent done the opposite conversion for at least one time try to obtain doi from short doi using service as it is possible by catching the redirectioni find the st approach fine the th approach is not really good as we are not using any public api and this can stop working in the futurewhat do you think folks importantif you would like to checkout this branch and test locally please use shortdoi workaround branch which uses workaround by r light for issue on master branch there is an issue with accessing _general tab_ in bibentry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
526.0,5280,1,0,0,1,0,1,1,0,0,1,0,0,1,0,0,revert get jabref running in eclipse reverts jabref jabref
5116.0,5283,1,0,0,0,0,1,1,1,0,1,0,1,0,0,0,unify month field formatting in test bib files jabref jabref after some extensive use of grep and sed this should finally solve change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3142.0,5325,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,use binding to update global state manager because github does not support autolinking there use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular and fixes moreover i fixed an error that was thrown when interacting with the toolbar missing open statement but we were using reflection change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4441.0,5325,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,use binding to update global state manager because github does not support autolinking there use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular and fixes moreover i fixed an error that was thrown when interacting with the toolbar missing open statement but we were using reflection change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4846.0,5326,1,0,0,1,0,1,1,1,0,1,0,1,1,0,0,fix problem with search and switching between libraries by using bindings instead of listeners because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2857.0,5328,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3112.0,5328,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5327.0,5328,1,0,0,0,0,1,1,1,0,1,0,1,1,0,0,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5334.0,5338,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix npe when opening a non existing file from the recent files menu dialogservice object was null because the filehistorymenu class is initialized before the ctor of jabref frame creates the dialog service object because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5263.0,5340,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix various copy to clipboard issues pt fixing by only using the text content to be added in the right click copy functionality in the preview see right click option in maintable additionally store content also in string format that can be accessed then with simple text editorspt improve also functionality in export to clipboard dialogcurrently all exporters are used for export to clipboard however the ones which are creating files like pdfs cannot be used for copying to clipboard thus they are filtered out now additionally in case rtf or html content is exported the specific clipboardcontent has been used change in changelogmd described tests created adjusted for changes manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5333.0,5347,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,fix display bug for keyword groups with empty keywords by filtering out empty keywords because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5348.0,5351,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix exception when closing jabref by using javafx windows instead of awt windows because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2902.0,5352,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,bring back the context menu as explained in it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround and refs i removed the custom tab handling because it is now working as expected ie is fixed in java because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5254.0,5352,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,bring back the context menu as explained in it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround and refs i removed the custom tab handling because it is now working as expected ie is fixed in java because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5022.0,5354,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,fix group color when scrolling problem was that the pseudo class was not initialized correctly but was only triggered upon changes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4868.0,5355,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,fix default group color now groups have a dark gray instead of white as their default color because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4574.0,5356,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,show more than one group color bar shows multiple colored bars if the entry belongs to more than one group with color implements describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5369.0,5382,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,fix for fallback to in case stored preview cycle pos does no longer exist fix for problem should in theory not happen as always a correct size should be stored however if for example csl styles are not loaded properly the mentioned exception in might occurto prevent this upon creating the preview prefs now the stored cycle position is now compared to the actual list of previews before being set because github does not support autolinking there change in changelogmd described i think as this is not a common problem can be omitted manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5246.0,5385,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,reenable prevcycle because github does not support autolinking there okay this should be working again now however without the csl styles working see its a bit hard to check fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5359.0,5392,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,fix writing of editor field is duplicated serialization of orfields was not implemented properly as the currently written field was not stored correctly change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5169.0,5395,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,fix exception when merging entries the problem was that sourcechanged was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime solution run sourcechanged on the javafx thread but synchronously because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5383.0,5421,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,add change listener to main table to scroll to imported entry add change listener to main table to scroll to imported entry change in changelogmd described not really testable via unit tests manually tested changed features in running jabref not needed helpjabreforg https githubcom jabref helpjabreforg issues
5084.0,5432,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,fix cursor jump the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are fixed now because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5447.0,5448,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix nullpointer on import change in changelogmd described not testable with unit tests manually tested changed features in running jabref not needed helpjabreforg https githubcom jabref helpjabreforg issues
5035.0,5454,1,0,0,1,0,1,0,0,0,1,0,0,1,0,0,fix highlight issues for lists and fixes the problem was in both cases that the list view reuses nodes when scrolling instead of creating new ones because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5277.0,5454,1,0,0,1,0,1,0,0,0,1,0,0,1,0,0,fix highlight issues for lists and fixes the problem was in both cases that the list view reuses nodes when scrolling instead of creating new ones because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5458.0,5459,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,temporary fix for colorpicker in groups temporarily should be reverted as soon as the compatibility issues with jfoenix and jdk are fixed change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5452.0,5471,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,mark oostyle as invalid if no defaultstyle in addtion dsplay correct layout for article and book todo add documentation issue because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5069.0,5472,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,fix highlight problem in entry preview by using markjs because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5463.0,5481,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,fix for issue fixed issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2389.0,5482,1,0,1,1,0,0,1,1,0,1,1,1,1,0,0,add x primary selection clipboard support _related to issue jabref and the x window clipboard selections _i have been testing different alternatives and i think that this is the best choice for using xclipboard a new dependency is needed and it does not give any added value all contents that jabref sends to the system clipboard will be available in the x primary clipboard too ie copyversiontoclipboard in the about dialog so it is possible to paste it in a text editor doing click in the middle third mouse button copy_version it is necessary to call the install method in every text field where you want to use it for the moment it is activated in the globalsearchbar therefore you can try it write something select a piece of text and do click in the middle button global_search now clipboardmanager uses the singleton pattern it is instantiated once in globalsjava any feedback will be more than welcome d change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5469.0,5483,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,fix not on fx thread error for custom entry types revert change done in because the actual code just opens the already loaded databasesat this point the databases are already loaded in a background thread because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5485.0,5495,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,fix deprecated crossref rest api parameter changed the query parameter querytitle which is deprecated to querybibliographic because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5496.0,5497,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,try to fix dark theme path fix dark themeworkaround until is fixed because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4949.0,5501,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,new ads fetcher i added a new fetcher that uses the new ads api some open question for implementation which ids should be viable ids for idbasedfetchers only doi only ads bibcode the current old version can handle both but im not sure if this is intentional we need an api key to access the api i have one for development but someone has to create one for the project we need to set a limit on how much search results are shown is a good valuerefs change in changelogmd described cleanups tasks change comments and documentation manually tested changed features in running jabref add api key
5508.0,5513,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,making importing a single file easier issue i added a condition to see if only one entry is being importedif the condition adheres mark the entry as selected change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5449.0,5519,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,fix xmp null error was caused by wrapping a set of fields in a treeset without specifying the comparator because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5516.0,5521,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,fix text colour in merge dialogue fixes the colour of the textfields in the merge dialogue was set to black i set that to fx light text color aa af in mergeentriescssno need for documentation updatetested manually on local environmentopen to suggestion for test cases 😄 ps forgive me if i missed something this is my first pr to a relatively large project ✨ because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg width altscreenshot at srchttps user imagesentcom cde f e e f f d f dfpng
5332.0,5525,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,remove empty customization warning problem was that the dialog was shown whenever the library contained customized entry types even if the customizations were equal to the customization stored in the global preferences a bit of refactoring renaming along the way because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5532.0,5533,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,fix a bug that threw a npe when using middle mouse click on windows hotfix for solving
4430.0,5539,1,0,0,1,1,0,1,0,0,1,1,1,1,0,1,improve performance improve performance by caching fields as keywordlist remove duplicate change listener remove preference access in loopwith these changes the mega huge library of aegit works without too much delays the initial loading of the database is a bit slow but still ok thus this pr is a potential fix for and for describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5546.0,5554,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,make entry editor dnd behave as specified in settings because github does not support autolinking there the setting only applies to the entry editor the maintainable is still differentiating between the dnd modifiers as implemented in the linked pr koppor refs change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5452.0,5556,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,select newly added jstyle in table to prevent exception because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5551.0,5558,1,0,0,0,0,0,1,0,0,1,1,0,0,0,1,dont remove unwanted characters before first author is s… heyim copying my comment from the issue page i found that in bracketedpatternjava on line the comma is removed and therefore the authorlist is not correct would fix this issue by not applying bibtexkeygeneratorremoveunwantedcharacters before extracting the author but afterwards the tests pass but can anyone think of a problem with that approachas it is my first pr to this project any suggestions are highly appreciated thanks for the great work change in changelogmd described manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message https user imagesentcom ceaaf fdad e eed e png
555.0,5563,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,make entry editor dnd behave as specified in settings this reverts commit ca d ed b b bf f d b a f and improves
5615.0,5629,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,side pane not remembering position hii found a bug where javafx was doing some recalculations during the initial layouting setting setresizablewithparent before initial layouting was finished resulted in javafx assuming a wrong fixed widthi changed that by adding the code to a run later blockit works good for me on mac are there any concerns with thatbest regardskai change in changelogmd described manually tested changed features in running jabref
5257.0,5665,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,improve change scanner if a file is changed externally jabref is doing a way merge between the last saved value vs current value in jabref vs new value in filethe way this is done is by first comparing the last saved file with the current changed file and then trying to find additional other changes in the currently open database this is really complex and i believe there is some subtle bug in the logic leading to with this pr the change scanner is changed to a to simple way merge between the current value in jabref vs new value in file this is way simpler and i hope this pr in a few edge cases the way merge has a small disadvantage for example consider the following steps user a opens file user a changes field author to user a and adds field title with value new user b opens file user b changes field author to user b user b saves fileat this point user a gets a message that the file changed with the following changes field author changed from user a to user b field title was removedthe way merge could detect that title was newly added and thus could automatically reapply this change this is no longer possible with the simple way merge title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5664.0,5666,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,auto file finder follows symbolic links title of the pr must not reference an issue because github does not support autolinking there i didnt tried it but it should work change in changelogmd described if applicable
3874.0,5667,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,rename lookup fulltext to download fulltext closes and surpasses does not addresses the follow up issues mentioned in describe the changes you have made here title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5661.0,5670,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,improve column preference migration title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5653.0,5671,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,fix copy drag and drop action title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5679.0,5680,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,add throttle to autosaveuimanager as discussed in there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in ms which is especially handy when automated tasks like find and replace are performed change in changelogmd described if applicable
5615.0,5706,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,revert side pane not remembering position this reverts commit ab ffee b dab b edfc aim not sure how to proceed with this unfortunately in which fixes a ui bug was introduced at least for macos the two screenshots show the problem in the first screenshot everything is as in alpha img width altscreen shot at src do you have an alternative better solution to the original problem https githubcom jabref jabref issues
