Named,issueNumber,prNumber,Util,NLP,APM,Network,DB,Interpreter,Logging,DataStructure,i18n,DevOps,Logic,Microservices,ML,Test,Search,IO,UI,Parser,Security,Cloud,BigData,App,GIS,corpus
0,880,11,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"bugfix for bug ""#880 pubmed import broken"" found bug: pubmed/medline plain format recognized as ris formatprovided solution:    - modified ris importfilter now ris format is identified by looking for the ""ty"" tag (it is a mandatory tag in ris format and it is not conflictual with other filters)    - added new importfilter ""medlineplain"" this import filter parses medline files in plain format (not xml) the import filter has been produced referring to the official medline documentation (http://wwwnlmnihgov/bsd/mms/medlineelementshtml)    - updated the netsfjabrefcore pluginxml file in order to include the newly added medlineplain import filter  "
1,685,28,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"added special fields printed and read status added special fields printed and read status thereby implementing (at least partially):- feature #762 printed attribute- feature #692 marking of new entries and often read entries- feature #685 highlight new entries that were ""forgotten""- feature #602 could add the mark as read feature- feature #225 read? checkboxprinted is just a boolean toggle and for the read field currently the values skimmed and read are possible (if you have any suggestions for further possibilities im happy to implement them) the icons are taken from http://wwwsofticonscom/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones this feature is availale on jabref 210?what should i do to get them? || no it is not in 210 but in the current development version so you have to wait until 211 comes out or build the current version yourself how to do the latter is described here: https://githubcom/jabref/jabref#building-jabref-from-source || thank you very muchim could not install gradle on my laptop (ubuntu 1404)looking forward to the 211 release ||"
2,762,28,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"added special fields printed and read status added special fields printed and read status thereby implementing (at least partially):- feature #762 printed attribute- feature #692 marking of new entries and often read entries- feature #685 highlight new entries that were ""forgotten""- feature #602 could add the mark as read feature- feature #225 read? checkboxprinted is just a boolean toggle and for the read field currently the values skimmed and read are possible (if you have any suggestions for further possibilities im happy to implement them) the icons are taken from http://wwwsofticonscom/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones this feature is availale on jabref 210?what should i do to get them? || no it is not in 210 but in the current development version so you have to wait until 211 comes out or build the current version yourself how to do the latter is described here: https://githubcom/jabref/jabref#building-jabref-from-source || thank you very muchim could not install gradle on my laptop (ubuntu 1404)looking forward to the 211 release ||"
3,136,137,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"unify and simplify gui actions - using lambdas for the simpler actions- some code cleanup- extract string commands as string constants to actionsjava and use the constants in jabrefframe basepanel and rightclickmenu- use the constants already defined in keybinds to get keystrokes for the actions (in jabrefframe basepanel entryeditor and rightclickmenu)- 8e3ad9d: remove quickfix for [sfnet bug #1277](https://sourceforgenet/p/jabref/bugs/1277/) and implement feature properly: instead of deactivating ""show/hide toolbar"" when no database is open the action has been move to jabrefframe and works now even if no database is opensee also #136  i propose to merge the current status into master the changes described above cover the changes possible without restructuring the whole action architecture in the gui || lgtm :+1:  || ah answered just here: https://githubcom/matthiasgeiger/jabref/commit/8e3ad9d9804be70cf47f6e20191efcaae2ddfe23#commitcomment-13044544 ||"
4,1285,143,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fix sf bug #1285 restores the cursor resp ""caret"" position when a field is store during editingthis fixes [sfnet bug #1285](http://sourceforgenet/p/jabref/bugs/1285/)to be done: - backport to dev_211- ask for confirmation on sfnet and close the issue there why does it lose focus anyway? this makes no sense to me saving should be a background process triggered by a key event || i think a backport to dev_211 is not necessary@stefan-kolb i agree very strange that the focus is changed ||  debugging this code is hell! :scream:the new fix fixes the problem where it is caused: method `updatefield` in `entryeditortab` re-sets the textfield which causes a loss of the current caret position || this looks way better and easier to maintain :blush: ||"
5,122,175,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,increase saving speed intended to fix #122 this pr turned into a major api change it replaces `string[]` in the return types of `bibtexentrytype` with `list<string>` this allows to return immutable lists instead of mutable arrays and improves the stability of the program additionally the rewrite allowed to replace a lot of duplicate object creation with instance variableswith respect to #122 the immutability of the new lists removes the necessity to create defensive copies and therefore avoids a lot of cloning are there further improvements to be made? otherwise this pr is ready to merge ||
6,114,187,1,0,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"[wip] fix linebreaking evaluating the usage and problems of #114what is fieldcontentparser really doing? what is jabref style formatting? the remaining code of `filecontentparserformat` is a complete mess of one-off hacks i am very much for deleting it and rewriting the parsing logic to just remove newlines for non-multiline fields and ignore tabs or spaces completely if we document that with tests at least we know what the code is doing  || 859274e54af0948108ff16fa697dabb595768c12 replaces the weird code in `fieldcontentparser` with a single (and simple) regex now the tests pass and as far as i can tell #114 and #186 are fixed could someone else please double check? (note: parsing is only done when loading the file so if you add faulty text to a field you can save it as such on restart the errors should be fixed by the parser) if something is not quite right please add the faulty behavior as a test! || thanks @stefan-kolb! the ""file"" field is now ignored from parsing || ok i think we are good to go you can also close all other mentioned issues for now! || works great here :+1:  || "
7,318,204,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,added pushing citations to texmaker implements sourceforge feature requests #318 and #582 looks good minor comments above the abstract class `abstractpushtoapplication` could be left as future work :smiley: || thanksi agree there are changes to the other pushtoxxx classes in the formbuilder pull request so i would prefer to base the `abstractpushtoapplication` on the unified source :-) (especially with my still improvable git wizardry) || ok i let this go through we will work on https://githubcom/jabref/jabref/pull/205 and possibly finally with another pr ||
8,173,219,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,ieee journal abbreviations why?- see #173 what is does:- bugfix: correct abbreviations are loaded when storing preferences through the advanced tab- ieee abbreviations are either plain (text) or in latex (code) form for each of them a separate file exist now the config option `use_ieee` loads the latex one if it is true and the plain one otherwise  
9,208,287,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,"doaj search search for directory of open access journals quite functional but the remaining things should (probably) be done- [x] ~~help page~~- [x] decide on where the bibjsonconverter class should be positioned (input?)- [x] more fields? ~~issn?~~- [x] ~~better/more error checking~~- [x] ~~handle search results with more than 100 entries properly~~- [x] ~~fill empty methods in doajfetcher~~- [x] ~~update status bar~~- [x] add test for bibjsonconverter- [x] ~~enable stopping search~~implements what is discussed in #208 i think im done there :-) || looks good to me  || one minor thing: the current title is ""doaj (directory of open source journals)"" which is much longer than the rest of the fetcher titles this introduces horizontal scrollbars in the fetcher sidebar when using the default width:![doaj-screenshot](https://cloudgithubusercontentcom/assets/676652/11044339/8ff615a2-8721-11e5-9a67-f2b1ca610747png)apart from this ""ready to go"" from my side too || there is no such property like [text-overflow](http://wwww3schoolscom/cssref/css3_pr_text-overflowasp) in swing is it? :star2:  || i think java actually does snip too long texts - if the component has a fixed size so this does not help hereill merge the current state but a potential improvement would be to define tooltips for the combobox to show some hints what the various abbreviations actually mean || "
10,328,330,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #328: added more and better information with unsaved database ![capturedialog](https://cloudgithubusercontentcom/assets/8114497/11130895/e1dd1e66-8987-11e5-85f3-e268a193c68epng)(in this case it was a new database otherwise the full path is shown) @oscargus tooltip for screenshots: [grabndrop](http://wwwscyvde/gnd/) ||
11,367,370,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,"add compatibility check for utf8 this pr attempts to fix #367we have a bit of a problem `utf8` came from these lines``` java        try (inputstreamreader reader  openfile(filetoopen suppliedencoding fallbackencoding)) {            bibtexparser bp  new bibtexparser(reader)            parserresult pr  bpparse()            prsetencoding(readergetencoding())```it is set in [this method call](https://docsoraclecom/javase/8/docs/api/java/io/inputstreamreaderhtml#getencoding--) thats the java api the `inputstreamreader` says that the proper name of the encoding is `utf8` my solution is an ugly compatibility hack in which we just insert the `-` manually ugly but works what do you think? what about replacing all string representation of encodings by [`charset`](https://docsoraclecom/javase/8/docs/api/java/nio/charset/charsethtml)? then on export `getencodingname()` returns the correct description ""utf-8"" || sounds like a good idea! we should give it a try || @tobiasdiez great advice! `charset` already implements the correct encoding name translation all we have to do is through it into `charset` and read it our again and we can skip the hack:``` javaprsetencoding(charsetforname(readergetencoding())name())``` || please merge master: we did a mayor overhaul of the opendatabaseaction: deleted code etc  || @lenhard glad this was helpful i think the code would even further improve if the parserresult (and maybe some other classes) doesnt hold the encoding as a string but as a `charset` ie `public charset getencoding()` and similarly for `setencoding` || @koppor done!@tobiasdiez sure but i think this should be part of a new pr since this pr just attempts to fix one particular issue || "
12,388,418,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,proxy authentication support (feature #388) this pull request enables support for proxy authentication via command line arguments (`-d`) and jabref preferences (network tab) btw: the tests in `netsfjabreflogicfetcher` and the `urldownloadtest` still fails because the authenticator is not initialized in unit tests || why is the codecov/project check marked as failed but shows passed on details? || is marked as fail as you added code which is not covered by a junit test reducing code coverage but we do not have a gui strategy yet and you added mostly gui code hence no problem there  || i forgot to create a special branch for this pr hmmm || this is not a big problem - as long as you do not start working on another issue in your master branch :wink: || hmm if i change the proxy settings a restart is required || we have other settings which upon change indicate to the user that jabref has to be restarted for the settings to be applied see the remote preferences under advancedtab maybe reuse the code from there  || hmm looking for config changes in six values looks quite ugly with `if` conditions i can create a hashmap or stringbuilder out of these values and later on just compare the hash values or do you have any other suggestion? || you just need to compute the final proxy string `username:password@hostname:port` which you can easily compare and then the two remaining boolean variables  || thats what i have implemented with a stringbuilder comparing the hashcode is much faster than comparing the string -) || okay please check my pr || thank you for the pr nice and clean implementation! we would gladly accept more prs from you ) ||
13,420,429,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix similar bug as #420 for the database properties dialog a similar bug as #420 happened when the encoding was changed in the database properties dialog this is now fixed in this pr sorry for introducing these bugs in the first place thanks for the fixup pr  ||
14,427,440,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,cleanup tests and latexformatter instead of #427 (easier to start all over as some files were already moved)  
15,315,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernünftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
16,384,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernünftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
17,443,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernünftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
18,445,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernünftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
19,498,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernünftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
20,490,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernünftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
21,458,459,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"use default directory when adding files to an entry see #458- the current implementation is hard to understand i dont get how these three existing folder preferences are used - also the method itself should be simplified and return a list after going through the documentation i found it jabref can have a directory per database but what if you and me have different directories? do we have to agree to one? normally its simply the directory of the bib file (meaning `` is used as database directory) but what if the users somehow share a bibliography and use different directories? then this feature comes in i can set another directory then you do both settings are serialized in the `bib` file with `-<loginname>` as suffix in the `jabref-meta` field if jabref saves a file and my loginname matches the name stored in the `bib` file it chooses that directory if no match is found it uses the ""general file directory"" of the bib file if that is not found it uses the one configured at ""options -> preferences -> external programs"" (""main file directory"")here some text from the documentation and mailing lists but i think the documentation has to be improved :sunrise: when thinking of it we should offer the users a button ""use current directory"" next to ""general file directory"" and add a little help text that """" denotes that or render `` as `<directory of the bib file is used>` then hopefully the ""user-specific file directory"" can be dropped - i dont see any other use case why would i share a bib file and not share the pdfs? if i share the pdfs together with the bib file a relative directory can be put in ""general file directory""possibly the ""general file directory"" should be stored _relatively_ from the current directory of the bib file## faq http://jabrefsourceforgenet/faqphp: ""then at the field “general file directory” choose the directory specific for the database if you want to set a directory for you only and other users should use the default directory use the field “user-specific file directory”""## file helphttp://jabrefsourceforgenet/help/filelinksphp:""finally in the database properties dialog you can set a user-specific file directory which will be valid only when you are the one working on the bib file""## mail from the mailing list(by @thomasa)https://sourceforgenet/p/jabref/mailman/message/27008930/""as of revision 3449 jabref supports an option to specify a user- and host-specific file directory in the database properties this allows each user of a particular database to store her/his personal path setting in the database it furthermore allows the same user to specify different paths on different computers (must have different host names)"" || thanks @koppor for this detailed clarification! i think we might simplify this somehow :smile:  || we need a better internal datastructure || "
22,470,472,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"show author/editor and journal/publisher in the main table by default implements #470 looks like follows:![grabbed_20151205-225839](https://cloudgithubusercontentcom/assets/1366654/11610469/bf3126ea-9ba3-11e5-8b8a-fc9b5d97a97dpng)""author/editor"" is okunsure if ""journal/publisher"" is confusing i think `booktitle/journal` would be the right correspondence we should replace the default ""journal"" column by `booktitle/journal` and maybe add the `publisher` column as default columnhow often is `inbook` used? consequently `title` should become `chapter/title` but that heading is confusing || id also vote for journal/booktitle (as that is what i use dealing primarily with journal and conference papers) on the other hand a good thing with this pr is that it indicates that these things are possible and how to do it || the journal says where an article is published similarly the publisher iswell the publisher of the book so i would advocate the proposed `journal/publisher` booktitle would probably only make sense for articles in conference proceedings i think articles and books are the most common types so we should focus on them@koppor: `inbook`s also have an author and title so there shouldnt be a problem || guess it depends on scientific area i would possibly argue that in general a publisher doesnt really add any important information even for books while in the case of conference papers the booktitle is crucial (i know that the publisher is important to create a valid reference but it doesnt really add any information when browsing a database) || in my discipline (computer science) id see the correspondence as follows (bibtex fields)| inproceedings | journal || --- | --- || title | title || author | author || booktitle | journal || publisher | publisher || year | year |for instance take an elsevier article (http://wwwsciencedirectcom/science/article/pii/s0268401215000808) the publisher is elsevier but the journal is ""international journal of information management"" elsevier publishes more than one journali read ""where something is published"" as the conference and the concrete journal the conference is stored in ""booktitle"" whereas the concrete journal is stored in ""journal"" both kinds of works are published by a publisheris it different in your discipline @tobiasdiez? || i do not think @tobiasdiez disagrees with that analysis but i got theimpression that he cites more books than conference papers in that case ican probably agree that publisher is the ""next"" field to add (mainlybecause of lack of others)journal/booktitle/publisher? (except for the very long heading) || ok apparently the majority is for booktitle hence i changed it accordingly my reasoning was indeed based on `book`s for which the publisher is the equivalent of a journal since books occur more often in my database i thought this addition was more valuable for `inproceedings` the booktitle indeed makes more sense || i suppose `journal/booktitle/publisher` is too confusing? i really agree that the column `journal/booktitle` is empty too often if many books are in the databaseill merge it and lets see what others say :sunflower:  || "
23,314,491,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add close all/others/ in database tab menu see #314 changelog is missing otherwise :+1:  ||
24,495,500,1,0,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,database type detection please see `bibdatabasetypedetectionjava`for reviewsome refactoring and a class for auto-detection of database types### algorithm- should we introduce a hard-coded field like encodings inside the bib file?- fast-enough?- what about false detection?### refactoring- bibtexdatabase -> bibdatabase- bibtexentry -> bibentryalso see #495 #167 the refactorings are fine from my point of viewthe detection is based on in-memory operations on collections so no need to worry about speed at the momentif i understand the algorithm correctly any database that contains a non-biblatex/non-bibtex type will be categorized as bibtex so a database with one biblatex entry and a customn entry would be detected as bibtex is that really the desired result? i would rather ignore all non-bibtex / non-biblatex types for the decision (customentry unkownentry ieeetranentry ) and do the decision solely on valid types with bibtex as the default result || @lenhard no it should always detect as biblatex if it finds one exclusive entry  || the algorithm looks good to me i would move the detection class into the logic package instead of model but that is your decisionstrangely the circleci test says there are still compilation errors due to the renamings as far as i can see locally all is fine ||
25,514,515,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,bibteximporter test added tests for bibteximporter depends on pr #514 (missing gradle test encoding special char ß) i had a personal discussion with @bartsch-dev that the current bibteximporter is _not_ aware of the encoding header the reading of jabrefs encoding header is implemented in `opendatabaseaction` and not somewhere in the bibtexparsertherefore there is _no_ test of different encoding strings and it can imho only handle ascii encoded files || i would let this go through and handle the usage of the open method of `opendatabaseaction` in a separate issue || note that none of the files written at https://githubcom/jabref/jabref/wiki/bibtex are tested here || fixed all the mentioned issuesthe `git` part in the file was as already mentioned the title of the book which i took as an examplei also added some examples from https://githubcom/jabref/jabref/wiki/bibtex || i think this can be merged in || as discussed in https://githubcom/jabref/jabref/issues/558#issuecomment-195430095 it is not necessary to refactor `opendatabaseaction` because of this importer ||
26,116,560,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"write all field keys in lower case write all field keys in lower case no more camel casing of field names eg `title` is written instead of `title` `howpublished` instead of `howpublished` and `doi` instead of `doi` the configuration option `use camel case for field names (eg ""howpublished"" instead of ""howpublished"")` is gonerefs #116  maybe the ui also has to display lower case values or should it use the (currently removed) camelcase functionality? i dont like the current `entryutilcapitalizefirst` solution (found in maintablecolumnjava) || in my opinion it should use lower case since we are standardizing on that id say you are free to implement what you find more beautiful :) || :+1: on lower case  ||"
27,565,567,1,0,0,0,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,1,0,implements #565: highlighting matches works now also for regular expr… …essions in preview panel and entry editor  
28,564,568,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed #564: cite command changes are immediately reflected in the pus… …h-to-application actions and not only after restart :+1: ||
29,116,569,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,remove field saving options as decided in #116 all field saving options should be removedthis pr purges the options from the gui and cleans up related reader and formatter classes this simplification greatly reduces the complexity of `bibentrywriter`  
30,593,594,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"solved #593 and cleaned up the oo-code a bit hopefully solved #593try it out at http://buildsjabreforg/ooreferencelist/(also cleaned up the code a bit based on pmd the actual fix is on lines 76-90 in ooutiljava) looks good is it possible that the dependency on ""unoiljar"" can be removed? || unoiljar was in a separate directory before (changing the default paths to be the same for unoil and the other jars where jurtjar is the one searched for was the biggest change to get it to work with the most recent versions of oo and lo) || "
31,545,595,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,"fixed #545 - acm fetcher works again fixed #545 and some pmd cleanup i just tried to check if this is fixed but i am still getting the error:```javaioioexception: cannot parse number of hits    at netsfjabrefimporterfetcheracmportalfetchergetnumberofhits(acmportalfetcherjava:400)    at netsfjabrefimporterfetcheracmportalfetcherprocessquerygetpreview(acmportalfetcherjava:134)    at netsfjabrefimporterfetchergeneralfetcher$3run(generalfetcherjava:241)    at javautilconcurrentthreadpoolexecutorrunworker(threadpoolexecutorjava:1142)    at javautilconcurrentthreadpoolexecutor$workerrun(threadpoolexecutorjava:617)    at javalangthreadrun(threadjava:744)```the exception is thrown since the matcher seems to find no match maybe `getnumberofhits` should return zero in this case instead of throwing the exception? || ahh thats right final fix: ""lets remove all the checking as i have much better regexps now"" not sure it ill start up eclipse again today but ill take care of it :-) || sounds good :smile: and no need to hurry there are enough other pull requests to review || should be good to go now || confirmed works for me as well thanks a lot! || "
32,337,605,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"change entrytype to string in bibentry this pr tries to resolve the issues discussed in #337 and #495right now the entry type is converted from a string representation (in the bibtex file) to an entrytype by the parser the problem with this approach is that the parser has to know about the bibtex vs biblatex mode the idea was to just store the string in the bibentry and only get the corresponding entrytype whenever it is really necessary oh that change surely was much effort unfortunately i find the old way more fitting even though the bibtex / biblatex mode switching was difficult why not using `entrytype` but only as ""proxy"" to the real type dependent on the bibtex/biblatex mode? (i currently dont know the gof pattern name for that :see_no_evil:)all entries should have a (non-abstract) `entrytype` and there should be (abstract) `bibtexentrytype` and `biblatexentrytype` all of them should implement `ientrytype` offering `hasallrequiredfields`etc `entrytype`and `*entrytype` should not be in a inheritance relation `entrytype` should proxy to the appropriate bib(la)textype depending on the mode || thanks olly for your feedback let me elaborate a little about why ive chosen to store the entry type as a string the type of the entry is per se a state-less information `@article{}` signifies an article in the bib file independent on any preferences in jabref i think it it thus a good idea to also have a state-independent representation of the same information in jabref in other words i prefer a system where the type is stored in the `bibentry` class independent on anything else (much like the `author` field is also stored as a string and not as a `authorlist` object) then in a latter step this data can be enriched by the preference-dependent information about optional and required fields this reflects more or less the impression i got from #495 that we came to the conclusion to see the `bibentry` class only as a data object without any logic now you can think about implementing such a system in java the easiest way and the one i have chosen in this pr is to store the type as a string variable one can also store the type information as an enum (as i have suggested in #501) but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book) the second step is to augment this information by optional/required fields i have chosen a constructor-based approach but maybe your idea about using the proxy pattern is better i have to think about it more || regarding `string` vs `authorlist`: i would have preferred that bibentry uses `authorlist` possibly calculated on demand and not during creation of the object similar for the `files` fieldunsure whether im wrong i would pack as much ""interpreted"" data in bibentry and get rid of strings as much as possible maybe we then reimplement an in-memory relational database system for instance if we store the ""crossref"" as reference and not as string what if the referenced entry is deleted and then recreated etc || ok as requested here a short summary in bullet list form_status quo_: parser converts the string ""article"" to a bibtype class instance and saves this in the entry- (--) makes changing from bibtex to biblatex mode hard as the type stored in every entry has to be changed- (-) adds additional dependency in the parser (bibtypes class)- (-) the parser has to know whether we are in biblatexmode or in bibtexmode however a priori this information is not necessary to parse a bib file- (+) does not store the type information as a string_pr_: parser stores the type information as a plain string in the entry this string will be converted to bibtype class when needed- (+) changing from bibtex to biblatex mode is easier since the required/optional fields are used only in a few places - (+) makes dependencies clearer (which class needs to know the bibtype or bibtex/biblatex mode)- (+) parser does not depend on bibtype class and on biblatexmode- (0-) stores the type information as a string however this is in my opinion no real caveat the previous code also contains something like `if(entrygettype()getname()  ""article"") which is now replaced by`if(entrygettype()  ""article"")` so often the name of the bibtype is used which somehow destroys the advantage _alternative solution_: store type information as an enum in the entry and convert this enum to a bibtype when neededthis approach keeps all the advantages but does not have the ""stringy problem"" it feels however a little bit overengineered (mainly because there are ""unknown"" types which are not covered by a simple enum) || refs #551  || - typedbibentry as a wrapper around bibentry typedbibentry has high level api bibentry has low level api- typedbibentry -> bibentry bibentry -> rawbibentry || rebased (not sure why there is a merge commit) and introduced typedbibentry aka goodeasygodbibentry (is this the correct way to implement it?) todo (other pr): bibdatabasegetresolvedfield should accept optional database || "
33,495,605,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"change entrytype to string in bibentry this pr tries to resolve the issues discussed in #337 and #495right now the entry type is converted from a string representation (in the bibtex file) to an entrytype by the parser the problem with this approach is that the parser has to know about the bibtex vs biblatex mode the idea was to just store the string in the bibentry and only get the corresponding entrytype whenever it is really necessary oh that change surely was much effort unfortunately i find the old way more fitting even though the bibtex / biblatex mode switching was difficult why not using `entrytype` but only as ""proxy"" to the real type dependent on the bibtex/biblatex mode? (i currently dont know the gof pattern name for that :see_no_evil:)all entries should have a (non-abstract) `entrytype` and there should be (abstract) `bibtexentrytype` and `biblatexentrytype` all of them should implement `ientrytype` offering `hasallrequiredfields`etc `entrytype`and `*entrytype` should not be in a inheritance relation `entrytype` should proxy to the appropriate bib(la)textype depending on the mode || thanks olly for your feedback let me elaborate a little about why ive chosen to store the entry type as a string the type of the entry is per se a state-less information `@article{}` signifies an article in the bib file independent on any preferences in jabref i think it it thus a good idea to also have a state-independent representation of the same information in jabref in other words i prefer a system where the type is stored in the `bibentry` class independent on anything else (much like the `author` field is also stored as a string and not as a `authorlist` object) then in a latter step this data can be enriched by the preference-dependent information about optional and required fields this reflects more or less the impression i got from #495 that we came to the conclusion to see the `bibentry` class only as a data object without any logic now you can think about implementing such a system in java the easiest way and the one i have chosen in this pr is to store the type as a string variable one can also store the type information as an enum (as i have suggested in #501) but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book) the second step is to augment this information by optional/required fields i have chosen a constructor-based approach but maybe your idea about using the proxy pattern is better i have to think about it more || regarding `string` vs `authorlist`: i would have preferred that bibentry uses `authorlist` possibly calculated on demand and not during creation of the object similar for the `files` fieldunsure whether im wrong i would pack as much ""interpreted"" data in bibentry and get rid of strings as much as possible maybe we then reimplement an in-memory relational database system for instance if we store the ""crossref"" as reference and not as string what if the referenced entry is deleted and then recreated etc || ok as requested here a short summary in bullet list form_status quo_: parser converts the string ""article"" to a bibtype class instance and saves this in the entry- (--) makes changing from bibtex to biblatex mode hard as the type stored in every entry has to be changed- (-) adds additional dependency in the parser (bibtypes class)- (-) the parser has to know whether we are in biblatexmode or in bibtexmode however a priori this information is not necessary to parse a bib file- (+) does not store the type information as a string_pr_: parser stores the type information as a plain string in the entry this string will be converted to bibtype class when needed- (+) changing from bibtex to biblatex mode is easier since the required/optional fields are used only in a few places - (+) makes dependencies clearer (which class needs to know the bibtype or bibtex/biblatex mode)- (+) parser does not depend on bibtype class and on biblatexmode- (0-) stores the type information as a string however this is in my opinion no real caveat the previous code also contains something like `if(entrygettype()getname()  ""article"") which is now replaced by`if(entrygettype()  ""article"")` so often the name of the bibtype is used which somehow destroys the advantage _alternative solution_: store type information as an enum in the entry and convert this enum to a bibtype when neededthis approach keeps all the advantages but does not have the ""stringy problem"" it feels however a little bit overengineered (mainly because there are ""unknown"" types which are not covered by a simple enum) || refs #551  || - typedbibentry as a wrapper around bibentry typedbibentry has high level api bibentry has low level api- typedbibentry -> bibentry bibentry -> rawbibentry || rebased (not sure why there is a merge commit) and introduced typedbibentry aka goodeasygodbibentry (is this the correct way to implement it?) todo (other pr): bibdatabasegetresolvedfield should accept optional database || "
34,647,648,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,partly implemented #647 added the possibility to copy the preview panel text not exactly what is requested in #647 but probably quite usefulnote that the key binding is not working (nor is the print preview key working) so ill open an issue for that i would change the changelog entry to just describe the added functionality without refering to the other issue as it suggest another approach in my opinion || lgtm :+1:  || please rebase then this can be merged in  || fixed and rebased ||
35,650,660,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,add test for parsing accents i tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser so the added test is rather useless but i figured it does not hurt to have more tests :)  
36,621,677,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,make bibtex parser more robust against missing newlines as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line) ie `% encoding: myencoding @article{}`actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content :+1: (except my minor comment) || corrected for some reason the code style was not imported correctly in intellij || hm i just use the default intellij code style :) || @tobiasdiez: what do you think should be done to fix the above issues completely? || @lenhard in my opinion jabref should add new lines after the encoding and preamble im working on a solution right now (including a bit of refactoring to make testing easier) || @tobiasdiez ok good to hear! ill concentrate on other issues then ||
37,669,677,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,make bibtex parser more robust against missing newlines as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line) ie `% encoding: myencoding @article{}`actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content :+1: (except my minor comment) || corrected for some reason the code style was not imported correctly in intellij || hm i just use the default intellij code style :) || @tobiasdiez: what do you think should be done to fix the above issues completely? || @lenhard in my opinion jabref should add new lines after the encoding and preamble im working on a solution right now (including a bit of refactoring to make testing easier) || @tobiasdiez ok good to hear! ill concentrate on other issues then ||
38,667,683,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"remove url sanitizer as it is malfunctioning and unclear where needed… also see #667@jabref/developers if someone knows a use case where this is needed and why we can try to reimplement it properly but this way it really makes no sense imho so then either `urldecoderdecode` or `uritoasciistring` converts `#` to `%23`? of course not impossible but seems like one has used the incorrect methods in that casei think the main things it does is replacing space with %20 in the urls and removing any `\url{}` commands there will probably be users that will run into problems but maybe one can add a url cleanup that does the corresponding thing?i think an alternative solution would just be to do a `replaceall(""%23""""#"")` at the end || the problem is that is really hard to correctly encode a url if we are not aware of its structure regardless of what methods we useso if we are not completely sure we need it we should probably not do this || :+1: sounds reasonable || @koppor what do you think about this? especially is it possible that users have a `url{\url{http://googlecom}}` in their bibfile? and what about escaping symbols for latex like `%`or `#`? || unsure the method comment states following:> make sure an url is ""portable"" in that it doesnt contain bad characters that break the open command in some  oses a call to this method will also remove \url{} enclosingsthat reads perfectly fineok i also read the following> // fixme: everything below is really flawed atmmaybe we should cleanup the url fields and not do the cleanup at the place of opening although i see the issue of malicious bib files which could have an url executing malicious code however that risk is so low that i would not count on itmeaning: :+1: and open a new issue for cleanup || "
39,410,690,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,simplify matching complexity of unlinked file finder reenables functionality #410 important point:- removed one fileexists check in fileutiljava expandpath  i think one check after replacing / and \ is enough without checking the expanded path with directory in front- cache is filled at initial creation for bibdatabase therefore no checks against the whole database are done for each file entry- parse logic for file field should moved from the filelisttablemodel to filefieldjavawe could still improve quite a lot here but maybe its good enough :tm: for now  
40,520,711,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,remove global sorting functionality refs #520 global file sorting options are removed sort functionality is still available but no localized to every file and the file sorting options are stored in the file @lenhard: i have already implemented the other half of #520 (make sorting configurable in database properties & write it to file) code is coming soon || @tobiasdiez: that feature has always been available :) ||
41,706,715,1,0,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"file based bibtex mode see #706changes- file based setting of bibtex/biblatex mode which is stored as a metadata in the bib file- if no metadata is found jabref tries to detect the mode by checking if there are biblatex entry types which results in biblatex mode and otherwise in bibtex mode (except one has set the biblatex mode setting in the global preferences in that case it would use the biblatex mode)- ui changes completely no restart necessaryplease provide feedback very very nice! :+1:  || any last comments @jabref/developers? i plan to merge this in soon as the effort to keep this pr up-to-date with master is really high due to the high amount of changes  || lgtm :+1:  || i cannot launch jabref at this branch:```exception in thread ""awt-eventqueue-0"" javautilnosuchelementexception: no value present        at javautiloptionalget(optionaljava:135)        at netsfjabrefspecialfieldsspecialfieldvaluegetaction(specialfieldvaluejava:108)        at netsfjabrefguibasepanelsetupactions(basepaneljava:1084)        at netsfjabrefguibasepanel<init>(basepaneljava:198)        at netsfjabrefguijabrefframeaddtab(jabrefframejava:1599)        at netsfjabrefguijabrefframeaddparserresult(jabrefframejava:1402)        at netsfjabrefjabrefopenwindow(jabrefjava:682)        at netsfjabrefjabreflambda$start$24(jabrefjava:133)```it works well on master || my above issue was #751 which now has been fixed by oscar in master || "
42,116,716,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,introduce save actions this pr introduces the save actions feature described in #116 it is possible to configure a `netsfjabreflogicformatterformatter` to be applied for the content of a specific field all formatters in `netsfjabreflogicformatter` are available to support file sharing the save actions are configured in the meta data of a file as a comment in the following syntax:```@comment{jabref-meta: saveactions:titlelowercasechanger}```this above save action applies the lowercasechanger for the content of every title field on savein the future we need to enable the configuration of save actions via the ui in the database properties  
43,621,718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"improve database writer the aim of this pr is to improve the database writer in particular fix #621 and #669 also add tests to the writer and parser (and do some refactorings to make test writing easier)changes (to serialization):- fix #621 and #669 by adding new lines after encoding and preamble the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry - comments and preamble are serialized with capitalized first letter ie `@comment` instead of `@comment` and `@preamble` instead of `@preamble` this should follow the convention for entries- there is no space anymore between `@string` and the bracket and after the bracket ie `@string{name  {string}}` instead of `@string { name  {string} }`- implemented [#756](https://githubcom/jabref/jabref/issues/756): add possibility to reformat all entries on save (under preferences file)refactorings:- renamed fileactions to bibdatabasewriter- merged code for export and save in bibdatabasewriter- extracted savesettings class from fileactions to own file and extended it (& renamed to savepreferences) note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden - change usage of arrays to list in many places- remove unused boolean parameters checksearch checkgroup- moved writing of metadata and customentrytypesmanager to bibdatabasewriter- extracted and reused gui code for displaying and editing sort preferences (saveorderconfigdisplay) could you rebase this on master as both pre-requisite prs are already merged in so this could be completed now  || one question: currently the save methods take parameters `boolean checksearch boolean checkgroup` which specify that only entries satisfying the active search / group selection are exported or saved as far as i can see these boolean parameters are always set to false (which means all entries are exported) should i remove both parameters? || i guess that if this is merged in first it should be quite ok to rebase #762 (although many changes are redundant)regarding your question: it would be nice to be able to save like this but i guess it is another of jabrefs almost finished/commented out and then removed features considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection id say remove || i think the code is now mature enough to be reviewed i added some notes above in the first post sorry that this pr is rather big || i also pushed it to the branch [jabref/databasewriter](https://githubcom/jabref/jabref/tree/databasewriter) so that a build should be available under http://buildsjabreforg/  || do we have the ""only update if it changed"" functionality for the preamble strings and comments as well? || for strings and the epilogue yes for the preamble kind of (the text in the preamble is stored and exactly rewritten but the preamble tag and newlines around it are not stored) for the metadata there is no such functionality || @tobiasdiez regarding the two parameters (https://githubcom/jabref/jabref/pull/718#issuecomment-178262570): arent they used for ""save selected as plain bibtex""? || @koppor no it is not used for this function ""save selected"" gets all the selected items and pass them to the save function the code in question reads``` javaif (selectedonly) {                session  fileactionssavepartofdatabase(                        panelgetbibdatabasecontext()                        file globalsprefs                        panelgetselectedentries() encoding fileactionsdatabasesavetypedefault)            } else {                session  fileactionssavedatabase(panelgetbibdatabasecontext()                        file globalsprefs false false encoding false)            }``` || please rebase i think this should be merged one suggestion regarding the savepreferences: you could create a new instance after the call of a setter this would result in the benefits of having final variables and it still allows to create derivations of this ```savepreferences prefs  new savepreferences(globalsprefs)savepreferences otherinstance  prefswithencoding(""utf8"")assert prefs ! otherinstance && !prefsequals(otherinstance)``` || rebased and implemented the `withencoding` suggestion (ie removed all setters in the preferencesyou really dont like them right? :smile: ) || in my case (jabref 32 on 32- and 64-bit windows the problem is not fixed original lines% encoding: windows-1250@preamble{{\providecommand{\noopsort}[1]{}}}   (or @preamble )are always changed to% encoding: windows-1250@preamble{{\providecommand{\noopsort}[1]{}}}after saving changed bib filekind regardsjanez komelj || @jkomelj you have to use the [latest development version](http://buildsjabreforg/master/) or wait for the release of 33 (probably in 1-2 weeks) || thank you || "
44,669,718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"improve database writer the aim of this pr is to improve the database writer in particular fix #621 and #669 also add tests to the writer and parser (and do some refactorings to make test writing easier)changes (to serialization):- fix #621 and #669 by adding new lines after encoding and preamble the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry - comments and preamble are serialized with capitalized first letter ie `@comment` instead of `@comment` and `@preamble` instead of `@preamble` this should follow the convention for entries- there is no space anymore between `@string` and the bracket and after the bracket ie `@string{name  {string}}` instead of `@string { name  {string} }`- implemented [#756](https://githubcom/jabref/jabref/issues/756): add possibility to reformat all entries on save (under preferences file)refactorings:- renamed fileactions to bibdatabasewriter- merged code for export and save in bibdatabasewriter- extracted savesettings class from fileactions to own file and extended it (& renamed to savepreferences) note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden - change usage of arrays to list in many places- remove unused boolean parameters checksearch checkgroup- moved writing of metadata and customentrytypesmanager to bibdatabasewriter- extracted and reused gui code for displaying and editing sort preferences (saveorderconfigdisplay) could you rebase this on master as both pre-requisite prs are already merged in so this could be completed now  || one question: currently the save methods take parameters `boolean checksearch boolean checkgroup` which specify that only entries satisfying the active search / group selection are exported or saved as far as i can see these boolean parameters are always set to false (which means all entries are exported) should i remove both parameters? || i guess that if this is merged in first it should be quite ok to rebase #762 (although many changes are redundant)regarding your question: it would be nice to be able to save like this but i guess it is another of jabrefs almost finished/commented out and then removed features considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection id say remove || i think the code is now mature enough to be reviewed i added some notes above in the first post sorry that this pr is rather big || i also pushed it to the branch [jabref/databasewriter](https://githubcom/jabref/jabref/tree/databasewriter) so that a build should be available under http://buildsjabreforg/  || do we have the ""only update if it changed"" functionality for the preamble strings and comments as well? || for strings and the epilogue yes for the preamble kind of (the text in the preamble is stored and exactly rewritten but the preamble tag and newlines around it are not stored) for the metadata there is no such functionality || @tobiasdiez regarding the two parameters (https://githubcom/jabref/jabref/pull/718#issuecomment-178262570): arent they used for ""save selected as plain bibtex""? || @koppor no it is not used for this function ""save selected"" gets all the selected items and pass them to the save function the code in question reads``` javaif (selectedonly) {                session  fileactionssavepartofdatabase(                        panelgetbibdatabasecontext()                        file globalsprefs                        panelgetselectedentries() encoding fileactionsdatabasesavetypedefault)            } else {                session  fileactionssavedatabase(panelgetbibdatabasecontext()                        file globalsprefs false false encoding false)            }``` || please rebase i think this should be merged one suggestion regarding the savepreferences: you could create a new instance after the call of a setter this would result in the benefits of having final variables and it still allows to create derivations of this ```savepreferences prefs  new savepreferences(globalsprefs)savepreferences otherinstance  prefswithencoding(""utf8"")assert prefs ! otherinstance && !prefsequals(otherinstance)``` || rebased and implemented the `withencoding` suggestion (ie removed all setters in the preferencesyou really dont like them right? :smile: ) || in my case (jabref 32 on 32- and 64-bit windows the problem is not fixed original lines% encoding: windows-1250@preamble{{\providecommand{\noopsort}[1]{}}}   (or @preamble )are always changed to% encoding: windows-1250@preamble{{\providecommand{\noopsort}[1]{}}}after saving changed bib filekind regardsjanez komelj || @jkomelj you have to use the [latest development version](http://buildsjabreforg/master/) or wait for the release of 33 (probably in 1-2 weeks) || thank you || "
45,756,718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"improve database writer the aim of this pr is to improve the database writer in particular fix #621 and #669 also add tests to the writer and parser (and do some refactorings to make test writing easier)changes (to serialization):- fix #621 and #669 by adding new lines after encoding and preamble the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry - comments and preamble are serialized with capitalized first letter ie `@comment` instead of `@comment` and `@preamble` instead of `@preamble` this should follow the convention for entries- there is no space anymore between `@string` and the bracket and after the bracket ie `@string{name  {string}}` instead of `@string { name  {string} }`- implemented [#756](https://githubcom/jabref/jabref/issues/756): add possibility to reformat all entries on save (under preferences file)refactorings:- renamed fileactions to bibdatabasewriter- merged code for export and save in bibdatabasewriter- extracted savesettings class from fileactions to own file and extended it (& renamed to savepreferences) note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden - change usage of arrays to list in many places- remove unused boolean parameters checksearch checkgroup- moved writing of metadata and customentrytypesmanager to bibdatabasewriter- extracted and reused gui code for displaying and editing sort preferences (saveorderconfigdisplay) could you rebase this on master as both pre-requisite prs are already merged in so this could be completed now  || one question: currently the save methods take parameters `boolean checksearch boolean checkgroup` which specify that only entries satisfying the active search / group selection are exported or saved as far as i can see these boolean parameters are always set to false (which means all entries are exported) should i remove both parameters? || i guess that if this is merged in first it should be quite ok to rebase #762 (although many changes are redundant)regarding your question: it would be nice to be able to save like this but i guess it is another of jabrefs almost finished/commented out and then removed features considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection id say remove || i think the code is now mature enough to be reviewed i added some notes above in the first post sorry that this pr is rather big || i also pushed it to the branch [jabref/databasewriter](https://githubcom/jabref/jabref/tree/databasewriter) so that a build should be available under http://buildsjabreforg/  || do we have the ""only update if it changed"" functionality for the preamble strings and comments as well? || for strings and the epilogue yes for the preamble kind of (the text in the preamble is stored and exactly rewritten but the preamble tag and newlines around it are not stored) for the metadata there is no such functionality || @tobiasdiez regarding the two parameters (https://githubcom/jabref/jabref/pull/718#issuecomment-178262570): arent they used for ""save selected as plain bibtex""? || @koppor no it is not used for this function ""save selected"" gets all the selected items and pass them to the save function the code in question reads``` javaif (selectedonly) {                session  fileactionssavepartofdatabase(                        panelgetbibdatabasecontext()                        file globalsprefs                        panelgetselectedentries() encoding fileactionsdatabasesavetypedefault)            } else {                session  fileactionssavedatabase(panelgetbibdatabasecontext()                        file globalsprefs false false encoding false)            }``` || please rebase i think this should be merged one suggestion regarding the savepreferences: you could create a new instance after the call of a setter this would result in the benefits of having final variables and it still allows to create derivations of this ```savepreferences prefs  new savepreferences(globalsprefs)savepreferences otherinstance  prefswithencoding(""utf8"")assert prefs ! otherinstance && !prefsequals(otherinstance)``` || rebased and implemented the `withencoding` suggestion (ie removed all setters in the preferencesyou really dont like them right? :smile: ) || in my case (jabref 32 on 32- and 64-bit windows the problem is not fixed original lines% encoding: windows-1250@preamble{{\providecommand{\noopsort}[1]{}}}   (or @preamble )are always changed to% encoding: windows-1250@preamble{{\providecommand{\noopsort}[1]{}}}after saving changed bib filekind regardsjanez komelj || @jkomelj you have to use the [latest development version](http://buildsjabreforg/master/) or wait for the release of 33 (probably in 1-2 weeks) || thank you || "
46,738,739,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,use urldownload instead of getresults for fetching stuff relates to #738 fixed some things in gvkparser to hopefully get rid of the final coverity warnings there not sure why the tests fail although it is related to internet connections i cannot really see that it has anything to do with the things ive modified since those fetches rely on unirest and not urldownload || seems like the tests pass now (without changing anything) i removed some coverity warnings as well so that i just didnt repush the same stuff twice ||
47,751,752,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fixed #751 this should fix #751 should be merged in without waiting for confirmation  
48,741,755,1,0,0,1,0,1,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,0,fix npe at saving does not reset save flag #741 fix #741 (and a lot of other null pointer exceptions) gettype and getstandardtype now return an optional instead of possible null values looks good to me! :+1:  || would be cool if we can increase the test coverage especially for the newly created branches otherwise lgtm :+1:  || i added tests for all uncovered branches in typedbibentry and after two lgtm will merge this in @oscargus have fun rebasing :smile:  ||
49,762,793,1,0,0,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,[wip] more list<bibentry> instead of bibentry[] instead of #762 ahh wasnt ready to be merge yet ill create and merge the final corrections (and open an issue as it turned out that the problem i tried to solve wasnt introduced here) || hm sorry i was in a merge frenzy  :( || no worries fixed now ||
50,789,799,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"better preference for default file-based mode see #789- description rewritten to say ""default tex mode""- dropdown for bibtex & biblatex- moved to general tab- decided to keep old boolean preference to avoid preference migration for now![image](https://cloudgithubusercontentcom/assets/2141507/13001725/da5d74fa-d168-11e5-861e-4253cebad216png)@jabref/developers wdyt? `tex` is misleading as this lets me think about pdflatex and latex or pure tex maybe ""default bibliography mode"" as we treat the bibliography? || :+1: two minor remarks:- i would write ""bibtex"" and ""biblatex"" instead of everything upper case (what are our convention on this?)- you can rename jabrefpreferencesbiblatex_mode to something containing defaut without forcing migration (ie leave the underlying string unchanged) || the spelling is discussed at https://githubcom/koppor/jabref/issues/73 bibtex is set but biblatex or biblatex is not yet finally decided || looks good to me  || "
51,824,828,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,mimetypedetector improvements see #824- added a http stubbing library- added a redirection test- added a mime type variation test- changed detection implementation to httpurlconnectionlooks like it works @koppor do you know how to host files and redirection on wwwjabreforg? || file hosting: even though it is possible to add files by adding them to https://githubcom/jabref/wwwjabreforg (gh-pages branch) i would propose to create a new url `testjabreforg` where we host such files we should not mix pagesredirections: they are possible at github using html redirects: https://helpgithubcom/articles/redirects-on-github-pages/ however these are not the redirects we are aiming for i can setup `testjabreforg` on my private server and create some redirects || ok we can mock the http request via wiremock should be way better than having an external dependency to our homepage ||
52,492,842,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,fixed #492: all text is copied if nothing is marked and preview of pa… fixed #492when nothing is selected the whole field is copied if the field is empty the right click copy item is disabledpreview of text to be pasted in tool tip now maximum 20 characters should it be longer?  
53,454,858,1,0,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,tab for remaining fields see #454 when is this updated? will this update on the fly if i change the config? || dont think so as the fieldeditor is somehow cached i think || what is the state here? what is missing to get this merged? || @stefan-kolb is working on it i removed the label to make it clear that is currently under work  || think its ok to merge ||
54,859,864,1,0,0,0,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,add dialog to show all preferences in their raw form plus some filtering relates to #859- adds a dialog which shows all preferences in a table by their type key value and default value - table can be sorted- table can be filtered to show only the preferences which deviate from their default value this is the most helpful one - and it revealed various bugs when having a closer look :)- count is shown as well- reachable through options -> preferences -> show preferences (button is below import/export preferences)- converts default values of null to empty string- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [ ] tests created for changes? mostly gui changes testing makes not that much sense here- [x] tests green? looks good to me! just rebase on master and this can be merged || looks good! some minor comments which probably can be ignored/fixed later ||
55,815,874,1,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"fixing openoffice citation with curly braces and manual connection browsing - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green?fixed #856: clicking on browse for manual openoffice does now workfixed #815: curly braces in oo/lo citation no longer ignored- code cleanup: replaced actionlistener with lamdbasone point for discussion: defaultformbuilder (jgoodies) is deprecated is there already a replacement for the creation? i found this thread:http://stackoverflowcom/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder@oscargus  @koppor regarding defaultformbuilder: there is an alternative jgoodies approach however it has been decided to leave it as is as a javax conversion is planned (any year now)i havent looked at the code carefully but what happens with {} around eg capitals? || ah thanks for your hint yeah it seems like it needs more checking for special cases i will try to come up with a solution to this i noticed that the authors name arp{\\i}rez then appears as arp{i}rez et al [2003]  || i tried some variants eg adding the curly braces ""manually"" before and end` if (stringutilisincurlybrackets(field)) { //braces at the start and the end of the string```        sbinsert(0 ""{"")        sbappend(""}"")        systemoutprintln(""in curly braces sb "" + sb)    }    return sbtostring()replace(""&dollar"" ""$"") // replace &dollar with $````this works well for authors however the problem is that i have no control over the field type this creates then a problem when you have an entry with curly braces around the title field those curly braces would then be printed in the generated bibliographyany ideas appreciated || i havent tried it but i think that oobibbasegetcitationmarkerfield is the place to try basically:1 check if there are surrounding braces2 format (using the old formatter that removes all braces)3 if there were surrounding  braces add them back before returning the formatted stringa potential problem is author lists which starts and ends with braces but are not enclosed say `{\aa}sa stor{\aa}` but there are methods for checking that in #863 (integritycheckbracketchecker) so as long as the basic mechanism is working one can always improve step 1 later || thanks for your tip i think i found a working solution in fact i copied the method and added a check for curly braces (code is based on the integrity checker) like you proposedthe copied method is manual tests look promising i will add some unit tests  || found a solution by enhancing the stringutil method and by adding a check for curly brackets in`getauthorcitationmarkerfield`the only thing which bothers me is that it is kind of ""double code"" i thought about this but did not come up with a nice solution maybe one of you has an idea || i think you can simply check if field is ""author"" or ""editor"" in the old method not 100% correct but there are other methods using similar logic(i guess ideally each field of the predefined entry types should have properties eg if it is a name field) || apart from that i think the pr looks good to go!(i believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field but hardly anything important) || "
56,856,874,1,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"fixing openoffice citation with curly braces and manual connection browsing - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green?fixed #856: clicking on browse for manual openoffice does now workfixed #815: curly braces in oo/lo citation no longer ignored- code cleanup: replaced actionlistener with lamdbasone point for discussion: defaultformbuilder (jgoodies) is deprecated is there already a replacement for the creation? i found this thread:http://stackoverflowcom/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder@oscargus  @koppor regarding defaultformbuilder: there is an alternative jgoodies approach however it has been decided to leave it as is as a javax conversion is planned (any year now)i havent looked at the code carefully but what happens with {} around eg capitals? || ah thanks for your hint yeah it seems like it needs more checking for special cases i will try to come up with a solution to this i noticed that the authors name arp{\\i}rez then appears as arp{i}rez et al [2003]  || i tried some variants eg adding the curly braces ""manually"" before and end` if (stringutilisincurlybrackets(field)) { //braces at the start and the end of the string```        sbinsert(0 ""{"")        sbappend(""}"")        systemoutprintln(""in curly braces sb "" + sb)    }    return sbtostring()replace(""&dollar"" ""$"") // replace &dollar with $````this works well for authors however the problem is that i have no control over the field type this creates then a problem when you have an entry with curly braces around the title field those curly braces would then be printed in the generated bibliographyany ideas appreciated || i havent tried it but i think that oobibbasegetcitationmarkerfield is the place to try basically:1 check if there are surrounding braces2 format (using the old formatter that removes all braces)3 if there were surrounding  braces add them back before returning the formatted stringa potential problem is author lists which starts and ends with braces but are not enclosed say `{\aa}sa stor{\aa}` but there are methods for checking that in #863 (integritycheckbracketchecker) so as long as the basic mechanism is working one can always improve step 1 later || thanks for your tip i think i found a working solution in fact i copied the method and added a check for curly braces (code is based on the integrity checker) like you proposedthe copied method is manual tests look promising i will add some unit tests  || found a solution by enhancing the stringutil method and by adding a check for curly brackets in`getauthorcitationmarkerfield`the only thing which bothers me is that it is kind of ""double code"" i thought about this but did not come up with a nice solution maybe one of you has an idea || i think you can simply check if field is ""author"" or ""editor"" in the old method not 100% correct but there are other methods using similar logic(i guess ideally each field of the predefined entry types should have properties eg if it is a name field) || apart from that i think the pr looks good to go!(i believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field but hardly anything important) || "
57,295,877,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"add ability to run arbitrary formatters as cleanup actions add ability to run arbitrary formatters as cleanup actions by reusing save actions thus some old cleanup entries could be removed this also implements/fixes #295 moreover an erase formatter is added which just deletes the corresponding field![untitled](https://cloudgithubusercontentcom/assets/5037600/13373692/d6ea20c2-dd6e-11e5-93d2-346a0bd30634png)code changes:- rename saveactions to fieldformattercleanups- some smaller refactorings to reuse saveactions (mainly to separate them from metadata):- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green? i think it would look better if the check boxes were aligned vertically  || ![untitled](https://cloudgithubusercontentcom/assets/5037600/13378951/a13543c2-de17-11e5-88f1-b1097e913f4fpng)you are right! || when i compare both uis (before/after) this pr we loose a lot of documentation and guidance for the user because how the user has to think which formatters would be well suited for which fields to be helpful making it harder to configure it correctly we need to find a way to fight this why not add a section about suggestions which can be checked/unchecked and upon change change the table with the actions as well? || all the previous cleanup actions appear as the default value for the field formatters:```activeformattercleanupsadd(new fieldformattercleanup(""date"" bibtexfieldformattersdate))activeformattercleanupsadd(new fieldformattercleanup(""month"" new monthformatter()))activeformattercleanupsadd(new fieldformattercleanup(""title"" new casekeeper()))activeformattercleanupsadd(new fieldformattercleanup(""title"" new unitformatter()))activeformattercleanupsadd(new fieldformattercleanup(""title"" new latexformatter()))activeformattercleanupsadd(new fieldformattercleanup(""title"" new htmltolatexformatter()))```so opening the cleanup dialog for the first time shows essentially the same information as previously (this is not apparent from the screenshots since i already removed some of the default values)i could add a button which resets the field formatters to their default value (or if you prefer adds the default formatters)  || - make paths of linked files relative if possible could also be a formatter and hence added to the save actions- a button which resets to the defaults is a good idea- we really need to think how the formatters can be better explained to the user would it make sense if each formatter itself has a short localized description how it works similar to the sentences used before which are shown in the table as well? || new update with:- reset button (in cleanup dialog as well as in database properties dialog)- add descriptions of the formatters as tooltips in the list and in the combo box (not ideal but better then nothing)  ![untitled](https://cloudgithubusercontentcom/assets/5037600/13585691/825ade24-e4bd-11e5-88a3-3033f6096e96png)adding the ""make paths relative"" cleanup as a save action should be covered with #878 i dont want to implement this cleanup as a formatter (formatters are just in-out converters without any side-effects) || - [x] keep name concept key is for serialization name is for display description is a long text- [ ] improve keys and names of formatters - separate issue #920 with a table: key and name  - eg `unit` as key  - eg name: dateformatter -> normalizedatetoyyyymmdd- [x] add description text as box below the line of ""enter field name"" updated upon change of dropdown  - eg ""normalizes dates "" || added now a description text box from my side this pr can be merged in the only missing thing is the naming of the formatters but i would prefer if this would be a separate pr (not sure how much time i have the next days and since this is a blocker for 33)![untitled](https://cloudgithubusercontentcom/assets/5037600/13647844/3c4b6e56-e636-11e5-8a35-ff118ba1ab3epng) || last point: what happens when the description is longer than this line? does it wrap automatically? does it allow to use newlines for formatting? || since this is just an jlabel all the nice limitations and/or features come along so no there are no automatic line breaks except if you put everything around <html> tags and you also need to use `<br>` for a new line  || hm this limits the description we can display there nevertheless i think it is best to merge it for now and then do the improvements in another pr just rebase and get this in || i really like it and only have minor issues which i also can file as separate issue if it is too much effort to resolve nowis it possible to display a description with ""the given field"" in place of the field name if no field is given? reason: i find the empty description irritating and thought that the content of the white box was the descriptionabove at ""save sort order"" one can select a field i would have expected the same choice for the selection of the fields to apply the save action reason: i am too lazy to input the field name manuallyi experience layout issues at the end - the dialog height should be the size of all content including the white box shouldnt it?![grabbed_20160313-212741](https://cloudgithubusercontentcom/assets/1366654/13731147/ab897bee-e962-11e5-84ff-a9546b62021epng) || i added your suggestion about adding ""the given field"" could you please open an issue for the other things? thanks!ill now merge this in  || "
58,466,879,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix #466: rename pdf cleanup now also changes case of file name fixes #466- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green? please remove the unused imports according to the codacy warnings otherwise i think it is fine ||
59,883,884,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fixed #883 should solve #883- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes? no tests already passed this is a gui issue- [x] tests green? yes merging this as the changed visibility of the constructors prohibits a proper build at the moment || if you pass null to the database then getresolvedfield is invoked with a null database thus the crossref functionality is not supported in the rename pattern i think this is not a big deal but easy to fix (just pass the right db) || i think that at the moment null is always passed in the code(which also means that it the two one- and two-argument constructors areonly used in tests they can be removed and nulls passed which of course isthe current behaviour but seems to make more sense to provide alternativeconstructors if they are used in actual code) ||
60,890,903,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fixed #890 this should fix #890 - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [ ] tests created for changes? not relevant- [x] tests green? :+1:  || i think the method ```public string dolayout(bibentry bibtex bibdatabase database) {        return dolayout(bibtex database null)    }```in layoutjava should be changed too and then there is ```@test    public void testhighlightinginvalidparameter() {        string content  ""test word content""        textarea ta  new textarea("""" content)        //should not matter at all        tahighlightpattern(null)    }```which also sets the highlightpattern to nullthus i would expect (ie add test for it) that an npe is thrownotherwise :+1:  || i think that is the method i changed is there another method (i searched but rather quickly)?yes the layout package could benefit from more testing || no you are rightyou exactly changed the method i mentioned my bad :smile:what i meant in the second part is that setting the higlightpattern to null does not throw an exception (since the test pass) although i would have expected one so probably a objectsrequirenonnull is missing somewhere || but there is a corresponding method in layoutentry which i think should be fixed as wellah ok! ill have a look (or maybe the highlighter is never invoked in the test case?) || i fixed the other place as well but happened to change to more use of switching in the long term it would make sense to change the integers now used to an enumerationi also realized that all `\n` are stripped from the fields when doing a layout so even though eg htmlchars will convert the line breaks to something clever they are not there anymore once the formatter is invoked not sure where they go missing though || :+1:  || "
61,455,915,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add button in preference dialog to reset preferences implements #455 and/or https://githubcom/koppor/jabref/issues/47- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes? - only ui change- [x] tests green? nice looks good but i would add a note that resetting the perferences requires a restart (see change the language or the remote settings)  || good point an info message is now shown || looks good to me  ||
62,707,925,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,add tests for metadata parsing this solves #707 and prepares the way to refactor the metadata classi added a few methods to the metadata class to make testing more convenient many calls to getdata() in fact can be replaced by these new methods i think this is something for a new prone question: to write the tests in a nice way i had to overwrite a few equals methods in particular for the lowercasechanger should i also override equals for all other formatters? :+1:  || when is the equals required (except for simplifying this test)? seems like one can add them later if requiredthe pr looks good! || no as far as i can see equals is never used for the formatters (and also no getkey()equals which could be replaced with an internal equals) ||
63,649,926,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"key bindings are now working in preview panel fixes #649until now the toolbar within the preview panel held the key bindings which werent active when the toolbar wasnt created now the preview panel itself carries the key bindings- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [ ] tests created for changes?- [x] tests green? looks good to me :+1:  || looks good! :+1: || - please extract the setting of the key bindings as a method otherwise looks good to me too - for each action one has to register a string two times one at the input map and one in the action map eg ""print"" can you extract variables so that this is made more clear? a local variable for each of the blocks should suffice making it a constant moves it away from the code in question hence just create a local one  || extracted the key bindings and the actionmapkeys || :+1:  || "
64,410,929,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"""find unlinked files"" freezes when using for pdf 1 fixed #410 reason was an illegalargumentexception thrown by doi class when pasting the contents of the whole first pdf page to the constructor2 the doi class can only handle real dois and does not extract strings that might look like a doi from the text therefore the whole doi scraper was removed in https://githubcom/jabref/jabref/commit/acdcd829c304e03b9bfd92d6eba383b5a1d521083 the whole pdfimporter class is screwed and a monkeypatch it should be reimplemented from scratch 1/2: the usage of dois was requested by a user: if the pdf contains a doi string the data of the doi should be used and not the guessed content - with old jabref code that code worked do you have a proposal to bring that functionality back?3: the parsing results are better for springer and ieee papers than with other existing open source scrapers and mr dlib that fact has to be regarded too || the doi finding should work again now but the doi class has quite some redundant code now as i need to exclude spaces from the findintext regex i dont know if there are any dois out there that include spaces but theoretically it seems to be allowed || for me `src/test/resources/encryptedpdf`is not raising any exception also `importentries` is not throwing any `ioexception` which is propagated to other methods later on the functionality is really flawed || spaces should be encoded as %20 in a doi so i do not think it will be a problem see https://wwwdoiorg/doi_handbook/2_numberinghtml#2524i seem to recall that we changed the encoding of dois at some stage maybe this should be revisited? || so you mean we can replace the exact_doi pattern with the doi_pattern?! ||"
65,796,947,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"[wip] fix for undoing deletion/cutting multiple entries workaround for #796when an undo with multiple entries is undone each entry is undone one at a time the problem herein lies that when the first entry is undone the insertion in the database triggers the creation and insertion of an namedcompund into the undomanager which kills the main undo (the one with the multiple entries) which result in just one entry being undonewith this workaround each entry has its own namedcompund which solves the problem but the user has to call the undoaction several times (ctrl-z for each entry)- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [ ] tests created for changes?- [x] tests green? im unsure whether this is the correct behavior: if i delete multiple entries at once all of them should be restored i thought that the undo/redo concept of jabref is that always undo and redo actions are packaged as a wholeis it a valid workaround to globally flag whether an redo/undo action is in progress and thus no new undo thing is put on the undo stack || i would also prefer that the undo stuff is fixed so restoring several bibentries works  || but good that you found out the reason for the failing multiple entries! :+1: || ok ill look further into it and search for a better solution! || @bartsch-dev can you point me to the code where the insertion adds a new change in the undomanager? as far as i see the revert action just calls databaseinsert() which does not call the undo manager thanks || when an entry is about to being restored [`undoableremoveentry#undo()`](https://githubcom/jabref/jabref/blob/master/src/main/java/net/sf/jabref/gui/undo/undoableremoveentryjava#l62) is calledthe entry is inserted back into the database which fires a [`databasechangeevent`](https://githubcom/jabref/jabref/blob/master/src/main/java/net/sf/jabref/model/database/bibdatabasejava#l185) and calls [`specialfielddatabasechangelistener#databasechanged(databasechangeevent e)`](https://githubcom/jabref/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/specialfielddatabasechangelistenerjava#l25) and adds another edit into the `undomanager`if we follow that trail we see that the `undomanager` trims the edits (line 502) which calls `die()` (line 244) and kills the `namedcompound`which contains the other entries we havent undone yet || i wonder whether it is a solution to add a second paramter to `insertentry` indicating whether the action should be a silent change or not - or add a second method `insertentrysilently` || thank you @bartsch-dev for you helpful explanation! i think the cleanest way is to remove the `specialfielddatabasechangelistener` and let the calling code handle the undo-management ie if i call databaseinsert() then i also have to create the undo event there otherwise we have problems everywhere with handling multiple changes (undo an import?) i think this strategy is also applied everywhere else at least the group interface handles the undo thing itselfbut maybe you come up with another solution || when removing the `specialfielddatabasechangelistener` it should be taken care that the special fields still work currently the fields are stored in the keyword field and are put into normal fields to enable rendering in the table if the `specialfielddatabasechangelistener` is removed this rendering imho wont take place any morewhen we rewrite the special fields (https://githubcom/koppor/jabref/issues/84) this might change || another working solution i found was to create a new `undoableedit` which manages multiple entries with a list when undoing the removal it uses the new `addentries()`-method inside `bibdatabase` which adds all the entries and after that finally fires the databasechanges || @koppor @tobiasdiez wdyt? || as i explored deeper into the code i noticed that the undo which the `specialfielddatabasechangelistener` adds doesnt do anything basically its an empty `namedcompund` (which gets discarded by the `undomanager`)can that confirm anyone? || currently without code here but double check that the stars in the columnrating are displayed in all undo cases deleting/adding an entry is ok butwhat about undo/redo of adding keyword ""rank1"" in the keyword field? - myfeeling is that undo/redo if that wont work when the updatelistener ischangedalso if an entry with keyword ""rank1"" is added -> is the column ""ranking""updated to show one star? || the [`specialfielddatabasechangelistener`](https://githubcom/jabref/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/specialfielddatabasechangelistenerjava#l18) only reacts on the insertion of entrieson another note when changing the rank of an entry you have to click into the entry list to repaint it but i think there was opened an issue on that a short time ago || i deleted the `specialfielddatabasechangelistener` and adjusted l10nas far as i can tell everything works just fine (tested it with deleting/undoing entries with rank/marked/color marked @tschechlovdev maybe you can do some additional testing?)i removed the id generation in `undoableremoveentry` since its not necessaryi have no idea why circleci fails and how to fix it || ```:compilejava/home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/gui/basepaneljava:1324: error: cannot find symbol        databaseadddatabasechangelistener(specialfielddatabasechangelistenergetinstance())                                           ^  symbol:   variable specialfielddatabasechangelistener  location: class basepanel```should be quite obvious what is wrong and not be that hard to fix?! || woops i slipped there i extracted some code for another bugfix which will get its own pr and extracted too muchnow all checks pass but before that the build on circleci exceeded the memory of 4g (no typing error but i think circleci meant 4gb) and failed || lgtm :+1:its nice that a bug can be fixed by removing code || special fields functionality is disturbed by this patch## steps to reproduce1 open [special-fieldsbib](https://githubcom/jabref/jabref/blob/master/src/test/resources/testbib/special-fieldsbib)2 double click on second entry (key: entry-with-rank2)3 go to ""bibtex source""4 copy the complete string into notepad++5 close the entry editor6 change `rank2` to `rank4` in both the key and the keywords field7 mark everything8 copy into the clipboard9 focus jabref ensure that the entry editor is really closed10 click into the white area11 paste the entry (using ctrl+v)12 expected: four stars shown at ranking column as is: no stars shown at ranking column![grabbed_20160412-083537](https://cloudgithubusercontentcom/assets/1366654/14451731/8d057f68-0089-11e6-898b-60117395ad0cpng)## intermediate solution1 open the editor2 go to the ""general"" tab3 change `rank4` to `rank3`4 save5 change `rank3` to `rank4`## general remarksi know that the keyword-based synchronization is a code which is not that straight forward as other code in jabref i personally like the functionality to have columns shown which are based on keywords i made the reason might be that i sometimes edit my bibtex files manually which also [nearly half of the survey participants do](http://wwwjabreforg/surveys/2015/analysis) || thanks for that detailed explanationimo the addition of the undo-object in [`specialfielddatabasechangelistener`](https://githubcom/jabref/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/specialfielddatabasechangelistenerjava#l25) is not usefulmostly because its added before the more important undo-object the undo of the entry paste and when you undo the paste this undo-object is irrelevant  || @bartsch-dev could you add an integrationtest meaning a test for the ui demonstrating the undo/redo behavior? then we dont have to rely on the [above manual steps](https://githubcom/jabref/jabref/pull/947#issuecomment-208730863) for testing @bruehldev and @braunch should be the experts in ui testing || ill do it it the next sprint which starts today || ## [current coverage](https://codecovio/gh/jabref/jabref/pull/947?srcpr) is **2755%**> merging [#947](https://codecovio/gh/jabref/jabref/pull/947?srcpr) into [master](https://codecovio/gh/jabref/jabref/branch/master?srcpr) will decrease coverage by **-091%**``` diff@@             master       #947   diff @@  files           700        695     -5     lines         46231      46292    +61     methods           0          0            messages          0          0            branches       7631       7649    +18   - hits          13158      12753   -405   - misses        31949      32439   +490   + partials       1124       1100    -24   ```1 5 files (not in diff) in `/net/sf/jabref/event` were deleted [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6576656e74)2 1 files (not in diff) in `n/java/net/sf/jabref` were deleted [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a6162726566)3 2 files (not in diff) in `va/net/sf/jabref/sql` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f73716c)    - misses `+1`4 2 files (not in diff) in `jabref/specialfields` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f7370656369616c6669656c6473)5 2 files (not in diff) in `f/jabref/model/entry` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6d6f64656c2f656e747279)    - misses `+9`    - partials `+1`    - hits `+8`6 2 files (not in diff) in `abref/model/database` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6d6f64656c2f6461746162617365)    - misses `+3`    - partials `+1`    - hits `-1`7 2 files (not in diff) in `sf/jabref/logic/util` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f7574696c)    - misses `+16`    - partials `-4`    - hits `-12`8 2 files (not in diff) in `f/jabref/logic/msbib` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f6d73626962)    - misses `+345`    - partials `-14`    - hits `-302`9 4 files (not in diff) in `jabref/logic/cleanup` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f636c65616e7570)    - misses `-1`    - hits `-4`10 6 files (not in diff) in `/net/sf/jabref/logic` were modified [more](https://codecovio/gh/jabref/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f676963)     - misses `+24`     - hits `-42`> powered by [codecov](https://codecovio?srcpr) last updated by [50fe6d7d2d8096](https://codecovio/gh/jabref/jabref/compare/50fe6d7499239fa2f04354697411495b79691e74d2d809637d7f03dfb1d634f6cfdb706a653afd01) || lgtmplease rebase to allow it to be marged || please resolve the conflicts || i rebased and resolved the conflicts || tests fail in master can you have a look? otherwise i will revert this merge  || hm thats very strange (the tests in this pr passed)i will look into it || after a quick study i noticed that assertj is simply to fast for jabref meaning that the entry table after opening the database is simply not loaded and thus cannot be found by increasing the delay between events from assertj (`robot()settings()delaybetweenevents(500)`) it can be averted but i dont like it that way as it depends on the power of the executing machinei will look further into it tomorrowyou can revert the merge if you like that way we can have a clean commit without a mess in between || the test seems to fail randomly :(making it stable enough is fine for me  || @bartsch-dev  have you tried using robot()waitforidle() ? this should wait until the ui loaded the table without defining a timeout that slows the tests down on faster machines || that doesnt worka simple solution was to open an empty table at the very beginning that way the loaded database opens without delayill open a new pr in a second || "
66,920,974,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,always trim fields on save and remove trimformatter the consensus in #920 was that fields should always be written without leading or trailing whitespace this is done in this pr and the trimformatter is removed(by the way empty fields are never written as one of the added tests shows) - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green? lgtm ||
67,978,979,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,refactored singlebibtexfield based on the initial ideas in #978 the class singlebibtexfield is extracted and two enumsets are used for implementing the existing functionality very good points! too much copy-paste (as usual) will sort it out tomorrow || looks good other improvements can be made in separate prs  ||
68,623,988,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,when clicking on a tab the first field now has the focus - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green?this is referes to #623 i just had to add the activatevisible() method to the changelistener to ensure the focus is set what happens if i am scrolling through the list of entries in the table via the keys? does the focus can jump away to the field editor if it is open? from what i recall we had the issue i mentioned before and had to remove the functionality to automatically focus the first field please test this exhaustively with different entry editors for different entry types open and then scrolling via keys || i am going to figure that out after our exam this week so your comment is recognized :) || i had a chat with @koppor  today @bruehldev  and i will write an automated test for this in our upcoming sprint (starting on monday 25th april) when this is done we should have verified if the focus is lost on scrolling or not || what is the current status here? || i have run the integration tests on it and tried it manually the entry tables focus is not lost when going through the entries only when opening the entry editor as intended || i wonder why the travis jobs are not executed? because you violate the correct imports order and this cannot be merged without the build failing at the moment || i will fix the order soon probably on friday maybe pushing on the branch will then trigger the jobs again || lgtm :+1: just fix the import order (and improve the changelog) then this can be merged in from my point of view || can this be merged? || why did the gradlew scripts change? || otherwise lgtm || gradle scripts are back to normal || ok :+1:  ||
69,991,996,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,1,1,0,1,0,0,0,0,fix entry deletion from database fixes #991 a bug introduced in b3aee00bae8b589aa1252ef182f8b3293d06bd69while moving from `map` to `list` as the data structure for the stored `bibentries` is has been forgotten to adjust the `removeentry`-method- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green? is it really impossible to add a test case? || enhanced the tests a little bit and added a null-check while inserting an object into the database || lgtm :+1:  || thanks for fixing the bug i had introduced the changes look goodplease try to adhere to the convention for tests outlined in the wiki https://githubcom/jabref/jabref/wiki/code-howtos#test-cases especially the naming of the tests and only one test per test method comments test methods shouldnt be necessary but the test name should contain all the information  || after some minor naming improvements this can be merged in in my opinion good job ||
70,957,999,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,db properties layout and save order config changed - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests green?fixes  #957  and #958 fix height of the dialog and add spacing between ok/cancel button and  borderchanged jcomboxbox to editable and removed the unnecessary textfieldsadded jcombobox for selecting the fields to apply the selected formatter tochanged position of delete buttonremoved indexoutofbound exception when no item is selectededit// i just see this pr is #999 ) is it possible to write a simple ui test for it? :innocent:refs #507  || ui-test i will try to write one || added gui test und fixed checkbox label not displaying correclty || the code looks good so i give my :+1: for merging if you add a nice looking screenshot :smiley:  || @tobiasdiez  here you are:![dbproperties](https://cloudgithubusercontentcom/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537acpng) || @oscargus  i tried to fix this but i could not get the damn jlist resized horizontally or vertically i tried around a lot the code for this is located in `fieldformatterscleanuppanel`from this one it sounded very simple:http://alvinalexandercom/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizingshtmledit// this is how it scales after my fix![dbpropertiesresized](https://cloudgithubusercontentcom/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8png) || my code did everything except horizontal sizing (and i also tried alot) so check there for possible hints i think that when spanningmultiple columns using a fourth alignment argument to xyw is one thing || @siedlerchr : i think it is good to go so please rebase and it can be merged(i reserve the right to fix/change(?) the scaling at some stage :-)) || @oscargus  okay otherwise i would have looked at the gui resizing in more detail the next days || @siedlerchr up to you i just wasnt sure what the status of the pr was and was thinking of merging it (if it was possible) feel free to look at the resizing :+1:  || @oscargus  as i just rebased it on the master i would suggest merging it for once now so that the biggest changes (eg the comboxes) are into itthe resizing are only some minor things  i will try to experiment with them in the next days and release it then as a new pr ||
71,958,999,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,db properties layout and save order config changed - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests green?fixes  #957  and #958 fix height of the dialog and add spacing between ok/cancel button and  borderchanged jcomboxbox to editable and removed the unnecessary textfieldsadded jcombobox for selecting the fields to apply the selected formatter tochanged position of delete buttonremoved indexoutofbound exception when no item is selectededit// i just see this pr is #999 ) is it possible to write a simple ui test for it? :innocent:refs #507  || ui-test i will try to write one || added gui test und fixed checkbox label not displaying correclty || the code looks good so i give my :+1: for merging if you add a nice looking screenshot :smiley:  || @tobiasdiez  here you are:![dbproperties](https://cloudgithubusercontentcom/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537acpng) || @oscargus  i tried to fix this but i could not get the damn jlist resized horizontally or vertically i tried around a lot the code for this is located in `fieldformatterscleanuppanel`from this one it sounded very simple:http://alvinalexandercom/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizingshtmledit// this is how it scales after my fix![dbpropertiesresized](https://cloudgithubusercontentcom/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8png) || my code did everything except horizontal sizing (and i also tried alot) so check there for possible hints i think that when spanningmultiple columns using a fourth alignment argument to xyw is one thing || @siedlerchr : i think it is good to go so please rebase and it can be merged(i reserve the right to fix/change(?) the scaling at some stage :-)) || @oscargus  okay otherwise i would have looked at the gui resizing in more detail the next days || @siedlerchr up to you i just wasnt sure what the status of the pr was and was thinking of merging it (if it was possible) feel free to look at the resizing :+1:  || @oscargus  as i just rebased it on the master i would suggest merging it for once now so that the biggest changes (eg the comboxes) are into itthe resizing are only some minor things  i will try to experiment with them in the next days and release it then as a new pr ||
72,1001,1010,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,added initial tests for exportformat really trivial and early test but could maybe avoid bugs like #1001 to happen (and form a foundation to extend on) mhhi am missing an assertion in these tests ie reading the exported file and checking that it is empty  || i have changed the code based on all(?) comments major implications:- now all exporters returns an empty file for an empty set of entries and are tested for this earlier some heading information was generated- all exporters are now tested that they throw an npe with a null database or null entries list- the change that fixes #1001 is in practice reverted and solved such that the exportformat calls add all entries instead of null for all entries- the test disabled in #1005 is active again- i had to break the new guideline in #1012 to be able to test all exporters for npes in a simple way if theres a better way please let me know(this shows that adding a quite crappy initial test can lead to good things :-)) || as the export is now not performed for empty databases (entries lists) as a side effect the coverage is more accurate now as well earlier it increased quite a bit but no actual testing was done (well apart from that the code executed without any errors) || this looks way better then the initial pr good job! || not obvious that parameterized is executed before beforeclass but once i figured that out || lgtm || i think this is probably as far as we get right now and that the code is quite ok since it is rather general and only tests what is actually tested (or how to formulate it) ||
73,1012,1014,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,improved exception handling in tests cases never catch an exceptionremoved unnecessary exceptionsthrow specific exceptions never only exceptionref #1012 - [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green? good work! :+1: || @siedlerchr btw you should assign your commit email with your github account see https://githubcom/jabref/jabref/pull/1014/commits/758e7c2d6fe6cb9e8a82f4bfda2f601608647344 || @oscargus fixed@stefan-kolb i just added my git mail address to my github account as secondary mail address || was done by eclipse will change this back ||
74,963,1041,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,write database type in lower case into the bib file this finally fixes #963 a quick fix has been introduced in 661eea007e555 but that does not cover the lower case writing of the type```@comment{jabref-meta: database_type:bibtex}```finally gets```@comment{jabref-meta: databasetype:bibtex}```- [ ] change in changelogmd described -> this has been introduced in the development versions after the last release thus no entry required- [x] tests created for changes -> tests have been adapted to match this new implementation is the parsing case insensitive? is that tested? || @oscargus the value is parsed case-insensitive ||
75,103,1050,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"restructrued cleanup formatters dialog  #1038 reworked cleanup formatter dlg:- [x] description updates when and item is selected also on startup the field is now also multilane with auto resizing and word wrap- [x] after deleting a selected item in the list the next one (previous) is selected- [x] changed layout to be more consistent renamings to be more precise and moving in new packageadded tests- [ x] change in changelogmd described- [ x] tests created for changes- [ x] screenshots added (for bigger ui changes)![cleanupentriesdialog](https://cloudgithubusercontentcom/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581png) looks good to me :+1: just a few small remarks which should be fixed then this can be merged in || @tobiasdiez  applied your proposed changesinstead of ""run selected field formatters"" it is now  ""run listed field formatters"" || i think this looks good @koppor what do you think? || why is this assigned to @koppor ? what is blocking this? ||  #1038 is my request and id like to have the example displayed for that i need #1159 to get throughmy aim to have the dialog understandable to usersfurther i need to test the thing for which i didnt have time yet :see_no_evil:  || <s>\- [ ] when changing the focus of the list the description does not update is it possible to update the description when the focus of the list changes?</s><s>\- [ ] when the formatters are disabled it is not clear where the description comes from maybe hide the field?</s>![grabbed_20160410-140135](https://cloudgithubusercontentcom/assets/1366654/14410050/ce3f2512-ff24-11e5-96a1-c60a92247b76png)- [ ] when i enable the formatting no formatter is selected could there the first formatter (if available) be enabled?change at the combobox works || @koppor  the focus of the description only updates when you select it in the combobox it would be otherwise too confusing if the combobox displays formatter a and you select formatter b in the list which one should be displayed then?from my point of view the workflow atm is: select the field eg abstract and select the formatter to add to the list therefore the description is referring to the current selected formatterthe other things regarding the enabling/disabling could be done easilyas tomorrow my new semester starts i dont know if i can get this whole thing done in time for v33 release on (friday?)  || @siedlerchr do you still have time? || yep wil look at it this evening or tomorrow morning || the thing is that a user might now what a specific formatter does when opening the dialog the first time as far as i remember we have some default formatters enabled and the user doesnt know what to do<s>therefore this quick suggestion note that i added the formatter string at the sketch at #1038 that was aimed to reduce confusion somehow :innocent: </s>decision from developers: tooltip on existing formatters is enough || decision: we merge as is @siedlerchr could you just resolve the conflicts? :innocent: thank you for working on it || @siedlerchr can you please rebase this so we can merge? || will do this today evening2016-04-13 10:51 gmt+02:00 stefan kolb notifications@githubcom:> @siedlerchr https://githubcom/siedlerchr can you please rebase this> so we can merge?> > —> you are receiving this because you were mentioned> reply to this email directly or view it on github> https://githubcom/jabref/jabref/pull/1050#issuecomment-209310723 || we decided to use the existing translation string instead of introducing new ones a few days before the release (refs #1128)""run_listed_field_formatters"" (wished) -> ""run field formatters"" (existing) || [![lgtm](http://lgtmin/p/4ebbdqgpn)](http://lgtmin/i/4ebbdqgpn) || "
76,1051,1054,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix sorting of entries on save fix sorting of entries on save (this shouldnt affect the sorting of export so is unrelated to #1051) in the end it was just a wrong boolean in the preference- [ ] change in changelogmd described - no i think the issue was introduced in this version- [ ] tests created for changes - kind of there is a test for the sorting now but it passed before any fix no test added for the boolean in the preference- [ ] screenshots added (for bigger ui changes) context: - decision to add new entries at the end- user wants to have other sort options- user wants to have other sort options as defaultthe idea is that a user can configure a `bib` template which contains the default ""preferences"" for a database such as the bibtex key patterns and the sort order configuration when the user creates a new `bib` file the template is usedwe discussed sometime ago the plethora of preferences maybe that approach could help to reduce that however the system of a `bib` template could increase complexity since i care for sharing and group editing of `bib` files i want to a) have as much as possible bib-affecting configurations (directory key patterns ) in the `bib` file itself (see for instance #180) and b) enable new users to have a properly configured `bib` file and not requiring an expert to configure jabrefa) is imho mostly achievedb) is some thing we are working on to have correct default settings my personal feeling is that some groups however do not want to follow our conventions (for instance bibtex keys sort order) and thus require different settingsmaybe i should open a separate issue asking for support of ""bib template"" :innocent:  || @koppor commented on the wrong issue? || @tobiasdiez no not the wrong issue i tried to give some context above hope that helps to understand my text || "
77,1062,1064,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix #1062 merge entry with doi information now also applies changes to entry type <describe the changes you have made here: what why >- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) no test because a test requires an online connection? :innocent:other than that: lgtm :+1: || lgtm :+1: ||
78,672,1089,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,filelist field size now dependent on its content fixes #672the filelist (within the entryeditor) now automatically resizes its columns dependent on the length of its content![java 2016-04-03 12-13-50-65](https://cloudgithubusercontentcom/assets/15333371/14231930/de478ace-f995-11e5-8ef7-3efff0f97eb4jpg)- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes) i rearranged the imports a bit (using the settings @tobiasdiez describes in #1091) || looks good to me me! @jabref/developers anybody else any comments? maybe we could integrate that in v33 already? || apart from my comment regarding the changelog this is fine and can be merged || moved the changelog entry from `fixed` to `changed` ||
79,393,1116,1,0,0,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,1,0,0,0,0,open jdk problems with look and feels see #393 #638still not 100% sure if this only applies to openjdk and gtk l&f or also to oracle jdk and gtk l&fmetal l&f seems to work but looks uglyidea is to try metal on openjdk and wait if more bug reports pop up even for oracle- [x] maybe we should close at least one of the two bug reports that seem to be related to openjdk and gtk #393 #638 or maybe even open a new one with possible solutionsalso see https://bugslaunchpadnet/ubuntu/+source/openjdk-8/+bug/1510009**especially see**https://bugsdebianorg/cgi-bin/bugreportcgi?bug813143maybe we can just ignore this and wait for it to be fixed in openjdk and add a hint to our faq and documentation? when merging this in please use squash merge to make it easy to revert this change when this is obsolete for openjdk later on || :+1:  || oh where did 4aa0d5b go? as far as i can see only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked? || #1145 : related? ||
80,638,1116,1,0,0,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,1,0,0,0,0,open jdk problems with look and feels see #393 #638still not 100% sure if this only applies to openjdk and gtk l&f or also to oracle jdk and gtk l&fmetal l&f seems to work but looks uglyidea is to try metal on openjdk and wait if more bug reports pop up even for oracle- [x] maybe we should close at least one of the two bug reports that seem to be related to openjdk and gtk #393 #638 or maybe even open a new one with possible solutionsalso see https://bugslaunchpadnet/ubuntu/+source/openjdk-8/+bug/1510009**especially see**https://bugsdebianorg/cgi-bin/bugreportcgi?bug813143maybe we can just ignore this and wait for it to be fixed in openjdk and add a hint to our faq and documentation? when merging this in please use squash merge to make it easy to revert this change when this is obsolete for openjdk later on || :+1:  || oh where did 4aa0d5b go? as far as i can see only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked? || #1145 : related? ||
81,1130,1135,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,fix #1130 and re-enable gui test @koppor its just a simple if :smile: gui test seems to brake after a few runs they are really quite unstable :( ||
82,1134,1138,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,importformatreader test added initial tests for importformatreader now seven different formats are imported without specifying the format and the number of imported entries is checked should avoid bugs like #1134i also removed unused methods and moved a totally unrelated method to a better home lgtm :+1: nice work ||
83,1114,1144,1,0,1,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"readd formatchars support alternative to  #1114 to add backwards compatibility for formatchars (and a few other renamed layoutformatters) the idea was to replace the reflection code by an (admittedly big) switch statement in this way we gain some flexibility about the location and naming of layoutformatter classesby the way  according to http://jabrefsourceforgenet/help/customexportsphp all layoutformatters starting with ""author"" are deprecated and are replaced by ""authors"" since 27 should we just delete them now?- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) i am in favour of this solution because it breaks the link between our class structure and hard-coded strings in the layout files of random people the switch may be long but it is very easy to read as you suggest we should delete the deprecated ""author"" formatterslets decide on this at the upcoming devcall! || just make sure that http://helpjabreforg/en/customexports/ is updated accordingly and note:""custom formattersif none of the available formatters can do what you want to achieve you can add your own by implementing the netsfjabrefexportlayoutlayoutformatter interface if you insert your class into the netsfjabrefexportlayoutformat package you can call the formatter by its class name only like with the standard formatters otherwise you must call the formatter by its fully qualified name (including package name) in any case the formatter must be in your classpath when running jabref""(i do not have any opinion on this just want to make sure that things are not obviously broken) || lgtm :+1:  || @tobiasdiez could you open a new issue for your ""by the way"" thing and post the excerpt from the help page? i couldnt quickly find the paragraph youre referring to || "
84,318,1149,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,replace normalizenamesformatter by authorlist and so fix #318 - fixes #318 (and refs #950)- removes comma as delimiter of author names (in normalizenamesformatter)  the problem is that comma separated authors cannot be distingued from one author in bibtex format  for example `name della first` could be three names separated by commas or if interpreted as valid bibtex string it is one author with lastnamename jrpartdella firstnamefirst- add colon as delimiter of author names (in authorlistparser)thanks at all but especially @oscargus for creating many tests made implementing this pr way easier! ## - [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) looks very nice! :+1:the md thing is a bit challenging and either way we will do it wrong for one of the cases if i were in medicine i would probably prefer not to expand md (especially) || lgtm  ||
85,950,1149,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,replace normalizenamesformatter by authorlist and so fix #318 - fixes #318 (and refs #950)- removes comma as delimiter of author names (in normalizenamesformatter)  the problem is that comma separated authors cannot be distingued from one author in bibtex format  for example `name della first` could be three names separated by commas or if interpreted as valid bibtex string it is one author with lastnamename jrpartdella firstnamefirst- add colon as delimiter of author names (in authorlistparser)thanks at all but especially @oscargus for creating many tests made implementing this pr way easier! ## - [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) looks very nice! :+1:the md thing is a bit challenging and either way we will do it wrong for one of the cases if i were in medicine i would probably prefer not to expand md (especially) || lgtm  ||
86,116,1168,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix #1163 by removing the strange functionality which enabled sorting… we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that 68 means 1968 this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs #1163 lgtm :+1: || lgtm :+1:  || should we readd yearutil as a cleanup to convert two digit years to four digit years? || if we add it we should make use of the java 8 functionality instead of the own ugly parsing:http://stackoverflowcom/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimeforand this one:http://stackoverflowcom/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century ||
87,1163,1168,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix #1163 by removing the strange functionality which enabled sorting… we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that 68 means 1968 this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs #1163 lgtm :+1: || lgtm :+1:  || should we readd yearutil as a cleanup to convert two digit years to four digit years? || if we add it we should make use of the java 8 functionality instead of the own ugly parsing:http://stackoverflowcom/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimeforand this one:http://stackoverflowcom/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century ||
88,1080,1207,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"restructure importers the aim of this pr is to reduce the overlap between the importer package and some code in gui (in particular the class opendatabaseaction)moreover #1080 and #1153 are fixedin detail the following things were changed:- the abstract `importformat` class is almost completely rewritten please have a look at this class almost all other changes are a direct consequence of the edits made to the importformat class the biggest change is that the import method returns a `parserresult` instead of a list of entries (in this way metadata can also be imported and error messages are communicated more effectively instead of throwing ioexceptions) moreover the import method operates on a reader instead of an input stream in order to reduce some common code in all importers-  add method `importdatabase(path file charset encoding)` to the importer interface which opens the file and passes the stream to the other import method- the bibteximporter overwrites this new import method and uses the logic from `opendatabaseactionloaddatabase` to determine the encoding of the bib file- change opendatabaseaction to operate against the bibtex importer - remove get/set iscustomimporter: was not really used (just for sorting - now everything is alphabetical)- empty entries are no longer imported (thus a few test had to be changed)remark: the methods getextension and getdescription are not implemented by almost any importer this should be done maybe this is something for the stupro?(will add the changelog entry and add a few tests later)- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) any comments or can i rebase and merge? || i do not fully understand why the getcliid method is removed? how is the importer selected from cli now? also since there is a method setcliid maybe that should change name as well (as it appears as getcliid is sometimes replaces with getid somehow it seems like getcliid is a better name but no strong opinions)many changes are related to imports and replacing extension strings with a list of extension strings right? || now i think i understand why however i think that getcliid and getformatname in general should return different things || well maybe i do not understand the code fully (again tired) but what i was worried about with getid doesnt seem to the case so to me this looks good! || there is a method getid (previously getcliid) in importformat which constructs the id based on the name of the formatter thus some of the hand-coded ids in the specific importers could be removedi couldnt find the method `setcliid` where does it exists? || i saw `""repec new economic papers (nep)""` and then that getid() used that string which caused one comment but then i saw the tests and realized that one wasnt supposed to type something like that :-) now i also know why:+1: || waiting for the last #547 to be merged - then this pr can clean up all the importer code uniformly  || this is unblocked now go 4 it :) || "
89,1153,1207,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"restructure importers the aim of this pr is to reduce the overlap between the importer package and some code in gui (in particular the class opendatabaseaction)moreover #1080 and #1153 are fixedin detail the following things were changed:- the abstract `importformat` class is almost completely rewritten please have a look at this class almost all other changes are a direct consequence of the edits made to the importformat class the biggest change is that the import method returns a `parserresult` instead of a list of entries (in this way metadata can also be imported and error messages are communicated more effectively instead of throwing ioexceptions) moreover the import method operates on a reader instead of an input stream in order to reduce some common code in all importers-  add method `importdatabase(path file charset encoding)` to the importer interface which opens the file and passes the stream to the other import method- the bibteximporter overwrites this new import method and uses the logic from `opendatabaseactionloaddatabase` to determine the encoding of the bib file- change opendatabaseaction to operate against the bibtex importer - remove get/set iscustomimporter: was not really used (just for sorting - now everything is alphabetical)- empty entries are no longer imported (thus a few test had to be changed)remark: the methods getextension and getdescription are not implemented by almost any importer this should be done maybe this is something for the stupro?(will add the changelog entry and add a few tests later)- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) any comments or can i rebase and merge? || i do not fully understand why the getcliid method is removed? how is the importer selected from cli now? also since there is a method setcliid maybe that should change name as well (as it appears as getcliid is sometimes replaces with getid somehow it seems like getcliid is a better name but no strong opinions)many changes are related to imports and replacing extension strings with a list of extension strings right? || now i think i understand why however i think that getcliid and getformatname in general should return different things || well maybe i do not understand the code fully (again tired) but what i was worried about with getid doesnt seem to the case so to me this looks good! || there is a method getid (previously getcliid) in importformat which constructs the id based on the name of the formatter thus some of the hand-coded ids in the specific importers could be removedi couldnt find the method `setcliid` where does it exists? || i saw `""repec new economic papers (nep)""` and then that getid() used that string which caused one comment but then i saw the tests and realized that one wasnt supposed to type something like that :-) now i also know why:+1: || waiting for the last #547 to be merged - then this pr can clean up all the importer code uniformly  || this is unblocked now go 4 it :) || "
90,405,1215,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"improved conversion maps and conversion speed the html/unicode <-> latex conversion map source was based on regular expressions making it a jungle of backslashes now replace is used instead of replaceall so fewer backslashes and (theoretically) a bit fasteri also added benchmarking for the following conversions:- html to latex (used at import cleanup and save action)- latex to html (used for preview)- latex to unicode (used for table rendering)  and i got a slight improvement although i cannot really tell why the two latter are faster now as they are based on cleaned versions one reason might be that the tests are based on latex symbols with more backslashes in them for the old casebefore:benchmarkshtmltolatexconversion      5533070 ▒   86148  ops/sbenchmarkslatextohtmlconversion     141500226 ▒ 8011038  ops/sbenchmarkslatextounicodeconversion  124527930 ▒ 3984776  ops/safter:benchmarkshtmltolatexconversion     6153450 ▒   114716  ops/sbenchmarkslatextohtmlconversion     168037040 ▒ 13412341  ops/sbenchmarkslatextounicodeconversion  173674308 ▒  7455006  ops/shere one can see that only searching the string to be converted once is far better than running replace on all possible characters which is not surprising but require quite complicated codefinally with the simpler strings it was easier to add most (all?) of the curly brackets required to solve #405 with the benchmarks in place you might also try out the recommendations of http://stackoverflowcom/questions/4285083/fastest-way-to-perform-a-lot-of-strings-replace-in-java and http://stackoverflowcom/questions/16228992/commons-lang-stringutils-replace-performance-vs-string-replace so using apaches stringutilsreplace() and/or > dont make a pattern for every single replaceall line but try to combine them (regex has a or operator) and let pattern optimize the regex do use the compiled pattern and dont compile it in every call its fairly expensive || at the moment there are (almost) only replace so very few actual regexes there are a few cases where the several characters are replaced with the same so in those cases it may be worthwhile to use an or-regexstill i think the way to go here (for html to latex) would be to parse the string and once either html tags or html-encoded characters are found those are replaced rather than blindly replacing all possible characters in that way one can probably honor more tags as well || i would not prematurely optimize things which does not reduce the speed of jabref  || except that optimizing code is quite fun :speedboat: im quite sure #405 should be fixed now || what is the current state here? can this be merged? || this should be good to go now only better compared to the earlier version although of course the ""correct"" way to convert can be argued infinitely || thanks @oscargus :+1:  || "
91,118,1217,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,added integrity checker for odd number of # will sometimes help for #1212 and #1188 lgtm :+1:i think we slowly approach the point where it might make sense to extract the checkers as separate classes @simonharrer what do you think? || hm yes would make sense @tobiasdiez  i would merge this in with the current structure but for the next checker we should create separate classes  || go ahead an merge this in ||
92,1212,1217,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,added integrity checker for odd number of # will sometimes help for #1212 and #1188 lgtm :+1:i think we slowly approach the point where it might make sense to extract the checkers as separate classes @simonharrer what do you think? || hm yes would make sense @tobiasdiez  i would merge this in with the current structure but for the next checker we should create separate classes  || go ahead an merge this in ||
93,109,1229,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #1091 apply and ensure correct import sort order see #1091 :+1: || lgtm :+1:  ||
94,1091,1229,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #1091 apply and ensure correct import sort order see #1091 :+1: || lgtm :+1:  ||
95,1188,1238,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,added integrity checker to detect html encoded characters in fields based on discussions in #1188 :+1: lgtm || @oscargus in the url field your detection now finds html encoded characters maybe we should exclude the check for the url field? || @oscargus same holds true for the odd number of unescaped # warning which also occurs in a url field of mine  ||
96,124,1246,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fixed #1245 this should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""""` lgtm but can you please add a test for the fix || yes but not right now good point! || could you please add a test for it so we can merge this in :smile: ? we already closed the related issue || done! will merge when i see that the tests pass ||"
97,1245,1246,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fixed #1245 this should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""""` lgtm but can you please add a test for the fix || yes but not right now good point! || could you please add a test for it so we can merge this in :smile: ? we already closed the related issue || done! will merge when i see that the tests pass ||"
98,1251,1278,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,tried to fix #1251 but all tests pass will merge this in if the tests all pass on the ci server- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)  
99,625,1281,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"replace bibtexentryassert by overwriting bibentryequals method as proposed in #625 a proper bibentryequals is provided in this pr and used for the tests this as a few advantages:- detect differences which are not visible in the canonical string representation (so far this hit empty fields and different line breaks)- get more meaningful test-failure messages for lists (instead of ""expected 2 got 3"" the added entry is displayed)- assertassertequals just works and no custom written assertequals method has to be usedi clicked around a bit but couldnt find any unexpected side effects due to the overwritten equals method if this pr is accepted then i would inline the bibtexentryassertassertequals methods- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) great stuff! love it :heart:  || lgtm :+1:  || lgtm ||"
100,1271,1282,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix #1271: authors with compound first names are parsed properly - [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) looks good! || lgtmplease rebase and merge || thanks! fixed in jabref-34dev--snapshot--2016-04-29--master--694840ajar ||
101,871,1298,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,added option to copy version information in the about dialog added option to copy version information of jabref in the about dialog as described in #871 this will help with filing issues and bug reports as the version of jabref os and java will be copied - [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)![screen shot 2016-04-25 at 22 38 58](https://cloudgithubusercontentcom/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cdpng) just one minor comment otherwise this looks good please rebase || ## [current coverage](https://codecovio/gh/jabref/jabref/pull/1298?srcpr) is **2749%**> merging [#1298](https://codecovio/gh/jabref/jabref/pull/1298?srcpr) into [master](https://codecovio/gh/jabref/jabref/branch/master?srcpr) will decrease coverage by **-<01%**``` diff@@             master      #1298   diff @@  files           694        696     +2     lines         46259      46419   +160     methods           0          0            messages          0          0            branches       7650       7677    +27   + hits          12755      12760     +5   - misses        32404      32555   +151   - partials       1100       1104     +4   ```1 3 files (not in diff) in `/net/sf/jabref/logic` were deleted [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f676963)2 1 files (not in diff) in `n/java/net/sf/jabref` were deleted [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a6162726566)3 2 files (not in diff) in `bref/logic/formatter` were created [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f666f726d6174746572)4 2 files (not in diff) in `jabref/logic/cleanup` were created [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f636c65616e7570)5 1 files (not in diff) in `n/java/net/sf/jabref` were created [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a6162726566)6 4 files (not in diff) in `f/jabref/model/entry` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6d6f64656c2f656e747279)    - misses `+8`    - hits `-12`7 5 files (not in diff) in `/jabref/logic/groups` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f67726f757073)    - misses `+22`    - partials `+3`    - hits `-1`8 3 files (not in diff) in `jabref/logic/cleanup` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f636c65616e7570)    - misses `+6`    - hits `+8`9 3 files (not in diff) in `/net/sf/jabref/logic` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f676963)    - misses `-2`    - partials `-2`    - hits `-2`10 3 files (not in diff) in `t/sf/jabref/importer` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f696d706f72746572)     - misses `-5`     - partials `+1`     - hits `-1`> powered by [codecov](https://codecovio?srcpr) last updated by [7230a80941240f](https://codecovio/gh/jabref/jabref/compare/7230a809da3e138e362b56366043c4a18b267ca1941240f674c02e07a8aae88010b1c0f9dd4a3a6f) ||
102,1290,1300,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,resolves #1290 change jabref help to online help - all translations must be added again lgtm ||
103,1294,1304,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,implemented jstyle file filter and opening in last dir filter filter for jstyle files #1294 extended browseaction to display file filterfixed npe when selecting invalid jstyle (prevented style dialog from opening)- [x ] change in changelogmd described lgtm || @simonharrer would you merge this in? ||
104,1295,1310,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #1295 npe when sorting tabs - selected tab might be null when sorting tabs- the logic is really strange in general so this fixes the problem but we need to rework the actions enabling in general imho  
105,1312,1318,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,update localization instructions corrected gradlew task name#1312@koppor  @stefan-kolb please check the order of the imports: https://travis-ciorg/jabref/jabref/builds/126478088 || hm will check my eclipse settings again || `gradlew eclipse` should be enough --> we are generating the correct settings no need for manual intervention || @koppor  fixed the import order the setting was not activated in my eclipse saving options  || ## [current coverage](https://codecovio/gh/jabref/jabref/pull/1318?srcpr) is **2751%**> merging [#1318](https://codecovio/gh/jabref/jabref/pull/1318?srcpr) into [master](https://codecovio/gh/jabref/jabref/branch/master?srcpr) will not change coverage``` diff@@             master      #1318   diff @@  files           695        695            lines         46382      46382            methods           0          0            messages          0          0            branches       7677       7677            hits          12760      12760            misses        32518      32518            partials       1104       1104          ```> powered by [codecov](https://codecovio?srcpr) last updated by [1aa2145522607b](https://codecovio/gh/jabref/jabref/compare/1aa214510eee23cc586aad116780e4a875538e00522607b2804067a4d52c4444fd2238a480d9f0a2) || lgtm :+1: ||
106,1324,1336,1,0,0,0,1,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,refactor open and save dialogs complete refactoring of the ugly and propably outdated filedialogs codenewfiledialogs will be renamed when the work is doneatm i want to keep it paralleltodo:- [x] refactor getmultplefiles - [x] provide methods for other open and save dialogs - [x] replace openfilefilter with filenameextensionfilter  http://docsoraclecom/javase/8/docs/api/javax/swing/filechooser/filenameextensionfilterhtml- [x] refactor browseaction to use new the methods- [x] test #1324  again good idea to refactor the file dialogs :+1: just one small comment so far: could you please make the methods non-static (and probably move the passed frame to the constructor) in this way the code becomes more testable because the file dialog can be mocked away || @tobiasdiez  yes i already came up with a solution for this i will probably use some kind of factorpattern to create the dialogs that reduces the number of constructors/method overloads || ## [current coverage](https://codecovio/gh/jabref/jabref/pull/1336?srcpr) is **2754%**> merging [#1336](https://codecovio/gh/jabref/jabref/pull/1336?srcpr) into [master](https://codecovio/gh/jabref/jabref/branch/master?srcpr) will increase coverage by **+<01%**``` diff@@             master      #1336   diff @@  files           694        696     +2     lines         46262      46335    +73     methods           0          0            messages          0          0            branches       7649       7655     +6   + hits          12733      12759    +26   - misses        32432      32476    +44   - partials       1097       1100     +3   ```1 2 files (not in diff) in `va/net/sf/jabref/gui` were modified [more](https://codecovio/gh/jabref/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f677569)    - misses `-2`    - partials `+3`    - hits `+22`2 1 files (not in diff) in `n/java/net/sf/jabref` were modified [more](https://codecovio/gh/jabref/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a6162726566)    - hits `+4`3 file `clipboardactionjava` (not in diff) was created [more](https://codecovio/gh/jabref/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6775692f616374696f6e732f436f707956657273696f6e546f436c6970626f617264416374696f6e2e6a617661)> powered by [codecov](https://codecovio?srcpr) last updated by [71eca695371fd4](https://codecovio/gh/jabref/jabref/compare/71eca696817ab9d4099937e52db627562e8519345371fd432d2d250943be418839a3f95965609ce5) || what is the status here? id love to see these changes inside jabref 35! || unfortunately i have not that much time atm but i will try to see how far i get the next days mabye at the weekend i can get some time for it atm another project ist due on sunday) || got some time working on it || ready for review || i really like the new filedialog class and its fluent interface the code needs some cleanup in general (remove commented-out code and debug prints no abbreviations ) and then i think it is good to go || adressed comments @tobiasdiez  not sure if i understand you right on how i should handle the workingdir-prefs-stuffto me it does not make sense to pass the working dir to the constructor from an external call it would create unnecessary dependencies to the prefs  or what was your idea? || @oscargus  could you please have a look why the `cleanupcasesaddsbracketaroundaluminiumgalliumarsenid` test is failing?locally all is okay for me i have no idea what it could cause on travis  and i didnt touch any of the cleanup code in this pr  :confused:  ||
107,1347,1349,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,"fix #1347 open urls does not work with query strings this should work with query strings like`http://booksgooglede/books?id0yam63muqckc&lpgpa153&ots0h7eqpbm79&lr&hlde&pgpa153#vonepage&q&ffalse`and normal urlshowever the question is:does this impact the opening of any other file path or anything? we need to be careful as this is a generic open method maybe thats also the problem because it needs to handle any kind of uri@siedlerchr @tobiasdiez please take a look tested it works but requires for urls a http:// to be presenta simple `wwwgooglede` does not work but it also does not work with `explorer ""wwwgooglede""` from the start menu so i assume this is some windows behaviourit would be nice to have a cleanup for this then or maybe we should automatically do this || "
108,1294,1350,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix npe on selecting invalid jstyle follow up from #1294 npe was raised in comparator because name was initialized with null instead of empty stringonly store preferences if style is valid@oscargus  the fix has the side effect that a file where the name can not be parsed correctly is displayed as ""empty style"" i attached the problematic style file which was provided in #1294 however: valid still returns true as you have worked recently with the styles things do you know what is required for a jstyle? @koppor  maybe you know this?then we could improved the validity check [campus_formatenglishtxt](https://githubcom/jabref/jabref/files/247561/campus_formatenglishtxt)![emptyjstyle](https://cloudgithubusercontentcom/assets/320228/14995084/4d8c3a3e-1173-11e6-8eb6-e8f5490ffa5epng) i suggest merging this for the discussion on a validity checker for oostyle i will create a new issue ||"
109,1353,1355,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,update preview panel on generate bibtexkey fix for #1353fixed some missing unlockssome formatting- [x] change in changelogmd described ## [current coverage](https://codecovio/gh/jabref/jabref/pull/1355?srcpr) is **2756%**> merging [#1355](https://codecovio/gh/jabref/jabref/pull/1355?srcpr) into [master](https://codecovio/gh/jabref/jabref/branch/master?srcpr) will increase coverage by **+<01%**``` diff@@             master      #1355   diff @@  files           695        695            lines         46296      46294     -2     methods           0          0            messages          0          0            branches       7650       7650            hits          12759      12759          + misses        32437      32435     -2     partials       1100       1100          ```1 2 files (not in diff) in `va/net/sf/jabref/gui` were modified [more](https://codecovio/gh/jabref/jabref/commit/08c87479978059d5ab487326d07f25af6d111c12/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f677569)    - misses `-2`> powered by [codecov](https://codecovio?srcpr) last updated by [f96873608c8747](https://codecovio/gh/jabref/jabref/compare/f9687367e8b9fe67c02ec59169581430e5d8706708c87479978059d5ab487326d07f25af6d111c12) || atm the crossref test is failing i get a timeout otherwise this build is fine || lgtmplease address my comment then this can be rebased and merged || gradle test execution fails on travis (code 137 -> travis issued a sigkill)  seems to be a memory/resource  related problem:https://githubcom/travis-ci/travis-ci/issues/2882 || can be merged  ||
110,1351,1368,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,removed possibility to automatically add braces via option - preferen… …ces - file - store the following fields with braces around capital letters please use save actions instead for adding braces automaticallyrefs #1351  
111,131,1369,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix #1313: remove ui as the checkbox is no longer backed by a config … …optionsee #1313  
112,1313,1369,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix #1313: remove ui as the checkbox is no longer backed by a config … …optionsee #1313  
113,872,1383,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"implemented error console in javafx this is the error console in jabref being implemented in javafx the console is highly flexible in positioning and styling its components through a fxml and corresponding css stylesheetalso to show better the error console content (log output exception) i have allowed to resize error console windows manually![error console dialog](https://cloudgithubusercontentcom/assets/13031192/17971852/ca6d07dc-6adc-11e6-91f3-88541458fcd3png)ps:- update the error console screenshot- new feature:  - copy log: user can copy the log  - report issue: user can report directly issues from console#872: have done- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes) please also add a screenshot for these new javafx dialogs moreover it would be nice if you could address the issues https://githubcom/jabref/jabref/issues/882 https://githubcom/jabref/jabref/issues/872 (i think this is already covered with this prin this case please add a changelog entry) and https://githubcom/jabref/jabref/issues/819 which are all connected to the error console  || please adress the language-key related errors the first build failed because there were still some obsolete keys || @tobiasdiez @siedlerchr slowly slowly let the students check this pr first and wait until it is labeled with ""ready-for-review"" :wink: || ## [current coverage](https://codecovio/gh/jabref/jabref/pull/1383?srcpr) is 2839% (diff: 1052%)> merging [#1383](https://codecovio/gh/jabref/jabref/pull/1383?srcpr) into [javafx](https://codecovio/gh/jabref/jabref/branch/javafx?srcpr) will increase coverage by **1761%**``` diff@@             javafx      #1383   diff @@  files           705        705             lines         46412      46332     -80     methods           0          0             messages          0          0             branches       7637       7639      +2   + hits           5002      13154   +8152   + misses        40963      32053   -8910   - partials        447       1125    +678   ```> powered by [codecov](https://codecovio?srcpr) last update [bc6f0c99e9bbc2](https://codecovio/gh/jabref/jabref/compare/bc6f0c929ebc9730064e884c619805c94d0db1f99e9bbc213dafb36d06dc2c0bf0e5ea3fd86243b1?srcpr) || i am having trouble to hide the developer information the css file probably needs some changes i tried to set the visibilty but that didnt work out @tobiasdiez do you have some tips to handle this?  || sorry for my later answer normally you do this by using a pseudoclass `inactive` and change it with `pseudoclassstatechanged` see for example https://githubcom/jabref/jabref/pull/1438/files#diff-9a2c5dd139caeeb5e3e3eebb9adb24b3r92 then you can style them via `list-cell:active` and `list-cell:inactive`i would however only use the pseudoclasses for real styling purposes for example `list-cell:error` shows an error icon and sets the font color to red filtering should really happen on the basis of the viewmodel to which the listview binds (as you have done it right now)for debugging ui issues the tool scenic view is very helpful (http://fxexperiencecom/scenic-view/) i had some problems with running it separately and bind it to jabref however adding it to the dependencies (project structure -> modules -> dependencies -> add) and then invoke `scenicviewshow(scene)` somewhere works || @tobiasdiez i have created filterlist to filter messages but i have one problem to view correctly entries in listview (have a look at my screenshot) it only runs correctly if entries run out of the listview i have created a test button to test this behavior this test button generates 1 entry in systemout throws 1 exception and generates 1 entry in the cache this will be removed latercan you help me and tell me why listview doesnt displays the entry correctly?![notcorrectview](https://cloudgithubusercontentcom/assets/13031192/16559695/e877d2d2-41ee-11e6-831e-47dfbef4af97png) || sorry but i dont understand where your problem is it looks like it prints the test cache message as well as the (first line of) the error stack trace the systemout is ignored as i would have expected since you hide low priority messages  || hi @tobiasdiez so i will explain you what is my problem- the listview shoulds show you all log entries and other entries like systemout and exception if the button ""development information"" disable- if the button on click it shoulds hide all systemout and exception entries  i have handle this will a filterlist but the behavior by showing of entries is not correct- reproduct:  - start error console  - click on ""test"" button (1 time or more times)  - click on  ""development information"" button  - click on this again    if you do so like i have written then you will understand my problem    sorry about my bad english i hope that you understand what i mean i need you help or some tipp how i can clear this problem :-)thx you || thanks for the additional description i added a comment to errorconsoleviewmodel which should help you to solve the problem for the next time please try to add some tests first there were quite a few things which could have been wrong:- are the messages correctly passed to the t-stream?- do they have the correct priority?- is filtering of the list working properly? - and finally: is is just a problem with the way how messages are displayed in the list viewthe first 3 options could have been ruled out by automatic tests it would be good if you could add corresponding tests (which also require some positve refactoring like making `filteredlist` a (public) class variable and moving its initialization to the constructor) || there are three solution for this problem with create issue function:- **solution 1:** using of a github api to create issue directly from jabref with log in data which user not like to do it but i think that way will be nice solution and github will get more member (take a look in create issue dialog screenshot)  from customer: it will be nice this solution with a default account but it will be not work![create issue with github api](https://cloudgithubusercontentcom/assets/13031192/17296487/cece12a0-5801-11e6-97d0-9b81c05e65eepng)- **solution 2:** using oauth2 to create issue directly from jabref without log in data but the user must give the application access in their account to use it that will be difficult for some user- **solution 3 (this is my actual implement solution):** create issue over default browser with help of saved log and exception information in clipboard  (take a look in create issue pop up screenshot)![create issue with default browser](https://cloudgithubusercontentcom/assets/13031192/17297508/4aabf744-5806-11e6-92b4-43193a6257b1png)after close or click on ok button the default browser will open and show create issue site with default title (automatic bug report-""current time with this format yyyymmddhhmmss"") and a default issue description (jabref version operating system version java version) during the show of this create issue site the log and exception information will be saved in clipboard so the user can be paste it for detail information in issue description (take a look in create issue in default browser with paste detail information screenshot)![new issue](https://cloudgithubusercontentcom/assets/13031192/17297662/f1a18bf4-5806-11e6-8fc7-0a08455eb788png) || which one did you implement? || i really like the copied-to-clipboard-solution its simple yet effective  || can you please post a new screenshot of the actual look?edit// and could you please test the look on hidpi screenstoo? || this is the new look of error console dialog:![errorconsoledialog](https://cloudgithubusercontentcom/assets/13031192/17666726/e6bc1ad2-6301-11e6-9000-d6364a97b2bepng)with button ""developer information"" it will show you the exceptions and outputs if it is existyou can copy the log and create issue directly from errorconsole :-)edit: i have test it on display with 1920 x 1080 i think that it is all okay -) || please fix this bug:- when you activate the ""developer information"" button and then click ""copy log"" the exceptions will get hidden even though the ""developer information"" toggle button is still active- pressing the ""developer information"" button twice will show the exceptions again || please update your screenshots || please fix bug:- open the developer information console- click show ""developer information"" toggle button to show exceptions- click ""ok"" button- open the developer information console  ""developer information"" toggle button is now deactivated again but the list view still shows the exception and the colour of the exception is black instead of red || any idea for a better icon? as pointed out in #1742 there is much more information than just errors here it might even be better to skip the icon (what about the information icon?) || some suggestions:- i would use the [console image](https://mdnmozillademosorg/files/5597/web-console-commandline-highlightedpng) instead of the red error symbol also move it above the list and add some description left to it in spirit ""we now give you an insight into the inner workings of jabrefs brain this might help to diagonize the root of problems please use the button below to inform the developers about an issue- rename ""create issue"" to ""report issue"" move ""copy log"" button to the left to group it with the other buttons there rename ""ok"" to ""close""- do we really need a way to hide errors and warnings? i think every log entry should be shown to the user (ie no ""developer information button"") i know you spent a lot of time to implement it but i just dont see any advantages in having such a button- add a small non-obtrusive icon in front of every line which indicates if it is an error / warning / info similar to https://mdnmozillademosorg/files/5597/web-console-commandline-highlightedpng || some minor remarks and a bigger one with the icons once they are fixed im fine with thisall in all i really like how the console looks now good job 👍  || @tobiasdiez: i have merged and done feedback || thanks for the update the code looks better now i have just a few more remarks then this can be merged @koppor pls do the final review || @tobiasdiez @koppor: feedbacks are done only this teestream thing i am not sure how to fix it 😄  || maybe someone else from @jabref/stupro can help @bartsch-dev maybe? its a kind of architectural decision || try to use streameavesdropper instead of teestream || @tobiasdiez is this what you meant with moving the code to the streameavesdropper? || yes this looks betterso now i had a look at the code if i understand it correctly then there already exist two ways of listen to logger messages:- guiappender: listens to everything which goes through the log4j api (ie `loggerlog()`) and writes it to cache- streameavesdropper: listens to everything which goes through the system streams (`systemout/err`) and writes it to some streamsand you added:- logmessages: listens to everything and writes it some some internal listcould you refactor the code so that everything is only written ̀to the internal list of  `logmessages` ie get rid of the cache class and the printstreams in `streameavesdropper` (and please add code comments to the classes it was hard to understand what they actually do)appendum for myself:since there is essentially no code which still uses `systemout/errprintln` i would actually try to get rid of the `streameavesdropper` completely only problem: uncaught exceptions are not written via the log4j interface but this could be solved by setting the [default handler](http://stackoverflowcom/a/2344830/873661) || @tobiasdiez i have refactored and have done feedback hope it will be merged this time 😄  || "
114,1334,1384,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix #1334: display correct number of entries in static groups <describe the changes you have made here: what why >fix of #1334 nice bonus: total number of entries is displayed after ""all entries"" group- [ ] change in changelogmd described (bug not present in 33)- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) lgtm ||"
115,135,1388,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix sorting issue #1357 the logic is fucked but this should fix the issueproblem was that when sort in original order was selected the corresponding variable newsortorder would still read the disabled sort order inside the jdialog  
116,1381,1389,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,fix #1381 file links containing blanks are broken if non-default viewer is set runtimeexec with a string splits on white spaces  
117,1063,1397,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,add fields for nbibimporter and add testfile regarding: [#1063](https://githubcom/jabref/jabref/issues/1063)the medlineplain importer doesnt have all fields that the nbib format has so i added the fields to the medlineplain format and added a test+ testfile for the nbib formata list of the elements that should be imported now can be found [here](https://wwwnlmnihgov/bsd/mms/medlineelementshtml)- [x ] tests created for changes you should also record your changes in the readme || lgtm || for somehow the travis-ci is failing because an integration test scrollingthroughentrylist fails || lgtm too just some minor remarks for readability  ||
118,1399,1401,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix #1399 export to html: html code is not well-formed always write the footer no matter if encoding is given or not @tobiasdiez wdyt? you changed the code before || lgtm ||
119,1408,1409,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"cleanup guiglobals implements #1408cleans up the `guiglobals` class and move `latexfieldformatter` to the `bibtex` package which is now independent of the `gui` packageas a final step i would move the class `netsfjabrefimporterfileformatfieldcontentparser` to the `bibtex` package which would make the package self-contained (apart from imports to the preferences and related classes) and would move the whole `bibtex` package into `logic` are there objections to this? i restructured variable positioning as discussed in #1408 and turn max_back_history_size line_length and indent into proper preferences@jabref/developers what about turning the `bibtex` package into a subpackage of `logic`? or should that rather stay a top-level package? || the more stuff is in the logic package the better  || ok from side this is good to go i even was able to move some more classes into the model package || lgtm || lgtm just some minor remarkswhat i do not understand is the purpose of the bibtex package some of the classes seem like they do not have anything to do with writing or parsing bibtex and are rather general for example the comparators maybe it would make sense to completely dissolve the bibtex package by moving the parsing logic to the import package and writing to exportin the end the bibtex format is just a special import-export format || @tobiasdiez thanks for your remarks i will integrate them as wellas for the bibtex package: its existence is a historical thing and i do not know the exact motivation behind it seems like ""bundle parsing and writing of pure bibtex"" but with the addition of new importers and exporters responsibilities shifted and mixed over time the big advantage we have now is that the package moved to logic which means that there is a guarantee that it is independent of gui code and it can be re-used for new gui stuff with relative safety if we move it out of logic (to importers or exporters) we loose that advantage ultimately the goal should be to get the gui independent code from the import/export package into logic as wellout of topic: i just noticed the codecov report how the hell did code coverage increase by a wooping 1127% with this pr? i didnt even write new tests this has to be an error || i implemented the above comments and the pr is once again ready to go from my sideone remark: `col_definition_field_separator` cannot go to `guiglobals` since this would create dependencies from logic to gui therefore i moved it into `col_definition_field_separator` to `globals` this is fair i think since the variables relates to our bibtex sytnax and field content which is independent of the guii still don`t get how the coverage can have increased that much || "
120,1420,1440,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix #1420 auto downloader should respect file pattern and propose correct filename ![image](https://cloudgithubusercontentcom/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5png) lgtm || lgtm :+1: ||
121,651,1443,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix #651: improve parsing of author names containing braces fixes #651- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) lgtm ||
122,888,1453,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,refactor placement of parsing and writing logic according to the following conventions:- all objects which can be read from a string have `public static type parse(stringy input)` method- all objects which can be written to a string have a `public stringy getasstring()` methodshould fix #888## - [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) i am still an advocate of separate read/write classes which handle the serialization in both ways because:- using an interface with fromstring/tostring methods would allow to make this more explicit in the code and ensure that these methods are not renamed by accident- using separate classes for reading/writing would make the classes themselfs smaller and allow a better separation of concern - easier to test as one only needs to look at a single cread/write class with its own test || yes you are right that separate read/write classes are probably even better nonetheless i find the changes made in this pr are still an improvement and im quite satisfied with the result (satisfied enough to have no motivation for introducing new read/write classes) || i changed the names thanks for the feedback! ||
123,661,1459,1,0,0,1,1,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,create update checker for the enduser implements #661the updater regularly checks if there is a new stable version of jabref available [via github api](https://apigithubcom/repos/jabref/jabref/releases/latest)if there is a dialog will popup:![newversion](https://cloudgithubusercontentcom/assets/15333371/15649011/86b17b5c-266e-11e6-97c4-e47cda603fa7png)- `download update` points directly to [fosshub](http://wwwfosshubcom/jabrefhtml)- `ignore this update` will ignore this specific version on automatic version checks- `remind me later` will inform the user on the next version check (automatic or manual) of this version- `view changelog` points directly to the changelog specific to this version (eg v33 would point to https://githubcom/jabref/jabref/blob/v33/changelogmd)under `help` there is another button to check for updates![updatetab](https://cloudgithubusercontentcom/assets/15333371/15649013/8e438c2a-266e-11e6-8cc6-07461176e8d1png)under preferences you can see:- the current version- when the version was last checked and a button to check it now- if theres a new version available and a download button- if a version was ignored and a button to unignore it- you can also define how often the automatic check should occur your tests mostly cover the `version` class did you also test (at least manually) if the new version dialog shows up as expected (on the start if newer version is available or not if you already pressed ignore this update)? i guess this is not easy to test with real data as you are already on the latest version when running this branch || good work 👍i have made a few minor comments but when they are addressed its fine by my side || cant this be done by a) mocking the current version (mocking prefs?!) andb) mocking http? we already did both somewhere else in the code || looks good to me too just some minor remarks and a bigger one for the handling of the dev version in isnewerthanfor testing: unittests are not really possible since its a gui thing (and mocking is not possible for ui tests right?) but you can change the version information in the gradle file build it and then run it (ie pretend that you have an older version) or for the sake of testing you can also modify the buildinfo class to return a hard-coded version || i should have considered all mentioned issuessome methods cant be extracted to another class (eg `jabrefgui#checkfornewversion()` to `version` b/c then they would violate the strict separation of the logic from the gui) || hm i am missing a changelog :( || hm i could swear i wrote oneshould i write it quickly and open another pr or do you push it directly onto the master? || i added it directly ||
124,145,1460,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,0,0,fix #1455 npe when retrieving bibtex data from doi see #1455 lgtm ||
125,1455,1460,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,0,0,fix #1455 npe when retrieving bibtex data from doi see #1455 lgtm ||
126,1026,1471,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"preserve user comments in bib file so i am finally having my take at #1026 the current solution was surprisingly easy so far (despite what i had written before) it looks explicitly for our encoding prefix in the file (""encoding: "") and kills lines that contain it (but only lines preceding an entry it will not delete something that is inside an entry) other user comments are left untouched and are _always_ written out again even if the entry is reformatteduser comments that are above meta data bibtex strings or the preamble will still be removed though changing that would require large scale changes to these items in our model since we would also need to store the parsed serialization for them which we do not do so farthis should receive significant automated but also manual testing since it modifies a quite critical part and has the potential to destroy bib files i will add a few more tests for this pr- [x] change in changelogmd described- [x] tests created for changes ok id like to put this up for discussionuser comments are now kept under the following circumstances:- above any bibentry- above any bibtexstring- comments at the end of the filethis is independent of whether an entry is changed/reformatted but not if it is deleted if it is reformated user comment text is located exactly one blank line above the reformated entryuser comments are still not kept when:- above meta data comments- above the preamble- contains jabrefs encoding_prefix- above an entry that has been deletedis this good enough? it should be sufficient in most scenarios and work if someone opens his non-jabref bib file with jabref if someone starts adding arbitrary text between jabrefs metadata though the latter is hard to achieve since we do not store the serialization of metadata if we want to id have to make some additions to our metadata objects i could also store the comments between meta data and add them as a bunch at the end of the file but then the relative position gets lost before i do more work id like to clarify the following points:- does the storage of arbitrary text above metadata really matter?- is it ok to delete comments if the entry below them is deleted? || looks good to me just had some more or less minor remarks (mostly about the testing code) i think we dont need support for comments between jabref metadata || @tobiasdiez if not mentioned otherwise i addressed your comments abovewe tend to differ when it comes to testing in general though i really prefer integration tests when doing anything with reading/writing in jabref these things are inherently coupled to implement this pr (write out user comments correctly) i also had to do significant changes to reading so as long as no overwhelming majority of @jabref/developers pressures me to write unit tests i will rather write integration tests || lgtm i think integration tests are more valuable so this would suffice for me  || great! let us talk briefly about this during the next devcall and decide if we take it into 35 or 36 || for 36 || @lenhard please squash the commits via github when merging this :smile:  ||"
127,1434,1474,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #1434: static groups are now longer displayed as dynamic ones reason for this bug: explictegroup now derives from keywordgroup and thus was sometimes displayed as a keyword group- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) why does it make sense that the explicit group extends the keyword group? i do not see any advantages from that despite making it more complex is really a lot of code saved? maybe duplicating a few lines of code (in explicit and keyword group) creates a simpler structure overall? || i think it makes sense that the explicit group derives from keyword group a keyword group allows to collect all entries which contain a given word in a specified field the explicit group does exactly the same thing except that only the `groups` field is of interest if you have a look at the [explicitgroup class](https://githubcom/jabref/jabref/blob/e13d7f10b23e3b03c9f6425704ad46a973c90023/src/main/java/net/sf/jabref/logic/groups/explicitgroupjava) you will notice that it contains absolutely no logic about how to determine the matched entries this is completely handled by the keyword group (it might even make sense to expand the class hierarchy chain and let `keywordgroup` derive from `searchgroup` since in the end it only a very specific search query is used)  || thanks for the detailed explanation - makes sense :)instead of relying on the class i would recommend to introduce an enum that differentiates the group types and which is returned through a method gettype which each class overwrites if necessary  ||
128,1063,1479,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"rewrite medlineimporter with jaxb and add nbib fields regarding:[#1063](https://githubcom/jabref/jabref/issues/1063)ive rewritten the medlineimporter (to be more specific: the `importdatabase` method) so that it uses a jaxb parser now instead of a sax parser ive also added the nbib fields to the importer tests for the changes will be coming- [x] change in changelogmd described- [x] tests created for changes very good work :+1: only a few remarks from my side || please do not include the generated classes try to use https://githubcom/jacobono/gradle-jaxb-plugin to generate them does that work? || can you please document the source of the xsd you used to create the jaxb classes thanks! || @koppor i didnt get the plugin work but ive wrote an ant task that ive found [here](https://joerglenhardwordpresscom/2012/01/10/xjc-and-schemagen-with-gradle/) this works local but for some reason travis ci says that src/main/gen is a non existend directory@matthiasgeiger i wrote the source as a comment in the xsd file(s) is that ok ?  || made some comments but in general lgtm || lgtm :+1:  || so can this be merged in ? or are there any other remarks? || sorry but this does not work at all for mesteps to reproduce: - go to https://wwwncbinlmnihgov/pubmed/?termflu- select one or more entries- click on ""send to:"" -> ""file"" -> ""xml""- open jabref and try to ""import into new database"" the created xml filewhat happens? there are two dialogs showing nothing: ![medline-import1](https://cloudgithubusercontentcom/assets/676652/16837231/581cd4a4-49c2-11e6-97a4-02212208c3ecpng)![medline-import2](https://cloudgithubusercontentcom/assets/676652/16837232/584be41a-49c2-11e6-9176-d2a2243c21b2png)followed by an error message:![medline-import3](https://cloudgithubusercontentcom/assets/676652/16837242/61c485f6-49c2-11e6-88c7-a4e2c25937e8png)am i doing sth wrong? || yeah youre right im getting the same problem but for some reason the files that ive tested are working im looking for the problem || @matthiasgeiger now it should work im not sure why but somehow the first two lines`<?xml version""10""?><!doctype pubmedarticleset public ""-//nlm//dtd pubmedarticle 1st january 2016//en"" ""http://wwwncbinlmnihgov/corehtml/query/dtd/pubmed_160101dtd"">` were causing trouble my solution is to skip the first lines till we reach the first line that contains <pubmedarticle> <pubmedarticleset> <pubmedbookarticle> or <pubmedbookarticleset> || xml parsers should do that work do not walk through xml by handplease remove this method and try the solution presented at http://stackoverflowcom/a/22204172/873282`xsrnext()` from xmlstreamreader seems to be your friend || other than my small comments: looks good (codewise) havent tried the ui || ive adressed the comments are there any other remarks?  || lgtm || so can this be merged?  || "
129,1482,1483,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,fixes #1482: correct number of matched entries is displayed for refining subgroups the issue was that for the number of hits jabref only checked if thegroup taken separately matched the entry that is it was completelyignored that the group sits in a tree and might be set up to refine thesearch of the parent taking the example given in #1482 577 entriessatisfy the condition `articlé original` but only 38 are also matched by`articlé`- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) lgtm :+1: || lgtm :+1:  || lgtm || ok lets merge this in :smile: :+1:  ||
130,1485,1486,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fixes #1485 export shorttitle as standard field shorttitle <-> shorttitleincludes the obvious migration problems which i dont know if they really occur lgtm || :+1:  ||
131,1444,1487,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,implement getextension and getdescription for importers implement getextension and getdescription for importers #1444 - [x] change in changelogmd described- [x] tests created for changes please fix the minor things after this mark it again for ready-for-review and we will merge this in  ||
132,1507,1511,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixes #1507: keywords are now separated by the delimiter specified in the preferences also did some small refactorings / renamings- [ ] tests created for changes- [x] change in changelogmd described- [ ] screenshots added (for bigger ui changes) lgtm :+1:  || some tests are failing and it would be great if you could push your branch to the jabref repo as this facilitates testing by simply running a build from http://buildsjabreforg/ || ok fixed the failing tests and the build is available under http://buildsjabreforg/fix1507/ (will fix the checkstyle issues after green light for merge) ||
133,825,1549,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"searchbar across all bib files instead each having its own implemented #825the searchbar is now in the top toolbar instead of each tab having its own (always at the right)on tab change the tab gets updatedthe autocomplete is bound to the current tab (maybe extend this one in another pr?)the old global search (opening all findings in a new window) is gone do we really need it?![jabref_globalsearch](https://cloudgithubusercontentcom/assets/15333371/16581743/8b88f5fc-42ab-11e6-8d65-e2b0802d968cpng)- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes) good work 👍 || i am really happy that you are working on this is it correct that the ""global search"" window will be abandoned? i have no idea whether it is causing any conflict with the current implementation of the search mechanism but i am one of those who is using it rather extensively there are two scenarios where a global search is useful:1 often i create a separate bib file for a project (eg a journal article) where i put all related papers some of them are of interest just for this project and are not supposed to be part of my database core (eg newspaper articles) hence i often use search queries that include results of the core and project related file2 i have a bib file for papers which i use in a certain context but that havent been read thoroughly yet some of them will eventually be moved to the core database also in this case i use a global search to find results within both bib-filesboth scenarios could be managed by creating groups and if global search gets abandoned i will certainly do however i like the tab based style of several bib files very much because i dont have the feeling that my project related articles get lost in my huge database with thousands of entries || :+1: for keeping the global search window please readd it @bartsch-dev there are many jabref users having more than 10 bib files they do not want to click through all 10 files for each search || another aspect: what happens if the horiztonal space is not enough to display all icons and the search bar? will the searchbar be displayed beneath the icon bar?  || based on another issue the minimum width of the window is already around 1000 pixels (depending on look-an-feel os etc) so it is crucial that it will foldbut it indeed looks promising! || if the window is too small for the toolbar it will now wrap between the normal buttons and the searchbarthe search result dialog will now remember its location the global search has a shortcut (ctrl+shift+f #573) enter in the result dialog will select the entry in the basepanel (#617) the reuslt window is cloasable with ctrl+w if fdocused (https://githubcom/jabref/jabref/issues/573#issuecomment-232284156) and the result dialog wont stay at top anymore if the mainframe is focused and they are on top of each other || please resolve conflicts || > enter in the result dialog will select the entry in the basepanel- i have two databases open and search for a keyword- i open the global search and it finds my result entries from both databases- i press enter on an entry and it focuses the correct tab but <b>it always selects the first entry in this tab</b>edit: it does focus the correct entry if i am already in the right tab but if it has to focus a different tab it always selects the first entrydid i missunderstand the sentence or is this a bug? || should be fixed now! || is it possible to work on the global search in this pr too? - [x] the shortcut ctrl+shift+f should focus the search field if it is empty (instead of doing a globally searching the empty string)- [x] esc in the global search should focus the search field currently the focus just stays where it was- [x] the global search popup should show the bib file name || implemented all 3 things || what happens if the window is too small? will the search bar be moved to the new line? a lot of people use jabref only with 1024x768 resolution || yes if the width is too small the entire searchbar will move into a new line || what ive done so far:- searchbar  - instead of each bib database having its own the searchbar is now in the toolbar  - if the window width is too small the whole searchbar will move into a new line  - added shortcut: global search `ctrl+shift+f` if the search field is empty it focus the searchbar  - fixed: when searching the first match will be selected if the current selection is no match- searchresultwindow  - the window will now remember its location  - each entry now shows which bib file it belongs to  - when the user closes the window (without selecting an entry) the searchbar is focused  - when the user double clicks on an entry it will correctly be selected in the bib file  - `enter` will select the entry in the bib file  (#617)  - added shortcut: closing the window `ctrl+w` (https://githubcom/jabref/jabref/issues/573#issuecomment-232284156)  - the result window wont stay on top anymore the main frame is focusedwhat do you think? || sounds good :wink:ill test it later and give you some feedback || good job! almost all your described functionality is working fine :+1: the exception is ""fixed: when searching the first match will be selected if the current selection is no match"" - this still is not working for me in ""filter"" modesome ideas for further improvments:- the database column in the result window should be longer - the current width is determined by the word ""database"" and only the first 9 characters of the filename is shown- in windows re-accessing the result window after switching the focus to another application is hard as it is not added to the windows task bar (was no issue before as it was modal above the jabref main window)- im not sure whether it might be helpful to use a (titled?) border to group the search related textfields buttons and labels (see https://docsoraclecom/javase/tutorial/uiswing/components/borderhtml) - or maybe align the search stuff on the right side?  || > the exception is ""fixed: when searching the first match will be selected if the current selection is no match"" - this still is not working for me in ""filter"" modewhen no entry was selected at all the search wouldnt select a match it now does did you mean that?> the database column in the result window should be longer - the current width is determined by the word ""database"" and only the first 9 characters of the filename is shownthe database column is now as wide as the author column> in windows re-accessing the result window after switching the focus to another application is hard as it is not added to the windows task bar (was no issue before as it was modal above the jabref main window)the searchresultframe will now show in the taskbar (you can focus it with the global search shortkey too)>   or maybe align the search stuff on the right side? i wanted to do that too but if i do that the toolbar is not wrapable anymore || > > the exception is ""fixed: when searching the first match will be selected if the current selection is no match"" - this still is not working for me in ""filter"" mode> > when no entry was selected at all the search wouldnt select a match it now does did you mean that?as far as i understand you description of the fix always the first matching entry should be selected if the search if the currently selected entry is not a match of the search right?this is working fine if the ""float"" mode is active - but does not work in the ""filter"" mode: the preview or entry editor is still showing the entry selected before performing the search (which is not visible in the list of matches at all):![unbe nt](https://cloudgithubusercontentcom/assets/676652/17137970/570e3f82-533e-11e6-909a-9f17ad3855d1png) || your pr is currently broken:```exception in thread ""awt-eventqueue-0"" javalangarrayindexoutofboundsexception: 4        at netsfjabrefguisearchsearchresultframesetwidths(searchresultframejava:305)        at netsfjabrefguisearchsearchresultframeinit(searchresultframejava:155)        at netsfjabrefguisearchsearchresultframe<init>(searchresultframejava:135)        at netsfjabrefguisearchglobalsearchworker<init>(globalsearchworkerjava:35)        at netsfjabrefguisearchglobalsearchbarperformglobalsearch(globalsearchbarjava:206)        at netsfjabrefguisearchglobalsearchbarlambda$new$1(globalsearchbarjava:117)        at javaxswingabstractbuttonfireactionperformed(abstractbuttonjava:2022)``` || sadly i cannot reproduce your problem! || i will be gone the next 2 weeks i will be continuing working then || what needs to be done for this pr to be closed? || please fix my minor comments @matthiasgeiger any additional comments? otherwise i would merge this in (after double check changelogmd and headers) || could you please make `search globally` make a toggle button and change the functionally of the button before to behave acoordingly?if the search globally is on the global search is active otherwise the search string is local for each database || you can also use the icon `earth` (codepoint f1e7) and `earth-off` (f1e8) for this || as i was just writing something similar as @matthiasgeiger  here are the images for reference:![earth](https://cloudgithubusercontentcom/assets/8114497/17968273/2fc2d1a4-6acc-11e6-8a75-6717c32fee4bpng)![earth-off](https://cloudgithubusercontentcom/assets/8114497/17968272/2fc1e708-6acc-11e6-96ec-ba5cebc7a14apng) || added a global mode to the search- if the global mode is off  - each tab has its own searchterm  - the search result dialog only shows local findings- if the global mode is on  - in each tab the searchterm is the same (taking the one when it was activated)  - the search result dialog shows findings in all bib files || does the help file need an update? || the global search needs to be added to the help filethe `show results in window` functionality needs to be described too || what is the current status on this? is there anything @bartsch-dev should do here? || looking at the localization files and the changelog it seems like you have some merge problemsfixing the localization files should fix travis ci also try to fix codacy/pr issues || ive got an issue with the focus discussed personally with @bartsch-dev would merge after that is fixed || i fixed the focus problemi also addressed a traversal problem after you abort the searcht (hit <kbd>esc</kbd> in the searchbar)now the user can jump from the searchbar to the main table with <kbd>ctrl</kbd> + <kbd>enter</kbd> || searchbar disappers at certain occaisions please try to increase/decrease the width of jabref and youll see that at some point it disappears:![grabbed_20160908-224223](https://cloudgithubusercontentcom/assets/1366654/18366072/86d91e9a-7615-11e6-84f9-81e71f2ebb89png)![grabbed_20160908-224233](https://cloudgithubusercontentcom/assets/1366654/18366080/8cd6214e-7615-11e6-8696-6453ac4f92a2png)it also happens during the search if ""no results found"" is appended then the searchbar disapears after having nothing found:![grabbed_20160908-224028](https://cloudgithubusercontentcom/assets/1366654/18366014/443e09b0-7615-11e6-9978-41331842a1b3png)![grabbed_20160908-224043](https://cloudgithubusercontentcom/assets/1366654/18366024/4b7496c2-7615-11e6-884d-fae815de5d89png) || fixed || tested with bce1bf5 - not fixed:![jabref-global-search](https://cloudgithubusercontentcom/assets/1366654/18416353/69048144-7812-11e6-99e7-7f61db3c51bagif) || "
134,1338,1563,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,added button to crossref entry editor field to select parent entry based on the idea in #1338 a button is added in the crossref entry editor field to select the parent entry in the main table it is not exactly the same thing as suggested in #1338 though- [x] change in changelogmd described well now it is more like the actual feature request the reverse linking is not obvious how to implement graphically and relates to https://githubcom/koppor/jabref/issues/14 as well || i kept the button name and didnt understand the lambda thing other than that the comments are honored || @oscargus  forget about the lambda thing i oversaw that it contains more than one method :confused:  ||
135,1530,1567,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,fix 1530: integrity checker should ignore unescaped hashes in url field addresses #1530 - [x] change in changelogmd described- [x] tests created for changes lgtm :+1:  || lgtm :+1: rebase and merge ||
136,1356,1572,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,implement 1356 implements  #1356 and provides a formatter that converts html to unicode (converting characters and eliminating tags)- [x] change in changelogmd described- [x] tests created for changes lgtm || lgtm :+1:  || i have only a few small remarks :+1: for merge in general ||
137,126,1581,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,"fixed #1264 i finally got around to understand the reasons for #1264 (and parts of #1464) it turned out that commands starting with c was handled in a special way and that `{\v{s}}` was for unknown reasons used as ""line tabulation set""as a result not only does jabref now render `\v{s}` and `\chi` correctly it also renders combining accents see screen shot<img width""291"" alt""capture4"" src""https://cloudgithubusercontentcom/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35png"">- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes) @oscargus do the tests from #1464 pass in your branch? || @stefan-kolb as it was only `\chi` that was failing i would expect that yes the other two did already work (right?) || @oscargus it was only the \chi yes because \c is handled as special character if my test from the pr pass we can merge my test pr into your branch and then merge your fix :smile:  || in general i would like tests for this pr || my pr #1464  includes tests for the bug || @stefan-kolb there is a `\chi` first at the second row of the screen shot turned out all commands starting with c didnt work as c was hardcoded into globals as an accent so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed now `\c{h}` works as well giving ḩ @tobiasdiez: i was considering that however the main feature is adding support for accented unicode characters and they are a hassle to type properly nor will they make much sense except lots of comments for example spot the difference between ä and ä || @oscargus can you just cherry-pick my commit from the pr and you have your first test :smile: and then just close my pr afterwards :+1:  || i added some tests now@stefan-kolb im afraid that is a bit out of my comfort/knowledge zone my solution would be to almost simultaneously merge both prs :-)  || @oscargus then just copy my tests and close the pr :smile:  || @stefan-kolb that should be within grasp :-) || lgtm thanks for the quick solution! :) || lgtm :+1:  || lgtm :+1: just some minor remarks about naming variables and tests ||"
138,1264,1581,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,"fixed #1264 i finally got around to understand the reasons for #1264 (and parts of #1464) it turned out that commands starting with c was handled in a special way and that `{\v{s}}` was for unknown reasons used as ""line tabulation set""as a result not only does jabref now render `\v{s}` and `\chi` correctly it also renders combining accents see screen shot<img width""291"" alt""capture4"" src""https://cloudgithubusercontentcom/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35png"">- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes) @oscargus do the tests from #1464 pass in your branch? || @stefan-kolb as it was only `\chi` that was failing i would expect that yes the other two did already work (right?) || @oscargus it was only the \chi yes because \c is handled as special character if my test from the pr pass we can merge my test pr into your branch and then merge your fix :smile:  || in general i would like tests for this pr || my pr #1464  includes tests for the bug || @stefan-kolb there is a `\chi` first at the second row of the screen shot turned out all commands starting with c didnt work as c was hardcoded into globals as an accent so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed now `\c{h}` works as well giving ḩ @tobiasdiez: i was considering that however the main feature is adding support for accented unicode characters and they are a hassle to type properly nor will they make much sense except lots of comments for example spot the difference between ä and ä || @oscargus can you just cherry-pick my commit from the pr and you have your first test :smile: and then just close my pr afterwards :+1:  || i added some tests now@stefan-kolb im afraid that is a bit out of my comfort/knowledge zone my solution would be to almost simultaneously merge both prs :-)  || @oscargus then just copy my tests and close the pr :smile:  || @stefan-kolb that should be within grasp :-) || lgtm thanks for the quick solution! :) || lgtm :+1:  || lgtm :+1: just some minor remarks about naming variables and tests ||"
139,1464,1581,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,"fixed #1264 i finally got around to understand the reasons for #1264 (and parts of #1464) it turned out that commands starting with c was handled in a special way and that `{\v{s}}` was for unknown reasons used as ""line tabulation set""as a result not only does jabref now render `\v{s}` and `\chi` correctly it also renders combining accents see screen shot<img width""291"" alt""capture4"" src""https://cloudgithubusercontentcom/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35png"">- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes) @oscargus do the tests from #1464 pass in your branch? || @stefan-kolb as it was only `\chi` that was failing i would expect that yes the other two did already work (right?) || @oscargus it was only the \chi yes because \c is handled as special character if my test from the pr pass we can merge my test pr into your branch and then merge your fix :smile:  || in general i would like tests for this pr || my pr #1464  includes tests for the bug || @stefan-kolb there is a `\chi` first at the second row of the screen shot turned out all commands starting with c didnt work as c was hardcoded into globals as an accent so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed now `\c{h}` works as well giving ḩ @tobiasdiez: i was considering that however the main feature is adding support for accented unicode characters and they are a hassle to type properly nor will they make much sense except lots of comments for example spot the difference between ä and ä || @oscargus can you just cherry-pick my commit from the pr and you have your first test :smile: and then just close my pr afterwards :+1:  || i added some tests now@stefan-kolb im afraid that is a bit out of my comfort/knowledge zone my solution would be to almost simultaneously merge both prs :-)  || @oscargus then just copy my tests and close the pr :smile:  || @stefan-kolb that should be within grasp :-) || lgtm thanks for the quick solution! :) || lgtm :+1:  || lgtm :+1: just some minor remarks about naming variables and tests ||"
140,1527,1583,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,"fixed #1527 and some refactoring/cleanups fixed #1527 and did some refactoring and cleanups- [x] change in changelogmd described changes lgtm :+1: however the usage of ""magic numbers"" for the diff modes should be avoided - but this can also be solved in another pr :wink: || just a minor comment otherwise looks goodhave a thought on my suggestion and decide if you want to implement it afterwards rebase and merge || @matthiasgeiger i agree however i do not really get how to map a `jcombobox` and an `enum` || `new jcombobox(enumtypevalues())` should work || "
141,124,1584,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,added layout dateformatter see #1249 added a configurable layout formatter for dates fixes #1249- [x] change in changelogmd described- [x] tests created for changes lgtm just merge after you removed the generated comment ||
142,1249,1584,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,added layout dateformatter see #1249 added a configurable layout formatter for dates fixes #1249- [x] change in changelogmd described- [x] tests created for changes lgtm just merge after you removed the generated comment ||
143,1516,1589,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"implement 1516 implements #1516 selected fields (`isbn` `url` `uri` `issn` `doi`) are displayed in upper case in the entry editor- [x] change in changelogmd described lgtm! :+1: || one minor remark: ""isrn"" which is used in biblatex techreports could - or should - be added apart from that: lgtm || "
144,1345,1590,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,implemented #1345 - cleanup issn implemented cleanup that adds a missing dash in the issn field if it looks like an issn (checksum is not controlled but eight digits where the last may be an x)- [x] change in changelogmd described- [x] tests created for changes the whole purpose of this pr was indeed to add the missing dash if it otherwise looks like an issn yes that works at the momentwould we actually need a clean up action then? if properly used the issn class would provide automatic clean up right? which is useful but may be annoying?btw i doubt using the different parts explicitly is very useful though but if there is a valid use case where the string is not enough so sure should the parts then be `string` or `int` (x is 10 and only appears in the checksum)?it really looks like over-engineering to me i must say though || extracted an `issn` class for checking validity and cleaning up || i am missing tests for the issn class otherwise lgtm ||
145,159,1599,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed #1592 this should fix #1592- [x] change in changelogmd described lgtm ||
146,1592,1599,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed #1592 this should fix #1592- [x] change in changelogmd described lgtm ||
147,1579,1601,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,move event moves the `event` package into `model` as discussed in #1579no need for changelog since this has no externally visible effect commits will be squashed on merge lgtm! :+1: ||
148,1579,1604,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,move preferences moves preferences-related classes into a new top-level package as outlined in #1579 this is a pure refactoring no functional changes it doesnt fix the dependencies on preferences but separates them from the remaining classes in the root packageadditionally the class `jabrefpreferencesfilterdialog` is moved into the gui package where it belongs this also allows to rename the class and reduce its visibilitycommits can be squashed on merge lgtm ||
149,1613,1616,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,resolves #1613 use jabref default icon for uninstaller for now using standard icon for now should be replaced by specific uninstaller icon after redesign #482 :+1: || lgtm can you add a changelog please? then just merge it ||
150,1321,1622,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,improved latex to unicode/html formatters to output more sensible val… see #1321 main thing is that `\latex{}` outputs `latex` same for all unknown commands also behaves a bit better for some other situations with unknown commands and there are now tests for it to make sure that it happens- [x] change in changelogmd described- [x] tests created for changes  
151,1632,1638,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,keep @comment text in a bib file implements #1632 user comments marked by `@comment` are now kept in the bib file regardless of whether they use brackets or not- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref looks good!is it possible to comment multiple entries?```@comment{@article{}@book{}}```guess it is || great!and just to be sure i added another unit test for a `@comment` that contains multiple entries ||
152,1665,1666,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,rewrite bibtexml importer with jaxb parser regarding: #898 ive rewritten the bibtexml importer: it was written with a sax parser and ive used a jaxb parser i will be addings some more tests for the changes ive madenote: exporting in bibtexml format and then trying to import in bibtexml format is not working because of #1665- [x] tests created for changes- [x] manually tested changed features in running jabref are there any other remarks? || travis is failing because of ui tests || please not that the ui tests are done but **ignored** please read the travis output and check for **red lines**checkstyle failed your ide settings seem to be non-formant please double check: https://githubcom/jabref/jabref/wiki/guidelines-for-setting-up-a-local-workspace#intellij```:checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/logic/importer/fileformat/bibtexmlimporterjava:36: netsfjabrefimporterfileformatbibtexmlentry should be separated from previous imports [importorder] failedfailure: build failed with an exception* what went wrong:execution failed for task :checkstylemain> checkstyle rule violations were found see the report at: file:///home/travis/build/jabref/jabref/build/reports/checkstyle/mainhtml* try:run with --stacktrace option to get the stack trace run with --info or --debug option to get more log outputbuild failedtotal time: 1 mins 16912 secs``` ||
153,898,1666,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,rewrite bibtexml importer with jaxb parser regarding: #898 ive rewritten the bibtexml importer: it was written with a sax parser and ive used a jaxb parser i will be addings some more tests for the changes ive madenote: exporting in bibtexml format and then trying to import in bibtexml format is not working because of #1665- [x] tests created for changes- [x] manually tested changed features in running jabref are there any other remarks? || travis is failing because of ui tests || please not that the ui tests are done but **ignored** please read the travis output and check for **red lines**checkstyle failed your ide settings seem to be non-formant please double check: https://githubcom/jabref/jabref/wiki/guidelines-for-setting-up-a-local-workspace#intellij```:checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/logic/importer/fileformat/bibtexmlimporterjava:36: netsfjabrefimporterfileformatbibtexmlentry should be separated from previous imports [importorder] failedfailure: build failed with an exception* what went wrong:execution failed for task :checkstylemain> checkstyle rule violations were found see the report at: file:///home/travis/build/jabref/jabref/build/reports/checkstyle/mainhtml* try:run with --stacktrace option to get the stack trace run with --info or --debug option to get more log outputbuild failedtotal time: 1 mins 16912 secs``` ||
154,1288,1671,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #1288 newly opened bib-file is not focused - [x] open a new file and it is correctly focused afterwards- [x] open a file that was already opened before is correctly focused afterwards- [x] open a file two times and it is only opened once @matthiasgeiger should work now :smile:  || lgtm (apart from the minor comments via skype :wink: ) ||
155,1669,1678,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed oo/lo manual connection dialog on linux doesnt fix the whole issue #1669 but at least the bug in the ui code so that the manual connection dialog can be drawn on linux :+1:  ||
156,1682,1683,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"do not cite entries without a key in openoffice/libreoffice (#1682) check that all entries to be cited have non-empty keys show a popup if there are empty keys and generate keys if instructed to do soreferences #1682 - [x] change in changelogmd described- [x] manually tested changed features in running jabref <img width""269"" alt""capture14"" src""https://cloudgithubusercontentcom/assets/8114497/17440765/4924f2d8-5b2e-11e6-9c48-85b941c7ce93png""> || please do not use ""implemented #1682"" as title one cannot follow the link to the root issue :smile: a small description makes it much easier || otherwise please rebase and merge :+1:  || "
157,1716,1717,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fixes broken serialization of bibentries containing an @ fixes #1716- [x] change in changelogmd described- [x] tests created for changes- ~~screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~as this is rather crucial it would be great if someone else checks what i have done -)to explain: ```-                // get the text before the entry-                string prolog  parsedserializationsubstring(0 parsedserializationlastindexof(@))``` did not work properly if an `@` is used within an entryhowever determining from the complete parsed serialization where the entry begins and what are comments before the entry is not so trivial thus i added another attribute in the bibentry `commentsbeforeentry` in which the serialized form of the comments stored in front of the entry is directly saved during parsing the entry lgtm :+1: || just some minor remarks lgtm :+1:  || we are discussing the failing/unstable gui tests at #1700  || just my two cents regarding this pr (by looking at the code): should be fine! i was thinking about implementing something similar (separate comment field in bibentry) before but had avoided it so far there are a lot of tests regarding parsing so i am confident that we should not meet unexpected nullpointerexceptions and the likegood to see that we have a new person who is responsible for implementing the parsing logic -) || forget it this parsing stuff is still some black magic for me ) || refs #123 ||
158,1724,1733,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fixed concurrentmodificationexception when removing a field in the so… fixes #1724 really simple it turned outno changelog since im not sure if it was in 35- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
159,1531,1755,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,"fixed name column rendering #1499 and #1531 fixed #1499 and #1531 better to format the author names before converting latex to unicode bah!<img width""368"" alt""capture17"" src""https://cloudgithubusercontentcom/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fepng"">- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work simple change for fixing two issues at the same time lgtm :+1:  || lgtm :+1: please slightly rewrite the tests and then you can merge it ||"
160,1499,1755,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,"fixed name column rendering #1499 and #1531 fixed #1499 and #1531 better to format the author names before converting latex to unicode bah!<img width""368"" alt""capture17"" src""https://cloudgithubusercontentcom/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fepng"">- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work simple change for fixing two issues at the same time lgtm :+1:  || lgtm :+1: please slightly rewrite the tests and then you can merge it ||"
161,153,1755,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,"fixed name column rendering #1499 and #1531 fixed #1499 and #1531 better to format the author names before converting latex to unicode bah!<img width""368"" alt""capture17"" src""https://cloudgithubusercontentcom/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fepng"">- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work simple change for fixing two issues at the same time lgtm :+1:  || lgtm :+1: please slightly rewrite the tests and then you can merge it ||"
162,1750,1765,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,export to office 2007 first fix for #1750i will continue reworking some other fields too and will add some more tests<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i would like to merge this in for 36 (no localization changes) after i rebase  || looks good! just some minor comments || i will fix it this afternoon/evening regarding the language mapping there is not yet a simple solution as we would have to integrate the whole table of lcid: https://msdnmicrosoftcom/de-de/goglobal/bb964664aspxhttps://supportofficecom/en-us/article/locale-identification-numbers-for-language-specific-files-16102229-37c5-4ad5-92b1-0438f6304114?uien-us&rsen-us&adus || address comments as far as possible ||
163,1767,1770,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,implements #1767: add help button to access new help page (refs #1767)- [x] manually tested changed features in running jabref  
164,1771,1774,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,0,fix #1771 show all supported import types as default file filter little bit tricky to get this done would have preferred a cleaner option but i still need access to some jfilechooser methods @siedlerchr this is one for you to review :smile:  || generally a good solution but i would move the logic to the importfilefilter makes it a bit more clear ||
165,1776,1780,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,fix arxiv fetcher not working correctly fix #1776 remove cookie handler implementationour urldownload works without or own cookiehandler cookies tooedit// 35 worked partly for me with arxividall unit test and manual tests work againi think the problem was that due to the inheritance our cookie handler was called in every http connection no idea why it failed with arxiv only@stefan-kolb i wanted to remove this cookie handler anyway :+1: not sure what it did before if everything works without it it would be great! || yes everything works fine without it i checked some urldownloads (eg lookup fulltex) and some other manual fetching things i really have no idea why it was added before maybe because as a workaround for some things in the past || please remove the empty lines other than that im happy with removing the cookie-impl ||
166,1731,1791,1,0,0,0,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,removed jabrefpreferences dependency in fileutil and removed timestamp removed some jabrefpreferences dependencies in logic move timestamp methods to entryeditor as they are only used theresecond part from #1731 - [x] manually tested changed features in running jabref  
167,1795,1797,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"improved main table rendering when using eg title/author earlier on a name formatter was used if any of the fields in a column contained person names now it is determined by the used field (marginally related to #1795 or at least one step towards a solution figuring out which field actually was used)before:<img width""432"" alt""capture18"" src""https://cloudgithubusercontentcom/assets/8114497/17831868/bd234cca-66f5-11e6-9ad6-7dc84a0e7a18png"">after:<img width""527"" alt""capture19"" src""https://cloudgithubusercontentcom/assets/8114497/17831871/c3134324-66f5-11e6-8b17-5309354227a5png"">(as can be seen the author/editor column is still rendered as it should)- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref  "
168,1803,1812,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #1803 working directory is set to full path including filename   lgtm! :+1: ||
169,1235,1815,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"fix delete entry keybindings bug when using a different localization then english setting the keybindings does not work correctly (see here #1235 ) i figured out that the problem is that the `keyevent` returns localized key texts so you can not use this to set the `keybindings`(the jabref `keybindings` use english key texts) at the moment i only see two possibilities that do not end up in comparing tons of strings to manually get the english localization ~~first would be to change the locale to english so that the `keyevent` returns english key texts but i dont know what i might break with that and if the rest of the localization will still work~~ ~~second solution would be to change the `keybindings` so that they use `keycodes` instead of strings this would imho improve the `keybindings` system but it would mean a lot of changes in all the `keybinding` related code~~see the comment below for my approach https://githubcom/jabref/jabref/pull/1815#issuecomment-242346564- [x] manually tested changed features in running jabref i now found a way to fix it i am building a string with the english modifier key text using the triggered keyevents  `is-modifierkey-down` methods || please resolve conflicts and minor comments then its good to me 👍 || @boceckts can you test it on win and mac for me please? the meta key does not work on my linux system since there are os functions on it || @braunch windows uses the windows key for its own shortcuts same as with some linux distributions on mac it now does work to make shortcuts directly with the command(meta) keybut i just realized that if you create a shortcut with the control key eg ""ctrl + s"" it will automatically be replaced by ""command(meta) + s""so i guess the meta key doesnt have to be listened tosry for that || is this intended? why should the grabbed keys differ from the keys actually used by the user? i changed the behavior so that you can set the meta + key shortcut with the meta || any opinion on my solution with the meta key from the @jabref/developers ? || please merge `upstream/mater` and fix minor comments then it should be good to go || i addressed the small comments and resolved the conflicts || you commited with both your st university address and your normal development address please double check your git configplease merge upstream/master again can you make one commit as described at https://githubcom/jabref/jabref/wiki/tools#rebase-everything-as-one-commit-on-master? then i can resolve the conflicts by myself || i resolved the conflicts and squashed my commits should be good to go || please do not squash this makes reviewing very hard as we cannot see what has been adressed i added a `bump` on all my unaswered comments please fix/answeryou can see all comments at https://githubcom/jabref/jabref/pull/1815/files || i addressed your comments and merged the upstream/master i squashed following your comment https://githubcom/jabref/jabref/pull/1815#issuecomment-246499706 did i get that wrong? || "
170,1804,1823,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fixed #1804: url field is not removed by integrity check better to disable the check than remove the field from the entry -)fixes #1804 - [x] change in changelogmd described- [ ] tests created for changes (one may think of adding a test that no fields are removed from the entry in the integrity check but i havent done that here ideally the entry should have every possible field included)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgtm ||
171,1687,1837,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,"fixes #1687 ""month"" field ascending/descending sorting swapped when sorting according to ""month"" ""ascending""/""descending"" are switched- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref lgtm! great with the comparator test! :+1: ||"
172,184,1848,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,allow setting the etal-string empty implements #1841 earlier it was not allowed to set the etal-string in the authors layout formatter to be empty however as clear from #1841 there is at least one use case for it and it is not obvious why it wasnt allowed earliera side note: it is still not allowed to set sep and lastsep empty maybe there are good reasons for that?- [x] change in changelogmd described- [x] tests created for changes- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
173,1841,1848,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,allow setting the etal-string empty implements #1841 earlier it was not allowed to set the etal-string in the authors layout formatter to be empty however as clear from #1841 there is at least one use case for it and it is not obvious why it wasnt allowed earliera side note: it is still not allowed to set sep and lastsep empty maybe there are good reasons for that?- [x] change in changelogmd described- [x] tests created for changes- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
174,1841,1857,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed npe when loading a style file that has no default style found when trying #1841 although non-related- [x] change in changelogmd described- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) maybe we could get that into 36 too?  || yes i think it would make sense/be safe a better solution is discussed in #1858  ||
175,1663,1865,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixed #1663 better multi-monitor support - [x] location of windows is keep also for multi-monitor setups- [x] location of window is only reverted when it is not displaybale (no multi-monitor anymore/wrong preferences)- [x] removed duplicate maximized state logic- [x] dialogs are centered as overlay over the main window not always on the main screen@jabref/developers please try on your multi-monitor setup @ work and or a @ home - the location of the windows should stay the same or should be adapted to a visible alternate location - also the maximized state should be remembered correctly on all monitors- do you see any dialogs that are not correctly centered in multi monitor scenario (jabref on 2nd screen dialog on main screen) i run a single x screen two monitor setup and i cannot tell the difference compared to before: if any dialog cover both monitors it is moved and resized to stay inside one of the monitors || is it really inside the boundaries of the screen rectangle? only then it can work sometimes the resolutions are different between monitors (see screenshot)![image](https://cloudgithubusercontentcom/assets/2141507/18007075/d0085914-6ba2-11e6-89ce-d0146a10e824png) || when closing the merge entries window:![screenshot-4](https://cloudgithubusercontentcom/assets/8114497/18007316/d38fae92-6ba3-11e6-8436-f9687797d429png)when opening it:![screenshot-5](https://cloudgithubusercontentcom/assets/8114497/18007331/e2acadd0-6ba3-11e6-96fa-2e13acbe0101png)(it may be that the size is kept better now that i didnt think of)same with the main window (which is adapted to the left monitor on both images) || with that said im sure that this pr solves some problems and im not sure that the behaviour i report really is a problem as such || no your example should work for me and my horizontal/horizontal setup it works it looks like for your horizontal/vertical it does not we have to test more settings to smooth this functionality || @oscargus i tried your use case on a similar setup on windows and it worked maybe a linux problem?![image](https://cloudgithubusercontentcom/assets/2141507/18008684/584e9b98-6ba9-11e6-8a96-9d06e0d3b6b0png) || could indeed be especially with the option to have more than one x-screen (which i dont but some people do) are you interested in any numbers from my setup (obtained from the code)? || sure maybe you can also take a look i simplified the code very much so it should be easy to debug if java/the os supports our case or if we cannot do anything about the problemits basically just ``` javaif(!isdisplayable(storedposition))```checking for the current location inside a virtual rectangle of all available screens (union) || lgtm || @stefan-kolb i will try to see why things go wrong on my office setup ""soon"" || "
176,1496,1869,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"download many files in one go implements #1496 and also allows selecting multiple documents to find full text documents for i think that it doesnt always show a dialog for every failed files when having multiple ongoing downloadsplease try it out at http://buildsjabreforg/downloadmanyfiles- [x] change in changelogmd described- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) if it does what you promise i love you! :heart_eyes:  :laughing:  will try this tomorrow > think that it doesnt always show a dialog for every failed files when having multiple ongoing downloadsnot sure if i understand you correctly: so i download eg 20 files and 5 fails is then the dialog ""failed dl"" displayed 5 times?or after all downloads are finished it shows a dialog with eg 15/20 files downloaded succesfully? || works technically fine but i have some remarks as its currently not effective usable:i ran it over quality->look up fulltextwhen the process is finished it shows the file save/ download failed dialog for every entry which i previously selectedso if i have 200 entries select after the process it opens 200 dialogs even for canceling i would have to click 200 times of canceland there is apparently no option to cancel the lookup processi would suggest having just a final download result dialog or directly a process window perhaps sth like this from down them all:![dta](https://addonscdnmozillanet/user-media/previews/full/18/18838png?modified1331218902) || well what you select is what you get :-)i agree that your approach would be even better but that is out of the scope for me at the moment one could still reenable one selected entry at a time with the added benefit of being able to start more than one but i do not really know if that is a better way to do it maybe it is better to pop up a dialog asking if the user is sure they want to try to find > 10(?) full text documents as this can be quite a hassle? || agree with you add this dialog warning for more than x? entries for the rest we should create a new issue/enhancement mabye the other devs have some other regarding the blocking: does not block the ui atm || i updated and set it to 10 not sure how much one should actually write in the dialog || code lgtm just move that magic number to a constant || yeah was thinking about the constant thing as well will fix it i guess it is a good idea to merge now so people have time to find possible issues || improved the file name generation as well if the formatter does return an empty string the bibtex key is used if no bibtex key ""default"" is used || "
177,1882,1893,1,0,0,1,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"fix invalid bibtexkey freeze fixes #1882 reference: #1863- [x] change in changelogmd described- [x] manually tested changed features in running jabref please add label ""ready-for-review"" thanks || lgtm :+1:  i tested your changes and they are working good work!please resolve the merge conflicts and then we can merge it itto resolve the merge conflicts i recommend installing and setting up a merge tool for 3way merge (eg meld or kdiff3 or your favorite tool)then you do git checkout mastergit fetch upstreamgit merge upstream/mastergit push`git merge upstream/<yourbranch>`open git gui to see and resolve merge conflicts be careful with the changelog || well done :+1:  merged || "
178,1506,1894,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,implemented title and camel key modifiers implemented #1506 - [x] change in changelogmd described- [x] tests created for changes- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgtm  just some misisng space in the changelog  :+1:  || added `lower_case` `upper_case` `sentence_case` `capitalize` and `title_case` modifiers (the two first are just additional names)unmodifiable return from `titlegetwords()` but the function of the modifier rely heavily on mutable `word` || @oscargus could you follow up so that we can merge? || @koppor / @oscargus  pls also move `metadatasetbibtexkeypattern(bibtexkeypattern)` to the setup method || @tobiasdiez sorry for overlooking your second move comment i also created `formattersgetformatterformodifier` hope this is good to go nowthe tests are locally ok the failing test is unrelated to the update || yes looks good now thanks @koppor for finishing this pr 😄  ||
179,1092,1899,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"move files to subfolders in file directory implementation for #1092 already implemented copy and move methods from #1861 - [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)![jabreffiledirpattern](https://cloudgithubusercontentcom/assets/320228/20651008/ad235808-b4dc-11e6-9e1f-fe6175d5c4ebpng) todo: pass global as paramtodo: check relative path || @jabref/developers  i need some help with the gui: i desperately tried to add the new field below the other but i cant get it work no matter what i tried :rage: the original layout code is this: `formlayout layout  new formlayout(""1dlu 8dlu left:pref 4dlu fill:3dlu"")` in:https://githubcom/jabref/jabref/blob/filedirpattern/src/main/java/net/sf/jabref/gui/preftabs/importsettingstabjavathe new field is there but kinda hidden no idea how to change it back:![settingsimportpanel](https://cloudgithubusercontentcom/assets/320228/18609034/56a523ba-7cf8-11e6-98fa-dbdefb6ca60bpng) || yeah finally the layout works :sunglasses:  || thanks for the work! im really missing this feature in jabref 3however the current behavior is a little unexpected first the file seems to be moved relative to its current directory for example directory pattern \entrytype moves the file with every execution of cleanup to a new subdirectory for me expected behavior would be that the new path is relative to the directory of the bib-file or some otherwise specified root directory second the file field in the bib entry seems to be adjusted only if the option use the bib file location as primary file directory is set otherwise the file is moved but the file path is not adjusted || @dierkes  thanks for your feedback i would have asked you to test it otherwise too )the moving files is a bit complicated as it has to be kept backwards compatiblethe file directory is the first found directory: a) global file dire from setting b) bib file relative c) bib specific setting (atm not sure about the order b and c)regarding the file field i will check it || regarding the new file directory: thats not the behavior i observedmy test case was:original file: phdthesis/xyz_2015pdf (all paths relative to the bib-file)file name pattern: \bibtexkeyfile dir pattern: \entrytypecleanup -> phdthesis/phdthesis/xyz_215pdfcleanup -> phdthesis/phdthesis/phdthesis/xyz_215pdfcleanup -> phdthesis/phdthesis/phdthesis/phdthesis/xyz_215pdfit didnt matter if use the bib file location as primary file directory was set or if the default directory for files was set (i tried with setting it to the directory of the bib-file) i didnt try to set the default file directory for the specific bib-file however (can do that later)from my perspective a backward compatible solution could be: if the file dir pattern is not set rename the file in its current location if it is set move the file to the directory specified by file dir pattern (relative to bib-file directory if its a relative path) and rename it there however an empty file name pattern could mean a) rename the file in place or b) move file to bib-file directory so an additional option is probably necessary that specifies whether moving files is active or notinterpreting the file dir pattern as a path relative to the current directory of the file doesnt make sense to me since executing cleanup would always change the file path which is probably the opposite effect one expects from a cleanup ) || ah i see you are rightwill look around2016-10-14 12:48 gmt+02:00 dierkes notifications@githubcom:> regarding the new file directory: thats not the behavior i observed> > my test case was:> original file: phdthesis/xyz_2015pdf (all paths relative to the bib-file)> file name pattern: \bibtexkey> file dir pattern: \entrytype> > cleanup -> phdthesis/phdthesis/xyz_215pdf> cleanup -> phdthesis/phdthesis/phdthesis/xyz_215pdf> cleanup -> phdthesis/phdthesis/phdthesis/phdthesis/xyz_215pdf> > it didnt matter if use the bib file location as primary file directory> was set or if the default directory for files was set (i tried with> setting it to the directory of the bib-file) i didnt try to set the> default file directory for the specific bib-file however (can do that> later)> > from my perspective a backward compatible solution could be: if the file> dir pattern is not set rename the file in its current location if it is> set move the file to the directory specified by file dir pattern (relative> to bib-file directory if its a relative path) and rename it there> however an empty file name pattern could mean a) rename the file in place> or b) move file to bib-file directory so an additional option is probably> necessary that specifies whether moving files is active or not> > interpreting the file dir pattern as a path relative to the current> directory of the file doesnt make sense to me since executing cleanup> would always change the file path which is probably the opposite effect> one expects from a cleanup )> > —> you are receiving this because you authored the thread> reply to this email directly view it on github> https://githubcom/jabref/jabref/pull/1899#issuecomment-253768620 or mute> the thread> https://githubcom/notifications/unsubscribe-auth/aati5plbikvfhsla2g3oroq4okl60irdks5qz135gajpzm4jxp95>  || @dierkes  i fixed it when all tests are green you could try it out || now it works mostly as expected for meof course as described above with the current state its not possible to rename a file only (if its current location doesnt match the file dir pattern) so we might need the option to activate/deactivate moving the filesand a very strange thing i noticed: if filedir pattern is empty and main file directory is empty and use the bib file location as primary file directory is not set then the file is not moved and a directory relative to the jabref directory (or maybe to the current working directory)  is created with the name of the desired file path staying in the example from above instead of renaming the file to(literature/) phdthesis/xyz_2015pdfa directory named(jabref/) phdthesis/xyz_2015pdf/is created || thanks for the feedback i will check itnormally renaming file only should work if filedirpattern is empty in thesettingsam 15102016 11:52 nachm schrieb ""dierkes"" notifications@githubcom:> now it works mostly as expected for me> > of course as described above with the current state its not possible to> rename a file only (if its current location doesnt match the file dir> pattern) so we might need the option to activate/deactivate moving the> files> > and a very strange thing i noticed: if filedir pattern is empty and> main file directory is empty and use the bib file location as primary> file directory is not set then the file is not moved and a directory> relative to the jabref directory (or maybe to the current working> directory) is created with the name of the desired file path staying in> the example from above instead of renaming the file to> (literature/) phdthesis/xyz_2015pdf> a directory named> (jabref/) phdthesis/xyz_2015pdf/> is created> > —> you are receiving this because you authored the thread> reply to this email directly view it on github> https://githubcom/jabref/jabref/pull/1899#issuecomment-254013358 or mute> the thread> https://githubcom/notifications/unsubscribe-auth/aati5ajdzego8bkoyc7n76tm89c8-mviks5q0ushgajpzm4jxp95>  || @dierkes  i fixed the strange behaviour there was some directory path which was just """" and not null so it was resolved to the current dir of the jar  now it only renames the fileand the old behaviour now works too when filedirpattern is empty the file is moved to the file directory the file directories are checked in this order: the settings are prioritized in the following order and the first defined setting is used1 metadata user-specific directory2 metadata general directory3 preferences directory4 bib file directory || this works almost -)i encountered a similar problem when dragging a file and dropping it to an entry when i select to move the file again instead of a file a directory is created (same path as the file should have) || and another issue: if multiple files are linked to an entry the first file is renamed and the other file links get lost in jabref 36 the first file is renamed and the other files are moved to the same directory || thanks for your intenstive testingthe issue with the drag and drop is now fixed  there was a problem with the layout which would have been default to bibtexkey if the pattern param is emptyi am aware of the thing with the multi files as far as i discovered the first successful rename/move exits the function will try to find out why not sure if i find time for it next weekaddtionally i will create some automatic tests too if it works finally || i think i fixed the issue with the multiple files see #2248the behavior now as far as i understand it is: the function will try to move/rename all attached files if a file with the new file path already exist (that happens if two attached files have the same file extension) it doesnt move/rename the file and keeps the old file path in the bib entryfor example lets consider we have three attached files:olddir1/oldname1pdfolddir2/oldname2pdfolddir3/oldname3txtthe new file paths will be:newdir/newnamepdfolddir2/oldname2pdfnewdir/newnametxti think there is some room for improvement for example to keep oldname2 but move the file to newdir if possible however before doing this i think its necessary to define the desired behavior in detail || thanks for your work! just one thing it would be nice if you could check that locally toothere is a junit test i set to ignore (due to the bug) which should now work too just remove the ignore-tagand  execute it (either directly  or run gradlew check)`cleanuprenamepdfrenameswithmultiplefiles()` in  `src/test/java/net/sf/jabref/logic/cleanup/cleanupworkertestjava` || i removed the tagwhen i run `gradlew check` the test `cleanuprenamepdfrenamesrelativefile()` in `cleanupworkertestjava` fails however i think the problem lies within the design of the test the expected path of the file is `toottmp` but the actual path is `misc/toottmp` i guess there is some default value set for filedirpattern || hm i think the value has to be set to an empty string in the test becauseotherwise it will take the value of the settingsam 10112016 12:57 vorm schrieb ""dierkes"" notifications@githubcom:> i removed the tag> > when i run gradlew check the test cleanuprenamepdfrenamesrelativefile()> in cleanupworkertestjava fails however i think the problem lies within> the design of the test the expected path of the file is toottmp but the> actual path is misc/toottmp i guess there is some default value set for> filedirpattern> > —> you are receiving this because you authored the thread> reply to this email directly view it on github or mute the thread || @dierkes  i just fixed the failing test as i expected it it was due to the setting which got read || great is there a chance to integrate this branch into the next release? || technically this branch is based on the current master but not includedwith the 37 release which will be probably released todayso if you stick for the moment to the dev version of this branch you haveall stuff from 37 release plus this featureof course it will be in the next release then there are only some testswhich now have to be added to make it ready for a merge || documentation: could you please add an issue at helpjabreforg or even create an initial page with `skeleton: true` in the header?you can link https://helpjabreforg/en/customexports#built-in-export-formatters for a description of the formatters which can be used || i fixed the things from the review  || included feedbacjk || one or two of my comments are still open when i look at the github ui above actually im only interested why you initialized the array with a length of 4 im fine with the rest as thes are only cosmetic changes || fixed the rest and the one test which @koppor commented out in c9726d94686e6687af66476d26b0a1d08c61b41c works fine on travis now again || @jabref/developers we can merge right? || @stefan-kolb @siedlerchr yes we can that is once the merge conflict in the italian localization gets fixed || @jabref/developers  all conflicts fixed || hi on my system two tests are failing cleanuprenamepdfrenameswithmultiplefiles and cleanuprenamepdfrenamefiledirectorypatternsubdirectory however the problem seems to be that these and other tests do not remove the temporary files properly after execution the behavior of the cleanup function itself is as expected but since a file with the target path exists already (left from another test) the attached file is not renamed and the assertion fails im running the tests on fedora || thanks  for  the feedback i  will  check  thatam 06122016 11:45 nachm schrieb ""dierkes"" <notifications@githubcom>:> hi on my system two tests are failing cleanuprenamepdfrenameswithmultiplefiles> and cleanuprenamepdfrenamefiledirectorypatternsubdirectory however the> problem seems to be that these and other tests do not remove the temporary> files properly after execution the behavior of the cleanup function itself> is as expected but since a file with the target path exists already (left> from another test) the attached file is not renamed and the assertion> fails im running the tests on fedora>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/1899#issuecomment-265297567> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/aati5i43yoo4vp5qizl0mhwtdmyvbiexks5rfewegajpzm4jxp95>> > || should now be fixed was some preferences problem as i already thought mocked it away || "
180,1861,1899,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"move files to subfolders in file directory implementation for #1092 already implemented copy and move methods from #1861 - [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)![jabreffiledirpattern](https://cloudgithubusercontentcom/assets/320228/20651008/ad235808-b4dc-11e6-9e1f-fe6175d5c4ebpng) todo: pass global as paramtodo: check relative path || @jabref/developers  i need some help with the gui: i desperately tried to add the new field below the other but i cant get it work no matter what i tried :rage: the original layout code is this: `formlayout layout  new formlayout(""1dlu 8dlu left:pref 4dlu fill:3dlu"")` in:https://githubcom/jabref/jabref/blob/filedirpattern/src/main/java/net/sf/jabref/gui/preftabs/importsettingstabjavathe new field is there but kinda hidden no idea how to change it back:![settingsimportpanel](https://cloudgithubusercontentcom/assets/320228/18609034/56a523ba-7cf8-11e6-98fa-dbdefb6ca60bpng) || yeah finally the layout works :sunglasses:  || thanks for the work! im really missing this feature in jabref 3however the current behavior is a little unexpected first the file seems to be moved relative to its current directory for example directory pattern \entrytype moves the file with every execution of cleanup to a new subdirectory for me expected behavior would be that the new path is relative to the directory of the bib-file or some otherwise specified root directory second the file field in the bib entry seems to be adjusted only if the option use the bib file location as primary file directory is set otherwise the file is moved but the file path is not adjusted || @dierkes  thanks for your feedback i would have asked you to test it otherwise too )the moving files is a bit complicated as it has to be kept backwards compatiblethe file directory is the first found directory: a) global file dire from setting b) bib file relative c) bib specific setting (atm not sure about the order b and c)regarding the file field i will check it || regarding the new file directory: thats not the behavior i observedmy test case was:original file: phdthesis/xyz_2015pdf (all paths relative to the bib-file)file name pattern: \bibtexkeyfile dir pattern: \entrytypecleanup -> phdthesis/phdthesis/xyz_215pdfcleanup -> phdthesis/phdthesis/phdthesis/xyz_215pdfcleanup -> phdthesis/phdthesis/phdthesis/phdthesis/xyz_215pdfit didnt matter if use the bib file location as primary file directory was set or if the default directory for files was set (i tried with setting it to the directory of the bib-file) i didnt try to set the default file directory for the specific bib-file however (can do that later)from my perspective a backward compatible solution could be: if the file dir pattern is not set rename the file in its current location if it is set move the file to the directory specified by file dir pattern (relative to bib-file directory if its a relative path) and rename it there however an empty file name pattern could mean a) rename the file in place or b) move file to bib-file directory so an additional option is probably necessary that specifies whether moving files is active or notinterpreting the file dir pattern as a path relative to the current directory of the file doesnt make sense to me since executing cleanup would always change the file path which is probably the opposite effect one expects from a cleanup ) || ah i see you are rightwill look around2016-10-14 12:48 gmt+02:00 dierkes notifications@githubcom:> regarding the new file directory: thats not the behavior i observed> > my test case was:> original file: phdthesis/xyz_2015pdf (all paths relative to the bib-file)> file name pattern: \bibtexkey> file dir pattern: \entrytype> > cleanup -> phdthesis/phdthesis/xyz_215pdf> cleanup -> phdthesis/phdthesis/phdthesis/xyz_215pdf> cleanup -> phdthesis/phdthesis/phdthesis/phdthesis/xyz_215pdf> > it didnt matter if use the bib file location as primary file directory> was set or if the default directory for files was set (i tried with> setting it to the directory of the bib-file) i didnt try to set the> default file directory for the specific bib-file however (can do that> later)> > from my perspective a backward compatible solution could be: if the file> dir pattern is not set rename the file in its current location if it is> set move the file to the directory specified by file dir pattern (relative> to bib-file directory if its a relative path) and rename it there> however an empty file name pattern could mean a) rename the file in place> or b) move file to bib-file directory so an additional option is probably> necessary that specifies whether moving files is active or not> > interpreting the file dir pattern as a path relative to the current> directory of the file doesnt make sense to me since executing cleanup> would always change the file path which is probably the opposite effect> one expects from a cleanup )> > —> you are receiving this because you authored the thread> reply to this email directly view it on github> https://githubcom/jabref/jabref/pull/1899#issuecomment-253768620 or mute> the thread> https://githubcom/notifications/unsubscribe-auth/aati5plbikvfhsla2g3oroq4okl60irdks5qz135gajpzm4jxp95>  || @dierkes  i fixed it when all tests are green you could try it out || now it works mostly as expected for meof course as described above with the current state its not possible to rename a file only (if its current location doesnt match the file dir pattern) so we might need the option to activate/deactivate moving the filesand a very strange thing i noticed: if filedir pattern is empty and main file directory is empty and use the bib file location as primary file directory is not set then the file is not moved and a directory relative to the jabref directory (or maybe to the current working directory)  is created with the name of the desired file path staying in the example from above instead of renaming the file to(literature/) phdthesis/xyz_2015pdfa directory named(jabref/) phdthesis/xyz_2015pdf/is created || thanks for the feedback i will check itnormally renaming file only should work if filedirpattern is empty in thesettingsam 15102016 11:52 nachm schrieb ""dierkes"" notifications@githubcom:> now it works mostly as expected for me> > of course as described above with the current state its not possible to> rename a file only (if its current location doesnt match the file dir> pattern) so we might need the option to activate/deactivate moving the> files> > and a very strange thing i noticed: if filedir pattern is empty and> main file directory is empty and use the bib file location as primary> file directory is not set then the file is not moved and a directory> relative to the jabref directory (or maybe to the current working> directory) is created with the name of the desired file path staying in> the example from above instead of renaming the file to> (literature/) phdthesis/xyz_2015pdf> a directory named> (jabref/) phdthesis/xyz_2015pdf/> is created> > —> you are receiving this because you authored the thread> reply to this email directly view it on github> https://githubcom/jabref/jabref/pull/1899#issuecomment-254013358 or mute> the thread> https://githubcom/notifications/unsubscribe-auth/aati5ajdzego8bkoyc7n76tm89c8-mviks5q0ushgajpzm4jxp95>  || @dierkes  i fixed the strange behaviour there was some directory path which was just """" and not null so it was resolved to the current dir of the jar  now it only renames the fileand the old behaviour now works too when filedirpattern is empty the file is moved to the file directory the file directories are checked in this order: the settings are prioritized in the following order and the first defined setting is used1 metadata user-specific directory2 metadata general directory3 preferences directory4 bib file directory || this works almost -)i encountered a similar problem when dragging a file and dropping it to an entry when i select to move the file again instead of a file a directory is created (same path as the file should have) || and another issue: if multiple files are linked to an entry the first file is renamed and the other file links get lost in jabref 36 the first file is renamed and the other files are moved to the same directory || thanks for your intenstive testingthe issue with the drag and drop is now fixed  there was a problem with the layout which would have been default to bibtexkey if the pattern param is emptyi am aware of the thing with the multi files as far as i discovered the first successful rename/move exits the function will try to find out why not sure if i find time for it next weekaddtionally i will create some automatic tests too if it works finally || i think i fixed the issue with the multiple files see #2248the behavior now as far as i understand it is: the function will try to move/rename all attached files if a file with the new file path already exist (that happens if two attached files have the same file extension) it doesnt move/rename the file and keeps the old file path in the bib entryfor example lets consider we have three attached files:olddir1/oldname1pdfolddir2/oldname2pdfolddir3/oldname3txtthe new file paths will be:newdir/newnamepdfolddir2/oldname2pdfnewdir/newnametxti think there is some room for improvement for example to keep oldname2 but move the file to newdir if possible however before doing this i think its necessary to define the desired behavior in detail || thanks for your work! just one thing it would be nice if you could check that locally toothere is a junit test i set to ignore (due to the bug) which should now work too just remove the ignore-tagand  execute it (either directly  or run gradlew check)`cleanuprenamepdfrenameswithmultiplefiles()` in  `src/test/java/net/sf/jabref/logic/cleanup/cleanupworkertestjava` || i removed the tagwhen i run `gradlew check` the test `cleanuprenamepdfrenamesrelativefile()` in `cleanupworkertestjava` fails however i think the problem lies within the design of the test the expected path of the file is `toottmp` but the actual path is `misc/toottmp` i guess there is some default value set for filedirpattern || hm i think the value has to be set to an empty string in the test becauseotherwise it will take the value of the settingsam 10112016 12:57 vorm schrieb ""dierkes"" notifications@githubcom:> i removed the tag> > when i run gradlew check the test cleanuprenamepdfrenamesrelativefile()> in cleanupworkertestjava fails however i think the problem lies within> the design of the test the expected path of the file is toottmp but the> actual path is misc/toottmp i guess there is some default value set for> filedirpattern> > —> you are receiving this because you authored the thread> reply to this email directly view it on github or mute the thread || @dierkes  i just fixed the failing test as i expected it it was due to the setting which got read || great is there a chance to integrate this branch into the next release? || technically this branch is based on the current master but not includedwith the 37 release which will be probably released todayso if you stick for the moment to the dev version of this branch you haveall stuff from 37 release plus this featureof course it will be in the next release then there are only some testswhich now have to be added to make it ready for a merge || documentation: could you please add an issue at helpjabreforg or even create an initial page with `skeleton: true` in the header?you can link https://helpjabreforg/en/customexports#built-in-export-formatters for a description of the formatters which can be used || i fixed the things from the review  || included feedbacjk || one or two of my comments are still open when i look at the github ui above actually im only interested why you initialized the array with a length of 4 im fine with the rest as thes are only cosmetic changes || fixed the rest and the one test which @koppor commented out in c9726d94686e6687af66476d26b0a1d08c61b41c works fine on travis now again || @jabref/developers we can merge right? || @stefan-kolb @siedlerchr yes we can that is once the merge conflict in the italian localization gets fixed || @jabref/developers  all conflicts fixed || hi on my system two tests are failing cleanuprenamepdfrenameswithmultiplefiles and cleanuprenamepdfrenamefiledirectorypatternsubdirectory however the problem seems to be that these and other tests do not remove the temporary files properly after execution the behavior of the cleanup function itself is as expected but since a file with the target path exists already (left from another test) the attached file is not renamed and the assertion fails im running the tests on fedora || thanks  for  the feedback i  will  check  thatam 06122016 11:45 nachm schrieb ""dierkes"" <notifications@githubcom>:> hi on my system two tests are failing cleanuprenamepdfrenameswithmultiplefiles> and cleanuprenamepdfrenamefiledirectorypatternsubdirectory however the> problem seems to be that these and other tests do not remove the temporary> files properly after execution the behavior of the cleanup function itself> is as expected but since a file with the target path exists already (left> from another test) the attached file is not renamed and the assertion> fails im running the tests on fedora>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/1899#issuecomment-265297567> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/aati5i43yoo4vp5qizl0mhwtdmyvbiexks5rfewegajpzm4jxp95>> > || should now be fixed was some preferences problem as i already thought mocked it away || "
181,1897,1906,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"check integrity year check added #1897 added last four nonpunctuation characters should be numerals in check integrity year- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref thanks! the tests fails because of missing translation stringsif you run the logic/i10/localizationconsistencytestjava you will get a list of strings which are not in the translation files add those to the english one and run the script that the output tells you to then all languages are updated and the test should pass (you may have to refresh the files in your ide in case it fails again) also see: https://githubcom/jabref/jabref/wiki/code-howtos#using-localization-correctlyif you can add a test to integritychecktest (or whatever it is called) that really tests for this new feature it would be great || i hope it is correct now please set label ""ready-for-review"" thanks || thanks for your work :+1: lgtm! if you reword the changelog we can merge it in || a probably stupid question: why not just check that the year field consists exactly of 4 digits? || @tobiasdiez  because the offical bibtex spec says so:see the issue for details:https://githubcom/jabref/jabref/issues/1897#issuecomment-243756785 || got 3 minor comments and then we can merge :+1:  || thanks :smile:  lgtm :+1:  || lgtm too || "
182,1912,1914,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"check integrity edition check implemented #1912 implemented a check for the field edition the check differentiates between bibtex and biblatex mode of the database- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please set label ""ready-for-review"" thank you || lgtm +1 just let someone other look at it tooanother thing i just got in mind is that the whole checker code could be refactored to use lamdbas because we have a nice functional interface will create a new issue for discussing that  || lgtm :+1: too just change the order in the if statement as @siedlerchr suggest and then this could be merged || and please extract the checker to its own file || lgtm from my side now :+1:  || @grimes2 please rebase this on master and we will merge it in || :+1: || thanks for your contribution! || "
183,1922,1926,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,"extract all integrity checker classes to its own file issue #1922- [ ] change in changelogmd described- [x] manually tested changed features in running jabref you have still some checkstyle erorr with your imports if you run eclipse and have the jabref profile inlcuded then you can just do strg+shift+o for oganizing imports and your checkstyle error will go away )ps: you should also run /gradlew check before a commit to see if all is right || ahh :laughing:  thanks please set label ""ready-for review"" || looks fine code-wise solid work! can be merged in my point of view || yes lgtm too! || "
184,119,1928,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"support citationstyles implements #119the user can choose multiple citationstyles which he can cycle threw in the preview panel (forward with <kbd>f9</kbd> backwards <kbd>shift</kbd> + <kbd>f9</kbd> both are in the context menu and the menu bar) as discussed i removed the 2nd preview### preview before:![preview_before](https://cloudgithubusercontentcom/assets/15333371/18280266/c6853006-7458-11e6-8828-4484a74bbda6png)### preview after:![preview_after](https://cloudgithubusercontentcom/assets/15333371/18280283/d74107e4-7458-11e6-8c88-216281c78758png)### preferences before:![preferences_before](https://cloudgithubusercontentcom/assets/15333371/18280265/c684f26c-7458-11e6-9672-fde6b684a11bpng)### preferences after:![preferences_after](https://cloudgithubusercontentcom/assets/15333371/18280282/d7368f08-7458-11e6-9bc6-dac0e119443cpng)i didnt include the localization (other the english) on purpose because they create unnecessary conflicts when rebasing quite often (i push them when everything else is fine)the help page has to be updated too i do that as soon as this pr is merged- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)warning: currently i read the available citationstyles at runtime i had problems reading them from the gradle dependency thus currently they are only found when jabref is started from the jar the text of the preferences tab is not completely visible either reword or adjust the width of the side panel || when pressing the up or down button the selected entry becomes deselected and i have to select it again this can be quite frustrating if i want to move a citation style to the top can you please change it so the selected entry stays selected? || the preview panel is not being updated after changing the citation style but rather displays always the first selected entrysteps to reproduce:1 go to preferences and add a citation style2 in the main table select an entry and open the preview panel3 press f9 to see the newly added citation style4 select a different entry and the preview panel will not update but use the information of the first selected entry edit: it will update the citation style though || the preview panel is not being updated after changing the citation style when working with multiple databasessteps to reproduce:1 go to preferences and add a citation style2 open at least two databases with at least one entry3 in the main table select an entry and open the preview panel4 select the second database and an entry6 press f9 to change to the newly added citation style5 the preview panel will not update at all but the status says the citation style has changedwhen switching to the first database the preview panel has updated and responds to citation style changes || i think it would be great to also add the selected citation styles to the ""export to clipboard"" dialog  || when the bugs are fixed and the other minor comments have been addressed then its fine by me || fixed the bug (both were caused by the same thing)is the export to clipboard important? you can already copy the current preview via context menu on the preview panel || <s>the context menu exports text only is it possible to export the html?</s> when pasting into microsoft word everything is formatted correctlythe ""export to clipboard"" is not important if some interested user requests it work on it can be done || is the use of citation styles only for the preview pane ?  i have downloaded the latest developer version and connected to a libreoffice document to see if i could use the csl styles to format my bibliography but when i open the ""select style"" window only the jstyle format seems to be supported   || i think this would be the next logical step: to use citation styles in libre office || please open a new issue to offer tracking the status maybe @oscargus has some time to work on that || if i use biblatex style biblio entries then i have fields like ""journaltitle"" ""location"" and ""date"" instead of ""journal"" ""address"" and ""year""  these are not picked up by the new preview citation styles  further as reported by boceckts above one cant get the citation style displayed so as to edit itthe whole new preview citation feature is wonderfully helpful i use it a lot!  thank you || "
185,1851,1931,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,export number field as number if not patent or issue in office 07 xml add : export key field (not to be confused with bibtexkey field) add test for custom entry type and key field refs #1851 documentation has to be updated<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added mapping between note field and comments fieldnow all official fields  should be mapped i will update help accordingly || :+1:  ||
186,1924,1934,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,removed external dependency in logic an alternative to #1924 : hard coded `ps` and `pdf` as file type namesstill some methods that can be removed in `externalfiletype` (the original thing done in #1924 i created three `gui` packages:- `externalfiletypes` for things related to `externalfiletype`- `externalfiles` for things (primarily) related to the actual files- `filelist` for things related to `filelist`- [x] change in changelogmd described lgtm :+1:i like this solution personally i wouldnt separate externalfiletypes and externalfile but this is probably a matter of taste || lgtm as well! and i am in favor of the separationjust for clarification before merging: do you still intend to move `externalfiletype` and `externalfiletypes` into one of the other packages? or since the external dependencies on the classes are removed now will you keep them in gui?both ways would be fine in a sense if those classes are exclusively used in gui it is fine to keep them there even if they are could be refactored in a gui-independent fashion before merging the build has to succeed of course || the plan is to keep it as is as it solves the problemone may indeed think of different solutions regarding the amount of packages and there is no clear border especially considering `filelist`regarding the builds: clearly i picked the wrong field in `externalfiletype` will fix it || correct field bad at reading || not sure why the circle ci-tests are not executed but the things are fixed now anyway || i closed and reopened the pr to give travis another chance to build the branch so can we merge this?  || good idea and it worked! the build succeeded so we can merge it ||
187,1920,1942,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,mods importer regarding: #1920 adds an importer for the mods (xml) format the importer is written with a jaxb parserdetails on the format and the newest xml schema can be found [here](http://wwwlocgov/standards/mods/)ive used the newest schema (version 36)- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref i just merged my xmlunit changes n #1944  i think it can useful for you too allows checking/validating xml against a schema too  || i think your code looks good but generally i would like to see more comments and try using more lambdas :+1:  || i dont really get why travis is failing  || the problem seems to with the integration tests not related to your changes || hm im also wondering why codecov is not running the tests the test coverage should be much higher || i dunno about codeco from my point of view its good! :+1: @boceckts  please have a final look || okay i merge it in now as all things are resolved :+1:  regarding the failing tests we should investigate that in a new issue  ||
188,1943,1944,1,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,try around with xmlunit <!-- describe the changes you have made here: what why  -->see #1943 for details - [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please fix the two comments and then directly merge it ||
189,1877,1950,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,towards hierarchical keywords <!-- describe the changes you have made here: what why  -->this pr is the first step towards supporting hierarchical keywords #628 - [x] refactor the keyword-related code to use new classes `keywordlist` and `keyword` - [x] unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877- [ ] move keyword delimiter from preferences to metadata (database properties) -> new pr- [ ] add hierarchical delimiter and change parsing logic in `keywordlist` accordingly -> new pr- [ ] change ui to support hierarchical keywords -> new prnote: i also moved the stringutil class to model (in some sense it is jabrefs own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) )- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
190,628,1950,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,towards hierarchical keywords <!-- describe the changes you have made here: what why  -->this pr is the first step towards supporting hierarchical keywords #628 - [x] refactor the keyword-related code to use new classes `keywordlist` and `keyword` - [x] unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877- [ ] move keyword delimiter from preferences to metadata (database properties) -> new pr- [ ] add hierarchical delimiter and change parsing logic in `keywordlist` accordingly -> new pr- [ ] change ui to support hierarchical keywords -> new prnote: i also moved the stringutil class to model (in some sense it is jabrefs own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) )- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
191,705,1950,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,towards hierarchical keywords <!-- describe the changes you have made here: what why  -->this pr is the first step towards supporting hierarchical keywords #628 - [x] refactor the keyword-related code to use new classes `keywordlist` and `keyword` - [x] unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877- [ ] move keyword delimiter from preferences to metadata (database properties) -> new pr- [ ] add hierarchical delimiter and change parsing logic in `keywordlist` accordingly -> new pr- [ ] change ui to support hierarchical keywords -> new prnote: i also moved the stringutil class to model (in some sense it is jabrefs own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) )- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
192,1949,1952,1,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,1,0,1,0,0,1,0,fix wrong path in error message fixes #1949 an error message directs to the wrong preference tab- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please resolve conflicts then its ready to go || conflicts resolved || lgtm :+1:  ill merge it in ||
193,1959,1962,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"minor improvements to the javafx about dialog follow up of #1959@bartsch-dev had a great idea to use his `version` class to get the changelog url since it already provides a method for it i only adjusted it slightly so dev versions will be redirected to https://githubcom/jabref/jabref/blob/master/changelogmd#unreleased links will also stay gighlighted after they have been visited![normal version](https://cloudgithubusercontentcom/assets/15340757/18448747/8a24dc0a-792c-11e6-985d-ce0f1876bc59png)for snapshot versions a new label will be added for the complete version string![snapshot](https://cloudgithubusercontentcom/assets/15340757/18448748/8b2078bc-792c-11e6-8a16-e136173aaa38png)- [ ] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i think the ""license: "" prefix is not really necessary ""mit license"" is already self-explanatory  @koppor do you really want this?also remove the ""snapshot"" part in the title eg `37dev 2016-09-09` || @tobiasdiez i get the version string from `globalsbuild_infogetversion()` do you only want to remove ""snapshot"" in the about dialog or in general? for example copy version also calls the same method || like the idea with the versioinfo solution! :+1: is commit included? || ""snapshot"" is part of the builds delivered by buildsjabreforgfor example:> jabref 37dev--snapshot--2016-09-12--javafx--bd3dbe8> windows 10 100 amd64 > java 180_101the complete version string should be shown somewhere in the about dialog  does the text wrap work also for this long string without whitespace? || @grimes2  yes it will automatically be broken down to fit multiple lines![longversion](https://cloudgithubusercontentcom/assets/15340757/18442493/45034776-7911-11e6-9385-1c9cfb630a80png) || ok leave it like that (with snapshot)it is only for the dev version so no reason to be pixel perfect  || thats fine the normal versions jabref 37 or jabref 37dev will anyway fit in one line and for the authors all informations are now delivered thank you! || i still have the opinion that ""license:"" should be removed but apart from that 👍 for merge @koppor your call || after talking to @koppor i changed minor things and how the snapshot versions will be displayed i updated the screenshots in the description of this pr accordingly || the about dialog is not centered on the jabref window see attached screenshotjabref 37dev--snapshot--2016-10-06--javafx--5a4e79awindows 10 100 amd64 java 180_101![grabbed_20161006-181713](https://cloudgithubusercontentcom/assets/1366654/19160726/4042c700-8bf1-11e6-95dc-8572acfb2f53png) || hmm i just tried it with the jar available at http://buildsjabreforg/javafx/ and it worked perfectly for me :thinking:![aboutdialogcenter](https://cloudgithubusercontentcom/assets/15340757/19189106/61ec5d8a-8c96-11e6-9bda-4d2b608089a9gif)jabref 37dev--snapshot--2016-09-26--javafx--6134490windows 81 63 amd64 java 180_102 || works on a single screen have to connect to an external screen and check again i have the feeling that javafx does not work well with two screens having a different magnification || this was actually tested on a second screen thats why there are no icons your build is also a newer one maybe this is the reasonon oct 7 2016 14:22 at 14:22 oliver kopp notifications@githubcom wrote:> works on a single screen have to connect to an external screen and> check again i have the feeling that javafx does not work well with two> screens having a different magnification> > ## > > you are receiving this because you authored the thread> reply to this email directly or view it on github:> https://githubcom/jabref/jabref/pull/1962#issuecomment-252238662 || "
194,1958,1970,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fixes #1958: verbatim url field is no longer checked for html encoded chars - [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please adjust the javadoc comment and then its good to merge :+1:  ||
195,1920,1989,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,"rewrite mods exporter and add test for it regarding: #1920 rewrite the mods exporter with a jaxb parser details on the format and the newest xml schema can be found [here](http://wwwlocgov/standards/mods/)ive used the newest schema (version 36)this pr uses the same gradle script and schema as in #1942  - [ ] internal qs- [x] tests created for changes- [x] manually tested changed features in running jabref for some reason codecov doesnt run the class `modsexportformattestfiles` like in #1942    || @tschechlovdev  codecov seems to work again:  codecov/project — 2828% (+042%) compared to a8e1488  || please work on coverage - or is the coverage indication wrong?![grabbed_20160921-091358](https://cloudgithubusercontentcom/assets/1366654/18701229/de5b056e-7fdb-11e6-8148-24f53a816038png) || no i have two test classes `modsexportformattest` and `modsexportformattestfiles` the coverage comes from `modsexportformattest` but `modsexportformattestfiles` doesnt seem to be executedi tried to rename `modsexportformattestfiles` to `modsexportformatfilestest` because i had the intention that it is because the class didnt end with test though that also doesnt seem to work || regarding the test coverage i have no idea but maybe it is related to the fact that its a parameterized test? || regarding the not executed tests https://githubcom/jabref/jabref/pull/2017#issuecomment-248593717 || please increase test coveragei did not see a roundtrip test: bibtex -> mods -> bibtex and mods -> bibtex -> mods is that possible? || @koppor  regarding test coverage: its still the same problem that the parameterized test are not run by codecov i will take care of this in a separate prregarding the roundtrip test: i will add one || i remove the ""ready-for-review"" for the moment until the comments are addressed please add it again afterwards thanks || good! i merge in! || im getting the following error:```:compilejava/home/admir/tmp/jabref/src/main/java/net/sf/jabref/logic/exporter/modsexportformatjava:60:error: incompatible types: character cannot be converted to string            getkeywordseparator()```os data:```distributor id: debiandescription:    debian gnu/linux 85 (jessie)release:        85codename:       jessie``` || ill take a quick look || @obraliar  works fine did you run /gradlew eclipse (or build whatever youride is) ?and also /gradlew check executes fine no related error || @siedlerchr what os are you using?`/gradlew assemble` and also `/gradlew check` fails with the same error i cloned jabref into another directory to annul all factors unfortunately it doesent work it works when resetting to the commit before || @obraliar  now it get the same seems like my local repo was not update to date i will revert that commit here  problem is the internal class stuff @tschechlovdev  sorry but you have to fix this  || @obraliar  i just reverted the commit follow up discussion in #2078 || "
196,1937,2005,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,check avaiable help lanugages when opening specific help page <!-- describe the changes you have made here: what why  -->if help lang not avaiable use englishfix for #1937- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
197,2012,2015,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,implemented integrity monthchecker monthchecker added #2012- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref pattern thing fixed || thanks for your contribution! looks good now :+1:  i will merge it in now  ||
198,463,2027,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"disable context menu action on selection of multiple entries if multiple entries are selected some  context menu toolbar and menu actions are now disableddisabled actions:- print entry preview- attach file- edit entry- open folder (enable only if file exist)- open file (enable only if file exist)- open url or doi (enable only if url or doi exist)- merge entries (enable only on select of two entries)these actions make no sense to be used when there are multiple entries selectedfor further information have a look at #463 context menu before change:![2016-09-22_15h50_28](https://cloudgithubusercontentcom/assets/13031192/18750832/10981b3c-80dd-11e6-96cb-af3b83864d59png)context menu after change:![2016-09-22_15h50_45](https://cloudgithubusercontentcom/assets/13031192/18751046/d1eefaa8-80dd-11e6-9d3e-e1d6b3794524png)edit menu before change:![2016-09-22_15h51_28](https://cloudgithubusercontentcom/assets/13031192/18750871/398a97e0-80dd-11e6-9a8c-71af8553b537png)edit menu after change:![2016-09-22_15h51_55](https://cloudgithubusercontentcom/assets/13031192/18750887/44f77bc0-80dd-11e6-84b9-de724fd66535png)bibtex menu before change:![2016-09-22_15h52_21](https://cloudgithubusercontentcom/assets/13031192/18750919/6538a3a0-80dd-11e6-8911-f7e781ec224epng)bibtex menu after change:![2016-09-22_15h52_44](https://cloudgithubusercontentcom/assets/13031192/18750934/751fe1a2-80dd-11e6-94f2-633872d1fc51png)quality menu before change:![2016-09-22_16h34_33](https://cloudgithubusercontentcom/assets/13031192/18752711/8805176e-80e3-11e6-9c1c-00994c832f16png)quality menu after change:![2016-09-22_16h34_52](https://cloudgithubusercontentcom/assets/13031192/18752781/bf2f9318-80e3-11e6-84da-d94dcf7f5b57png)tools menu before change:![2016-09-22_16h35_17](https://cloudgithubusercontentcom/assets/13031192/18752801/d894e6e6-80e3-11e6-9471-80ca13d5ae64png)tools menu after change:![2016-09-22_18h08_02](https://cloudgithubusercontentcom/assets/13031192/18756271/999a78fa-80ef-11e6-89fa-8c96cfd547abpng)toolbare button ""edit entry"" before change:![2016-09-22_15h53_17](https://cloudgithubusercontentcom/assets/13031192/18750974/911e3246-80dd-11e6-916e-a55196e2f1f7png)toolbare button ""edit entry"" after change:![2016-09-22_15h53_44](https://cloudgithubusercontentcom/assets/13031192/18750992/a0aaf488-80dd-11e6-94b5-f1e21f3e50ebpng)toolbare button ""merge entries"" before change:![2016-09-22_16h38_10](https://cloudgithubusercontentcom/assets/13031192/18752857/fc3bfcce-80e3-11e6-92e8-2e3edeffe976png)toolbare button ""merge entries"" after change:![2016-09-22_16h37_00](https://cloudgithubusercontentcom/assets/13031192/18752874/07bcf530-80e4-11e6-8402-d3147d14196fpng)please take a look for merge thx 😄 - [x] change in changelogmd described- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] internal qs complete to disable menu item toolbar button and context menu on multiple select of entries || merge entries needs to be enabled only if exactly two entries are selected also disable the following if multiple entries are selected:tools -> open filetools -> open url or doi || all things are complete 😄  || please resolve conflicts || all things are done 👍 if all thing is okay then it will be nice to take a look to mergea big thx 😄  || besides minor comments: lgtm - the send-as-email-action internally works with multiple entries but outlook cannot receive that long string as text thus it is ok for me to exclude this action || all things are done 🎅  || okay looks good now merge it in :+1:  ||"
199,1074,2028,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"[wip] fix ris import regarding: #1647 doi import should now work with the do field also ive added some fields that are available in the [ris specification](http://referencemanagercom/sites/rm/files/m/direct_export_rispdf) ive also done some code cleanups#1074 should be also fixed now ive added the scopus file as test file- [x] tests created for changes- [x] manually tested changed features in running jabref travis fails because the architecture tests say that the stringutil class should be kept as small as possible  || speak with @lenhard if its okay to increase it and how to fix the test  || i tried to contact @lenhard but didnt get an answer so for the moment i think it is the best to remove the method from the stringutil class so that this pr dont have to wait to long in addition it would only be 2 classes who would use this methodtravis is still failing because of a doi test || yes it is the proper way for the moment we can think later on for moving iti would merge it in then || @tschechlovdev you contacted me? how? :-) this mention of myself is the first sign i see but maybe i overlooked something || @lenhard  the question was about the ""failing travis test"" regarding the stringutil methodthe ideas was to add  a method for replacing unicode dashes:`string[] entries  linesasstringreplace(""\u2013"" ""-"")replace(""\u2014"" ""--"")replace(""\u2015"" ""--"")`which is also used in medline plain || i know im late to the party but one question: is this unicode dash needed for the page numbers? because then there is a cleanup formatter which does the job (page number normalizer or some permutation of these words)  || the reason for moving more functionality to `stringutil` in model was if i recall it correctly that the group fixes needed these methods if the dash replacement functionality is not needed by model classes why should it go into that package? if you need that in multiple importer classes why not introduce a util class for the importer package? || "
200,1647,2028,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"[wip] fix ris import regarding: #1647 doi import should now work with the do field also ive added some fields that are available in the [ris specification](http://referencemanagercom/sites/rm/files/m/direct_export_rispdf) ive also done some code cleanups#1074 should be also fixed now ive added the scopus file as test file- [x] tests created for changes- [x] manually tested changed features in running jabref travis fails because the architecture tests say that the stringutil class should be kept as small as possible  || speak with @lenhard if its okay to increase it and how to fix the test  || i tried to contact @lenhard but didnt get an answer so for the moment i think it is the best to remove the method from the stringutil class so that this pr dont have to wait to long in addition it would only be 2 classes who would use this methodtravis is still failing because of a doi test || yes it is the proper way for the moment we can think later on for moving iti would merge it in then || @tschechlovdev you contacted me? how? :-) this mention of myself is the first sign i see but maybe i overlooked something || @lenhard  the question was about the ""failing travis test"" regarding the stringutil methodthe ideas was to add  a method for replacing unicode dashes:`string[] entries  linesasstringreplace(""\u2013"" ""-"")replace(""\u2014"" ""--"")replace(""\u2015"" ""--"")`which is also used in medline plain || i know im late to the party but one question: is this unicode dash needed for the page numbers? because then there is a cleanup formatter which does the job (page number normalizer or some permutation of these words)  || the reason for moving more functionality to `stringutil` in model was if i recall it correctly that the group fixes needed these methods if the dash replacement functionality is not needed by model classes why should it go into that package? if you need that in multiple importer classes why not introduce a util class for the importer package? || "
201,2029,2031,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,fix localization task hints fixes: #2029replaces hints to the old gradle localization task names with the new ones  
202,1542,2034,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,"fix bad web search error messages fixes #1542i rewrote the error messages when the fetchers fail (or added them) @zellerdev currently rewrites the medline fetcher #2066probably the strange error message automatically disappears when the medline fetcher is ported to the new interfacethus i think it is ok to merge this pr (and double check before merging #2066) || uhm the change in `generalfetcherjava` causes a quite weird exception:```exception in thread ""jabref cachedthreadpool"" javalangindexoutofboundsexception: index: 3 size: 3    at javautilarraylistrangecheck(arraylistjava:653)    at javautilarraylistget(arraylistjava:429)    at javaawtcontainercreatehierarchyevents(containerjava:1441)    at javaawtcontainercreatehierarchyevents(containerjava:1441)    at javaawtcontainercreatehierarchyevents(containerjava:1441)    at javaawtcontainercreatehierarchyevents(containerjava:1441)    at javaawtcontainercreatehierarchyevents(containerjava:1441)    at javaawtdialogconditionalshow(dialogjava:953)    at javaawtdialogshow(dialogjava:1037)    at javaawtcomponentshow(componentjava:1673)    at javaawtcomponentsetvisible(componentjava:1625)    at javaawtwindowsetvisible(windowjava:1014)    at javaawtdialogsetvisible(dialogjava:1005)    at netsfjabrefguiimporterfetchergeneralfetcherlambda$actionperformed$171(generalfetcherjava:220)    at javautilconcurrentthreadpoolexecutorrunworker(threadpoolexecutorjava:1142)    at javautilconcurrentthreadpoolexecutor$workerrun(threadpoolexecutorjava:617)    at javalangthreadrun(threadjava:745)```occurs on (successful) searches with an internet connection in my branch for #2101 has anyone else this problem? ||  and there is another problem caused by the same change:the whole ui freezes after some consecutive searches eg using the ieee fetcher@bartsch-dev can you investigate this issues? || ill look into it tomorrow evening || to get the fetchers back working i just reverted your change in `generalfetcherjava` (see 6daa5b5)why have you changed it in your pr? || to not show the fetcher dialog if the fetching was not successfulnow fetcher dialog opens the error message is on top of that and closes when the error message gets closed || "
203,490,2040,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,right click menus should allow copying doi url right clicking on the doi field in the main table or the entry editor shows a sub menu where the user can copy the url of the doi to the clipboard refs #490right click menu when doi field isnt present![rightclick](https://cloudgithubusercontentcom/assets/15340757/18834365/c468e680-83f5-11e6-928f-b23de9dd2585png)right click menu in entry editor when doi field is not empty![entryrightclick](https://cloudgithubusercontentcom/assets/15340757/18834634/60974fbe-83f7-11e6-9294-5abac76d96ecpng)right click menu in entry editor when doi field is empty![emptydoi](https://cloudgithubusercontentcom/assets/15340757/18834669/902bd7f4-83f7-11e6-9125-4399cb80fec9png)- [x] internal quality assurance- [x] add the menu to the entry editor- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref thanks! || @tobiasdiez  a bit too fast at least the equals thing should be fixed || @siedlerchr can i still push to this branch or should i create a new branch + pull request? || hm not sure better create a new one based on master and then fix the things and we merge it in || i fixed it in https://githubcom/jabref/jabref/commit/ffa3299d09616c8c779e0a080797c83f517a16fb  || @tobiasdiez thank you ||
204,1993,2043,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,use parallel stream while searching with this the search should be much faster on platforms where multiple cores are available (#1993) could you please create one benchmark which uses the normal stream and one for the parallel one please also post the benchmark results so that we can see the improvement || the differences between parallel and normal stream will be only visible inlarge database there the parallel stream is more advanced because the jvmoptimizes it || ### stream```benchmark                             mode  cnt        score        error  unitsbenchmarkshtmltolatexconversion     thrpt   20     3430821 ±     12570  ops/sbenchmarksinferbibdatabasemode      thrpt   20    12196397 ±    250891  ops/sbenchmarkskeywordgroupcontains      thrpt   20     7367579 ±    702650  ops/sbenchmarkskeywordgroupcontainsword  thrpt   20  8080932143 ± 190154353  ops/sbenchmarkslatextohtmlconversion     thrpt   20    62292491 ±   1375804  ops/sbenchmarkslatextounicodeconversion  thrpt   20    59849947 ±    298067  ops/sbenchmarksparse                     thrpt   20       20002 ±      0809  ops/sbenchmarkssearch                    thrpt   20       19986 ±      0729  ops/sbenchmarkswrite                     thrpt   20       39440 ±      0232  ops/s```### parallel stream```benchmark                             mode  cnt        score       error  unitsbenchmarkshtmltolatexconversion     thrpt   20     3478589 ±    58752  ops/sbenchmarksinferbibdatabasemode      thrpt   20    12098187 ±   235957  ops/sbenchmarkskeywordgroupcontains      thrpt   20     6694197 ±    84251  ops/sbenchmarkskeywordgroupcontainsword  thrpt   20  7858681820 ± 11459928  ops/sbenchmarkslatextohtmlconversion     thrpt   20    60325789 ±  3041157  ops/sbenchmarkslatextounicodeconversion  thrpt   20    59671261 ±   535001  ops/sbenchmarksparse                     thrpt   20       20349 ±     0154  ops/sbenchmarkssearch                    thrpt   20       63016 ±     0843  ops/sbenchmarkswrite``` || ok that are good numbers perfect could you please keep the original `@benchmark` with normal `stream` and add a new one for the parallel stream (just copy 1:1 the method) then this can be merged || created a separate benchmark || thanks :+1:  ||
205,2054,2055,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix ignore version fixes #2054 made a rookie mistake and ignored the already ignored version againreworked the preferences to the new design the only test that failed is the `getbydoi` test from the springer servicenot surprising since the springer service is currently down for mainte ce || okay i merged it in! ||
206,2012,2066,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,medline fetcher using new infrastructure rewrite the medline fetcherrefs #2012 - [x] tests created for changes- [x] manually tested changed features in running jabref please make sure that  creating the bibentry is done in utf-8 encoding  #2060 / #2061  || please also make sure that the strange error message reported in https://githubcom/jabref/jabref/pull/2034#pullrequestreview-2529277 does not appear anymore thanks || i couldnt reproduce the issue in my case i had one single error message containing all messages i changed the exception message `eutilsncbinlmnihgov` to a more understandable one  || ci fails due to mainte ce on ebookde so a few isbnfetcher tests fail || 👍 good job can be merged from my point of view || other than the minor comments: lgtm please ping me as soon as you have fixed the minor comments || now i use the counter to inform the user if more entries then the fetched ones are available i completely removed retmax and retstart and use the default values i also updated the comments @koppor  || i preferred the version where 50 entries were returned 😄  || @tobiasdiez didnt want to change the semantics with my comments -> i just read the code should @zellerdev revert this part of his changes? for me both is fine as long as the fetcher works 😇  || i always thought the limit of 50 was some server-side thing? || i think the part witch changed the number of fetched entries from 20 to 50 can be reverted but removing the local variables was indeed a good observation i think even the count variable is not necessary and maybe can be replaced by `list of fetched bib entriessize()`  || can you please have a look whether #2172 is fixed with this pr? || @tschechlovdev is preparing a fix he wrote the medlineimporter in the first place || tests fail but i could fix them locally to get the fix into the master branch (0e5e15d65fba4116a5672 and 966e1967046db466da0) please consider rewriting the fetcher using xsd ||
207,2064,2067,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,undo #2002 undo #2002 see #2064  
208,1808,2069,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,0,"fix changing the font size not working when importing preferences i initialized the fontselectordialog with the variable that keeps changes made in the dialog instead of the current globals this seems to fix both issues named here #1808 - [x] change in changelogmd described- [x] manually tested changed features in running jabref i made the preferencedialog store the settings when preferences are exported so that the exported preferences are the same as the ones shown in the dialog i thought about doing the same when the ""show preferences"" button is pressed but i am not convinced that the user would expect that the changes made in the dialog are stored when he wants to show them maybe he just wants to compare stuff and then accidentally changes the settings  || the preference dialog now gets disposed when preferences has been imported this prevents that the user overrides the imported preferences || can this be merged? || "
209,2021,2070,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix execution of preference migrations follow up of #1704 to fix the key pattern part of #2021preference migrations are executed too late after other operations already worked on the prefs node --> execute them directly in the main class  
210,2064,2075,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"other fields fix and changes these are the claimed improvements:- removed optional fields from `other fields` (bibtex)- removed deprecated fields from `other fields` (biblatex)see: #2064- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) im sorry but i am not sure if i get/understand your changes because what does ""otherfields"" refer to?i have the following tabs in bibtex:`required optional general abstract review source`and in biblatex:`required optional1 optional2 deprecated general abstract review source`deprecated fields exist for bibtex compatibility when you import an entry you often get in bibtex so these fields are somehow still required  || tab other fields shows the remaining fields:![otherfields](https://cloudgithubusercontentcom/assets/15456836/18884619/78865560-84e8-11e6-979b-fbd78f368062png) || i think i found the bug in #2064 it was not a regression a new entry editor was not instantiated on changing an entry of the same type so some ""other fields"" were not displayed || please set label ""ready-for-review"" thanks || the idea was originally to have a better performance so the entry editor is retained for the same type this is not a good idea the entry editor needs to be build completetely new in all cases because the new entry can have some additional (layout changing) other fields || so the whole `entryeditors` list can be deleted right? (because its sole purpose was to cache the entry editor for each type) moreover there is a similar code in the showentry method which differentiates between cached vs not-yet-cached || ```//to indicate which entry is currently shownprivate final map<string entryeditor> entryeditors  new hashmap<>()```i think `entryeditors` stores all the old entry editors and the new entry editor so im not sure that the sole purpose is to store an entry editor of each type the similar code in `showentry` should also be adjusted but there is currently no bug report for it || ive checked the code @tobiasdiez you are right the whole entry editor caching (for each type) can be removed i have no performance issues with my databases || i noticed a very small latency if you quickly switch from editing one entry to another (for example with the arrow keys) but as i dont think this is a big deal ill merge this pr now || yes fast scrolling of the entries causes a small latency and moderate cpu usage but i think this is no problem i have an idea for caching the entry editor: entry editor a -> b -> a a can be cached but this takes real effect only on heavy usage of the database || or cache based on the ""properties"" of the entry one could generate aunique id for each entry property -- property: entry type other fields(future: hadpdfattached) @braunch || the problem is generating the textfields so especially in biblatex mode there are around 80 fields which are generated every time i would not cache the whole editor but just generate the textboxes when the tab is focused  || the other field tab is optional (no field -> no tab) i would prefer to create the other fields tab always (no field -> empty tab) the advantage is that every entry editor has always the same layout of the tabs this preserves the active (other fields) tab on changing the entry || "
211,1886,2082,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,quick fix google scholar entry fetching google scholar fetching was broken again (see #1886)with this fix at least getting the first 10 search hits is possible again configuration is no longer possible in the current form and google generally limits the responses (per page) to 20 hits (however even using this will cause a captcha challenge for jabref)as only 10 hits are allowed a rewrite to the new fetcherinfrastructure should now be possible (thus omitting the 2-step approach)- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  - [ ] update of http://helpjabreforg/en/googlescholar might be useful to indicate that only 10 hits are (currently) shown  
212,2078,2088,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,[wip] rewrite mods exporter and add test follow up of #1989 and regarding #2078rewrites the mods exporter with a jaxb parser in comparison to the last pr i do not longer rely on the namespaceprefixmapper i added an annotation in the package-infojava which also does the namespace prefix mapping only problem is that this annotation cannot be automatically generated by a gradle or ant script thats why added the package-infojava to src/main/java/net//mods- [x] tests created for changes- [x] manually tested changed features in running jabref okay now all seems to be executed fine on travis and codecov is increased || yeah codecov was increased but the class `modsexportformattestfiles` was still not run so this issue still remains || codecov itself does not run any tests it relies on the results from travis:http://docscodecovio/docs/ci-service-relationshipmabye its a travis configuration thing no idea it would be nice if you could search for information about that  || yeah i will try to find a solution for this ||
213,2021,2094,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,make all files selectable in file chooser dialogs make all files selectable in filechooser fixed #2021- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? does this make the __ file filter the default file filter (selected)? (https://docsoraclecom/javase/7/docs/api/javax/swing/jfilechooserhtml#setacceptallfilefilterused(boolean)) || no the default one is still the specific one (eg xml) || great thanks christoph! ||
214,1993,2102,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,store latex-free fields in bibentry based on the discussion in #1993 and the work of @bartsch-dev in #2091 this pr aims to improve the speed of search by storing latex-free versions of field values in a cache it aims at a balance between better performance and an acceptable memory footprint basically all ideas from #1993 are implemented: a cached store of latex-free fields which is computed on demand string internalization and regex performance improvements in `latextounicode`here are measurements with the new branch:```benchmark                             mode  cnt         score        error  unitbenchmarkslatextounicodeconversion  thrpt   20    119823078   2063425  ops/sbenchmarksparallelsearch            thrpt   20       735890    113685  ops/sbenchmarkssearch                    thrpt   20       397807     28557  ops/s```the memory footprint of a database with 6500 entries is ~ 912 mb on my machineand on current master:```benchmark                             mode  cnt         score        error  unitbenchmarkslatextounicodeconversion  thrpt   20     94367718   2570784  ops/sbenchmarksparallelsearch            thrpt   20        58204       3285  ops/sbenchmarkssearch                    thrpt   20        30531       0952  ops/s```the memory footprint of the same 6500 entry database is ~ 888 mball in all this looks like a hefty performance improvement at little memory cost- [x] change in changelogmd described- [x] manually tested changed features in running jabref lgtm although the converter is probably not perfect and we might run into new problems caused by that fact || the functionality in the converter has not changed it is just a rewording of `stringreplace` calls into regular expressions that are compiled once instead of every time thus there should be no new problems that werent broken before anyway you can never be sure thoughi still think the converter should be written from scratch but that should really be a separate pr || regarding `grammarbasedsearchrule`: i am not 100% sure but it looks like it on the one hand builds upon `containbasedsearchrule` but it also has some self-searching code which i modified to use the latex-free version this was probably a bug || implementation alternatives for the latex-to-unicode conversions are discussed at https://githubcom/jabref/jabref/issues/1252 || as a few people have looked at the code and only criticized minor aspects (which i fixed) ill merge this now the codacy build seems to be broken somehow but then it is also not that critical ||
215,2091,2102,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,store latex-free fields in bibentry based on the discussion in #1993 and the work of @bartsch-dev in #2091 this pr aims to improve the speed of search by storing latex-free versions of field values in a cache it aims at a balance between better performance and an acceptable memory footprint basically all ideas from #1993 are implemented: a cached store of latex-free fields which is computed on demand string internalization and regex performance improvements in `latextounicode`here are measurements with the new branch:```benchmark                             mode  cnt         score        error  unitbenchmarkslatextounicodeconversion  thrpt   20    119823078   2063425  ops/sbenchmarksparallelsearch            thrpt   20       735890    113685  ops/sbenchmarkssearch                    thrpt   20       397807     28557  ops/s```the memory footprint of a database with 6500 entries is ~ 912 mb on my machineand on current master:```benchmark                             mode  cnt         score        error  unitbenchmarkslatextounicodeconversion  thrpt   20     94367718   2570784  ops/sbenchmarksparallelsearch            thrpt   20        58204       3285  ops/sbenchmarkssearch                    thrpt   20        30531       0952  ops/s```the memory footprint of the same 6500 entry database is ~ 888 mball in all this looks like a hefty performance improvement at little memory cost- [x] change in changelogmd described- [x] manually tested changed features in running jabref lgtm although the converter is probably not perfect and we might run into new problems caused by that fact || the functionality in the converter has not changed it is just a rewording of `stringreplace` calls into regular expressions that are compiled once instead of every time thus there should be no new problems that werent broken before anyway you can never be sure thoughi still think the converter should be written from scratch but that should really be a separate pr || regarding `grammarbasedsearchrule`: i am not 100% sure but it looks like it on the one hand builds upon `containbasedsearchrule` but it also has some self-searching code which i modified to use the latex-free version this was probably a bug || implementation alternatives for the latex-to-unicode conversions are discussed at https://githubcom/jabref/jabref/issues/1252 || as a few people have looked at the code and only criticized minor aspects (which i fixed) ill merge this now the codacy build seems to be broken somehow but then it is also not that critical ||
216,2104,2106,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,0,crash after saving bibtex source with parsing error fixes #2104- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i just tested your pr following the instructions stated in #2104 jabref does not crash anymore however no error message appears and the additional faulty comma is just not stored silently when i look into the error console i see the errorimho this is not quite the behavior we want it is fine to avoid storing the broken bibtex but there should be an error message (that does not crash jabref) otherwise a user might expect that the save worked and would be surprised to see that it did not this is critical since all changes made to the entry are lost not just the comma therefore we need the error message so that the user has a change to fix the mistakes || i get an error message:![parsingerror](https://cloudgithubusercontentcom/assets/15456836/19037291/c6320606-8975-11e6-86bf-fc95adab4f1cpng)i dont know why it does not work for you`edit` keeps the bibtex source (with parsing error) and gives the opportunity to correct the error`revert to original source` does not store the changes || you are correct my bad! i was hitting ctrl+s and not pressing the button in the toolbar your pr can be merged and apologies for not getting itdidnt we use to have a keyboard shortcut for saving? || ohh is this another bug? ctrl+s should also trigger the error message || @grimes2 for me it did not can you please double check? if you can reproduce it would you be willing to submit a second pull request?this could be a keybinding issue though not directly related to the saving logic || file > save database worksctrl+s failsstrange!ill open a new pr || thanks a lot! ||
217,2109,2114,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,ctrl-s parsing error message fixes #2109 ctrl-s doesnt trigger parsing error messageproblem: conflict of local shortcut (of the entry editor) with the global shortcutsolution: local shortcut removed (the action assigned to local and global shortcut is essentially the same (save database))- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i have tested it and can confirm that it works removing the local shortcut is fine this was certainly the relic of some migration since it is not too much in size there is no need for a second review and ill merge right away@grimes2 good job as always :-) ||
218,2050,2121,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix codecov issue fix for #2050ive added a gradle task that copys the resource to where they should be @tobiasdiez one for you to approve? || so the problem is that the test resources are not copied on build and thus the tests dont found the test files? the gradle job does work (+2 % code coverage) if i understand the solution correctly then a normal build in intellij or eclipse still dont copy the resource files and thus locally the importer tests are still not performed is this right? i have no idea about our build script but is there no other way to always copy the resources (the language files are automatically copied right?) || @tobiasdiez  if you run the test locally in eclipse it executed all parameterized tests however only when executed via intellij or gradle it did not locate the correct directory thus no tests files were foundsee here for details: https://githubcom/jabref/jabref/issues/2050 || okay i would say i merge it in!  ||
219,167,2145,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,"change download url to downloadsjabreforg we want to get back control of the download site we offer thus we created https://downloadsjabreforg (https://githubcom/jabref/downloadsjabreforg) with a redirection to fosshubrefs #1670 pro:- more convenience for the userscon- we have to update the deep links for each release- the users wont see the welcome page of fosshub any more this is different to sourceforge - there a ""deep"" link leads to a landing page too: https://sourceforgenet/projects/jabref/files/v36/jabref_windows_3_6exe/download- we have to implement an operating system detection || "
220,2098,2161,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix group drag and drop this fixes #2119 and #2098 - ~~[ ] change in changelogmd described~~ introduced in dev builds- ~~[ ] tests created for changes~~- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
221,2119,2161,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix group drag and drop this fixes #2119 and #2098 - ~~[ ] change in changelogmd described~~ introduced in dev builds- ~~[ ] tests created for changes~~- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
222,1964,2162,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,specialfields refactoring rewrite of #1964 this kept bugging me so i invested some time in it it integrates the changes from #1964 and turns the different special fields into enum values the different classes composing special fields are now aligned to our architecture the enum `specialfield` has to go to `logic` as it involves quite some localizationthere are still some possible improvements based on this pr in particular:- outsourcing localization from `specialfield` so that this class can be moved into `model` (this is not necessarily needed though)- rewriting `specialfieldsutil` which is already marked as deprecatedto maintain a reasonable scope for this pr these improvements should be done in separate new prs they should now also be much simpler based on the new structure- [x] manually tested changed features in running jabref iconbar icons for multi value specialfields are too small (sorry no time to find the cause in the code) || after a night of almost enough sleep i have some more ideas and will push up the localization upwards to get the essence into model/logic ill readd the ready-for-review when i am done || so now there is a much better structure `specialfieldvalue` is also an enum now the absolute most important information has moved into model switches are done based on enums the localization is in logic and the remaining stuff in guithe next thing for a new pr (this time for real) is a rewriting of `specialfieldutil` and moving that logic into keyword synchronization when all checkstyle issues are taken care of the pr would be ready to go from my side || now that the army of fridges and web cams has stopped trying to bring down the internet and our build system is running again i can finally certify that this worksso thanks to the excellent review by @tobiasdiez this has been a huge improvement of the special fields feature `specialfield` and `specialfieldvalue` are now in model and are limited to the absolute essence all gui-related aspects are moved into `viewmodel` classes in the guithe only thing that remains now is the refactoring of the deprecated `specialfieldutils` class and the moving of its methods into `bibentry` this however cannot easily be achieved since it depends on `updatefield` which is in logic and depends on preferences if this class stays in logic then so do the special field update methods alternatively it would be possible to move the methods from `specialfieldutils to`updatefield` but i do not really see the point in this we might consider restructuring the`updatefield` field class but in the end this is not the most pressing issue we havethe refactoring/rewriting of `specialfieldutils` requires more discussion in the group and can be done separate from the changes in this pr hence i consider this pr as finished and it is once again ready for review  || @jabref/developers this pr is reviewable / mergeable to avoid having to fix merge conflicts that build up over time i would like to get this into master i will merge this in if no one objects within the next seven days || i trust your skills go for it! || i tested it locally and it works with keyword sync and without keyword sync i am ok for merge and would address my minor comments (mostly regarding test coverage) later || it would be nice if there was a howto to add a new special field ||
223,2133,2163,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix highlighting issues fixes #2133earlier highlighting was done manually by adding tags to matches in the html text being sent to the pane instead i have opted to make use of the highlighting features of the jeditorpane class this gives the additional benefit that the highlight colour is changed automatically based on the system theme changes - created jeditorpanewithhighlighting class- removed matchhighlighter class and its tests- removed highlighting related tests from layoutentrytest- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? :checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/gui/worker/citationstyleworkerjava:6: javaxswingjeditorpane should be separated from previous imports [importorder] || thanks for your contribution!what @stefan-kolb is telling you that the tests are currently failing as you do not respect the order of the import we defined in your changed classesplease check https://githubcom/jabref/jabref/wiki/guidelines-for-setting-up-a-local-workspace#get-an-ide-in-place and/or run `gradlew eclipse` to adjust the settings of intellij/eclipse to order the imports correctly || thanks @stefan-kolb and @matthiasgeiger i forgot to run the checks before submitting || no worries @shitikanth 😄 these check style things are a little bit nitpicky 😉  ||
224,216,2169,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,fix failing ads test added missing fields fixes #2168 `#10` are really strange field values but this is a discussion for a post cleanup for now this hotfix is good ||
225,2166,2175,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix memory leak in entry editor this is to fix #2166list of changes -- updated microba to latest version- unregister entryeditor as a listener to entry - implement searchqueryhighlightobservable using entrybus- make entryeditor unregister all fields that are listening on the global search bar lgtm ||
226,2177,2179,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,clear bibtexkey exception fixes #2177 nullpointerexception caused by clearing bibtexkey field in entry editor- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the version 36 does not have exactly the same bug but the old code was also buggy because in a short test i run in severe freezes ive removed changelog entry ||
227,2184,2196,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix for #2184: add space after separator  seems to be as simple as thatchange has been introduced as the delimitor is no longer saved as a string "" "" but as a `character` which chops away the space after the comma- ~~[ ] change in changelogmd described~~ introduced in dev builds- [x] tests created for changes- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~ that looks simple indeed since we cannot let you get away with a one-liner: please add a test that detects the bug you fixed so that the build would break if this happens again || yes this fix works im unsure if we should use the keywordlist class here (since in the end we assume that the field is a list of words and we are adding a new keyword)  || @tobiasdiez sorry i dont get it ive put it in the `keywordgroup` class as the `add(list<bibentry> entriestoadd)` method is not overriden in the subclass `explicitgroup`apart from that: if talking only about keywords (without the group context) the keywordseparator is there followed by a `+"" ""` too (sorry im currently on my way home and have just closed intellij - so i cannot provide a pointer for now) || @matthiasgeiger sorry for being cryptic what i meant was that the class [keywordlist](https://githubcom/jabref/jabref/blob/955b94d7221e5ee3c102731f885eb395e1c2ad64/src/main/java/net/sf/jabref/model/entry/keywordlistjava) probably should be used to modify the field (instead of being text-based)the code then looks similar to:```string oldcontent  keywordlist wordlist  new keywordlist(oldcontent)wordlistadd(searchexpression)string newcontent  wordlistgetasstring(seperator)``` || ahhh i see and this is exactly the position where the `+ ""  ""` addition is made for keywordswill check whether using this is actually possible without sideeffects || done will merge after travis is green// edit: harvard astrophysics database is curently down || "
228,1908,2198,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"integrity hotkey the ""check integrity""-action seems to be in need of a hotkey (see #1908) i used `ctrl + f8` for this action because f8 is currently used to cleanup entries these 2 functions seem to be related so it would make sense to group them- [x] change in changelogmd described- [x] manually tested changed features in running jabref- [x] if you changed the localization: did you run `gradle localizationupdate`?- [x] internal qs thanx so please no copynpaste solutions here and useage of menutitle || i changed it to menutitle and removed the unused keys ||"
229,2210,2212,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improvements to the javafx error console the log messages in the list view of the error console can now be selected and copied the error message will also automatically scroll to the newest log message refs #2210 ok rebase and merge ||
230,221,2213,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix strange styling behaviour of the error console this should fix the wrong styling behaviour of the different log messages when scrolling it seems like the styling error came because we never resetted the style classes of the cells when adding new onesi also created a generic listfactory class (similar to #1917) so this issue wont occur in the future refs #2210  
231,2222,2223,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,0,1,0,0,0,0,fixes #2222 urldownload now resolves redirects by default   could you please also add a test for the arxiv entry which failed to download before the fix || a test for the entry would be no different it must be done for the urldownloader but im not entirely sure how right now ||
232,2220,2225,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix editor freeze possibly fixes: #2220mainly i removed `swingutilitiesinvokelater(() ->` i also added some lines to remove the event listener from the old entry editors for @grimes2 [this fixed the issue](https://githubcom/jabref/jabref/issues/2220#issuecomment-258010791) my issue is also fixed ||
233,2218,2226,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,fix for #2218: reenable ads fetcher (see #2218)fetcher is now working again- ~~[ ] change in changelogmd described~~ affected search based fetcher still unreleased- [x] tests ~~created for changes~~ pass again- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
234,2228,2229,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,fix medline fetcher by using https fix for #2228 - [x] change in changelogmd described- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] write blog post regarding https://wwwncbinlmnihgov/home/develop/https-guidanceshtmlafter november 9 2016 ncbi http servers will redirect or reject all http requests  
235,2233,2236,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"biblatex mode: add month and year field to deprecated tab issue #2233: in biblatex the `date` field is recommended for backward compatibility the bibtex fields `month` and `year` are also accepted ive added both fields to the deprecated fields tab although the year field is present in the required fields tab too- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @koppor has an opinion here?! || in my experience in a typical setting one does not know the correct date but only the year together with an experienced librarian (@georgd) i maintain a high-quality example bib file at https://githubcom/latextemplates/biblatex-lni/blob/master/lni-examplesbib there we use `year` and `urldate` but never `date`i currently dont see where the month file is currently shownso i would vote for keeping as is and not merge || the problem is that an existing month field is not shown at all the month field should be shown in deprecated or in other fields tab i prefer the deprecated tab because the month field is mentioned in the biblatex manual i think it is better to remove the year field from deprecated fields because it is present in required field || the year is imho not in the depricated fields is it? could you provide a screenshot?we can add the month to the deprecated fields || the biblatex manual states> biblatex will also consider the fields year and month> for backwards compatibility with traditional bibtex but this is not encouraged as> explicit year and month are not parsed for date meta-information markers or> times and are used as-iswhich is a polite way to say ""they are deprecated"" thus i support @grimes2 here and think these two fields should be added to the deprecated tab @koppor you can also put only the year in the date field if you dont know the month/day of publication || typically bibtex things from the web have year and not date this imhowont change in the future im also in favour for putting journal in therequired fields and not other fields reason: main bib file biblatex butpaper bib file in bibtex no converter for biblatex to bibtex and notforcing everyone to use biblatex/jabref || "
236,2249,2262,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,"change log level to debug ""fixes"" a side aspects mentioned in #2249currently a search will throw errors if one types ""author"" as the search term is still incomplete - those exceptions should not be visible to the normal user  "
237,684,2266,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,"when an isbn is not available on ebookde the error message is more clear when fetching a valid isbn from ebookde but the site has no data of the isbn the error message just showed ""filenotfoundexception"" this pr fixes thatthe issue itself is a kind of regression as it has been fixed for verison 33 - see #684- [x] change in changelogmd described- [x] tests created for changes- [n/a] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [n/a] if you changed the localization: did you run `gradle localizationupdate`? lgtm failing test seems to be the astrophysics fetcher || the test failed because of the changed implementation i adapted the test accordingly in cdf6261mathscinet timeouts which seems to be unrelated to the improvement above ||"
238,1359,2283,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"implement #1359: collect telemetry in this pr [microsoft azure application insights](https://docsmicrosoftcom/en-us/azure/application-insights/app-insights-overview) is used to record the following information about how jabref is used:- number of users and sessions- dialogs opened (so far only the about dialog is tracked as proof of concept)- new database is opened along with how many entries it contains- all exceptions are automatically recorded- a few user information (country os screen size jabref version java version)if you give your ok i will continue and implement the following:- track all dialogs- add ""opt-out"" preferencein https://githubcom/jabref/jabref/issues/1359 we decided to use google analytics for this but as microsoft already provided a nice interface for java i went for this route- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? well since it was decided in the devcall to implement this it is ok for me if you go ahead regarding the choice of the tracking technology i trust your skills the code that is needed to track a dialog seems to be very simple in any casei am just not sure if an opt-out is the way to go or if it should rather be an opt-in maybe we could display a dialog asking for consent on first startup that would be more privacy-friendly in my point of view and we do not want jabref to appear that it tries to grab user data i am sure there would be enough people who are willing to contribute their data even in case of opt-in || :+1: for opt-in || nice that you give it a try 😄 👍 ga had no appropriate library? || why do you want to spy almost everything i do? || @grimes2 my guess (i havent participated in the discussion on this) is that this would enable us to see which features are actually used and which are not if we had had data on content selector usage we would not have removed them at the same time we would be able to see if there is a point at all in optimizing jabref usage for really large databases or if this is a waste of time || i added tracking of other dialogs and changed the default to ""do not share telemetry data"" also after the first minute of using jabref the user is asked whether he wants to share is data i actually preferred to have a more non-invasive notification similar to ![ie](http://mediaaskvgcom/articles/images3/speedup_browsing_disable_addons_popup_ie9png)javafx provides a notificationpanel exactly for this scenario however it doesnt work if the rest of the application is in swing anyway this pr is now finally ready for your feedback!-----for later reference (i will add this links also to the wiki):- walk-through of [how to use azure application insights in java](https://docsmicrosoftcom/en-us/azure/application-insights/app-insights-java-get-started)- [azure application insight github project](https://githubcom/microsoft/applicationinsights-java) || i tried it out locally the dialog appears as desired and the option can be disabled via the preferences code-wise i have no objections however jabref does not terminate when i close it and i get the a lot of messages in the console eg:```ai: trace 31-03-2017 13:39 28: telemetry configuration: illegal instrumentation key: nullai: trace 31-03-2017 13:39 28: inprocesstelemetrychannel sending telemetryai: error 31-03-2017 13:39 44: failed to send bad request  : {""itemsreceived"":1""itemsaccepted"":0""errors"":[{""index"":0""statuscode"":400""message"":""invalid instrumentation key""}]}ai: trace 31-03-2017 13:39 28: telemetry configuration: illegal instrumentation key: nullai: trace 31-03-2017 13:39 28: inprocesstelemetrychannel sending telemetryai: error 31-03-2017 13:39 46: failed to send bad request  : {""itemsreceived"":1""itemsaccepted"":0""errors"":[{""index"":0""statuscode"":400""message"":""invalid instrumentation key""}]}```since this is a very sensitive topic i think we should make the dialog a little more explanatory currently it says > to improve the user experience we would like to collect data on the features you use no personal data will be collectedwhile everything is in that statement i think we should be more explicit and repeat ourselves suggestion: > to improve the user experience we would like to collect anonymous statistics on the features you use we will only record what features you access and how often you do it we will neither collect any personal data nor the content of bibliographic items the collected data will be stored on xxx and we will only use it to prioritize our development efforts if you choose to allow data collection you can later disable it via options -> preferences -> generali know this is quite long but since this is a delicate topic i think it is necessary btw: where is the data actually stored?@jabref/developers i think this is so important that everyone should consider it brieflyand a last comment: we will get flack from the linux freaks when they find out that we dare to include a microsoft library so be prepared for it -) || i like your suggestion for the dialog text and updated it accordingly the data is store on microsoft azure serverno idea where exactly 😄 the reason for the error message is that a correct instrumentation key is only inserted by travis and thus you get these messages when you run jabref from the ide  || by the way this is what i just got after installing soapui:![soapui](https://cloudgithubusercontentcom/assets/1515701/24553492/a8aff9de-162a-11e7-944b-d0b2c92bc463png)of course they have a much more explicit privacy policy page for that || "
239,2294,2295,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fix ""no suitable driver found"" i got the error message ""no suitable driver found for jdbc:pgsql://fizzy-cherrydbelephantsqlcom:5432/zdndklfq"" when using the session restore of shared databases of jabref google pointed me to http://stackoverflowcom/a/22384826/873282 which states that all drivers should be loaded before they are usedthis pr ensures that all available dbms drivers are loaded before any connection attempt is madethis does not fix #2294 which means that one has to enable autosave to be able to automatically reconnect  "
240,2219,2300,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix local metadata synchronization (fixes: #2219) issue: https://githubcom/jabref/jabref/issues/2219this issue is fixed by overloading and using the `parse()` method in `metadataparser`the reason was a reset of the local field `metadata` in `dbmssynchronizer` this caused other instances containing this field not to be up-to-date- [x] change in changelogmd described- [x] manually tested changed features in running jabref i merged it because it is a hotfix @obraliar do you think it is possible to add a testcase for that? || i am testing postgresql using elephantsqlcom i am having autosave activated i restart jabref i get following exception:```20:56:15998 [awt-eventqueue-0] info  netsfjabreflogicimporteropendatabase - opening: c:\users\koppor\btsync\projects\2016-11 - dagstuhl-paper\dagstuhlbibnov 20 2016 8:56:22 pm comgooglecommoneventbuseventbus$logginghandler handleexceptionsevere: exception thrown by subscriber method listen(netsfjabrefmodelmetadataeventmetadatachangedevent) on subscriber netsfjabrefshareddbmssynchronizer@6695f8f3 when dispatching event: netsfjabrefmodelmetadataeventmetadatachangedevent@6f7e5617javalangnullpointerexception        at netsfjabrefsharedpostgresqlprocessornotifyclients(postgresqlprocessorjava:126)        at netsfjabrefshareddbmssynchronizerlisten(dbmssynchronizerjava:127)        at sunreflectnativemethodaccessorimplinvoke0(native method)at netsfjabrefmodelmetadatametadatapostchange(metadatajava:202)        at netsfjabrefmodelmetadatametadatasetmode(metadatajava:143)        at netsfjabreflogicimporterutilmetadataparserparse(metadataparserjava:69)        at netsfjabrefshareddbmssynchronizersynchronizelocalmetadata(dbmssynchronizerjava:264)        at netsfjabrefshareddbmssynchronizerinitializedatabases(dbmssynchronizerjava:157)        at netsfjabrefshareddbmssynchronizeropenshareddatabase(dbmssynchronizerjava:353)        at netsfjabrefshareddbmssynchronizeropenshareddatabase(dbmssynchronizerjava:358)        at netsfjabrefguisharedshareddatabaseuimanageropenshareddatabasefromparserresult(shareddatabaseuimanagerjava:140)        at netsfjabrefjabrefguiopenwindow(jabrefguijava:117)        at netsfjabrefjabrefgui<init>(jabrefguijava:63)        at netsfjabrefjabrefmainlambda$start$1(jabrefmainjava:136)``` || @koppor oh yes this now also fixed thanks for the objection ||
241,2221,2301,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"readd drop down content selectors first attempt at readding the code for #2221 refs #2068 code does not compile yet some adjustments need to be made regarding metadata stuff etc<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @tobiasdiez  there are some things with the metadata to make it compile again could you please have a look? thanks! || how to handle the metadata is indeed a problem i remember that i removed the content selectors mainly because they were the last not-so-easy-to-convert-to-the-new-metadata item the next few days i will not find the time to assist you here sorry || still some language related errors  || the localization keys existed before the feature was removed i wonder why the revert did not restore them in the language files? || i did a manual revert because there were some more changes which would have led to conflicts otherwisewas somehow decided || as this was a rather old feature i suppose there were translations for most languages can you readd the translated values as well? or should i go  digging in the history? 😉 || so i re-implemented parsing and serialization of content selectors and added tests for it it is probably not the most beautiful fashion but i need to (want to) link to the old code and not have to re-write the gui speaking of the gui: the content selectors seem to be working fine if the metadata is in the bib file the gui in the entryeditor is not actually beautiful but i guess it has never been (does anybody feel like polishing the ui?) however i do not see options –> manage content selectors maybe that has not been ported from  #2068 yet? maybe someone who is more familiar with the menu than me can have a look? :)finally the test currently say:```netsfjabreflogichelphelpfiletest > refertovalidpage failed```although there seems to be a help page here: http://helpjabreforg/en/contentselector someone certainly has a pointer for that? || regarding the help file there is an enum called helpfiles or similar  forthe name of the help pagei can take a look at the dialog thing in the menuam 30112016 5:10 nachm schrieb ""jörg lenhard"" <notifications@githubcom>:>> so i re-implemented parsing and serialization of content selectors andadded tests for it it is probably not the most beautiful fashion but ineed to (want to) link to the old code and not have to re-write the gui>> speaking of the gui: the content selectors seem to be working fine if themetadata is in the bib file the gui in the entryeditor is not actuallybeautiful but i guess it has never been (does anybody feel like polishingthe ui?) however i do not see options –> manage content selectors maybethat has not been ported from #2068 yet? maybe someone who is more familiarwith the menu than me can have a look? :)>> finally the test currently say:>> netsfjabreflogichelphelpfiletest > refertovalidpage failed>> although there seems to be a help page here:http://helpjabreforg/en/contentselector someone certainly has a pointerfor that?>> —> you are receiving this because you authored the thread> reply to this email directly view it on github or mute the thread || i pushed a commit which should take care of the menu item (hopefully i directly edited it on github) || @tobiasdiez indeed it does! nice :) that means the feature is back!regarding the help files there is `content_selector(""contentselector"")` in `netsfjabreflogichelphelpfile` so the test really should not fail should it? || ok seems we are back on track only the google scholar test is failing now which i hope is just a random connection problem on the side of travis the same might have applied for the help file testso now we can do some more code review and at a certain point have the users from #2221 try out the feature to make sure that it works || @tobiasdiez i addressed most of your comments i agree that ""content selectors"" is probably not the most appropriate name for the stuff this feature does but it is the name under which it has existed for a long time and is known at least by some people i would say that consistency in naming tops appropriateness of the namefurthermore i removed the entry editors update code as you asked for the updating of the content selectors did not even work with this code i tried to replace it with something else and failed so for now you have to restart jabref to get a change in the content selectors to work maybe someone from @jabref/developers can provide a hint on how the refresh of the entry editor should work?finally i will leave the problems in the localization for @siedlerchr to fix :) || closing and reopening of the entry editor does not work? (potentially with selecting another entry?) || @matthiasgeiger unfortunately not the changed data makes it into the metadata but the gui does not notice it is only up-to-date when the metadata is re-read from disk and the entryeditor is re-built closing and reopening the bib file does the trick or restarting jabref || so we would like to get this into v38 which hopefully can be released in december what is missing: - [ ] correct the language files - [ ] have selector keywords updated without reloading of the bib file - [ ] have the users play around with it to see if it really worksi was hoping that @siedlerchr could do the first two points and hopefully soon :-) @siedlerchr what is your opinion on that? || yeah i will try to work on it at least i tried to fix the language files yesterday i will continue working on it the weekend || "
242,2311,2314,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,"rework dblpfetcher to new structure also fixes #2311 - [x] change in changelogmd described- [x] tests created for changes- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~ thanks to the feedback from dagstuhl we now directly use the ""standard"" form of bibtex entries containing all relevant information (esp dois) and full book/journal/conf-titles || "
243,2206,2328,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,add bibtex key deviation check refs #2206 adds integrity check to determine all entries which bibtex keys deviate from the set bibtex key generation pattern- [x] change in changelogmd described- [x] manually tested changed features in running jabref- [x] if you changed the localization: did you run `gradle localizationupdate`?  
244,2318,2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,"improve entrytype customization goals:- entry customization based on bibdatabasemode  - [x] working for custom entry types defined in bib db  - [x] storage is working for new customized entries (instead of creating three/four prefs strings for each customized entry type in the form (""custom_type_1_name"" ""custom_type_1_req"" ) two distinct pref nodes (one for bibtex one for biblatex) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))  - [x] loading is working for newly created customized entries  - [x] write prefs migration (is performed on first startup of new version existing prefs will be put as new custom types for `defaultbibdatabasemode` old prefs are not deleted)- enable testing with cleanup after test execution  - [x] bibtex  - [x] biblatex- various bug fixes and improvements eg #2318 #772 #366 #365   - [x] refactor/rewrite parts of `entrycustomizationdialog` to improve performance (refs #2318)  - [x] fixes #2261 (and also clearing of bibtexkeypatterns using ""reset preferences"")  - [x] #772: deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types  - [x] #366: check ""resetting overridden default entry types does not work sometimes even crashes"" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open dbs  - [x] if a customized type is declared in a file it will be tried to import the declarations - if a customtype already exists a warning should be shown that it will be overwritten     - before this pr (no import of already existing customizations):![custom-import-before](https://cloudgithubusercontentcom/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1png)     - now (more control): ![custom-import-new](https://cloudgithubusercontentcom/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5png)  - [x] a customized standard type should not appear in the ""custom"" section of the ""new entry"" dialog and not in the ""custom entries"" section of the ""change entry type"" menu- [x] changelog okay i think the current state is now a good improvement of the old status-quo at the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing apart from that i would appreciate some feedback -) || apart from a changelog and some more tests this is good to go from my side || @mlep @frith th it is not yet decided whether we will include this improvement in 38 or not however there are three more translations which are added in this pull request could you provide me translations for these three strings? then ill add them manuallythanks!```select_all_customized_types_to_be_stored_in_local_preferencescurrently_unknowndifferent_customization_current_settings_will_be_overwritten``` || on thu dec 15 2016 at 11:17 am matthias geiger <notifications@githubcom>wrote:> @mlep <https://githubcom/mlep> @frith th> <https://githubcom/frith th> it is not yet decided whether we will> include this improvement in 38 or not however there are three more> translations which are added in this pull request could you provide me> translations for these three strings? then ill add them manually> thanks!>> select_all_customized_types_to_be_stored_in_local_preferences>>  select_all_customized_types_to_be_stored_in_local_preferencesseleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali> currently_unknown>>  currently_unknownattualmente_sconosciutothats the singular mode the plural is ""attualmente_sconosciuti""but since italian is profoundly evil thats ok if referred to a masculinenoun the feminine forms are different but im digressing :-)> different_customization_current_settings_will_be_overwritten>>  different_customization_current_settings_will_be_overwrittenpersonalizzazione_differente_i_parametri_correnti_saranno_sovrascritti>  —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267291718> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2anc2wjebxamoi4yub2czyqky1bgks5rirphgajpzm4lccra>> >-- fer do santagata || thank you @frith th ! || youre welcome!on fri dec 16 2016 at 9:30 pm matthias geiger <notifications@githubcom>wrote:> thank you @frith th <https://githubcom/frith th> !>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267688937> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2ehym65slwytwdwtjwh8edtlmmc4ks5rivt2gajpzm4lccra>> >-- fer do santagata || how did we proceed regarding standard types? is it a v40 issue? see https://githubcom/koppor/jabref/issues/248 || "
245,772,2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,"improve entrytype customization goals:- entry customization based on bibdatabasemode  - [x] working for custom entry types defined in bib db  - [x] storage is working for new customized entries (instead of creating three/four prefs strings for each customized entry type in the form (""custom_type_1_name"" ""custom_type_1_req"" ) two distinct pref nodes (one for bibtex one for biblatex) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))  - [x] loading is working for newly created customized entries  - [x] write prefs migration (is performed on first startup of new version existing prefs will be put as new custom types for `defaultbibdatabasemode` old prefs are not deleted)- enable testing with cleanup after test execution  - [x] bibtex  - [x] biblatex- various bug fixes and improvements eg #2318 #772 #366 #365   - [x] refactor/rewrite parts of `entrycustomizationdialog` to improve performance (refs #2318)  - [x] fixes #2261 (and also clearing of bibtexkeypatterns using ""reset preferences"")  - [x] #772: deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types  - [x] #366: check ""resetting overridden default entry types does not work sometimes even crashes"" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open dbs  - [x] if a customized type is declared in a file it will be tried to import the declarations - if a customtype already exists a warning should be shown that it will be overwritten     - before this pr (no import of already existing customizations):![custom-import-before](https://cloudgithubusercontentcom/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1png)     - now (more control): ![custom-import-new](https://cloudgithubusercontentcom/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5png)  - [x] a customized standard type should not appear in the ""custom"" section of the ""new entry"" dialog and not in the ""custom entries"" section of the ""change entry type"" menu- [x] changelog okay i think the current state is now a good improvement of the old status-quo at the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing apart from that i would appreciate some feedback -) || apart from a changelog and some more tests this is good to go from my side || @mlep @frith th it is not yet decided whether we will include this improvement in 38 or not however there are three more translations which are added in this pull request could you provide me translations for these three strings? then ill add them manuallythanks!```select_all_customized_types_to_be_stored_in_local_preferencescurrently_unknowndifferent_customization_current_settings_will_be_overwritten``` || on thu dec 15 2016 at 11:17 am matthias geiger <notifications@githubcom>wrote:> @mlep <https://githubcom/mlep> @frith th> <https://githubcom/frith th> it is not yet decided whether we will> include this improvement in 38 or not however there are three more> translations which are added in this pull request could you provide me> translations for these three strings? then ill add them manually> thanks!>> select_all_customized_types_to_be_stored_in_local_preferences>>  select_all_customized_types_to_be_stored_in_local_preferencesseleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali> currently_unknown>>  currently_unknownattualmente_sconosciutothats the singular mode the plural is ""attualmente_sconosciuti""but since italian is profoundly evil thats ok if referred to a masculinenoun the feminine forms are different but im digressing :-)> different_customization_current_settings_will_be_overwritten>>  different_customization_current_settings_will_be_overwrittenpersonalizzazione_differente_i_parametri_correnti_saranno_sovrascritti>  —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267291718> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2anc2wjebxamoi4yub2czyqky1bgks5rirphgajpzm4lccra>> >-- fer do santagata || thank you @frith th ! || youre welcome!on fri dec 16 2016 at 9:30 pm matthias geiger <notifications@githubcom>wrote:> thank you @frith th <https://githubcom/frith th> !>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267688937> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2ehym65slwytwdwtjwh8edtlmmc4ks5rivt2gajpzm4lccra>> >-- fer do santagata || how did we proceed regarding standard types? is it a v40 issue? see https://githubcom/koppor/jabref/issues/248 || "
246,366,2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,"improve entrytype customization goals:- entry customization based on bibdatabasemode  - [x] working for custom entry types defined in bib db  - [x] storage is working for new customized entries (instead of creating three/four prefs strings for each customized entry type in the form (""custom_type_1_name"" ""custom_type_1_req"" ) two distinct pref nodes (one for bibtex one for biblatex) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))  - [x] loading is working for newly created customized entries  - [x] write prefs migration (is performed on first startup of new version existing prefs will be put as new custom types for `defaultbibdatabasemode` old prefs are not deleted)- enable testing with cleanup after test execution  - [x] bibtex  - [x] biblatex- various bug fixes and improvements eg #2318 #772 #366 #365   - [x] refactor/rewrite parts of `entrycustomizationdialog` to improve performance (refs #2318)  - [x] fixes #2261 (and also clearing of bibtexkeypatterns using ""reset preferences"")  - [x] #772: deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types  - [x] #366: check ""resetting overridden default entry types does not work sometimes even crashes"" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open dbs  - [x] if a customized type is declared in a file it will be tried to import the declarations - if a customtype already exists a warning should be shown that it will be overwritten     - before this pr (no import of already existing customizations):![custom-import-before](https://cloudgithubusercontentcom/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1png)     - now (more control): ![custom-import-new](https://cloudgithubusercontentcom/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5png)  - [x] a customized standard type should not appear in the ""custom"" section of the ""new entry"" dialog and not in the ""custom entries"" section of the ""change entry type"" menu- [x] changelog okay i think the current state is now a good improvement of the old status-quo at the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing apart from that i would appreciate some feedback -) || apart from a changelog and some more tests this is good to go from my side || @mlep @frith th it is not yet decided whether we will include this improvement in 38 or not however there are three more translations which are added in this pull request could you provide me translations for these three strings? then ill add them manuallythanks!```select_all_customized_types_to_be_stored_in_local_preferencescurrently_unknowndifferent_customization_current_settings_will_be_overwritten``` || on thu dec 15 2016 at 11:17 am matthias geiger <notifications@githubcom>wrote:> @mlep <https://githubcom/mlep> @frith th> <https://githubcom/frith th> it is not yet decided whether we will> include this improvement in 38 or not however there are three more> translations which are added in this pull request could you provide me> translations for these three strings? then ill add them manually> thanks!>> select_all_customized_types_to_be_stored_in_local_preferences>>  select_all_customized_types_to_be_stored_in_local_preferencesseleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali> currently_unknown>>  currently_unknownattualmente_sconosciutothats the singular mode the plural is ""attualmente_sconosciuti""but since italian is profoundly evil thats ok if referred to a masculinenoun the feminine forms are different but im digressing :-)> different_customization_current_settings_will_be_overwritten>>  different_customization_current_settings_will_be_overwrittenpersonalizzazione_differente_i_parametri_correnti_saranno_sovrascritti>  —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267291718> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2anc2wjebxamoi4yub2czyqky1bgks5rirphgajpzm4lccra>> >-- fer do santagata || thank you @frith th ! || youre welcome!on fri dec 16 2016 at 9:30 pm matthias geiger <notifications@githubcom>wrote:> thank you @frith th <https://githubcom/frith th> !>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267688937> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2ehym65slwytwdwtjwh8edtlmmc4ks5rivt2gajpzm4lccra>> >-- fer do santagata || how did we proceed regarding standard types? is it a v40 issue? see https://githubcom/koppor/jabref/issues/248 || "
247,365,2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,"improve entrytype customization goals:- entry customization based on bibdatabasemode  - [x] working for custom entry types defined in bib db  - [x] storage is working for new customized entries (instead of creating three/four prefs strings for each customized entry type in the form (""custom_type_1_name"" ""custom_type_1_req"" ) two distinct pref nodes (one for bibtex one for biblatex) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))  - [x] loading is working for newly created customized entries  - [x] write prefs migration (is performed on first startup of new version existing prefs will be put as new custom types for `defaultbibdatabasemode` old prefs are not deleted)- enable testing with cleanup after test execution  - [x] bibtex  - [x] biblatex- various bug fixes and improvements eg #2318 #772 #366 #365   - [x] refactor/rewrite parts of `entrycustomizationdialog` to improve performance (refs #2318)  - [x] fixes #2261 (and also clearing of bibtexkeypatterns using ""reset preferences"")  - [x] #772: deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types  - [x] #366: check ""resetting overridden default entry types does not work sometimes even crashes"" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open dbs  - [x] if a customized type is declared in a file it will be tried to import the declarations - if a customtype already exists a warning should be shown that it will be overwritten     - before this pr (no import of already existing customizations):![custom-import-before](https://cloudgithubusercontentcom/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1png)     - now (more control): ![custom-import-new](https://cloudgithubusercontentcom/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5png)  - [x] a customized standard type should not appear in the ""custom"" section of the ""new entry"" dialog and not in the ""custom entries"" section of the ""change entry type"" menu- [x] changelog okay i think the current state is now a good improvement of the old status-quo at the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing apart from that i would appreciate some feedback -) || apart from a changelog and some more tests this is good to go from my side || @mlep @frith th it is not yet decided whether we will include this improvement in 38 or not however there are three more translations which are added in this pull request could you provide me translations for these three strings? then ill add them manuallythanks!```select_all_customized_types_to_be_stored_in_local_preferencescurrently_unknowndifferent_customization_current_settings_will_be_overwritten``` || on thu dec 15 2016 at 11:17 am matthias geiger <notifications@githubcom>wrote:> @mlep <https://githubcom/mlep> @frith th> <https://githubcom/frith th> it is not yet decided whether we will> include this improvement in 38 or not however there are three more> translations which are added in this pull request could you provide me> translations for these three strings? then ill add them manually> thanks!>> select_all_customized_types_to_be_stored_in_local_preferences>>  select_all_customized_types_to_be_stored_in_local_preferencesseleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali> currently_unknown>>  currently_unknownattualmente_sconosciutothats the singular mode the plural is ""attualmente_sconosciuti""but since italian is profoundly evil thats ok if referred to a masculinenoun the feminine forms are different but im digressing :-)> different_customization_current_settings_will_be_overwritten>>  different_customization_current_settings_will_be_overwrittenpersonalizzazione_differente_i_parametri_correnti_saranno_sovrascritti>  —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267291718> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2anc2wjebxamoi4yub2czyqky1bgks5rirphgajpzm4lccra>> >-- fer do santagata || thank you @frith th ! || youre welcome!on fri dec 16 2016 at 9:30 pm matthias geiger <notifications@githubcom>wrote:> thank you @frith th <https://githubcom/frith th> !>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267688937> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2ehym65slwytwdwtjwh8edtlmmc4ks5rivt2gajpzm4lccra>> >-- fer do santagata || how did we proceed regarding standard types? is it a v40 issue? see https://githubcom/koppor/jabref/issues/248 || "
248,2261,2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,"improve entrytype customization goals:- entry customization based on bibdatabasemode  - [x] working for custom entry types defined in bib db  - [x] storage is working for new customized entries (instead of creating three/four prefs strings for each customized entry type in the form (""custom_type_1_name"" ""custom_type_1_req"" ) two distinct pref nodes (one for bibtex one for biblatex) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))  - [x] loading is working for newly created customized entries  - [x] write prefs migration (is performed on first startup of new version existing prefs will be put as new custom types for `defaultbibdatabasemode` old prefs are not deleted)- enable testing with cleanup after test execution  - [x] bibtex  - [x] biblatex- various bug fixes and improvements eg #2318 #772 #366 #365   - [x] refactor/rewrite parts of `entrycustomizationdialog` to improve performance (refs #2318)  - [x] fixes #2261 (and also clearing of bibtexkeypatterns using ""reset preferences"")  - [x] #772: deleting custom type restoring customized default type from exported prefs no multiple import of customized entry types  - [x] #366: check ""resetting overridden default entry types does not work sometimes even crashes"" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open dbs  - [x] if a customized type is declared in a file it will be tried to import the declarations - if a customtype already exists a warning should be shown that it will be overwritten     - before this pr (no import of already existing customizations):![custom-import-before](https://cloudgithubusercontentcom/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1png)     - now (more control): ![custom-import-new](https://cloudgithubusercontentcom/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5png)  - [x] a customized standard type should not appear in the ""custom"" section of the ""new entry"" dialog and not in the ""custom entries"" section of the ""change entry type"" menu- [x] changelog okay i think the current state is now a good improvement of the old status-quo at the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing apart from that i would appreciate some feedback -) || apart from a changelog and some more tests this is good to go from my side || @mlep @frith th it is not yet decided whether we will include this improvement in 38 or not however there are three more translations which are added in this pull request could you provide me translations for these three strings? then ill add them manuallythanks!```select_all_customized_types_to_be_stored_in_local_preferencescurrently_unknowndifferent_customization_current_settings_will_be_overwritten``` || on thu dec 15 2016 at 11:17 am matthias geiger <notifications@githubcom>wrote:> @mlep <https://githubcom/mlep> @frith th> <https://githubcom/frith th> it is not yet decided whether we will> include this improvement in 38 or not however there are three more> translations which are added in this pull request could you provide me> translations for these three strings? then ill add them manually> thanks!>> select_all_customized_types_to_be_stored_in_local_preferences>>  select_all_customized_types_to_be_stored_in_local_preferencesseleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali> currently_unknown>>  currently_unknownattualmente_sconosciutothats the singular mode the plural is ""attualmente_sconosciuti""but since italian is profoundly evil thats ok if referred to a masculinenoun the feminine forms are different but im digressing :-)> different_customization_current_settings_will_be_overwritten>>  different_customization_current_settings_will_be_overwrittenpersonalizzazione_differente_i_parametri_correnti_saranno_sovrascritti>  —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267291718> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2anc2wjebxamoi4yub2czyqky1bgks5rirphgajpzm4lccra>> >-- fer do santagata || thank you @frith th ! || youre welcome!on fri dec 16 2016 at 9:30 pm matthias geiger <notifications@githubcom>wrote:> thank you @frith th <https://githubcom/frith th> !>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2331#issuecomment-267688937> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/adya2ehym65slwytwdwtjwh8edtlmmc4ks5rivt2gajpzm4lccra>> >-- fer do santagata || how did we proceed regarding standard types? is it a v40 issue? see https://githubcom/koppor/jabref/issues/248 || "
249,2335,2339,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix biblatex cleanup for date field this fixes #2335 moved biblatex cleanup to new test- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) failing test is something from medline not related  || however  in  this  case  that  would  result  in  the  original  bug again when checked for ifpresent !if the field is not yet in the biblatex entry (which is obviously the casewhen you only have year) it returns an emtyoptional and thus you wouldhave the same situation as in the original codethis is why i splitted it || failing snap ci is due to http error 502 in astrophysicsdatasystemtest  || could you please merge master again - i merged https://githubcom/jabref/jabref/pull/2333 and thus snapci only does the basic tests as described at https://githubcom/jabref/jabref/wiki/ci#snapci 😇  || @siedlerchr: sorry i dont understand you commentlets go through this case by case with the following code:````optional<string> date  entrygetfield(fieldnamedate)boolean isblank  stringutilsisblank(date)````case | date | isblank |---- | --- | --- |no date at all | optionalempty | trueempty string | optionalof("""") | truesomething else | optionalof(""something"") | falseyou want to move year and month to the date field exactly in the first two cases ie if and only if `isblank  true` what do i miss? || ah now i understand your comment the first case was not obvious for me that an empty should return true || @tobiasdiez the confusion came from the naming stuff i previously had the apachecommons stringutil class and not the jabref specific one changed that || besides the micro comment: lgtm :+1: || "
250,1323,2344,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,follow up for #1323 batch fulltext downloader - 	rename menu item to plural for finding full texts- 	disable menu item when there are no documents selected for fulltext retrieval- 	fix layout of file dialog and increase size of file path significantlyold:![image](https://cloudgithubusercontentcom/assets/2141507/20975849/030bb4ce-bca1-11e6-9b2f-e0f30601d72dpng)new:![image](https://cloudgithubusercontentcom/assets/2141507/20975639/549853a2-bca0-11e6-8107-2742d7381258png)  
251,1446,2348,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix #1446 only add non empty paths suggest current bib folder when no defaults are set  
252,1779,2349,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,integrity checker improvements follow up for #1779linking to bibentries inside the integrity checker should be done via a reference to the entry not the key- [x] focus by id rather than bibtexkey- [x] also the field bibtexkey can now be focused i changed the internal list from unmodifiable and returned another unmodifiable list this needs some close examination in my opinion as im not 100% sure if i introduced any side effects please also test the feature if it is still working as expected i did a quick check and it appears to work  || uhh browsing this from my mobile im not sure but @tobiasdiez you have closed the pr and not merged it 😉 || anything that needs to be changed here? || from my point of view its good i merge it in ||
253,2012,2358,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix issue 2012: use bibtexformat for month field in medlinefetcher fix #2012 checks if the month field is present in the case its present the month field is set to bibtex format using monthutil could you add a test case?medline tests are failing: https://travis-ciorg/jabref/jabref/builds/182632279#l329 || i just updated the test cases as far as i understood it this should be the normal behavior so no additional tests should be necessary ||
254,1681,2361,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"fix a few group related issues this pr fixes #2334 #1873 and #1681since i didnt understood the groups code i also refactored it main changes:- split `keywordgroup` class into `wordkeywordgroup` which splits field content into words and then matches them and `regexkeywordgroup` that uses a regular expression for this job- extract serialization of groups to `groupserializer` (previously every group decided about its own serialization via the `tostring` method)- move a few things from model and logic to gui since they mostly contained ui-related stuff (eg groupdesrciptions)---- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the groups code is a mess :-( thanks for being willing to put up with this!unfortunately the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited i would trust your ability and the amount of tests that you added here together with the working build cosmetic changes can be made on a later occasion i am sure this is not the last visit to the groups codesince this is on your private branch we have no build on buildsjabreforg if we had we could ask the people that reported the issues to try out this version any chance of getting a build for this? || decision: merge so that many people will be able to test it we can include code review comments later in a separate pri am very aware of the risk refs #1495 || - [ ] dragging an entry to a group does not refresh the main table (keyword-based group)- [ ] context menu shows ""remove group keep subgroups"" even though there are no subgroups- [ ] deletion of a static group does not remove the assignment of entries to it- [ ] clicking on a group and pressing <kbd>del</kbd> triggers the dialog ""do you want to remove the selcted entries"" if i press <kbd>cursor down</kbd> the next group is selected thus <kbd>del</kbd> should really apply to the current groupnothing important or me think this was also happening using the old groups code || "
255,1873,2361,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"fix a few group related issues this pr fixes #2334 #1873 and #1681since i didnt understood the groups code i also refactored it main changes:- split `keywordgroup` class into `wordkeywordgroup` which splits field content into words and then matches them and `regexkeywordgroup` that uses a regular expression for this job- extract serialization of groups to `groupserializer` (previously every group decided about its own serialization via the `tostring` method)- move a few things from model and logic to gui since they mostly contained ui-related stuff (eg groupdesrciptions)---- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the groups code is a mess :-( thanks for being willing to put up with this!unfortunately the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited i would trust your ability and the amount of tests that you added here together with the working build cosmetic changes can be made on a later occasion i am sure this is not the last visit to the groups codesince this is on your private branch we have no build on buildsjabreforg if we had we could ask the people that reported the issues to try out this version any chance of getting a build for this? || decision: merge so that many people will be able to test it we can include code review comments later in a separate pri am very aware of the risk refs #1495 || - [ ] dragging an entry to a group does not refresh the main table (keyword-based group)- [ ] context menu shows ""remove group keep subgroups"" even though there are no subgroups- [ ] deletion of a static group does not remove the assignment of entries to it- [ ] clicking on a group and pressing <kbd>del</kbd> triggers the dialog ""do you want to remove the selcted entries"" if i press <kbd>cursor down</kbd> the next group is selected thus <kbd>del</kbd> should really apply to the current groupnothing important or me think this was also happening using the old groups code || "
256,2334,2361,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"fix a few group related issues this pr fixes #2334 #1873 and #1681since i didnt understood the groups code i also refactored it main changes:- split `keywordgroup` class into `wordkeywordgroup` which splits field content into words and then matches them and `regexkeywordgroup` that uses a regular expression for this job- extract serialization of groups to `groupserializer` (previously every group decided about its own serialization via the `tostring` method)- move a few things from model and logic to gui since they mostly contained ui-related stuff (eg groupdesrciptions)---- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the groups code is a mess :-( thanks for being willing to put up with this!unfortunately the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited i would trust your ability and the amount of tests that you added here together with the working build cosmetic changes can be made on a later occasion i am sure this is not the last visit to the groups codesince this is on your private branch we have no build on buildsjabreforg if we had we could ask the people that reported the issues to try out this version any chance of getting a build for this? || decision: merge so that many people will be able to test it we can include code review comments later in a separate pri am very aware of the risk refs #1495 || - [ ] dragging an entry to a group does not refresh the main table (keyword-based group)- [ ] context menu shows ""remove group keep subgroups"" even though there are no subgroups- [ ] deletion of a static group does not remove the assignment of entries to it- [ ] clicking on a group and pressing <kbd>del</kbd> triggers the dialog ""do you want to remove the selcted entries"" if i press <kbd>cursor down</kbd> the next group is selected thus <kbd>del</kbd> should really apply to the current groupnothing important or me think this was also happening using the old groups code || "
257,2209,2364,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"be more friendly when using journal alias field id like to copy bibtex entries to biblatex databases and vice versa when using required fields only this works perfectly when in biblatex mode jabref does not display the value of `journal` in the required fields because jabref demands the field `journaltitle` this is not only confusing for me but also for other users: #2209i know that a clean solution is #521 this however wont happen this yeari also know that a bibtex-to-biblatex converter and biblatex-to-bibtex converter is another solution this however forces users to run these when copying and pasting between databases this could be solved by running these converters silently when copying and pasting when jabref is used in parallel to other software (such as notepad++) this does not help i cannot force everyone to use jabref thus simply supporting `journal` in jabref is the solution for me the biblatex manual states:> journal field (literal)> an alias for journaltitle provided for bibtex compatibility see § 222thus it is not deprecated but an alias and should imho be considered as full alternative for `journaltitle`<s>i am aware that this patch makes it hard for users using full biblatex with `journaltitle` instead of `journal` i am assuming that not much users are aware of the different modes of jabref and that they switch back and forth for the same file or for the bibentries</s>we now show both `journaltitle` and `journal` if these fields exists in as required fieldsthis whole discussion somehow refs https://githubcom/jabref/jabref/issues/160 * minor improvement: enhanced integrity checks testing for biblatex-only fields to be aware of more fields (eg `location`) * all fetchers return now bibtex (before: arxiv and msbib created biblatex)## screenshot: current jabref![grabbed_20161211-183240](https://cloudgithubusercontentcom/assets/1366654/21081886/48135c02-bfd0-11e6-9a2e-f2e411f76487png)## screenshot: updated jabref![grabbed_20161212-030057](https://cloudgithubusercontentcom/assets/1366654/21085882/3c1b3b58-c017-11e6-96ce-e83e1e9206d3png)## checklist- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [n/a] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [n/a] if you changed the localization: did you run `gradle localizationupdate`? hehe let us see how political this will get :-)code-wise the pr looks fine and i give my +1 for merging the only blocker is that for some reason the gui tests are failing edit: i restartet the build for the push lets see if it works on a second try || you could also create a discussion point at https://githubcom/plk/biblatex  || in case i want to start a discussion im going to do that on the [dante ev mailing list](https://listsdantede/mailman/listinfo/dante-ev) or same [dante ev event](https://wwwdantede/eventshtml) 😇  || the gui tests are also failing on master: https://travis-ciorg/jabref/jabref/builds/183054056refs https://githubcom/jabref/jabref/pull/1700 || i dont like thisdespite im not using the biblatex mode i think it is the wrong approach to use the ""deprecated"" field instead of the intended field only because we are too lazy to implement our fetchers in the right way or because the user is too lazy to convert copied bibtex entries to biblatex :wink: || `journaltitle` is the main biblatex field for journal names and hence jabref should support it as a first class citizen this means it should be displayed as a required field and ""to biblatex"" should convert `journal` to `journaltitle` moreover the journal is not the only controversial field: date is the preferred way to store the publication date but bibtex only supports `year` and `month` in my opinion we shouldnt reinterpret the ""biblatex standard"" just because some users have problems but of course i can see that the new conventions are sometimes inconvenient if users switch between bibtex and biblatex as far as i see it the main problem is that ""journal"" lands in ""deprecated"" although it is an alias to a required field would it be a solution to show the journal field right below ""journaltitle"" in ""required"" if it has a value? then it would work similar to year+month vs date || @matthiasgeiger `journal` is not deprecated it is just an alias field || @tobiasdiez yes that would be a solution || therefore i put it in quotes -)  || all comments addressed should be good to go now || "
258,521,2364,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"be more friendly when using journal alias field id like to copy bibtex entries to biblatex databases and vice versa when using required fields only this works perfectly when in biblatex mode jabref does not display the value of `journal` in the required fields because jabref demands the field `journaltitle` this is not only confusing for me but also for other users: #2209i know that a clean solution is #521 this however wont happen this yeari also know that a bibtex-to-biblatex converter and biblatex-to-bibtex converter is another solution this however forces users to run these when copying and pasting between databases this could be solved by running these converters silently when copying and pasting when jabref is used in parallel to other software (such as notepad++) this does not help i cannot force everyone to use jabref thus simply supporting `journal` in jabref is the solution for me the biblatex manual states:> journal field (literal)> an alias for journaltitle provided for bibtex compatibility see § 222thus it is not deprecated but an alias and should imho be considered as full alternative for `journaltitle`<s>i am aware that this patch makes it hard for users using full biblatex with `journaltitle` instead of `journal` i am assuming that not much users are aware of the different modes of jabref and that they switch back and forth for the same file or for the bibentries</s>we now show both `journaltitle` and `journal` if these fields exists in as required fieldsthis whole discussion somehow refs https://githubcom/jabref/jabref/issues/160 * minor improvement: enhanced integrity checks testing for biblatex-only fields to be aware of more fields (eg `location`) * all fetchers return now bibtex (before: arxiv and msbib created biblatex)## screenshot: current jabref![grabbed_20161211-183240](https://cloudgithubusercontentcom/assets/1366654/21081886/48135c02-bfd0-11e6-9a2e-f2e411f76487png)## screenshot: updated jabref![grabbed_20161212-030057](https://cloudgithubusercontentcom/assets/1366654/21085882/3c1b3b58-c017-11e6-96ce-e83e1e9206d3png)## checklist- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [n/a] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [n/a] if you changed the localization: did you run `gradle localizationupdate`? hehe let us see how political this will get :-)code-wise the pr looks fine and i give my +1 for merging the only blocker is that for some reason the gui tests are failing edit: i restartet the build for the push lets see if it works on a second try || you could also create a discussion point at https://githubcom/plk/biblatex  || in case i want to start a discussion im going to do that on the [dante ev mailing list](https://listsdantede/mailman/listinfo/dante-ev) or same [dante ev event](https://wwwdantede/eventshtml) 😇  || the gui tests are also failing on master: https://travis-ciorg/jabref/jabref/builds/183054056refs https://githubcom/jabref/jabref/pull/1700 || i dont like thisdespite im not using the biblatex mode i think it is the wrong approach to use the ""deprecated"" field instead of the intended field only because we are too lazy to implement our fetchers in the right way or because the user is too lazy to convert copied bibtex entries to biblatex :wink: || `journaltitle` is the main biblatex field for journal names and hence jabref should support it as a first class citizen this means it should be displayed as a required field and ""to biblatex"" should convert `journal` to `journaltitle` moreover the journal is not the only controversial field: date is the preferred way to store the publication date but bibtex only supports `year` and `month` in my opinion we shouldnt reinterpret the ""biblatex standard"" just because some users have problems but of course i can see that the new conventions are sometimes inconvenient if users switch between bibtex and biblatex as far as i see it the main problem is that ""journal"" lands in ""deprecated"" although it is an alias to a required field would it be a solution to show the journal field right below ""journaltitle"" in ""required"" if it has a value? then it would work similar to year+month vs date || @matthiasgeiger `journal` is not deprecated it is just an alias field || @tobiasdiez yes that would be a solution || therefore i put it in quotes -)  || all comments addressed should be good to go now || "
259,1721,2368,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,never manually set id of a bibentry the internal id of a bibentry should never be set manually closes #1721done:- removed constructors that allow setting the id of an entry- __every__ bibentry now gets an id on creation- a clone of a bibentry __always gets a unique id__ now- only option to change id of an entry is now via `setid()`pending:- [ ] is idgenerator really global and consistent between calls now?- [ ] can we import bibentries without an open database? see c884745 importers used a static id value before not 100% sure if this change has any side effects- [ ] setid may still be replaced for some occurences?! maybe we can even remove this execpt for a few test cases or so this is ready for review now please carefully see the changes in the initial post and think about possible side effects i might have missed! i also need some advice for the setid() replacement || lgtm shouldnt we (i) use this id as hashcode? or (ii) get rid of the id completely? || we could use it as hash code we also use it to distinguish duplicated/cloned entries + in our integrity checks to jump to an entry (that might have no key for example) || i dont quickly get why we cant use `equals()` etc ok probably the code needs to be rewritten accordingly || maybe we could do this eventually || code looks good your issues seem hard to tackle we merge after v38 and then test in production 😇  ||
260,2370,2372,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,relevance and read status field actions were switched fixes #2370  
261,2011,2375,1,0,0,1,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"preserve % sign inside bibtex fields via cleanup resolves #2011you can now use latexcleanup inside quality->cleanups to escape `%` to `\%` how about a changelog entry and we are ready to go :) || put  ruhe  latex  cleanup  in  single  quotes  as  it  is a  command  in jabref || when importing via the firefox plugin the percent sign are excaped importing via the medline websearch they are not i do not find any mentioning in the cleanup dialogue of percent sign changed to \% signsjabref 38windows 7 61 amd64 java 180_66 || @bernhard-kleine  the cleanup is not done automatically you should use cleanup->and then select the field you want to cleanup eg abstract together with **latex cleanup** || i updated to jabref 38 today i choose the 64bit version i took a new database i imported via the medline web search pmid 27697972 the abstract has unescaped percent signs therefore i went to quality->cleanup and as the abstract field is already selected i checked all the entries in the field to the right but can not find percent sign latex cleanup did not find anything to cleanup what do i miss?  || i had to add it first and then run the cleanup sorry for the noise! || i added latex cleanup for the abstract field still percent sign are saved as they are which leads to errors when running biber in case the percent sign is escaped jabref removes the backslash when saving || @j0hannes   this has been fixed with #2521  thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from https://buildsjabreforg/master and report back if it works for you || @siedlerchr i tried version 40 and it seems to be quite unstable i had to force quit the application each time as it was hanging before crashing it destroyed some of the keys so im going back to 382 now is there any other way to address the percent problem? || @j0hannes  could you please open a new issue for the problems you encounter with the 400 version in detail?eg operation system any errors in/from the log?you could manually escape the %-signs by adding a backslash \ before it that worksyou could simply search for the %-sign to see all problematic entries and then escape them manually || i have raised issues for the backslash and the % sign before myproblems are gone with version 400 using  quality->cleanup entries->and adding abstract: latex cleanup the the run field formatter: beforeclicking okthe errors due not excaped % signs turn out to be tiresome since theerror message for example in texstudio plus latexmk are not direct onlyby checking the log you know that a % sign was not escapedam 20032017 um 13:34 schrieb christoph:>> @j0hannes <https://githubcom/j0hannes> could you please open a new> issue for the problems you encounter with the 400 version in detail?> eg operation system any errors in/from the log?>> you could manually escape the %-signs by adding a backslash \ before> it that works> you could simply search for the %-sign to see all problematic entries> and then escape them manually>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2375#issuecomment-287746381>> or mute the thread> <https://githubcom/notifications/unsubscribe-auth/aiyh51vqm2prk83pefo3h891xvpsbsocks5rnnjigajpzm4lltfh>>-- spitzhalde9d-79853 lenzkirchbernhardkleine@gmxnetwwwb-kleinecom wwwurseetalnet-thunderbird mit enigmailgpg schlüssel: d5257409fingerprint:08 b7 f8 70 22 7a fc c1 15 49 ca a6 c7 6f a0 2e d5 25 74 09 || after changing my bib file manually version 40 is not crashing anymore still it modifies all my citation keys and i dont find any way to stop it || @j0hannes did you run a cleanup operation or a save action? did you check the keypattern settings?i would suggest opening a new issue if this problem still exists  || @siedlerchr no it happens right when typing loading or after inspecting manual changes to the bib file when typing keys are changed when the focus moves to a different field || i can confirm that the problem still persists with ""abstract: latex cleanup"" enabled in version 400-dev every time i enter \% it is immediately changed to % and % ends up as % in the bib file which causes latex to fail || i can not reproduce this % sign is correctly escaped (and only once) to `\%`using latex cleanup for abstract  || it certainly was caused by the latex to unicode filter || "
262,938,2388,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"rename ""xmp data"" to ""xmp-metadata"" i worked with the ""import inspection dialog"" which offers to offer entry-creation based on xmp meta data (refs #938) the dialog renders as follows:![grabbed_20161216-072757](https://cloudgithubusercontentcom/assets/1366654/21253754/34de5c92-c361-11e6-80dd-d987519a9405png)my issue is that is uses both ""xmp data"" and ""xmp-metadata"" for the same thing i wanted to rename ""xmp-metadata"" to ""xmp data"" but ""xmp-metadata"" appears in jabref much more often thus i decided to keep ""xmp-metadata"" and just adapt two other strings to that writingnew rendering:![grabbed_20161216-072851](https://cloudgithubusercontentcom/assets/1366654/21253772/5382e5f0-c361-11e6-95d1-2ac102723e59png)discussion: maybe we should use ""xmp metadata"" (without dash) or even ""xmp meta data""  "
263,2390,2396,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"[wip] introduce explicit list of all_biblatex_only_fields this fixes #2390 the last implementation used `entryconverterfield_aliases_ltx_to_tex` this implementation is based on `bibtexentrytypes` and `biblatexentrytypes` ## issue`jabrefpreferencescustom_tab_name_num_` should be used to really determine the fields to check this however is really a **huge** architectural reworkit has to be checked in following (seldom) situation:- field x is defined in jabrefs biblatexentrytypes- field x is added by the user to a general tabjabref now complains that x is biblatex only## further changes * isbn and isbn are now bibtex fields too   - reason: even though both are not listed in [wikipedia](https://enwikipediaorg/wiki/bibtex) and the [lncs style](ftp://ftpspringerde/pub/tex/latex/llncs/latex2e/splncs03bst) i see them so hard tied to a book and article that i would add it in the case of a doi jabref (more or less) enforces it by offering that field in the ""general"" tab moreover [it is part of plainnatbst](http://texstackexchangecom/a/52046/9075) and [natbib](https://wwwctanorg/pkg/natbib) is a popular package * `fieldnamecomment` instead of `fieldnamecomments` (affects oaiimporter only) * preferences: use fieldname constants at `setlanguagedependentdefaultvalues()`- [x] change in changelogmd described- [x] tests created for changes- [n/a] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [n/a] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [n/a] if you changed the localization: did you run `gradle localizationupdate`?  "
264,2394,2400,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix #2394 groups matching with brackets in name fixes #2394- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
265,2403,2405,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"datepicker fix fix for #2403 - and as i was just touching this stuff again: i replaced our custom `easydateformat` class with a standard `datetimeformatter`- [ ] change in changelogmd described- [ ] tests created for changes- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~ documentation at http://helpjabreforg/en/timestampdoes not work with master and v38 on my side v37 does not compile any more (""could not find deundercouch:citeproc-java:100-snapshot"") does also not work with v36 the solution is to reset the preferencessolution works for me @matthiasgeiger thank you for the fix || does not work for me even after resetting the preferences (jabref-381-dev--snapshot--2016-12-20--master--b655bfdjar) || @mlep: after resetting the preferences the timestamp field appears for me and the datepicker works as desired the dev version you mention in your comment is not the most recent one maybe it did not yet include the fix can you try again with jabref-381-dev--snapshot--2016-12-20--master--62d55e1jar || indeed the calendar is displayed nowhowever the `clear` function does not work as expected: the timestamp field is not cleared if i click on `today` then `clear` works || @mlep indeed! clear only works if a proper date is already in the field if you insert something else such as `abc` then clear does not work@matthiasgeiger can you please address this? since this pr is already merged i guess we need a follow-up pr || note: for me it does not clear even if the field content looks good like: ` timestamp      {2016-10-26}` || "
266,2139,2414,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"replace calls of bibtexparserparse this is a follow-up to #2139 so that we can finally get the pr into masteri created a new branch since i have no access rights on the previous one took over all commits from there and tried to merge this with the current master the point is just to get the code into master now i will not implement additional suggestions from #2139 i double-checked the code and there should be nothing problematic left essentially this is just a few replacements of the static `bibtexparserparse` with `new bibtexparser()parse`when you merge please do not squash so that the commits by @oscargus are preserved || i also extracted the initialization of the parser to the setup method in the tests (as proposed in #2139) oscar was right it is not nice to simply mark a method as deprecated and let other people cleanup the dirt - thanks for your work @oscargus and @lenhard  || waaaaahhhh i clicked on squash & merge how do i revert and merge as ""normal"" ?? || "
267,2385,2415,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix several file cleanup + rename issues separated move + rename cleanup logicmove + rename files in general tab -> file now use internally the cleanup operations logicseparated gui context menu operations for move + cleanuprename files no longer moves files it only renames themfiles are not overwritten if they exist or have the same name- [x] todo: apply new targetfiledir in test - [x] todo: adapt test finally- [x] todo: rework gui action code fix for #2385 and followup from #1899 includes fix for #2454 and #2526 ![jabrefgeneralfilefield](https://cloudgithubusercontentcom/assets/320228/23267459/20a7563c-f9eb-11e6-9a74-440de3fa06fapng)![grafik](https://cloudgithubusercontentcom/assets/320228/23267433/0c69d212-f9eb-11e6-9182-c641a339807apng)![jabrefmovefile](https://cloudgithubusercontentcom/assets/320228/23267453/1b926aba-f9eb-11e6-86b5-1b5c805b2f94png)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? gui: cleanuppreset panel + metadatagetdefaultfiledirectory seems not to check bibtex location somehow  ||   - [x] todo: find a wy to cleanup only one file || - [ ] todo: add some preview dialog stuff || - [x] prevent filedirpattern subfolder creation on each run if already exists || i had a look at the code which in general is good and fixed a few minor issues directly (missing getters/setters that were missing well before this pr but this is a good time for a fix) i also played around a little with the ui and tried to find errors but was unsuccessfulin the spirit of progress and as suggested by @siedlerchr  https://githubcom/jabref/jabref/pull/2415#discussion_r103486029 i am merging now directly more far fetching suggestions by @tobiasdiez should be addressed in a follow-up pr as discussed above@siedlerchr thanks again for this heap of work! ||
268,2454,2415,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix several file cleanup + rename issues separated move + rename cleanup logicmove + rename files in general tab -> file now use internally the cleanup operations logicseparated gui context menu operations for move + cleanuprename files no longer moves files it only renames themfiles are not overwritten if they exist or have the same name- [x] todo: apply new targetfiledir in test - [x] todo: adapt test finally- [x] todo: rework gui action code fix for #2385 and followup from #1899 includes fix for #2454 and #2526 ![jabrefgeneralfilefield](https://cloudgithubusercontentcom/assets/320228/23267459/20a7563c-f9eb-11e6-9a74-440de3fa06fapng)![grafik](https://cloudgithubusercontentcom/assets/320228/23267433/0c69d212-f9eb-11e6-9182-c641a339807apng)![jabrefmovefile](https://cloudgithubusercontentcom/assets/320228/23267453/1b926aba-f9eb-11e6-86b5-1b5c805b2f94png)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? gui: cleanuppreset panel + metadatagetdefaultfiledirectory seems not to check bibtex location somehow  ||   - [x] todo: find a wy to cleanup only one file || - [ ] todo: add some preview dialog stuff || - [x] prevent filedirpattern subfolder creation on each run if already exists || i had a look at the code which in general is good and fixed a few minor issues directly (missing getters/setters that were missing well before this pr but this is a good time for a fix) i also played around a little with the ui and tried to find errors but was unsuccessfulin the spirit of progress and as suggested by @siedlerchr  https://githubcom/jabref/jabref/pull/2415#discussion_r103486029 i am merging now directly more far fetching suggestions by @tobiasdiez should be addressed in a follow-up pr as discussed above@siedlerchr thanks again for this heap of work! ||
269,2526,2415,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix several file cleanup + rename issues separated move + rename cleanup logicmove + rename files in general tab -> file now use internally the cleanup operations logicseparated gui context menu operations for move + cleanuprename files no longer moves files it only renames themfiles are not overwritten if they exist or have the same name- [x] todo: apply new targetfiledir in test - [x] todo: adapt test finally- [x] todo: rework gui action code fix for #2385 and followup from #1899 includes fix for #2454 and #2526 ![jabrefgeneralfilefield](https://cloudgithubusercontentcom/assets/320228/23267459/20a7563c-f9eb-11e6-9a74-440de3fa06fapng)![grafik](https://cloudgithubusercontentcom/assets/320228/23267433/0c69d212-f9eb-11e6-9182-c641a339807apng)![jabrefmovefile](https://cloudgithubusercontentcom/assets/320228/23267453/1b926aba-f9eb-11e6-86b5-1b5c805b2f94png)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? gui: cleanuppreset panel + metadatagetdefaultfiledirectory seems not to check bibtex location somehow  ||   - [x] todo: find a wy to cleanup only one file || - [ ] todo: add some preview dialog stuff || - [x] prevent filedirpattern subfolder creation on each run if already exists || i had a look at the code which in general is good and fixed a few minor issues directly (missing getters/setters that were missing well before this pr but this is a good time for a fix) i also played around a little with the ui and tried to find errors but was unsuccessfulin the spirit of progress and as suggested by @siedlerchr  https://githubcom/jabref/jabref/pull/2415#discussion_r103486029 i am merging now directly more far fetching suggestions by @tobiasdiez should be addressed in a follow-up pr as discussed above@siedlerchr thanks again for this heap of work! ||
270,2319,2416,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix ""collapse sub tree"" functionality for groups tree fix of #2319: function ""collapse subtree"" is working again- [x] change in changelogmd described- ~~[ ] tests created for changes~~ ui only- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~  "
271,2417,2425,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix #2417: doi no longer contains url <!-- describe the changes you have made here: what why  -->counterproposal to https://githubcom/jabref/jabref/pull/2424 😈 - [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i did not want to introduce this dependency less dependencies seemed better to me ||
272,2427,2428,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,fix #2427: arxiv fetcher works with prefix <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i merged it and will do the requested changes now to get this into 382 ||
273,242,2438,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,"follow up #2428 <!-- describe the changes you have made here: what why  -->follow-up from https://githubcom/jabref/jabref/pull/2428:- extract parsing of identifier to new class- add arxiv fetcher to id-based fetcher (and add tests that all fetcher are contained there)----- [ ] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? fixed newline issues but didnt renamed the fetcher since most of the fetchers dont have a ""fetcher"" suffix || "
274,2458,2459,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix conversion of tilde n and although i said that i would not work on jabref for the next two weeks here is a pr this stuff is addictive and i need help :-/fixes #2458 author name formatting in the main table is handled different from the formatting of the remaining columns and we simply forgot to perform the unicode conversion also for the author column- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref failing tests are again the damn fetchershowever i merge itin ||
275,2458,2464,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,"fix conversion of ""n"" and ""\{n}"" from latex to unicode this is a follow up for fixing  #2458the combinations `\n` and `\\{n}` are converted from latex to different symbols in unicodethis was really hard to track down it was not a problem in our conversion maps but in `latextounicode` the ultimate reason is that this code is just an utter mess of hacks and i could only fix this by adding another ugly map on top of this heapwe have already identified this class to cause performance issues and as you can see here it is very difficult to maintain we should consider removing the functionality and rewriting it from scratch or (preferably) replace it with an external library after all converting a latex string to unicode seems sufficiently well-defined that there is some library for this out there- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref  "
276,2472,2473,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,remove html code from acm fetcher remove html code from acm fetcherfixes #2472 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described~~- [ ] tests created for changes~~~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~ looks good codewise i tested it locally and it did not get any html code with the entry so i am merging it right away ||
277,2486,2487,1,0,0,1,1,1,1,0,1,1,1,0,0,1,0,1,1,0,0,0,0,1,0,"make sure that unregistered event sources do not stop jabref from shu… …tting downfixes #2486 unregistering event sources that have not been registered before should not stop jabref from shutting down orderly this pr logs such a problem instead of halting the shutdown of the program- [x] change in changelogmd described- [x] manually tested changed features in running jabref would it be possible to first check if the event is registered and only doing a shutdown then?this should be implemented at best in unregister itself || @siedlerchr: unfortunately the implementation of the event bus (from google) supports no such checking functionality hence we would have to remember subscribers in a custom list which in my point of view would be an unnecessary overhead however i have now moved the exception handling code to all the different event sources in jabref (i hope i found them all) that way we catch the exception as early as possible i cannot think of a circumstance where trying to remove a listener that never listened should crash the complete applicationit is not always logged though since not all of the classes that are event sources use a logger but again i do not think that this is very tragic or indeed important || there is already discussion about checking it  https://githubcom/google/guava/issues/784for fixing check style you should add the comments for switching it off at hat positionhttp://stackoverflowcom/questions/4023185/how-to-disable-a-particular-checkstyle-rule-for-a-particular-line-of-code?noredirect1&lq1 || @siedlerchr sorry but i am not getting your comment regarding checkstyle the builds seem to fail because of the usual random fetcher errors || @lenhard i meant the codacy which will complain about the empty catch blocksbut i think i confused it with checkstyle module || @siedlerchr ok i understand however i am not too fond of codacy and refuse to add comments just because the tool produces false positives i am well aware that it is near impossible for a tool to tell if an empty catch block makes sense or not but it is false positive nonetheless the existing comment in there is meaningful to humans which is way more importanti just pushed a few minor formatting fixes || ill take the ""thumps-up"" as an ""ok-for-merge"" which ill do right away || "
278,2251,2496,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,change key binding for cleanup from f8 to alt+f8 fixes #2251 this solution is the quick solution by changing the shortcut the alternative is to change the actiontable etcl- [x] change in changelogmd described- [no] tests created for changes- [n/a] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [n/a] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [n/a] if you changed the localization: did you run `gradle localizationupdate`? as quick fix imho okay maybe that will sooner or later be resolved with javafx ||
279,2500,2507,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,fix apostrophe conversion fixes #2500 this repairs the apostrophe handling in the latex to unicode conversion broken by #2464 and maintains the special handling of apostrophes in conjunction with the character n that #2464 intended to fix it increases complexity and reduces performance in the unicode conversion a tiny bit (through the additional checks that are now in there) ultimately the goal should be to replace the conversion with an external library- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref ich merge das mal rein und hoffe dass cih das dann dan fürs erste erledigt hat  ||
280,2506,2510,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix journal title in ris importer fix for #2506the problem was that the t2 field was used for the journal title if it comes first now t2 is only used for the journal title if the field jo does not appear ive also added the file from science direct as test case thanks! ||
281,2451,2519,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix repeated escaping of % sign extracted regexe in patternsfix for #2451<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
282,2451,2521,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix % sign cleanup fix previous stackoverflow errror with large inputfollow up from #2451  
283,2522,2527,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix error when path is no valid directory fixes the exception folder parameter must be a valid folderinternal fix 400 onlywhen no working directory is set and last used path was an actual file file dialog could not be openedfixes #2522 lgtm but what is the normal behavior for system dialogs? if i select a file ijnstead of a directory is it possible and selects the parent folder or is the select button inactive? || @stefan-kolb  my fix has only impact when **opening** the dialog that it opens in a directory without an exception  it has no impact on the selection of files etcparent does not mean parent directory but the directory itself (the parent of the file):example: your last selected file was x:\abc\defgpdf  when you try to set the initaldirectory to this complete path (including filename) it gives an exception because it is obviously no a folder (directory) therefore the fix now sets the dir  to x:\abc (which is the parent of x:\abc\defgpdf   || ah **** sorry for that! yeah i know i was aware of that ||
284,2431,2531,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,"check more results returned by crossref api for matching resolves #2431changes:- we will now check 5 results instead of just the first one for a matching title lgtmdo you want to implement https://githubcom/jabref/jabref/issues/2455 as well?  :heart_eyes_cat: || ok i interpret this as a ""no"" :wink: || nah will do that later maybe at jabcon is a separate task || "
285,2063,2532,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,switch to latex2unicode motivation is discussed in #2465 fixes many conversion problems such as those discussed in #2063 and #207- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please remove the old latex2unicode formatter code otherwise good to go || since the build is passing and there are two approved reviews i will merge this into master now and close the related issues ||
286,207,2532,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,switch to latex2unicode motivation is discussed in #2465 fixes many conversion problems such as those discussed in #2063 and #207- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please remove the old latex2unicode formatter code otherwise good to go || since the build is passing and there are two approved reviews i will merge this into master now and close the related issues ||
287,2465,2532,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,switch to latex2unicode motivation is discussed in #2465 fixes many conversion problems such as those discussed in #2063 and #207- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please remove the old latex2unicode formatter code otherwise good to go || since the build is passing and there are two approved reviews i will merge this into master now and close the related issues ||
288,209,2550,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,bib database -> library resolves #2095  
289,2546,2554,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,replaced lrumap with a guava cache this is intended as a fix for #2546note that the guava caches would allow for automated reloading of the entries but this is not undertaken in this implementation instead everything should work as before with the lrumap- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks ❤️ can you please also change the external-librariestxt and remove commons from there?   || also small issues:```checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/logic/pdf/fileannotationcachejava:6: wrong order for netsfjabrefmodeldatabasebibdatabasecontext import [importorder][ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/logic/pdf/fileannotationcachejava:10: wrong order for javautilhashmap import [importorder]``` || checkstyle help: https://githubcom/jabref/jabref/tree/master/config || thanks for the feedback there is quite a potential to improve stuff with these caches maybe ill have a look at the big picture there later ||
290,1179,2558,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,"move whole codebase to package `orgjabref` implements #1179- ~~[ ] change in changelogmd described~~ not relevant- [x] tests created for changes - existing tests are still passing- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~ when merging ""old"" prs please use    git config --global mergerenamelimit 2049 || "
291,2580,2583,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,keyword - special field synchronization fixes #2580 synch should now work appropriatelyfew questions here @koppor and all others:- [x] if keyword sync is enabled there is the possibility that we have multiple `rank1 rank4` keywordsonly the first one is synched with the special field was this always like this? seems like a bug to me - [x] if we change the preferences from write special fields to file to keyword synchronization the data gets lost did i introduce this or was this a bug? @lenhard talked to @koppor this was always the case writable fields and keyword fields were never synchronized we have to defer this until a reimplementationsee #574 ||
292,1904,2588,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,implement #1904: filter groups <!-- describe the changes you have made here: what why  -->add textbox add the bottom of the groups panel which allows for filtering the groups by name implements #1904![snipimage 002](https://cloudgithubusercontentcom/assets/5037600/23312248/551f4540-fab9-11e6-9a05-518080dfeb3ejpg)- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? great idea however i would place the search bar on top of the screen and not at the bottom or alternatively is there a way to reuse the existing search bar and add an option to search for groups? || maybe its indeed a good idea to move the search bar and button to the topas this is an easy change i would postpone it for the moment and see what kind of further user controls are necessary in the group pane  || on the bottom looks good to me || i think having the search box at the bottom is fine for now since we can also change it easilythe feature works nicely with normal-size bib files but i just checked it with the large bib file and there the feature scales very badly if i enter something into the search field it freezes and nothing happens for one or two minutes until the rearrangement of the groups appears (as desired) do you see a chance to speed this up? maybe some parallelism using `parallel()` in streams could help? || looks like other people see a group-related performance degradation: https://githubcom/jabref/jabref/issues/2561#issuecomment-283417338 so this is most likely not specific to this pr and you could go for a mergehowever we really need to follow up with a performance improvement pr || since as indicated in https://githubcom/jabref/jabref/issues/2561#issuecomment-283494292 the degraded performance for large bibs is expected at the moment and will be tackled separately i think this is ready for merge (which i am doing right away) || one suggestion as i just stumbled over it: i think the searching should be case insensitive (although this might further slow down the searching -)) || should the performance issue with the groups filtering (which is still massive) also be added to the 40 milestone? || @aegit i am not exactly sure which issue you are referring to but yes: we should try to improve performance before a final release so if there is an open issue that should be in 40 please point me to it! || @lenhard the performance issue im referring to happens with large databases (>10k entries ~1k static groups) in conjunction with the groups filtering when you try to find a group using the newly implemented groups search/filter you have to wait for several minutes for the search to complete during that time jabref behaves as if it had crashed you mentioned this problem yourself in this comment:https://githubcom/jabref/jabref/pull/2588#issuecomment-283042778should i open a new ticket for this? || @aegit yes please open a new ticket for this so that we do not forget it || done )https://githubcom/jabref/jabref/issues/2852 ||
293,2596,2601,1,0,0,1,0,0,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"remove ordinalstosuperscriptformatter from recommended biblatex save actions fixes #2596the latextounicode is conflicting with the ordinalstosuperscriptformatter but both are recommended for the same fields for biblatex this pr removes the latter since biblatex is usually used together with utf-8 and unicode conversion should be sufficient i see that this is an issue the initial idea is as follows:1 no bibentry should contain latex encoded umlauts2 each bibentry should use superscripts whereever possiblewhy is this not possible any more? why cant i have properly formatted bibentries with jabref any more? || thats really weird i never had problems with that setting || yeah i worked with that for ages 🌞  || is this maybe due to the new lib? || yes i would expect that this is due to the new lib i assume that it leads to the following:1 ordinals formatter converts `2nd` to `2\textsuperscript{nd}`2 latex formatter converts `2\textsuperscript{nd}` to `2ⁿᵈ`3 ordinals formatter interprets `2ⁿᵈ` as `2nd` and converts it to `2\textsuperscript{nd}`4 and so oni might be wrong though i did not debug this @siedlerchr @koppor: do you have problems with it now? what would you recommend instead? || when using the defaults in the ""cleanup entries"" dialog everything works fine![grafik](https://cloudgithubusercontentcom/assets/1366654/23586529/4a66f6e0-0197-11e7-965b-b0b0889e2c72png)maybe it is possible to have different defaults for save actions and for cleanup? i really need that functionality || @koppor the problem are the defaults for biblatex not for bibtex which are depicted in your screenshot abovean alternative solution and maybe even a better one might be to have the ordinals formatter correctly recognize 2ⁿᵈ as ordinals so that it does not try to replace that should be doable but right now i cannot make any promises time-wise so if anybody wants to take this over be my guest || i am not sure whether all unicode fonts support 2ⁿᵈ therefore i really like the idea to have the ordinals formatter recognize that || i second jörgs and tobias opinion || i really like the ordinals-to-suprscript formatter as it provides great formatted bibliographiespeople write ""2nd conference on something"" which should appear as ""2ⁿᵈ conference on something"" in the proceedings if i understand the fix correctly biblatex papers wont have the superscript (more or less) automatically from now onsince most publishers use bibtex the solution for me is to have an unclean personal biblatex file and always to the bibtex conversion when working on a paper the superscript will be injected when copying the entry to the paper by  a [cleanup](http://helpjabreforg/en/cleanupentries)refs https://githubcom/jabref/jabref/issues/160 || "
294,2589,2610,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix title-related key patterns in bibtexkeypatternutil <!-- describe the changes you have made here: what why  -->related to [#2604](https://githubcom/jabref/jabref/issues/2604) and [#2589](https://githubcom/jabref/jabref/issues/2589)in the class bibtexkeypatternutil ive added cases for [title] and [camel] to try and make them conform to the [documentation](http://helpjabreforg/en/bibtexkeypatterns)@siedlerchr was also working on this issue [here](https://githubcom/jabref/jabref/pull/2597) i found out that  `caseformatlower_camelto(caseformatupper_camel entrygetfield(fieldnametitle)orelse("""")replaceall(""\\s+"" """"))`didnt work because to be able to transform the title into upper_camel this way the title has to be in  lower_camel case initially which is often not the caseive added some test cases and changed a few others to conform to the documentation i still need to take a look at the failing tests- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? codewise looks good! 👍  thank you very much for your contribution would you please check the failing tets? (just click details on the red-marked travis build and you are able to see the log) from what i saw there is jut another unit test which tests key generation which has to be adapted!  || thanks! ill try to fix it tomorrow 👍  || @siedlerchr ive taken a look at the failing tests and after making a small change to the code and to some tests its now workingsome tests failed because most of the formatter classes only work if the input is a non concatenated string || from my point of view it looks good  however another dev should take a look too if you could just add a changelog entry it would be nice otherwise we can create it on merge  || i wonder whether it would be possible to add test cases to makelabelwithdatabasetestjava with all patterns listed at http://helpjabreforg/en/bibtexkeypatternsi saw that you also added `[camel]` and added a test for that in bibtexkeypatternutiltestjava to test the ""user experience"" i would like to ask to add some tests for that in makelabelwithdatabaseteststrangely `camel""equals(val)` is not test covered even though it should?!![grabbed_20170305-212351](https://cloudgithubusercontentcom/assets/1366654/23591026/44dc023a-01ea-11e7-8f43-d82290a09587png)https://codecovio/gh/jabref/jabref/src/ee7445652023f95e7c623c75c93058b9f2f4adf9/src/main/java/org/jabref/logic/bibtexkeypattern/bibtexkeypatternutiljavaif it is too much effort we can just go ahead and merge! || i have added a test for the [camel] case to makelabelwithdatabasetestjavahope the `camel""equals(val)` is covered now :)are there any additional test cases i should add?edit: about checking all the patterns listed at http://helpjabreforg/en/bibtexkeypatterns i can work on that but im pretty busy the next couple of daysso id rather have this merged now and work on adding the additional test cases later || yeah its covered: https://codecovio/gh/jabref/jabref/src/6aa925b7ec6fc2e1deb497a898e076bc747630da/src/main/java/org/jabref/logic/bibtexkeypattern/bibtexkeypatternutiljavaill go ahead with the merge and look forward to other tests / general improvements we have a huge list of smaller tasks at https://githubcom/koppor/jabref/issuesthank you for the good work! || we just discovered that our documentation was wrong and that `camel` should be a modifier: `title:camel`it should work with `title:capitalize`see https://githubcom/koppor/jabref/issues/237 || hmm ok ive responded in the issue since it is not entirely clear to me what has to happen || "
295,2604,2610,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix title-related key patterns in bibtexkeypatternutil <!-- describe the changes you have made here: what why  -->related to [#2604](https://githubcom/jabref/jabref/issues/2604) and [#2589](https://githubcom/jabref/jabref/issues/2589)in the class bibtexkeypatternutil ive added cases for [title] and [camel] to try and make them conform to the [documentation](http://helpjabreforg/en/bibtexkeypatterns)@siedlerchr was also working on this issue [here](https://githubcom/jabref/jabref/pull/2597) i found out that  `caseformatlower_camelto(caseformatupper_camel entrygetfield(fieldnametitle)orelse("""")replaceall(""\\s+"" """"))`didnt work because to be able to transform the title into upper_camel this way the title has to be in  lower_camel case initially which is often not the caseive added some test cases and changed a few others to conform to the documentation i still need to take a look at the failing tests- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? codewise looks good! 👍  thank you very much for your contribution would you please check the failing tets? (just click details on the red-marked travis build and you are able to see the log) from what i saw there is jut another unit test which tests key generation which has to be adapted!  || thanks! ill try to fix it tomorrow 👍  || @siedlerchr ive taken a look at the failing tests and after making a small change to the code and to some tests its now workingsome tests failed because most of the formatter classes only work if the input is a non concatenated string || from my point of view it looks good  however another dev should take a look too if you could just add a changelog entry it would be nice otherwise we can create it on merge  || i wonder whether it would be possible to add test cases to makelabelwithdatabasetestjava with all patterns listed at http://helpjabreforg/en/bibtexkeypatternsi saw that you also added `[camel]` and added a test for that in bibtexkeypatternutiltestjava to test the ""user experience"" i would like to ask to add some tests for that in makelabelwithdatabaseteststrangely `camel""equals(val)` is not test covered even though it should?!![grabbed_20170305-212351](https://cloudgithubusercontentcom/assets/1366654/23591026/44dc023a-01ea-11e7-8f43-d82290a09587png)https://codecovio/gh/jabref/jabref/src/ee7445652023f95e7c623c75c93058b9f2f4adf9/src/main/java/org/jabref/logic/bibtexkeypattern/bibtexkeypatternutiljavaif it is too much effort we can just go ahead and merge! || i have added a test for the [camel] case to makelabelwithdatabasetestjavahope the `camel""equals(val)` is covered now :)are there any additional test cases i should add?edit: about checking all the patterns listed at http://helpjabreforg/en/bibtexkeypatterns i can work on that but im pretty busy the next couple of daysso id rather have this merged now and work on adding the additional test cases later || yeah its covered: https://codecovio/gh/jabref/jabref/src/6aa925b7ec6fc2e1deb497a898e076bc747630da/src/main/java/org/jabref/logic/bibtexkeypattern/bibtexkeypatternutiljavaill go ahead with the merge and look forward to other tests / general improvements we have a huge list of smaller tasks at https://githubcom/koppor/jabref/issuesthank you for the good work! || we just discovered that our documentation was wrong and that `camel` should be a modifier: `title:camel`it should work with `title:capitalize`see https://githubcom/koppor/jabref/issues/237 || hmm ok ive responded in the issue since it is not entirely clear to me what has to happen || "
296,2600,2611,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,fix exception when parsing groups which contain a top level group fixes the import of #2600 the problem occurred when after the definition of a subgroup of level >0 a group definition with level 0 followed```2 explicitgroup:15\0\0 explicitgroup:16\0\2 explicitgroup:17\0\```<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref~~- [ ] check documentation status (issue created for outdated help page at [helpjabreforg]~~(https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~ failing test was google scholar ||
297,2501,2614,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,cleanup window has a scrollbar now fix for issue #2501- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? it should be fixed now || thanks again for your contribution!ill merge this in as the failing google scholar tests are not related to your changes ||
298,261,2618,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fixed wrong logger import fixes the first part of #2617  
299,2613,2623,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix2613 provided a macos specific routine for opening tex editors to import citations to fix #2613the solution has been tested with texstudio and texmaker- [x ] change in changelogmd described- [x ] manually tested changed features in running jabref looks good to me as a small fix in general i wondered if it isnt useful to integrate the pushtoapplication somewhere in the desktopos classes i mean there are already methods for opening a file/with an application for each os || lgtm 👍 would also love to see more os-specific stuff integrated in the desktop classes ||
300,2572,2625,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,change dialog of download fulltext to save dialog fix for #2572 when running get fulltext the dialog is now a save dialog which enables to select a different folder or even a different filename the initial filename which jabref assigns is now also visible in the file dialog<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described~- [ ] tests created for changes~~- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref~- [ ] check documentation status (issue created for outdated help page at [helpjabreforg]~(https://githubcom/jabref/helpjabreforg/issues)?)~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~![savefile](https://cloudgithubusercontentcom/assets/320228/23722891/60519cd2-0447-11e7-8628-ed9d53c99326png)![grafik](https://cloudgithubusercontentcom/assets/320228/23722873/530ed71a-0447-11e7-8e1a-be3bd5273eaapng) lgtm 👍  ||
301,1173,2634,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"finally write the new group properties to the bib file: icon with color description expanded status and automatic groups <!-- describe the changes you have made here: what why  -->serialize and parse:- icon (with customizable color) that is shown in the groups panel (implements a [feature request in the forum](http://discoursejabreforg/t/assign-colors-to-groups/321))- description text that is shown on mouse hover (implements old feature requests [489](https://sourceforgenet/p/jabref/feature-requests/489/) and [818](https://sourceforgenet/p/jabref/feature-requests/818/))- ""automatic groups"" that automatically create subgroups based on a certain criteria (eg a subgroup for every author or keyword) implements [91](https://sourceforgenet/p/jabref/feature-requests/91/) [398](https://sourceforgenet/p/jabref/feature-requests/398/) and [#1173](https://githubcom/jabref/jabref/issues/1173)- expansion status [#1428](https://githubcom/jabref/jabref/issues/1428)while implementing these changes i had to introduce a new ""staticgroup"" label in the bib file that replaces the old ""explicitgroup"" the problem was that the old group with legacy bib references````explicitgroup:staticgroup\0\1137631\1233448\1314293\````otherwise couldnt be distinguished from a new explicit group with icon and color: ````staticgroup:staticgroup\0\expansion\icon\color\description\````i think we really should switch to https://githubcom/koppor/jabref/issues/232 at some point------ [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? codewise lgtm: just one thing i dont get from your description: the old groups can be imported right? what happens when you modify one of these old (sub) groups? does it get changed to a new group then?please take a look at the codacy/checkstyle failures  || yes the old line ""explicitgroup"" in the file will automatically replaced by ""staticgroup"" when you save the bib file besides the minor differences outlined above they are treated completely the same (and this change is only related to parsing/serialization in particular there is no new ""staticgroup"" class)fixed the imports || "
302,1428,2634,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"finally write the new group properties to the bib file: icon with color description expanded status and automatic groups <!-- describe the changes you have made here: what why  -->serialize and parse:- icon (with customizable color) that is shown in the groups panel (implements a [feature request in the forum](http://discoursejabreforg/t/assign-colors-to-groups/321))- description text that is shown on mouse hover (implements old feature requests [489](https://sourceforgenet/p/jabref/feature-requests/489/) and [818](https://sourceforgenet/p/jabref/feature-requests/818/))- ""automatic groups"" that automatically create subgroups based on a certain criteria (eg a subgroup for every author or keyword) implements [91](https://sourceforgenet/p/jabref/feature-requests/91/) [398](https://sourceforgenet/p/jabref/feature-requests/398/) and [#1173](https://githubcom/jabref/jabref/issues/1173)- expansion status [#1428](https://githubcom/jabref/jabref/issues/1428)while implementing these changes i had to introduce a new ""staticgroup"" label in the bib file that replaces the old ""explicitgroup"" the problem was that the old group with legacy bib references````explicitgroup:staticgroup\0\1137631\1233448\1314293\````otherwise couldnt be distinguished from a new explicit group with icon and color: ````staticgroup:staticgroup\0\expansion\icon\color\description\````i think we really should switch to https://githubcom/koppor/jabref/issues/232 at some point------ [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? codewise lgtm: just one thing i dont get from your description: the old groups can be imported right? what happens when you modify one of these old (sub) groups? does it get changed to a new group then?please take a look at the codacy/checkstyle failures  || yes the old line ""explicitgroup"" in the file will automatically replaced by ""staticgroup"" when you save the bib file besides the minor differences outlined above they are treated completely the same (and this change is only related to parsing/serialization in particular there is no new ""staticgroup"" class)fixed the imports || "
303,210,2639,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,add option to copy title of bibentries implements issue [#210](https://githubcom/koppor/jabref/issues/210) from [@koppor](https://githubcom/koppor)adds an option to copy the title of a bibtex entry when right clicking one (or more) to the clipboardalso adds the option to copy the title using `edit -> copy title`![edit_menu](https://cloudgithubusercontentcom/assets/5990999/23835666/c444515e-076b-11e7-919f-fe0ee3b74333png)![right_click_menu](https://cloudgithubusercontentcom/assets/5990999/23835669/cc9c01a8-076b-11e7-8bbd-68bf62335c8epng)- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? so as we all agreed on this and the code is looking good i will merge this in nowthank you very much for your contribution! ||
304,2484,2644,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"refactor oo connection also fixes #2484trying to simplify oo detection logic- removed cancel option in auto detection logic- removed some of the preferences variables for oo directories and try to keep only the root directory and search for the necessary files inside this directory- added two file finder helper methods inside fileutil- lots of variable method and class renamings- used javanio were possible- some graphical ui improvementstested on- [x] windows with libreoffice 5 and multiple installations- [ ] windows open office 4 (will only work with 32-bit jre!)```javalangunsatisfiedlinkerror: c:\program files (x86)\openoffice 4\program\jpipedll: cant load ia 32-bit dll on a amd 64-bit platform```- [x] linux libreoffice 5`unoiljar` is missing however it would even work without that jar not sure whats the problem here and why it is gone two other jars `java_uno` and `unoloader`are there looks like we can maybe include the uno libraries from gradle (https://mvnrepositorycom/artifact/orgopenoffice) rather than loading them from the classpath of the installation?! maybe a license problem @koppor ?for ubuntu you need to install the additional package:http://packagesubuntucom/de/xenial/libreoffice-java-common- [x] linux open office- [x] osx openoffice- [x] osx libreoffice @jabref/developers @chochreiner i think this has improved quite a bit now need your help on a few question (especially libreoffice 5 linux jar poblem) and your testing here! || i can test windows and ubuntu with libre office regarding the inclusion of jars arent the jars version depended on the installed version of open office/libre office? || open office works fine on macoslibreoffice cannot be detected automatically || @chochreiner great thanks! is libreoffice missing the `unoiljar` inside the `program/classes` folder probably?the logic basically is:1 look inside `/applications` for folder names that contain (case insensitive) `libreoffice | openoffice` folder names2 check for `sofficebin` executable mostly inside `program/`3 check for the uno jars `""unoiljar"" ""jurtjar"" ""juhjar"" ""ridljar""` mostly inside `/prgram/classes/` || libreoffice seems to have a new internal package structure compared to oothey have migrated to dylibs || hm im not sure what this means for our current logic as far as it is implemented right now every connection will fail if any of those libs are missing still it was perfectly fine for a few tests even without the `unoiljar` || libreoffice provides this libs: https://mvnrepositorycom/artifact/orglibreofficeaccording to his project https://githubcom/libreoffice/loeclipse the libs can be found:> search for the libreoffice jars unoiljar juhjar jurtjar ridljar unoloaderjar you find them here:> >     macos: /applications/libreofficeapp/contents/resources/java>     ubuntu: /usr/lib/libreoffice/program/classes>     windows: c:\program files\libreoffice 5\program\classes\>  || @siedlerchr i installed lo 5 on windows and ubuntu and the `unoiljar` is missing the rest is there || @stefan-kolb  under windows 10 lo 53 64bit  the unoiljar is there in `c:\program files\libreoffice 5\program\classes` for ubuntu you need to install the additional package:http://packagesubuntucom/de/xenial/libreoffice-java-common || @siedlerchr hm thats bad for us as the user needs to install that manuallyprobably there is an equal problem with osx || i can confirm that all jars are availalable in: /applications/libreofficeapp/contents/resources/java  || we then should add this at least for linux to the installation instructions that the -common-java package is required || @chochreiner hm ok then the automatic detection should work || @siedlerchr @tobiasdiez i have added a new directory chooser in the fx dialog service can you please take a look? one thing that i noticed is that all of these dialogs have no parent (ie not model) therefore hide in the background if the user clicks somewhere else dunno if we want them to behave like this || the openoffice provides both sofficebin and soffice libreoffice only provides soffice --> with this fix the automatic detection works for me || @chochreiner ah nice thanks so much christoph! || @jabref/developers otherwise im done with this thanks everybody for your help and input 😄 👍 || i also added our finds to the documentation under __known issues__ || "
305,2455,2645,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix #2455: add crossref as fetcher for everything (id- entry- search-based) <!-- describe the changes you have made here: what why  -->amounted to an almost-rewrite of the existing crossref fetcher then adding the new functionality was done in 5 lines 😄  besides this change i have done a few refactorings related to fetchers and the doi:more fetcher things in logic (entryfetchers -> webfetchers) and moved the identifier classes from logic to model(this pr also contains commits from my previous prsince well i will never learn it)- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? also the diff is hardly reviewable tho this is not your fault ||
306,2483,2659,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,oo formatting openoffice text formatting now handles nested tags properly [#2483](https://githubcom/jabref/jabref/issues/#2483)formerly it was a set so nested tags were not kept and consequently the first closing tag removes (both) opening tags```formerly: <i>some<i>test</i>text</i> ->[i] [i] []now: -> [i] [ii] [i] []```  
307,2660,2661,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add possibility to clear the log at runtime resolves #2660@tobiasdiez the dialog is not modal but does not update itself when new events arrive ie needs to be closed and opened again to see new events is this expected? can we fix this? yeah @stefan-kolb is now an active javafx developer 😼  code looks good so ill merge this actually new logs should be displayed automatically in the console (this is why it is modal) - thus this is probably a bug (can you please open a new issue i dont have time right now to further investigate this thanks) ||
308,2599,2666,1,0,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,0,"add sorting of all groups and subgroups recursively implements some features from #2599recursively sort all groups or selected groups replaced screenshot![grafik](https://cloudgithubusercontentcom/assets/320228/24755268/c2671b38-1ad9-11e7-9d39-69a740567084png)sometimes the sorting is not always directly correct visible after sorting this is somehow an update problem of the gui i think when you switch db back and forth its correctly there<!-- describe the changes you have made here: what why  -->~~- [ ] change in changelogmd described~~~~- [ ] tests created for changes~~- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref~~- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [x] if you changed the localization: did you run `gradle localizationupdate`? yeah i will change that however the fxml tag are not in the formatting yeti will try to change that as wellam 19032017 12:07 vorm schrieb ""tobias diez"" <notifications@githubcom>:*@tobiasdiez* approved this pull requestthe code looks good i would however argue that ""sort subgroups"" shouldsuffice - if you want to sort the whole tree then just right click theroot and maybe add ""recursively"" to the menu text to make it a bit clearerby the way we should discuss at some point which other menu entries makesense and which we should remove instead of reimplementing them (eg idont see a point in the move actions)------------------------------in src/main/java/org/jabref/gui/groups/grouptreecontrollerjava<https://githubcom/jabref/jabref/pull/2666#discussion_r106793485>:> @@ -4314 +4321 @@     private static final log logger logfactorygetlog(grouptreecontrollerclass)-    @fxml private treetableview<groupnodeviewmodel> grouptree-    @fxml private treetablecolumn<groupnodeviewmodelgroupnodeviewmodel> maincolumn-    @fxml private treetablecolumn<groupnodeviewmodelgroupnodeviewmodel> numbercolumn-    @fxml private treetablecolumn<groupnodeviewmodelgroupnodeviewmodel> disclosurenodecolumn-    @fxml private customtextfield searchfield+    @fxml+    private treetableview<groupnodeviewmodel> grouptreeplease leave the formatting as it is right now it is kind of ajavafx-thing that normally the @fxml <https://githubcom/fxml> tag is onthe same line (and i like it that way because otherwise the private fieldsdeclaration takes more space)—you are receiving this because you authored the threadreply to this email directly view it on github<https://githubcom/jabref/jabref/pull/2666#pullrequestreview-27736134>or mutethe thread<https://githubcom/notifications/unsubscribe-auth/aati5ntwfj6ef70b1vsgexcg-s3tnyebks5rngovgajpzm4mhd6n> || @tobiasdiez  changed localization but i dunno how to display the menu entry only when the root nod eis selected?i read about adding a change listener and then setting the contextmenu however i am not sure how that plays together with the binding stuff || in `createcontextmenuforgroup` you can use `isroot` of the `groupnodeviewmodel group` to determine if the right-clicked group is the root or notand then create the menu depending on this valuehowever i would completely leave of the `sort subgroups` option || i thin we should stuck with simply having the sort groups recursively then we could omit the explicit chek for root node || "
309,2667,2681,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix #2680 and fix #2667: swing errors are catched properly and without freezing hopefully fixes that the error console is not updated properly #2667 as well as that swing errors lead to frezzing #2680 at least for me it works now without problems @stefan-kolb @lynyus can you please also check itfor the error console i took the suggestion https://githubcom/jabref/jabref/issues/2667#issuecomment-288742546 by @matthiasgeiger the freezing after a swing message occurred since ̀`loggerwarn(""no localized message exception message defined falling back to getmessage()"")`lead to recursive calls (actually log4j has some logic to prevent deadlocks but these dont take effect since the original message is thrown in the swing thread while the above ""no localized messsage"" is posted in the javafx thread) i simply changed it to log level ""debug"" which effectively hides it in most cases as a positive side effect the scroll issue mentioned in https://githubcom/jabref/jabref/issues/2667#issuecomment-288714639 is also fixed<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? will look at it- [x] console update seems to be fixed #2667 - [x] unavailable fetcher results in normal console log again without ui freezes || @matthiasgeiger you are right my changes are more a workaround than a proper solution however since the deadlock only appears if an exception is logged in the swing thread and afterwards the guiappender also logs something i decided not to invest more time probably a application-wide lock for the appender is needed ||"
310,2680,2681,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix #2680 and fix #2667: swing errors are catched properly and without freezing hopefully fixes that the error console is not updated properly #2667 as well as that swing errors lead to frezzing #2680 at least for me it works now without problems @stefan-kolb @lynyus can you please also check itfor the error console i took the suggestion https://githubcom/jabref/jabref/issues/2667#issuecomment-288742546 by @matthiasgeiger the freezing after a swing message occurred since ̀`loggerwarn(""no localized message exception message defined falling back to getmessage()"")`lead to recursive calls (actually log4j has some logic to prevent deadlocks but these dont take effect since the original message is thrown in the swing thread while the above ""no localized messsage"" is posted in the javafx thread) i simply changed it to log level ""debug"" which effectively hides it in most cases as a positive side effect the scroll issue mentioned in https://githubcom/jabref/jabref/issues/2667#issuecomment-288714639 is also fixed<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? will look at it- [x] console update seems to be fixed #2667 - [x] unavailable fetcher results in normal console log again without ui freezes || @matthiasgeiger you are right my changes are more a workaround than a proper solution however since the deadlock only appears if an exception is logged in the swing thread and afterwards the guiappender also logs something i decided not to invest more time probably a application-wide lock for the appender is needed ||"
311,2676,2684,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fileannotationtab now only shows the filename not the full path fixes #2676 okay lgtm ||
312,1497,2688,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,export single corporate author to ms office xml if the author in jabref is enclosed in curly braces eg `{jabref developers} ` it is now recognized as corporate author and exported in the corresponding fieldthis should also work for editor and other ms office author fields refs #1497 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [] if you changed the localization: did you run `gradle localizationupdate`?~~ @tobiasdiez  i now used the author/authorlist parsing classes i created a new class for msbib which is essentially a wrapper class around the author class but handles a few more things only relevant to ms bib checking for corporate authors is not possible inside the author parser as there are surrounding braces already stripped on calling  || good job! code looks ok now and only fetcher tests fail -> merge ||
313,628,2703,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,fix #628: implement hierarchical keywords <!-- describe the changes you have made here: what why  -->the automatic keywords group now supports hierarchical keywords the changes mainly concentrate on the keywords classso this may have some unwanted side effects in other parts (but i didnt noticed anything unusual in my tests)note: bib files containing an automatic keyword from prior 40 tests can no longer be opened and the lines containing `automatickeywordgroup` have to be deleted- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? > note: bib files containing an automatic keyword from prior 40 tests can no longer be opened and the lines containing automatickeywordgroup have to be deletedisnt there a possibility to migrate this? from a user point of view this is not really acceptable || @matthiasgeiger i formulated it a bit awkwardly automatic keywords groups are a new feature in 40 so this only hits users of the current development version - not users of 382 ||
314,2664,2711,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,avoid conversion of single underscores fixes #2664single underscores that are not followed by `{` are not converted to unicode during the latex to unicode conversion this is not actually correct according to the rules of latex but seems to be an important exception required by our usersthis is achieved by the following: 1 replace all single underscores with `jabrefunderscore` 2 do the unicode conversion 3 replace `jabrefunderscore` with an underscoretodo: we should find a better magic word instead of `jabrefunderscore` because every character will be processed by latex2unicode and that costs performance however it should still be long and unique enough so that we avoid accidental conversions suggestions anyone?- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref what about the unicode replacement char?http://wwwfileformatinfo/info/unicode/char/fffd/indexhtm || excellent idea @siedlerchr i have implemented this using the replacement char (and it still works) || as discussed in the devcall: this can be merged aber fixing checkstyle ||
315,2617,2719,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"extend architecture tests to javafx and javafxcollections extends the architecture tests to also cover `javafx` and `javafxcollections` as discussed in #2617it seems that it is high time for this since javafx classes are already being misused as this pr uncovers thus this currently fails the build the misuses are: - orgjabreflogicexportergroupserializer/groupserializertest/groupsparsertest uses javafxscenepaintcolor - orgjabreflogicjournalsabbreviation uses javafxbeanspropertysimplestringproperty - test/orgjabreflogicl10nlocalizationparser uses fxmlloader/platformimplalthough we might think about making exceptions for the beans and tests i dont see why the color class should be directly accessed in the gui- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thanks for your reply: - looking at the color class it is just a representation of the rgb code so not too problematic i am still not 100% sure assuming we would switch to a new gui technology would we be using javafxcolor objects or would we have to refactor the model classes to only use the rgb code string? i would really like to have a third opinion from someone from @jabref/developers on this so that we can sort of say that we have a majority consensus - i dont think very highly of our custom event bus (and have always said so) so bean properties would be acceptable to me especially considering the fact that we allow observable collections which are essentially just ""bean data structures"" - it might make sense to exclude the whole test sources from the architecture tests imho they are not really relevant for static architecture checks i will have a look at that || i have been thinking a little more about `color` isnt this the very same thing as we have in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/iconthemejava ?there we also have all the color codes but in the gui package and not in model so what is our reasoning to allow the javafx version of color in model but not the awt version? also had we used the awt version in model wouldnt that have meant that we would have had to rewrite all such usages for the javafx migration? if yes isnt that a good argument for not allowing the javafx version of `color` in model?and interestingly i found this: https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/logic/groups/defaultgroupsfactoryjava#l13 this is a plain violation of our architecture rules @tobiasdiez did you do the import like that on purpose so that the tests do not find it or was that an accident? || i think the issue with the `color` class is that previously there was no need to have anything color-related in the model as no class in model relied upon it - thus there was never situation where the usage of `awtcolor` in model was on the table from an architectural standpoint the cleanest solution is probably to implement our own version of `color` in model and use this the gui contains then a converter from this `color` to whatever color is used in the corresponding ui framework however this is additional work and apart from making a migration to a new gui easier i dont see any advantages @simonharrer as i have our discussion about various architectural points in good memory i would highly value your opinion on this matter (if you find the time to look into it)i cant remember that i was creative enough to use the full path to hide the dependency from our architecture tests but good to know that this works i will now definitely (ab)use it and make my life way easier 😄  of course i will fix it (tomorrow) || @tobiasdiez the fix will go into this pr? || * color: +1 to add it as exception because it is ""just"" a data model i would not implement a separate color class even though this would be the cleanest solution (effort saving)* beans: +1 to allow them* tests: yes please exclude them || side comment: [macker](https://innignet/macker/indexhtml) seems to be a tool which also implements architecture checks example: https://innignet/macker/example/layering/src/mackerxml ok it is outdated but i thought it is nice to know 😇  || i still think that making an exception for `color` is a bad decision that will come back to bite us in the course of moving to javafx we are currently losing a lot of independence in our model packages - something that we invested a lot of effort when trying to get rid of the swing dependenciesbut if this is the consensus in the team ill bow to that i created exceptions for the remaining fx classes and this pr should be ready to go when the build succeeds on travis || "
316,2722,2727,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fixed freeze on mac os x when creating/editing groups fixed that jabref for mac os x was freezing / not responding when using the ""add subgroup"" or ""edit group"" feature also fixed some menu items which had the wrong functionality refs #2722 - [x] manually tested changed features in running jabref  "
317,2701,2732,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix 2701 too may files found <!-- describe the changes you have made here: what why  -->i would like to offer my fix for the issue  2701: jabref would find too many files when they are search with the [year]_[auth]* pattern the reason seems to be a null database passed to the bibtexkeypatternutilmakelabel(bibentry string character bibdatabase) method and a null pointer exception is triggered as a result the [auth] part of the pattern was erased and ignored with the suggested fix jabref uses the [auth] part of the pattern and finds just the files with the matching author as expected a relevant unit test was added no other tests were broken- [ ] change in changelogmd described -- no functionality changes restored the previous state- [x ] tests created for changes -- 1 unit test added- [ ] screenshots added (for bigger ui changes) -- no gui changes- [ ] manually tested changed features in running jabref -- none- [x ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) -- the issue #2701 still open- [ ] if you changed the localization: did you run `gradle localizationupdate`? -- no localisation changes thank you very much for your contribution 👍  codewise it looks very good to me if the test passes and another dev gives his okay we can merge it || thanks for the contribution @sauliusg  great when users find an issue and even fix it themselves (> the reason seems to be a null database passed to the bibtexkeypatternutilmakelabel(bibentry string character bibdatabase) method and a null pointer exception is triggeredi will investigate this tomorrow because im not entirely sure if your fix solves the symptoms or we should dig a bit deeper and eliminate the main problem which could be that bloody null database || dear  siedlerchr dear lynyusthank you for the instant reply!i have got feedback from codacy and fixed: removed an unused variable from the new unit test also i added another second unit test to cover the second if statement added by me sorry if it breaks the ""changes approved"" status> i will investigate this tomorrow because im not entirely sure if your fix solves the symptoms or we > should dig a bit deeper and eliminate the main problem which could be that bloody null databaseplease have a look it seems to me that the null can be traced to the explicit null argument passed to it from the private static list<file> findfile(bibentry entry file directory string file string extensionregexp character keyworddelimiter) method (line 250 string filenametolookfor  expandbrackets(filepart entry **null** keyworddelimiter)replaceall(ext_marker extensionregexp))regardssaulius || @lynyus your suggestions sounds reasonable we should try to not pass null as an argument moreover the label generation code probably needs a complete refactoring (especially get rid of the huge amount of static methods) but this will be probably a bigger project while i would welcome prs from you or @sauliusg in this direction i think the current pr is an acceptable workaround within the boundaries of the current code infrastructure || okay lgtm! i merge it in! thank you very much for your contribution! 👍  feel free to take a look at other issues  || thanks! || "
318,2095,2747,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"replace ""datenbank"" by ""bibliothek"" this addresses #2095 for german  "
319,2739,2751,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,sauliusg fix 2700 null pointer exception on get fulltext followup from @sauliusg  pr  #2744fix for #2739  
320,2744,2751,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,sauliusg fix 2700 null pointer exception on get fulltext followup from @sauliusg  pr  #2744fix for #2739  
321,2766,2774,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fixes #2766 if file is not found annotations might be null still the real reason is a missing file  
322,2777,2778,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,fixes handling of unknown pdannotation types refs #2777 please change method name resolve the conflict and then merge ||
323,2806,2816,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix #2806: date editor also accepts incomplete dates <!-- describe the changes you have made here: what why  -->should fix https://githubcom/jabref/jabref/issues/2806 and https://githubcom/jabref/jabref/pull/2781#issuecomment-296427732- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
324,2825,2826,1,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix invalid folder when passed file/path is empty string return the correct working dirfix for #2825 <!-- describe the changes you have made here: what why  -->internal/400 beta change only ~~- [ ] change in changelogmd described~~~~- [ ] tests created for changes~~~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref~~- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~ i found the problem it was not due to preferences but due to an empty filename which would create a folder outside the junit tmp dir and would stay persistent  ||
325,2859,2862,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix export and import of ms office day/year/month acessed fields fix possible npe in date parsingfixes #2859 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~ change the code to optionals merge it in now ||
326,2785,2864,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,"implement #2785: resort groups using drag & drop <!-- describe the changes you have made here: what why  -->with this pr it is now possible to resort groups using drag and dropwhen the user drags a group over the center of another one then the target group is highlighted as follows![image](https://cloudgithubusercontentcom/assets/5037600/26400032/79f291e0-407f-11e7-8c5f-a4036e950f20png)and the source group is added as a child in contrast when the user hovers over the bottom or top part of a group then a line is added that indicates that the source group is added at this point (ie between test 1 and test 2 in this picture)![image](https://cloudgithubusercontentcom/assets/5037600/26400066/93205328-407f-11e7-9714-7f87f0158565png)there are still some problems with the selection status after a drag and drop- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thanks for the positive feedbackill fix the ""not mark as dirty"" issue as part of #2787 as in my opinion the cleanest solution for this is a global listener (instead of manually calling `markaschanged` after every action) || "
327,2843,2875,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fix entry editor <!-- describe the changes you have made here: what why  -->fixes #2843 and #2851this was a tricky bug: javafx creates empty dummy cells at the end of a list view for some reason the list view for the linked files had an initial size of `17976931348623157e308` and well creating that many dummy cells takes a while (probably longer than the universe took to create humans) and eventually lead to a freeze of the javafx threadthe fix was easy just add `maxheight""100""` and be happy (finally after trying to debug the problem for ages)- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  "
328,2851,2875,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fix entry editor <!-- describe the changes you have made here: what why  -->fixes #2843 and #2851this was a tricky bug: javafx creates empty dummy cells at the end of a list view for some reason the list view for the linked files had an initial size of `17976931348623157e308` and well creating that many dummy cells takes a while (probably longer than the universe took to create humans) and eventually lead to a freeze of the javafx threadthe fix was easy just add `maxheight""100""` and be happy (finally after trying to debug the problem for ages)- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  "
329,2881,2882,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix loading of preferencesservice the else part tried to instantiate the interface otherwisefix for #2881  <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
330,2890,2891,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,adjust tests: ads fetcher returns url dblp no longer works with negative operators #2890internal change only some adjusted tests  
331,2917,2918,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,fix npe cases in filedialog configuration add test for filedialogconfiguration builderfixes #2917 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~~~- [ ] manually tested changed features in running jabref~~- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
332,2854,2921,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #2854: readd context menu to linked files editor <!-- describe the changes you have made here: what why  -->this was the last feature missing from the old file list editor the old class could thus be deleted- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? codewise looks good but you do have an architectural violatin your model class depends on gui:` import orgjabrefguiexternalfiletypeexternalfiletype `and i tested it locally apart fromt he keybindings problem it works but i found one bugi can not delete a file entry which has no underlying file just add this line in your bibdatabase and try to delete the entry then:```file {:kitamura2009 - a supporting tool for requirements elicitation using a domain ontologypdf:pdf}```it gives you an error message file not found ||
333,2901,2923,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"fix key combination related exceptions use keycombination match methodmanual tests sucessful some unit tests fail for unknown reasons fixes #2901 <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? hm thats strange  i will go deeper in thisedit// i tested in on windows 10 and i could change the key combination and after a restart of jabref the new keybindings did work  || i did some debuging and it turns out that its the fault of `keybindingrepository:getkeycombination`jabref constructs the `keycombination` via the `valuesof` method eg as `keycombinationvalueof(""ctrl c"")` however the correct format for the `valueof` method is with a plus sign: `keycombinationvalueof(""ctrl+c"")` in the first example the key combination has as character `ctrl c` and no modifiers active while in the second case we get the expected result that the character is `c` and the modifier `ctrl` is down || ah thanks for the debugging i will try to fix this || i fixed this stuff and added the modifiers and now all tests (including previouslly ignored) work  || "
334,2931,2935,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,open urls for recommneded articles in the browser added a generic hyperlinklistener which opens any hyperlink in a new browser windowby defeault javafx opens all urls in the same webview windowfix #2931 - [x] change in changelogmd described~~- [ ] tests created for changes~~~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
335,2855,2937,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"fix propagation of key events back to the jabref main frame related to the new entry editorwe need to consume the key events on the jfx panel to stop propagation back to the main framefix for #2855 and the other lkeybindings (ctrl + c ctr+x )<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? this makes the ""add new entry"" dialog working again: i can paste dois this is a necessary hotfix and therefore i merge before we got another review || "
336,2938,2939,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"ask before deleting associated files from disk in entry add new dialogfixes #2938 ![grafik](https://user-imagesgithubusercontentcom/320228/27508424-c8b15d34-58e4-11e7-8c89-ea97a9df8bdepng)<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? we can change the text always laster but i suggest we leave it for the moment to have the functionality || i just noticed that in the right click menu it is still `permanently delete the local file` which is kind of confusing as you later get the option to decide wheter to delete the file or just the link so to options:a) provide two context menus for ""unlink"" and ""delete local file"" but not the dialog you added in this pr orb) rename also the context menu entrycan you please have a look and provide a follow-up pr? thanks! || yes but the dialog is still necessary when you hit the del keyam 29062017 1:33 nachm schrieb ""tobias diez"" <notifications@githubcom>:> i just noticed that in the right click menu it is still permanently> delete the local file which is kind of confusing as you later get the> option to decide wheter to delete the file or just the link so to options:> a) provide two context menus for ""unlink"" and ""delete local file"" but not> the dialog you added in this pr or> b) rename also the context menu entry>> can you please have a look and provide a follow-up pr? thanks!>> —> you are receiving this because you modified the open/close state> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/2939#issuecomment-311940128> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/aati5g6rmqnuhqgh4xkmr8j02ufiz4pkks5si4ujgajpzm4oetka>> > || "
337,1323,2943,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add a shortcut to ""quality - look up full text documents"" this pr adds a shortcut key <kbd>alt</kbd> + <kbd>f7</kbd>  to the function ""quality""-""look up full text documents"" ive found that a issue was already raised in #1323 after finishing the code revision (hence i happened to use the modifier <kbd>alt</kbd> rather than <kbd>ctrl</kbd> :-) )- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? ive no idea why the build fails but since these changes should not be the reason for the failing test ill merge it now ||"
338,2949,2957,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix closing entry editor with esc rename escape to esc for javafxrenamed enum variables as key for the constant was amibiuousfirst part of #2949 internal change only from the new entry editoredit// you may need to reset the keybinding for close_entry_editor in the manage keybinding dialog as the old stored value from the prefs no longer works for javafx<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`?  
339,2968,2972,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,add remove link context menu entry in file editor <!-- describe the changes you have made here: what why  -->fix for #2968 ![image](https://user-imagesgithubusercontentcom/320228/27868522-3995973e-619d-11e7-8911-c2c85ba29109png)- [ ] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
340,2960,2991,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,check for different editions in the duplicate check fixes #2960 by checking for different editions before the actual duplicate checkif both bibentries have a edition field that mismatches it cannot be a duplicate- [x] change in changelogmd described- [x] tests created for changes  
341,2993,2995,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,less backups addresses #2993the frequent events are due to the bidirectional binding which transfers every change directly into the bibentry if we want fewer events the only solution will probably be to break the binding which would be very disappointing for the javafx implementation in my point of view the problem is not on the side of event creation after all every change should trigger an event and javafx triggers many changes imho this should be fixed in how we react to eventsi also noticed the exception but do not get a dialog this seems to happen because of the save operation invoked by the backupa solution might be to do less backups by: 1 doing backups only every x events and not for every event 2 ignoring fieldchangeevents in the backup 3 adding the size of the field change in the fieldchangeevent class so that you can ignore it if only 1 character changedthis pr combines options 1 and 3 ie: the backup manager ignores events that are very minor and only does a backup if enough of them have happened (currently set to five)what do you think?- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
342,2998,3002,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix #2998: improve auto completion <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
343,2970,3005,1,0,0,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"javafx replacement for file dialog fixes #2970 the open functionality has been removed -> directly possible in the entry editorcontextmenu on maintable ->attach file now opens a file chooser dialog and afterwards this dialog for editing eg adding a description![grafik](https://user-imagesgithubusercontentcom/320228/37621264-b4418358-2bbe-11e8-9925-6dbb77943ee7png)only resizable to max screen size: (on my 24"" with 1920x1200)![grafik](https://user-imagesgithubusercontentcom/320228/37621410-209c0f32-2bbf-11e8-8b65-92ed8c83b51apng)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? discussion @siedlerchr with @tobiasdiez required || dialog only for edit and not for adding linked files (for this: just create a new linked file instance with path to file and empty directory) || failing tests are only the l10n ones from the maintable branch || yeah i thought i could get rid of the old classes completely but that has to wait for a future pr as far as i remember its used in the import inspection window (lot of ugly code)  || @tobiasdiez  i tried to convert the editfiledialog to the new dialog structure from #3880  but i do still get an npe on loading the dialog:```caused by: javalangnullpointerexception	at orgjabrefguifilelistlinkedfileeditdialogviewinitialize(linkedfileeditdialogviewjava:55) ~[main/:?]``` || and what is null there? if line 54 runs without any problems then the setup seems to be fine and the fxml nodes are injected maybe the `description` field is not defined in the fxml? || @tobiasdiez  no it fails directly in the initalize the viewmodel which gets initialized in the ctor is nullwhen debugging it crashes directly after/when calling `viewloaderview(this)                  load()`btw i noticed the same problem also occurs with the copylinkedfilesdialogview (tools->copy linked files) || ok this makes sense since the `initialization` method is called during `viewloaderload` and at this point the view model is not yet created just move the `viewmodel  ` line to the beginning of the `initialization` method and it should work || works now  i just additionally  had to add a close/cancel button to the dialogpane for the copyfiles  because otherwise the dialog is not closeable: https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/dialoghtml || i fixed all things open and did the renamings  so  i merge this now ||"
344,2980,3007,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add preference migration for keybdingings fix for #2980 <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
345,2888,3019,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,update source tab when an entry is changed attempts to fix the remaining part of #2888 the source tab is now updated each time an entry is changed in the editorthere no part of a bibentry that represents the source tab per se to which we could bind therefore this pr adds a listener to the source tab it now listens to `entrychangedevents` and if the entry that it represents is changed then it updates its content- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
346,3020,3024,1,0,1,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,link missing docbookeditors formatter in layoutentry it seems that we overlooked the `createdocbookeditors` layout formatter in the formatter map in `layoutentry` reported in #3020 - [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
347,2853,3030,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix keybinding in entry editor in localized installation check keycode to avoid localization problemsfollow up from #2853 <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? alternative solution without using the deprecated function:```java    private optional<keycode> determinekeycodefromkeyevent(javaawteventkeyevent keyevent) {        // special treatment of localized keyevents        if (keyeventgetkeycode()  javaawteventkeyeventvk_delete) {            return optionalof(keycodedelete)        }                return arraysstream(keycodevalues())filter(k -> kgetname()equals(javaawteventkeyeventgetkeytext(keyeventgetkeycode())))findfirst()    }```but this only solves the problem for the ""delete"" key - so we still might have other yet unidentified problemsso we should decide which route to take -) || i would give a +1 for @siedlerchrs solution since we surely do not catch all possible keys and the maintable is our next target after the entry editor 😇 || "
348,3035,3048,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,fix ads fetcher fix for #3035 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? can we add a small test for this? || there are already tests present which failed before and now succeed || ah right 👍  ||
349,3034,3083,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix #3034: make font size in entry editor and group panel customizable <!-- describe the changes you have made here: what why  -->this fix for #3034 is inspired and based on https://githubcom/jabref/jabref/pull/3042 due to my limited git knowledge i was not able to directly hijack the other pr sorry @lenhard- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
350,3074,3092,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fetcher timestamp fixes #3074 ok i tried to create a own preference class not sure if ive done that correctly (as intended at the moment) should i also replace calls to the preferences inside the general tab? ||
351,1076,3094,1,0,1,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,enable join and replace of keywords this implements #1076![grafik](https://user-imagesgithubusercontentcom/1366654/29179368-7ed795ae-7df4-11e7-9976-6513470a4c0bpng)- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? there was someone in the issue who noticed a bug and wanted to work on this maybe he is interested in porting to javafx? || please have a look at the codacy issues after that we can merge || as @koppor  already approved these changes and im happy too i merge this in ||
352,3052,3095,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"fix for issue 3052 <!-- describe the changes you have made here: what why  -->this is an atempt to fix the problem with entry editor focus as described in #3052 in detail when `entryeditor` opens up it is not focused automatically the desired behavior is to focus the first `textfield` on any of the `entryeditor`s tabsthe way the fix is implemented: when `entryeditor` is opened the `jfxpanel` in which is the `tabpane` of the `entryeditor` is getting the focus the focus is given implicitly to a focustraversable node contained in the `jfxpanel` the selection of the node seems to be ""random"" (even though consistent for a given tree of nodes) as far as ive tested it consistently focuses the first `textfield` on any tab which is the desired behavior i make this pull requested as suggested in #3052 discussion by @siedlerchr i should mention that i ran `gradle check` which results in ""6 tests failed"" in my setup but this was also the result when i ran the test before making any change- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thanks for the pr! ||"
353,2663,3096,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,followup to 2663 regexformatter the regexformatter now handles protected groups correctly this is a followup to #2663 there the regex modifier was introduced and a minor issue with shorttitle was fixes- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
354,3063,3097,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,store changes in source tab when new entry is selected fixes #3086 the problem was that the source tab only stored changes on focus change and this did not happen when you just select a new entry in the main tablethe pr modifies an attribute in the `entryeditor` (`movingtodifferententry`) and turns it into a `booleanproperty` so that you can bind to it and react to changesedit: also fixes a second (unreported) issue: now the base panel is marked as dirty when you type something in the source tabedit 2: fixes also  #3063now the other fields tab is rebuilt whenever an other field is newly added or removed at the bibentry this is achieved with the event system and a new subtype of fieldchangedevent- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`?  
355,3086,3097,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,store changes in source tab when new entry is selected fixes #3086 the problem was that the source tab only stored changes on focus change and this did not happen when you just select a new entry in the main tablethe pr modifies an attribute in the `entryeditor` (`movingtodifferententry`) and turns it into a `booleanproperty` so that you can bind to it and react to changesedit: also fixes a second (unreported) issue: now the base panel is marked as dirty when you type something in the source tabedit 2: fixes also  #3063now the other fields tab is rebuilt whenever an other field is newly added or removed at the bibentry this is achieved with the event system and a new subtype of fieldchangedevent- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`?  
356,3103,3104,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"source tab doi fixes #3103 by making sure that updates to the source tab are always performed on the fxapplication thread- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the panel is now updated correctly however upon hitting ""replace entry"" after fetching the bibtex data there are still some exceptions:<details>  <summary>log file</summary>    ```uncaught exception occurred in thread[awt-eventqueue-06main]javalangillegalstateexception: not on fx application thread currentthread  awt-eventqueue-0	at comsunjavafxtktoolkitcheckfxuserthread(toolkitjava:236)	at comsunjavafxtkquantumquantumtoolkitcheckfxuserthread(quantumtoolkitjava:423)	at javafxsceneparent$2onproposedchange(parentjava:367)	at comsunjavafxcollectionsvetoablelistdecoratoradd(vetoablelistdecoratorjava:317)	at comsunjavafxscenecontrolskintabpaneskin$tabheaderareaaddtab(tabpaneskinjava:879)	at comsunjavafxscenecontrolskintabpaneskin$tabheaderareaaccess$1100(tabpaneskinjava:685)	at comsunjavafxscenecontrolskintabpaneskinaddtabs(tabpaneskinjava:332)	at comsunjavafxscenecontrolskintabpaneskinlambda$initializetablistener$485(tabpaneskinjava:415)	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329)	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73)	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:233)	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482)	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541)	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:205)	at javafxcollectionsmodifiableobservablelistbaseadd(modifiableobservablelistbasejava:155)	at orgjabrefguientryeditorentryeditorreaddotherfieldstab(entryeditorjava:253)	at orgjabrefguientryeditorentryeditorrebuildotherfieldstab(entryeditorjava:241)	at orgjabrefguientryeditorentryeditorlisten(entryeditorjava:222)	at sunreflectgeneratedmethodaccessor48invoke(unknown source)	at sunreflectdelegatingmethodaccessorimplinvoke(unknown source)	at javalangreflectmethodinvoke(unknown source)	at comgooglecommoneventbussubscriberinvokesubscribermethod(subscriberjava:91)	at comgooglecommoneventbussubscriber$synchronizedsubscriberinvokesubscribermethod(subscriberjava:150)	at comgooglecommoneventbussubscriber$1run(subscriberjava:76)	at comgooglecommonutilconcurrentmoreexecutors$directexecutorexecute(moreexecutorsjava:399)	at comgooglecommoneventbussubscriberdispatchevent(subscriberjava:71)	at comgooglecommoneventbusdispatcher$perthreadqueueddispatcherdispatch(dispatcherjava:116)	at comgooglecommoneventbuseventbuspost(eventbusjava:217)	at orgjabrefmodelentrybibentrysetfield(bibentryjava:427)	at orgjabrefmodelentrybibentrysetfield(bibentryjava:448)	at orgjabrefguimergeentriesmergefetchedentrydialog$replaceactionactionperformed(mergefetchedentrydialogjava:137)	at javaxswingabstractbuttonfireactionperformed(unknown source)	at javaxswingabstractbutton$handleractionperformed(unknown source)	at javaxswingdefaultbuttonmodelfireactionperformed(unknown source)	at javaxswingdefaultbuttonmodelsetpressed(unknown source)	at javaxswingplafbasicbasicbuttonlistenermousereleased(unknown source)	at javaawtcomponentprocessmouseevent(unknown source)	at javaxswingjcomponentprocessmouseevent(unknown source)	at javaawtcomponentprocessevent(unknown source)	at javaawtcontainerprocessevent(unknown source)	at javaawtcomponentdispatcheventimpl(unknown source)	at javaawtcontainerdispatcheventimpl(unknown source)	at javaawtcomponentdispatchevent(unknown source)	at javaawtlightweightdispatcherretargetmouseevent(unknown source)	at javaawtlightweightdispatcherprocessmouseevent(unknown source)	at javaawtlightweightdispatcherdispatchevent(unknown source)	at javaawtcontainerdispatcheventimpl(unknown source)	at javaawtwindowdispatcheventimpl(unknown source)	at javaawtcomponentdispatchevent(unknown source)	at javaawteventqueuedispatcheventimpl(unknown source)	at javaawteventqueueaccess$500(unknown source)	at javaawteventqueue$3run(unknown source)	at javaawteventqueue$3run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javaawteventqueue$4run(unknown source)	at javaawteventqueue$4run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javaawteventqueuedispatchevent(unknown source)	at javaawteventdispatchthreadpumponeeventforfilters(unknown source)	at javaawteventdispatchthreadpumpeventsforfilter(unknown source)	at javaawteventdispatchthreadpumpeventsforfilter(unknown source)	at javaawtwaitdispatchsupport$2run(unknown source)	at javaawtwaitdispatchsupport$4run(unknown source)	at javaawtwaitdispatchsupport$4run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javaawtwaitdispatchsupportenter(unknown source)	at javaawtdialogshow(unknown source)	at javaawtcomponentshow(unknown source)	at javaawtcomponentsetvisible(unknown source)	at javaawtwindowsetvisible(unknown source)	at javaawtdialogsetvisible(unknown source)	at orgjabrefguimergeentriesfetchandmergeworkerdone(fetchandmergeworkerjava:67)	at javaxswingswingworker$5run(unknown source)	at javaxswingswingworker$dosubmitaccumulativerunnablerun(unknown source)	at sunswingaccumulativerunnablerun(unknown source)	at javaxswingswingworker$dosubmitaccumulativerunnableactionperformed(unknown source)	at javaxswingtimerfireactionperformed(unknown source)	at javaxswingtimer$doposteventrun(unknown source)	at javaawteventinvocationeventdispatch(unknown source)	at javaawteventqueuedispatcheventimpl(unknown source)	at javaawteventqueueaccess$500(unknown source)	at javaawteventqueue$3run(unknown source)	at javaawteventqueue$3run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javaawteventqueuedispatchevent(unknown source)	at javaawteventdispatchthreadpumponeeventforfilters(unknown source)	at javaawteventdispatchthreadpumpeventsforfilter(unknown source)	at javaawteventdispatchthreadpumpeventsforhierarchy(unknown source)	at javaawteventdispatchthreadpumpevents(unknown source)	at javaawteventdispatchthreadpumpevents(unknown source)	at javaawteventdispatchthreadrun(unknown source)uncaught exception occurred in thread[awt-eventqueue-06main]javalangillegalstateexception: not on fx application thread currentthread  awt-eventqueue-0	at comsunjavafxtktoolkitcheckfxuserthread(toolkitjava:236)	at comsunjavafxtkquantumquantumtoolkitcheckfxuserthread(quantumtoolkitjava:423)	at javafxsceneparent$2onproposedchange(parentjava:367)	at comsunjavafxcollectionsvetoablelistdecoratoradd(vetoablelistdecoratorjava:317)	at comsunjavafxscenecontrolskintabpaneskin$tabheaderareaaddtab(tabpaneskinjava:879)	at comsunjavafxscenecontrolskintabpaneskin$tabheaderareaaccess$1100(tabpaneskinjava:685)	at comsunjavafxscenecontrolskintabpaneskinaddtabs(tabpaneskinjava:332)	at comsunjavafxscenecontrolskintabpaneskinlambda$initializetablistener$485(tabpaneskinjava:415)	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329)	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73)	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:233)	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482)	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541)	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:205)	at javafxcollectionsmodifiableobservablelistbaseadd(modifiableobservablelistbasejava:155)	at orgjabrefguientryeditorentryeditorreaddotherfieldstab(entryeditorjava:253)	at orgjabrefguientryeditorentryeditorrebuildotherfieldstab(entryeditorjava:241)	at orgjabrefguientryeditorentryeditorlisten(entryeditorjava:222)	at sunreflectgeneratedmethodaccessor48invoke(unknown source)	at sunreflectdelegatingmethodaccessorimplinvoke(unknown source)	at javalangreflectmethodinvoke(unknown source)	at comgooglecommoneventbussubscriberinvokesubscribermethod(subscriberjava:91)	at comgooglecommoneventbussubscriber$synchronizedsubscriberinvokesubscribermethod(subscriberjava:150)	at comgooglecommoneventbussubscriber$1run(subscriberjava:76)	at comgooglecommonutilconcurrentmoreexecutors$directexecutorexecute(moreexecutorsjava:399)	at comgooglecommoneventbussubscriberdispatchevent(subscriberjava:71)	at comgooglecommoneventbusdispatcher$perthreadqueueddispatcherdispatch(dispatcherjava:116)	at comgooglecommoneventbuseventbuspost(eventbusjava:217)	at orgjabrefmodelentrybibentrysetfield(bibentryjava:427)	at orgjabrefmodelentrybibentrysetfield(bibentryjava:448)	at orgjabrefguimergeentriesmergefetchedentrydialog$replaceactionactionperformed(mergefetchedentrydialogjava:137)	at javaxswingabstractbuttonfireactionperformed(unknown source)	at javaxswingabstractbutton$handleractionperformed(unknown source)	at javaxswingdefaultbuttonmodelfireactionperformed(unknown source)	at javaxswingdefaultbuttonmodelsetpressed(unknown source)	at javaxswingplafbasicbasicbuttonlistenermousereleased(unknown source)	at javaawtcomponentprocessmouseevent(unknown source)	at javaxswingjcomponentprocessmouseevent(unknown source)	at javaawtcomponentprocessevent(unknown source)	at javaawtcontainerprocessevent(unknown source)	at javaawtcomponentdispatcheventimpl(unknown source)	at javaawtcontainerdispatcheventimpl(unknown source)	at javaawtcomponentdispatchevent(unknown source)	at javaawtlightweightdispatcherretargetmouseevent(unknown source)	at javaawtlightweightdispatcherprocessmouseevent(unknown source)	at javaawtlightweightdispatcherdispatchevent(unknown source)	at javaawtcontainerdispatcheventimpl(unknown source)	at javaawtwindowdispatcheventimpl(unknown source)	at javaawtcomponentdispatchevent(unknown source)	at javaawteventqueuedispatcheventimpl(unknown source)	at javaawteventqueueaccess$500(unknown source)	at javaawteventqueue$3run(unknown source)	at javaawteventqueue$3run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javaawteventqueue$4run(unknown source)	at javaawteventqueue$4run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javaawteventqueuedispatchevent(unknown source)	at javaawteventdispatchthreadpumponeeventforfilters(unknown source)	at javaawteventdispatchthreadpumpeventsforfilter(unknown source)	at javaawteventdispatchthreadpumpeventsforfilter(unknown source)	at javaawtwaitdispatchsupport$2run(unknown source)	at javaawtwaitdispatchsupport$4run(unknown source)	at javaawtwaitdispatchsupport$4run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javaawtwaitdispatchsupportenter(unknown source)	at javaawtdialogshow(unknown source)	at javaawtcomponentshow(unknown source)	at javaawtcomponentsetvisible(unknown source)	at javaawtwindowsetvisible(unknown source)	at javaawtdialogsetvisible(unknown source)	at orgjabrefguimergeentriesfetchandmergeworkerdone(fetchandmergeworkerjava:67)	at javaxswingswingworker$5run(unknown source)	at javaxswingswingworker$dosubmitaccumulativerunnablerun(unknown source)	at sunswingaccumulativerunnablerun(unknown source)	at javaxswingswingworker$dosubmitaccumulativerunnableactionperformed(unknown source)	at javaxswingtimerfireactionperformed(unknown source)	at javaxswingtimer$doposteventrun(unknown source)	at javaawteventinvocationeventdispatch(unknown source)	at javaawteventqueuedispatcheventimpl(unknown source)	at javaawteventqueueaccess$500(unknown source)	at javaawteventqueue$3run(unknown source)	at javaawteventqueue$3run(unknown source)	at javasecurityaccesscontrollerdoprivileged(native method)	at javasecurityprotectiondomain$javasecurityaccessimpldointersectionprivilege(unknown source)	at javaawteventqueuedispatchevent(unknown source)	at javaawteventdispatchthreadpumponeeventforfilters(unknown source)	at javaawteventdispatchthreadpumpeventsforfilter(unknown source)	at javaawteventdispatchthreadpumpeventsforhierarchy(unknown source)	at javaawteventdispatchthreadpumpevents(unknown source)	at javaawteventdispatchthreadpumpevents(unknown source)	at javaawteventdispatchthreadrun(unknown source)```</details> || indeed thanks for pointing out! should be fixed nowit seems that we (i) need be more careful when updating fx components based on model events || "
357,3101,3105,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,remove entries from prior groups if move operation is selected fixes #3101there is one problem left to conclude this it does the proper operation on the selected entries and updates the group tree however it does not update the coloring in the group tree @tobiasdiez could you give me a hint on how i can achieve this?- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? unfortunately using the `statemanager` does not solve the coloring for mebut to be honest it seems rather broken anyway irrespective of this pr i have a database with 3 entries and 2 groups the only way to get a coloring is to click an entry with a group in a newly started jabref without opening the entry editor that coloring never changes even if i click different entries does coloring actually work for you?i think this pr is ready to go someone else should check the fix in a running jabref the coloring problem should be investigated in another issue/pr || in general it works for me but i also noticed that sometimes the color is not updated probably related to https://githubcom/jabref/jabref/issues/2857 ||
358,1903,3111,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,trigger group display update when grouping changes attempts to fix #1903makes the maintable update whenever grouping changes and not just when group selection changes- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
359,3113,3116,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,move event processing from source tab into entry editor solves the most critical part of #3113the source tab did not properly unregister itself from the event bus for some reason i did not manage to get this working when the source tab takes care of deregistration therefore i moved all event handling out of the source tab and into the entry editorusing jvisualvm i can see that garbage collection works with this pr cycling through the main table with the entry editor open increases used ram when you force garbage collection the used heap goes down to close to zero again instead of staying at a higher plateau see attached screenshot![heap](https://user-imagesgithubusercontentcom/1515701/29381572-f60537f6-82c9-11e7-9ad9-20e6208ca648png)so this fixes the memory leak the overall heap size doesnt go down but thats a different issue- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? as this is a small but important change i merge this i in now ||
360,2718,3120,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"additional filter functionality for check integrity popup fixes #2718 i added new filter all and filter none buttons  they can be clicked by the user tocheck/uncheck all options in the filter menu  when one of the buttons gets clicked the system will iterate through the existing menu components and toggle the checkmarks and info displayedi wasnt sure on the best placement of the buttons in the window so went with the simplest solution![image](https://user-imagesgithubusercontentcom/17808285/29439562-4f3e84fe-8373-11e7-9d15-5e811d90578apng)updated localization info with text for aforementioned buttons we still have many open translations (http://helpjabreforg/en/translatinggui) so that is not a con thefeature has a very low risk break anything i would just include itam 18082017 11:32 schrieb ""jörg lenhard"" <notifications@githubcom>:> *@lenhard* approved this pull request>> thanks for your pr the simplest solution is usually best>> i have tested the pr locally and it works the code looks fine as well>> @jabref/developers <https://githubcom/orgs/jabref/teams/developers> we> wanted to do a feature freeze for 40 so should we wait with merging this?> i would say we can merge it anyway after all its not too big the only> ""problem"" is that the translators would need to do another round>> —> you are receiving this because you are on a team that was mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/3120#pullrequestreview-57153711>> or mute the thread> <https://githubcom/notifications/unsubscribe-auth/abtafkxtsgkgb7btm91dhu9rfdwsmw2jks5szvoagajpzm4o6-v_>> > || ok perfect!@andrew-lev thank you very much for your contribution! youre very welcome to provide more :-) || @koppor does the timeframe for the release of 40  allow a call to translators? || absolutely!!am 18082017 14:47 schrieb ""mlep"" <notifications@githubcom>:> @koppor <https://githubcom/koppor> does the timeframe for the release of> 40 allow a call to translators?>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/3120#issuecomment-323344345> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/abtafmltjiicvx3punvn2me-vdwh35soks5szyfigajpzm4o6-v_>> > || "
361,3136,3137,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"re-add ""normalize to bibtex name format"" context menu item and menu i… …tem tooltipsfixes #3136also re-adds tooltips to context menu items which had been commented out- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? now we only need to fix the underlying algorithm i guess || exactly :) but thats not part of this pr ||"
362,2941,3141,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples: #3130 #3117 #2941this pr sets a minimum size for all textareas in the entryeditor the value of 70px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only ""problem"" is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into 40!- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? to be honest im not a big fan of the increased size i prefer to have as much information on the screen as possible and not to have to scroll on the other hand i acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information maybe it is already enough to increase the `prefered` height (instead of minimum)? also you should be able to increase the size of the files panel independently of the other fieldsfurthermore it is probably better to use scaling units (like `em`) instead of pixels || @tobiasdiez ok you have the same opinion as @koppor i guessincreasing the preferred height didnt help unfortunately we can leave most field editors as they are but we have to increase the size of the file and the the keywords editor those are the two editors in the cramped general tab where users could enter information with more than a single line that doesnt look good at all and really does annoy usersive tried to change just these two editors in code but failed whenever i call `setminwidth` in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/linkedfileseditorjava or change the `minheight` in the related fxml file the min height of all field editors in the tab increase any hint? || the problem is probably https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l166 where the rows are set to have the same height || quick idea: if the row constraints are the problem it might be an option to use two rows for the file/keyword editors || @matthiasgeiger not sure if thats easily possible the best solution is probably to write new subclass of entryeditortab || or extend the `fxfieldeditor` by a `getweight` method which you can use in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l114maybe it is already sufficient to remove these row constraints (although there was probably a reason why i added them in the first place) || ok ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editorsas i said this is a hack but before i turn this into something more acceptable (along your suggestion @tobiasdiez ) i would like to get confirmation from the team that this is a solution that we can live with visually in the jabref ui if not than i am just wasting my time with gui hacking || and now i refactored it anyway jabref continues to ruin my lunch time || i tried out the new solution locally and it looks good enough on two-column tabs the things shrink too much but we discussed in the devcall that it is difficult to determine the right ""min-height"" (screen resolution etc)so good to merge || as discussed in the dev call i am merging this now || "
363,3117,3141,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples: #3130 #3117 #2941this pr sets a minimum size for all textareas in the entryeditor the value of 70px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only ""problem"" is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into 40!- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? to be honest im not a big fan of the increased size i prefer to have as much information on the screen as possible and not to have to scroll on the other hand i acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information maybe it is already enough to increase the `prefered` height (instead of minimum)? also you should be able to increase the size of the files panel independently of the other fieldsfurthermore it is probably better to use scaling units (like `em`) instead of pixels || @tobiasdiez ok you have the same opinion as @koppor i guessincreasing the preferred height didnt help unfortunately we can leave most field editors as they are but we have to increase the size of the file and the the keywords editor those are the two editors in the cramped general tab where users could enter information with more than a single line that doesnt look good at all and really does annoy usersive tried to change just these two editors in code but failed whenever i call `setminwidth` in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/linkedfileseditorjava or change the `minheight` in the related fxml file the min height of all field editors in the tab increase any hint? || the problem is probably https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l166 where the rows are set to have the same height || quick idea: if the row constraints are the problem it might be an option to use two rows for the file/keyword editors || @matthiasgeiger not sure if thats easily possible the best solution is probably to write new subclass of entryeditortab || or extend the `fxfieldeditor` by a `getweight` method which you can use in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l114maybe it is already sufficient to remove these row constraints (although there was probably a reason why i added them in the first place) || ok ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editorsas i said this is a hack but before i turn this into something more acceptable (along your suggestion @tobiasdiez ) i would like to get confirmation from the team that this is a solution that we can live with visually in the jabref ui if not than i am just wasting my time with gui hacking || and now i refactored it anyway jabref continues to ruin my lunch time || i tried out the new solution locally and it looks good enough on two-column tabs the things shrink too much but we discussed in the devcall that it is difficult to determine the right ""min-height"" (screen resolution etc)so good to merge || as discussed in the dev call i am merging this now || "
364,3130,3141,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples: #3130 #3117 #2941this pr sets a minimum size for all textareas in the entryeditor the value of 70px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only ""problem"" is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into 40!- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? to be honest im not a big fan of the increased size i prefer to have as much information on the screen as possible and not to have to scroll on the other hand i acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information maybe it is already enough to increase the `prefered` height (instead of minimum)? also you should be able to increase the size of the files panel independently of the other fieldsfurthermore it is probably better to use scaling units (like `em`) instead of pixels || @tobiasdiez ok you have the same opinion as @koppor i guessincreasing the preferred height didnt help unfortunately we can leave most field editors as they are but we have to increase the size of the file and the the keywords editor those are the two editors in the cramped general tab where users could enter information with more than a single line that doesnt look good at all and really does annoy usersive tried to change just these two editors in code but failed whenever i call `setminwidth` in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/linkedfileseditorjava or change the `minheight` in the related fxml file the min height of all field editors in the tab increase any hint? || the problem is probably https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l166 where the rows are set to have the same height || quick idea: if the row constraints are the problem it might be an option to use two rows for the file/keyword editors || @matthiasgeiger not sure if thats easily possible the best solution is probably to write new subclass of entryeditortab || or extend the `fxfieldeditor` by a `getweight` method which you can use in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l114maybe it is already sufficient to remove these row constraints (although there was probably a reason why i added them in the first place) || ok ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editorsas i said this is a hack but before i turn this into something more acceptable (along your suggestion @tobiasdiez ) i would like to get confirmation from the team that this is a solution that we can live with visually in the jabref ui if not than i am just wasting my time with gui hacking || and now i refactored it anyway jabref continues to ruin my lunch time || i tried out the new solution locally and it looks good enough on two-column tabs the things shrink too much but we discussed in the devcall that it is difficult to determine the right ""min-height"" (screen resolution etc)so good to merge || as discussed in the dev call i am merging this now || "
365,2539,3147,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"export pdf/linked files fixes #2539 followup from #2706  because somehow my new changes did not update the pr correctly![grafik](https://user-imagesgithubusercontentcom/320228/31773816-3ef12f96-b4e4-11e7-800f-90413d074280png)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? is it possible to add this to the context menu? i once added ""send as email"" to the menu as i also needed a similar functionality for sending entries as email:![grafik](https://user-imagesgithubusercontentcom/1366654/29908597-676fbb74-8e22-11e7-8a09-dc6e0ea79d15png) || @siedlerchr your pr did not update as you named the branches differently: `exportpdf` vs  `exportpdf` the letters `d` and `f` are cased differently thus these are different branches 🎉  || current accessibility:![grafik](https://user-imagesgithubusercontentcom/1366654/29908807-4a1879e8-8e23-11e7-84c5-d26b312bc4f3png)reading https://githubcom/jabref/jabref/pull/2706#issuecomment-292110772 and the following comments i do not like the word ""export"" in the tools menu it took me 5 minutes to find the functionality1 context menu: no entry for that2 file menu: no entry for that3 file -> export: cannot select ""pdfs"" somehowsuggestion:rename to ""copy attached files to folder""further minor issues- [x] progress always shows ""exporting file 0 of x""  ![grafik](https://user-imagesgithubusercontentcom/1366654/29908896-be2f2dd6-8e23-11e7-9ea2-e8ee5a230e69png)- [x] last chosen folder is not remembered the browse-dialog always starts in `%home`- [x] pressing ""cancel"" when choosing the folder also triggers the export || added devcall label to discuss milestone || stays at v41 milestone as v41 will be our pdf feature release || i think i fixed all issues raised by @koppor  and i also create a log file in the export dir || @tobiasdiez  i followed your idea and added a tableview showing the log messages and the filei plan to replace the true/false values with icons: (green checkmark and red x)![grafik](https://user-imagesgithubusercontentcom/320228/31765002-3b12623a-b4c3-11e7-99a8-f85dc6da83f4png) || looks good! do you want to display this dialog everytime even through everything went fine and all files were exported successfully? or just when an error occurs? im unsure but would tend to the latter || from my point of view all remaining issues should be resolved and this can be merged || the result dialog is displayed way too small on my display![screen shot 2017-10-25 at 18 24 34](https://user-imagesgithubusercontentcom/1254003/32010460-28889a8c-b9b2-11e7-837d-e1081c96f654png)when i try to resize it a magical fourth column appears![screen shot 2017-10-25 at 18 29 19](https://user-imagesgithubusercontentcom/1254003/32010567-8248dd66-b9b2-11e7-988b-de409d1c0d3epng) || @lynyus  i changed the column size and there is also a tooltip for the file column || "
366,2706,3147,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"export pdf/linked files fixes #2539 followup from #2706  because somehow my new changes did not update the pr correctly![grafik](https://user-imagesgithubusercontentcom/320228/31773816-3ef12f96-b4e4-11e7-800f-90413d074280png)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? is it possible to add this to the context menu? i once added ""send as email"" to the menu as i also needed a similar functionality for sending entries as email:![grafik](https://user-imagesgithubusercontentcom/1366654/29908597-676fbb74-8e22-11e7-8a09-dc6e0ea79d15png) || @siedlerchr your pr did not update as you named the branches differently: `exportpdf` vs  `exportpdf` the letters `d` and `f` are cased differently thus these are different branches 🎉  || current accessibility:![grafik](https://user-imagesgithubusercontentcom/1366654/29908807-4a1879e8-8e23-11e7-84c5-d26b312bc4f3png)reading https://githubcom/jabref/jabref/pull/2706#issuecomment-292110772 and the following comments i do not like the word ""export"" in the tools menu it took me 5 minutes to find the functionality1 context menu: no entry for that2 file menu: no entry for that3 file -> export: cannot select ""pdfs"" somehowsuggestion:rename to ""copy attached files to folder""further minor issues- [x] progress always shows ""exporting file 0 of x""  ![grafik](https://user-imagesgithubusercontentcom/1366654/29908896-be2f2dd6-8e23-11e7-9ea2-e8ee5a230e69png)- [x] last chosen folder is not remembered the browse-dialog always starts in `%home`- [x] pressing ""cancel"" when choosing the folder also triggers the export || added devcall label to discuss milestone || stays at v41 milestone as v41 will be our pdf feature release || i think i fixed all issues raised by @koppor  and i also create a log file in the export dir || @tobiasdiez  i followed your idea and added a tableview showing the log messages and the filei plan to replace the true/false values with icons: (green checkmark and red x)![grafik](https://user-imagesgithubusercontentcom/320228/31765002-3b12623a-b4c3-11e7-99a8-f85dc6da83f4png) || looks good! do you want to display this dialog everytime even through everything went fine and all files were exported successfully? or just when an error occurs? im unsure but would tend to the latter || from my point of view all remaining issues should be resolved and this can be merged || the result dialog is displayed way too small on my display![screen shot 2017-10-25 at 18 24 34](https://user-imagesgithubusercontentcom/1254003/32010460-28889a8c-b9b2-11e7-837d-e1081c96f654png)when i try to resize it a magical fourth column appears![screen shot 2017-10-25 at 18 29 19](https://user-imagesgithubusercontentcom/1254003/32010567-8248dd66-b9b2-11e7-988b-de409d1c0d3epng) || @lynyus  i changed the column size and there is also a tooltip for the file column || "
367,3100,3154,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,add preference to disable validation in the entry editor by default adds a preference option for enabling/disabling validation in the entry editor: #3100 (but not the ui)the reason is because the validation is simply broken at the moment #3145the preference option is set to false by default and there is no ui to change it so this turns off validation in the entry editor we can add the ui to turn it on later when the display bug in controlsfx has been fixedwhen this is merged the related issues can be removed from the 40 milestone- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? since the review comments have been addressed and for the sake of getting things done i am merging this now ||
368,3145,3154,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,add preference to disable validation in the entry editor by default adds a preference option for enabling/disabling validation in the entry editor: #3100 (but not the ui)the reason is because the validation is simply broken at the moment #3145the preference option is set to false by default and there is no ui to change it so this turns off validation in the entry editor we can add the ui to turn it on later when the display bug in controlsfx has been fixedwhen this is merged the related issues can be removed from the 40 milestone- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? since the review comments have been addressed and for the sake of getting things done i am merging this now ||
369,3157,3158,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix freezing on browse in protected terms dialog when adding from entrry editorchanged open file dialog to save file dialogfix #3157<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? tested locally and works good job! ||
370,3161,3162,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,update protected terms list in context menu when a new list is added fixes  #3161the result of the dialog needs to be evaluated *after* the dialog is actually finished and the update of the context menu needs to be called- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
371,3130,3163,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,fix unparseable fileannotation dates this should be the last aspect for being able to close #3130 @hviethen85 should consider using another pdf annotation tool ( however the fault is of course on our side since we didnt validate the date format before- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref  
372,3165,3169,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,allow removal of online links from entry dont call pathsget on http link to prevent an exceptionfix #3165 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
373,3170,3171,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add undo functionality to the source tab fixes #3170 the problem here as far as i understand was that the undo didnt happen on the fxapplication threadon top of that i found the the source tab isnt integrated in the undo framework at all so i have added this as well however it doesnt work problem-free it seems that the fx codearea consumes undo events as well so when you hit undo in the sourcetab the codearea does the undo and then the undomanager tries to do it again and fails it has no consequence though apart from an exception the undo happens anywaysince this is an improvement (add undo to source tab again) i would like to merge this even if its not perfect i have zero time to dig deeper into these fx problems and i assume that no one else will do it so we can just merge the current state - [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? tested it locally works as expected! good job i would also vote to merge this in at the moment  ||
374,3081,3182,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix focus and keybinding in search fix #3081 arrow keys (left right up and down no work as expected and the up/down + enter can be used to select an entry from the autocomplete menu)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? done ||
375,228,3195,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,0,fix local db and shared db sync #2284 <!-- describe the changes you have made here: what why  -->fixed database sync issue while syncing with shared db there was no listener for groupupdateevent but there is metadata listenertwo scenarios : -1 either we can add groupupdateevent listener2 or we can reused metadata listener (as groupupdate is also part of metadata) i have used 2 scenario as per code reuse i just added a post event to metadata- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? cool stuff! thanks for your contribution! will check and test it tomorrow || there are free cloud offerings to test - see http://helpjabreforg/en/sqldatabase#try-it-outi am currently not using the shared database feature but i think this fixes https://githubcom/jabref/jabref/issues/2284 and presumably also https://githubcom/jabref/jabref/issues/2647@g-mos @tgkolda  @fab7c4 could you comment whether the jabref build at http://buildsjabreforg/bg-shared-db-sync/ works for you? ||
376,316,3202,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,followup to issue #3167 entry editor now adds missing curly braces on closing  https://githubcom/jabref/jabref/issues/3167 - [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? hey @snisnisniksonah is this pr ready for review? if so please notify us by adding the label and remove the [wip] tag from the title ||
377,3190,3203,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,when groups are removed also remove them from entries fixes #3190- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? ok i managed to get this done and i think ive addressed everything as the reviewers desired it can be merged from my point of view so please have a look and merge if you think it is ok || one more try :) now only explicitgroups are removed from entries keyword-based groups are kept i hope this is the last missing puzzle piece || sorry for being pestic but with this implementation keyword groups that are children of the deleted explicit group are still handled wrongly i directly committed a fix if you are fine with it you have my ok for mergeby the way in order to convince you about the testability of javafx code you are invited to write a test covering the new behavior 😈   || thanks challenge accepted :) i did not only add one test but threei will merge when the build goes through ||
378,3199,3204,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"drop latex editor support fixes #3204 this removes  latexeditor support (""push to latexeditor"") in jabref as stated in #3199 the last update to latexeditor was made in 2009 (see http://wwwlatexeditororg/newshtml ) and the software can be considered outdatedi removed latexeditor from the applications list in pushtoapplications class i deleted the pushtolatexeditor class since it is now unusedgradlew check was successfuli am new here (first pull request) and also still fairly new to java so any c&c would be greatly appreciated especially let me know if either the practice of commits or this request is not up-to-standard :)cheersbenedit: removed latexeditor from preferences and corrected the url link style in changelog :) for your first pr you did all right 🍾  if you want to further contribute to jabref i would suggest looking at the wiki here https://githubcom/jabref/jabref/wiki where we have collected some jabref specific things regarding the architecture and also some java tips || ill merge this now thanks for the contribution!  🎉 have a look at the other [issues](https://githubcom/jabref/jabref/issues) those labeled with [beginner](https://githubcom/jabref/jabref/issues?qis%3aissue+is%3aopen+label%3abeginner) are usually easier to fix if you dont have much prior experience with jabref! ||"
379,2775,3209,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix #2775: hyphens in last names are properly parsed <!-- describe the changes you have made here: what why  -->i missed jabref so much that i even dared to touch the name parsing algorithm  the only real changed consists in the few added lines https://githubcom/jabref/jabref/compare/fix3142?expand1#diff-b8249d741d31352dd2bcafcab07d9457r147 the rest is only code formatting/renaming of variables the added tests come from [biblatex](https://githubcom/plk/biber/blob/f418da9b1975847461fad884fedf910aed73c13b/t/namest)- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
380,3208,3210,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add file description to gui and fix sync bug fixes #3208<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the problem is that the changes in the underlying `linkedfile` are not propagated to the list `linkedfileseditorviewmodelfiles` so that the serialization https://githubcom/jabref/jabref/blob/2c5e7f2940481d66d50573e6fc40858f55b1cc47/src/main/java/org/jabref/gui/fieldeditors/linkedfileseditorviewmodeljava#l74-l82 is never called by the way also changes to the file name or icon do not trigger an update and thus are not serializedas a solution i propose to convert the data fields in `linkedfile` to real properties add `observable[] getobservables()` to `linkedfile` and return these observables here:https://githubcom/jabref/jabref/blob/2c5e7f2940481d66d50573e6fc40858f55b1cc47/src/main/java/org/jabref/gui/fieldeditors/linkedfileviewmodeljava#l109-l111ps: can you pls add a screenshot how the file editor now looks like with the description added (especially when the file link is relatively long) thanks || @tobiasdiez  i did as you suggested but still does not work  i think it has something to do with the listproperty but i am not that deep inside javafx binding stuff to know why it is not synced || yeah! got it now!![grafik](https://user-imagesgithubusercontentcom/320228/30381786-b3f80c6e-989d-11e7-95d8-c7b4ddcf1b84png) || i just discovered that there is additional space between the icon and the file name if the file doesnt have a description can you please fix this thanks! || fixed in master ||
381,3172,3211,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,added logic to check whether linked file already exists #3172 added a check in linkedfileviewmodelrename() to see if a file which isbeing renamed already exists in the target location if such a file isfound then an error popup displays informing the user of the conflictuser will be prompted to choose whether to overwrite or cancelalso see #3188 for additional details this work fine and includes all the requested changes from the previous pull request with one caveat  if the file being overridden is related to a different entry and has different case such as entry 1  [abc] renamed to [def] entry 2  [def] then the 2nd entry file association will target a now non-existing file  its possible to get around this by searching the database for any entries that have the old filename [def] and changing the association to the new filename but i dont know if thats something desireable so i decided to push this as is for now || ok i changed to an optional and removed !filesexists(targetfilepath) as its redundant  im still getting the hang of git and egit so hopefully the merge didnt mess anything up || @andrew-lev  i stick to git and git gui from command line a lot easier than struggling with the eclipse git client  || thanks this looks really good now!  ||
382,3188,3211,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,added logic to check whether linked file already exists #3172 added a check in linkedfileviewmodelrename() to see if a file which isbeing renamed already exists in the target location if such a file isfound then an error popup displays informing the user of the conflictuser will be prompted to choose whether to overwrite or cancelalso see #3188 for additional details this work fine and includes all the requested changes from the previous pull request with one caveat  if the file being overridden is related to a different entry and has different case such as entry 1  [abc] renamed to [def] entry 2  [def] then the 2nd entry file association will target a now non-existing file  its possible to get around this by searching the database for any entries that have the old filename [def] and changing the association to the new filename but i dont know if thats something desireable so i decided to push this as is for now || ok i changed to an optional and removed !filesexists(targetfilepath) as its redundant  im still getting the hang of git and egit so hopefully the merge didnt mess anything up || @andrew-lev  i stick to git and git gui from command line a lot easier than struggling with the eclipse git client  || thanks this looks really good now!  ||
383,3229,3233,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,implemented issue #3229 added an error dialog if the file is open in another process and cannot be renamed [#3229] this is my first contribution please give me feedback if you see any problems hi @derebaba thanks for your pull request! your contribution is certainly very welcome and looks good overalli still have two points that should be addressed: - you add two new localization entries here the way in which you use the localization strings in the code is fine but you need to add the keys to the language files otherwise the build will fail to do so you need to add the keys manually to the english file `jabref/src/main/resources/l10n/jabref_enproperties` and then execute `/gradlew localizationupdate` on the command line which will synchronize the keys in all files theres also a pretty good description of that when you run the tests and the localization test fails - apart from that you are using the older file api `javaio` for doing the rename check we try to get rid of that and try to use the new file api `javanio` instead i would expect something like `filesiswritable()` to do the trick can you please adjust your solution to use the nio api? || hi @lenhard thanks for your feedback are the keys ordered in any way in properties file? or should i add new keys at the end? || @derebaba  you should first check if there is already a key with the same/or similar text which you can reuse otherwise add it to the end and || i synchronized the keys and removed the check which used the old api however `filesiswritable()` returns true even if the file is open in another process i searched a lot but i dont think the check is possible with the new api therefore i moved the error dialog code to the catch block in fileutiljava ||
384,3230,3241,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,update link to renamed file this patch fixes the issue described in #3230 the link to the renamed file is successfully updated now- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thank you for the contribution @derebaba! this look very good now and will be merged as soon as another maintainer gives his okwe have quite some further open issues that wait for fixing so feel free to have a look at those meanwhile you can also join us at slack if you have questions  https://jabrefslackcom/ || i have merged this and moved the changelog entry to the right category ||
385,3143,3243,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix for issue 3143: import entry from clipboard in different formats see #3143use all importers to parse pasted entries this allows the user to paste entries in different formats and not ony bibtex- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) hi @125m125 as i see you have some troubles with our checkstyle rules i recommend you to use our ide config files from https://githubcom/jabref/jabref/tree/master/config which ide are you using? we recommend intellij idea or eclipseyou can see if the tests a pass by calling `gradle check` if you only want to check for the code style rules you can call `gradle checkstylemain`if you have any questions feel free to ask them at slack: https://jabrefslackcom || i am using eclipse and just had to format a file because the saveaction is set to only reformat edited lines a missing newline in the imports wasnt corrected also thanks for pointing out gradle check i somehow missed that command || @125m125  if you use eclipse just run` gradlew eclipse `to import the correct code formatting rules  || thanks for the feedback i integrated the requests with the last commiti also changed the pdfxmpimporter to return false when checking the format instead of throwing an exception to prevent the need for special treatment and make it consistent with the pdfcontentimporter || ok then ill add this to the 41 milestone || i think the error message comes fromhttps://githubcom/jabref/jabref/blob/ae6d01be46c96ef57e9871dfeb208ab0b7aab295/src/main/java/org/jabref/logic/importer/fileformat/mrdlibimporterjava#l53-l60in my opinion you can just delete these `loggerlog` statements (since its quite expected that a file in a wrong format is passed to `isrecognizedformat` and this importer is not used outside of internal code anyways) ||
386,2811,3248,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,fix for issue 2811: bibtexkey generator does not use crossref information see #2811 the bibtex key generator now uses crossreferenced entries if required fields are empty- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @125m125 that is really an impressive amount of tests good job!there are two merge conflicts could you resolve those? once thats done this pr is ready to go into master || and once again thanks! ||
387,2955,3272,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,open statistics dialog from correct thread the dialog to ask for collecting anonymous statistics needs to be created inthe swing edt do so using swingutilitiesinvokelater()this is a follow-up on 7ef2b3a and should finally fix #2955<!-- describe the changes you have made here: what why  -->no addition to changelogmd as 7ef2b3a already included a corresponding entry- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
388,3263,3287,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,change oo paths to libre office in preferences hopefully enough to fix #3263<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
389,3280,3288,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,empty string instead of n/a in file annotations resolves #3280@jabref/developers any votes against this? @lynyus  
390,3264,3303,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"open unix filenames with spaces resolves #3264we need to check if we need to escape the other unix paths too i have to try if this works but whille you are onto the code you could take this as a chance to resolve the ""alert/warning"" from lgtm regarding string conceatenation in cmd parameters:https://lgtmcom/projects/g/jabref/jabref/alerts/?modetree&severityerror&rule7870097https://lgtmcom/rules/7870097/could you try to resolve this as an array? i think that would also resolve the problem i guess || @siedlerchr what would you say? i guess we can merge! || should i add something similar for the other executables in linux too? || @stefan-kolb  yes make it consistent and then we can merge || @linusdietz does my solution work then? can you test it i changed it to your \ suggestion || @siedlerchr does my solution work then? can you test it i changed it to your \ suggestion || @siedlerchr @linusdietz ping :-) is this working? can we merge? || i think it should but i lack a linux system in question (kde or gnome) @siedlerchr do you have gnome or kde? || i have tested the nautilus command so im merging now dont have a kde environment at the moment || "
391,3307,3308,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,add \textendash to the html conversion table fixes #3307 by adding \textendash to the html conversion table- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
392,3275,3318,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix npe in maintable <!-- describe the changes you have made here: what why  -->as observed by @stefan-kolb in https://githubcom/jabref/jabref/issues/3275#issuecomment-336180146 the npe resulted from the strange `matches(null)` code this is fixed now not sure if this actually fixes the problem of #3275- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
393,3342,3343,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix npe when calling with bib file as cmd argument fixes #3342 follow up issue from #3325 use toabsolutepath before calling of getparent<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
394,3346,3368,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,rework autosetfilelinks fixes #3346 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @tobiasdiez  i now moved the common code to an own method in a class in the guiit cant be moved to logic because it depends on externalfiletypei tried adding a test for it but even with extensive mocking externalfiletypes are again the problem - because its a singleton classmockito is not able to mock it || thanks for the further refactoring the code looks better now!concerning the tests you should be able to extract `externalfiletypesgetinstance()` to a method parameter and then simply pass a `mock(externalfiletypesclass)` in the test || thanks for the hints i was no able to create a test and to faciliate the code ||
395,3376,3378,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,treat crossref titles as optional fixes #3376- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
396,3358,3388,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,added checking integrity dialog this change is related to #3358 jabref looked like it is hanging during long integrity checks i added a dialog with a progress bar to show that it is working![checkingintegrity](https://user-imagesgithubusercontentcom/4533745/32270624-aa9fe0d4-bf07-11e7-933a-57b392fd4750png)- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thanks for fast response i fixed the problems || thanks for your contribution! i tested the changes locally and it works fine! feel free to look at other issues as well! ||
397,3311,3403,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,replace linkedfiles backslashes with forward slashes follow up from #3364 (damn case sensitivy) fixes #3311 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
398,3364,3403,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,replace linkedfiles backslashes with forward slashes follow up from #3364 (damn case sensitivy) fixes #3311 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
399,3389,3404,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,strip invalid prolog when loading citationstyles fixes #3389 by skipping invalid parts of the prolog of citation styles- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
400,3046,3405,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix #3046: no longer allow duplicate fields in customized entry types <!-- describe the changes you have made here: what why  -->fixes #3046 (problems in the entry editor caused by duplicate fields in customized entry types) by no longer allowing duplicate fields ie moved from list to set- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? seems like you have forgotten to replace a list with a set in the testotherwiese lgtm  ||
401,3432,3438,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix removal of special fields when syncing them via keywords fixes a bug where jabref special fields (such as printed relevant ) were not cleared (eg removing the printed flag) when using synchronization of special fields via the bibtex keywords field- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabrefsee #3432 for more details made the requested changes || thanks @tobiasdiez for pointing that out - fixed it ||
402,3381,3443,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,"fix for issue #3381 because the javafx tooltip used in the [globalsearchbar](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/search/globalsearchbarjava) cannot render html @tobiasdiez recommended in #3381  to create a textflow object in the [searchdescriber](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/logic/search/rules/describer/searchdescriberjava) classes for structuring the text i made the changes to return a textflow and its working fine so far without changing the logic that is used to build the text  i moved the searchrulesdescriber package like proposed from the logic package to the gui package the existing tests were moved accordingly but still needs to be rewritten for the new textflow resultsthere are some open questions i would like to ask:1 with no styling of the tooltip the readability was really bad (black text on grey background) so i changed the styling to look like the other tooltips in the bar hope it was okay to do this in the context of this issue? i created a new styleclass for this in the maincss to not change any other styled elements2 the [searchquery](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/logic/search/searchqueryjava) class stores a description of the search it is created with the searchdescribers but they are now inside the gui package and return a textflow so there is a javafx dependency in the searchquery class which resides in the logic package at the moment this doesnt sound right to me? should the class be moved to the gui package too?3 the [groupdialog](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/groups/groupdialogjava) class uses a searchquery object to get a search description this class is written with swing and is not compatible to the now returned textflow if i understand it right the project is migrating to use javafx so i want to propose that i write a compatibility method in the groupdialog class to create an html string from the given textflow to be compatible while the groupdialog is still using swing 4 sadly the localized strings used in the searchdescribers included the html tag elements so in many cases it is not possible to use existing translations just because the tags are gone im not sure what to do about this it could be possible to remove the tags manually from the translations not sure how long this would takethats how the tooltip looks with the changes:![screenshot-2017-11-18--13 15 28](https://user-imagesgithubusercontentcom/4948016/32980197-9c017e62-cc62-11e7-86a6-b5c0c0010ac8png)there seems to be something wrong with the logic of the tooltip text creation the first few words repeat itself and it already happened prior to my changes (see the image in #3381) but i didnt had time to look very closely into this should i open a new issue for this problem?i hope i didnt forget anything im happy to hear your feedback!- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? first of all thanks for your contribution! moving all logic code to gui seems like the only option here but in general should be avoided  what about having a different approach: keepiing all stuff string based in logic and in the gui you have a helper method for converting the html tags (are only a few) from the localization into the rtf equivalent and by adding it to a textflow i see no reason why this should not workif you look into the localization stuff you see there are only a couple of `<br> and <b>/<i>` tags so nothing really advanced https://githubcom/jabref/jabref/blob/master/src/main/resources/l10n/jabref_enproperties || after thinking a little longer about the package problem i think the architecture is actually not right if the searchdescribers generate html code and stay in the logic package because html code is only usable in a gui use case and has not really anything to do with logic so maybe they were not really in the right package to begin with if their only purpose is to create a structured text for the gui?i think the searchquery objects should not hold a description stored if it is removed there is no further moving of classes necessary at the places the description member of searchquery is used it can be generated with the searchdescribers class like in the searchquery class at the momentimho the package structure would be most honored that wayit would save the translations if the searchdescriber creates an html string which can be converted later to a textflow like you said but if the project really is moving towards javafx it seems wrong to me to keep html strings for structuring text because in javafx this is the task of a textflow i would try to look into removing the html tags from the translations to not lose them and make a step forward using javafx || also a big thanks from me! i dont have much time at the moment so just a short remark concerning your point 2 i think it should be possible to completely remove the `description` field from the `searchquery` class just expose the `rule` (and `query`) via getters and then call the ̀ searchdescriptorgetdescriptionfor()` every time you need the description in the gui in this way the description completely disappears from the logic package(concerning 4: you can also embed javafx controls in swing which is probably easier to do then creating a conversion to html) || status update:* i removed the description from the searchquery class so it can remain in the logic package* i recreate an html string in the groupdialog class for compatibility (was very easy this way)* modified the tests for the searchdescriber implementations to properly check the textflow description* created tests for the utility class i creatednow there is only one problem left: the broken localizationsi looked into the localization files and it could be possible to rescue a lot of translations by just manually deleting the html tags from the translations (when they are at the beginning or end) but in some cases after translating the text the tags are positioned in the middle of words there it would be necessary to create a new translation because im not able to just delete the tag from the beginning or endthe only other alternative i see is using the old html strings for the localization and then break them up and convert them into javafx texts imho this would be really ugly and not a good readable solutionwhat do you think? any other possible solutions? || when i see it right you only need to replace the html tags for the search descriptions right`?so the rest of the translations can and should stay as it iscant it be possible to strip/replace the tags on the fly? so if i encounter a <b> in my text i have to switch to bold face at that position? || sadly its not so simple with textflows they consist of multiple text objects and you can set the font on each text so if there is a string like this:xxx xxx xxxx <b>xx</b> that translates into:xx xxx <b>xxx</b> xx xxxxthen there are three text objects needed: text(""xx xxx"") text(""<b>xxx</b>"") text(""xx xxxx"")i will try to find an acceptable abstraction so the code will not be completely unreadable and the old translations can be used  || so now the old strings are used and the localization is working again i tried to make it as readable as possible what do you think now? any more things to do? anything else i should have considered? || so i think i made all your requested changes it now looks like this with the new styling:![screenshot-2017-11-27--17 49 24](https://user-imagesgithubusercontentcom/4948016/33278295-625ea62c-d39b-11e7-9133-e5b80614af08png) || thank you very much for the quick follow-ups and of course for your contribution in general we are looking forward to see more prs from you 😉  || your welcome! :grin: || "
403,1664,3444,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"implements #1664: group based on aux file <!-- describe the changes you have made here: what why  -->this pr implements #1664 by adding a group that contains all entries referenced in a given aux-file so far the code is only a prototype but it already works really well what is missing is that changes in the aux file are automatically recognized and handled (this should be easy to accomplish) the user interface is very very basic and only contains a text field where the user can specify the path to the aux file (in light of the upcoming rewrite of the groups dialog in javafx #2643 i dont want to spent to much time at ui stuff) i have two questions:- ~~the implementation so far is against our architecture the new group (`texgroup`) is in the model but uses the `auxparser` from the logic any ideas how to resolve this issue? more and more i dont like the strict rule that model is not allowed to access logic - how im supposed to create ""intelligent"" objects in the model if they are not allowed to use advanced stuff from the logic package?~~- the file path right now is stored as an absolute path is this ok? if not what should be the ""base"" of a relative path? the bib file?---- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? regarding the file  directory stuff: we have a method: getfirstexistingfiledir which gives you the file directoy (either main file idr bib file or library setting || @siedlerchr thanks! do you think it makes sense to apply the same rules for the aux files as for pdf files when it comes to relative paths?  || the architecture is not set in stone we can always decide to change it having said that i still think that the current separation of model and logic makes sense and i think that the tests are useful through the tests we always get a notification about changes that easily turn into circular dependencies and we have an opportunity to discuss them if we dont have that then the code will just silently turn into a big ball of mud with circular dependencies everywherelooking at the code i dont really see an architectural problem right now you are computing the `set<string> keysusedinaux` on demand in a call to `contains()` you can just do that when you create the group and pass the set into the constructor dependency problem solvedwhen you want to recognize changes in the aux file you will need to monitor the file (which is functionality that is located in the higher layers anyway) then you could add a setter to the group that resets the keys when a file change happens || @lenhard i now used your approach: the tex group class only relies on interfaces (defined in model) while the concrete implementation of these interfaces resides in logic this pr is now ready-for-review we should really consider using a dependency injection frameworkmost of the line changes are just propagating the file monitor from globals to the tex group || in order to somewhat keep the momentum up and reduce the number of open prs ill merge this now ||"
404,2643,3444,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,"implements #1664: group based on aux file <!-- describe the changes you have made here: what why  -->this pr implements #1664 by adding a group that contains all entries referenced in a given aux-file so far the code is only a prototype but it already works really well what is missing is that changes in the aux file are automatically recognized and handled (this should be easy to accomplish) the user interface is very very basic and only contains a text field where the user can specify the path to the aux file (in light of the upcoming rewrite of the groups dialog in javafx #2643 i dont want to spent to much time at ui stuff) i have two questions:- ~~the implementation so far is against our architecture the new group (`texgroup`) is in the model but uses the `auxparser` from the logic any ideas how to resolve this issue? more and more i dont like the strict rule that model is not allowed to access logic - how im supposed to create ""intelligent"" objects in the model if they are not allowed to use advanced stuff from the logic package?~~- the file path right now is stored as an absolute path is this ok? if not what should be the ""base"" of a relative path? the bib file?---- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? regarding the file  directory stuff: we have a method: getfirstexistingfiledir which gives you the file directoy (either main file idr bib file or library setting || @siedlerchr thanks! do you think it makes sense to apply the same rules for the aux files as for pdf files when it comes to relative paths?  || the architecture is not set in stone we can always decide to change it having said that i still think that the current separation of model and logic makes sense and i think that the tests are useful through the tests we always get a notification about changes that easily turn into circular dependencies and we have an opportunity to discuss them if we dont have that then the code will just silently turn into a big ball of mud with circular dependencies everywherelooking at the code i dont really see an architectural problem right now you are computing the `set<string> keysusedinaux` on demand in a call to `contains()` you can just do that when you create the group and pass the set into the constructor dependency problem solvedwhen you want to recognize changes in the aux file you will need to monitor the file (which is functionality that is located in the higher layers anyway) then you could add a setter to the group that resets the keys when a file change happens || @lenhard i now used your approach: the tex group class only relies on interfaces (defined in model) while the concrete implementation of these interfaces resides in logic this pr is now ready-for-review we should really consider using a dependency injection frameworkmost of the line changes are just propagating the file monitor from globals to the tex group || in order to somewhat keep the momentum up and reduce the number of open prs ill merge this now ||"
405,2594,3454,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,replace swingx with standard swing in order to be able to properly move to java 9 (see #2594) we need to get rid of all accesses of internal apis unfortunately we also use libraries that make such internal accesses and we need to find a solution for thatone of these libraries is swingx originally by sun it is no longer maintained since quite a while we could not even upgrade to the newest version because of bugs in the library it is time to get rid of this dependency this pr replaces the usage of swingx with regular swing components only the new entries dialog and the side pane are affected for the new entries dialog the change is trivial (just using a regular layout manager) for the side pane a few changes are needed but i can make it roughly resemble the old layout theres one bigger change though that i happen to like very much: the side panes are no longer exclusive you can display them together that means that i can have the web search and the groups panel open at the same time personally i think thats pretty cool and i would like to keep it that way you can of course still disable the side panes independent of each other heres a screenshot:![sidepane](https://user-imagesgithubusercontentcom/1515701/33206932-2e6bd6fa-d10c-11e7-96b2-58f28f0f3beepng)----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? yeah! cool pretty good work!  || > theres one bigger change though that i happen to like very much: the side panes are no longer exclusive you can display them together that means that i can have the web search and the groups panel open at the same timethis was already possible before 😉 || huh? good to know then at least no one can blame it on me when something related to that breaks -) ||
406,3435,3486,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix threading issues fixes #3485 and #3435 <!-- describe the changes you have made here: what why  -->----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? this should be fixed now i reverted to my initial idea i heavily clicked around and switched tabs in the entry editor and randomly selected things in the main table and in the integrity check table no longer exception || i have tested it locally and can confirm that it is working now ||
407,3485,3486,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix threading issues fixes #3485 and #3435 <!-- describe the changes you have made here: what why  -->----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? this should be fixed now i reverted to my initial idea i heavily clicked around and switched tabs in the entry editor and randomly selected things in the main table and in the integrity check table no longer exception || i have tested it locally and can confirm that it is working now ||
408,3471,3497,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix npe in search bar <!-- describe the changes you have made here: what why  -->in #3471 a npe was mentioned im not sure which object was null (it should not be the scene since this is just set and the css file should also be always found) moreover i could not reproduce the exception so this fix is a shot in the blue----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? seems like this could be a linux thing and related to our customjfx panel see also the log in #3500  || i merge it now since it is still a slight improvement over the existing code ill have a look at the azure reports if a similar exception gets reported in the next days ||
409,3498,3503,1,0,0,1,0,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,update internal state of databasechangemonitor when external changes … …are resolvedattempts to fix #3498it seems that the internal state of databasechangemonitor was not updated correctly when external changes were marked as resolved causing the monitor to misbehave when you tried to save afterwards i am not sure how this bug came into being and what caused the update to get lost adding an additional update step seems to resolve the problem but i would really appreciate some more testing of this branch by other people----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? it seems were having a bit of a shortage of reviewers at the moment )since this is such a small one-line change that actually fixes a bug ill merge this now even if theres only one review ||
410,3359,3506,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix #3359: automatically remove colon and apostrophe from key pattern <!-- describe the changes you have made here: what why  -->fixes #3359 colons and apostrophes are now removed from the generated key patterni also refactored the key generator mainly converting the static methods to instance methods----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @lenhard i manually tested most use cases where the code changes (except openoffice since i dont use it) what are our current plans for the 41 release? when do we want to release? if there is still some time before the release i would prefer if this pr is merged before the release  || you may want to add the percent sign and the ampersand (&) which is problematic as it creates a problem with biber/biblatex  || should this still go into 41? || @tobiasdiez when you fix the checkstyle issues and conflicts then this pr can be merged ||
411,3493,3507,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add option to remove the link when file is no longer found fixes  #3493when pressing the del key and the file can not be found this dialog pops up and you can remove the  file from the entry<!-- describe the changes you have made here: what why  --> ```opening: x:\users\cs\documents\_jabreftemp\bibliographybibopening: x:\users\cs\documents\_jabreftemp\newbiblatextestbibcould not find file o’keefe2009 - feature selection and weighting methods in sentiment analysispdfcould not find file saggion2007 - ontology-based information extraction for business intelligencepdf```----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? +1 or not showing the dialog at all we have the undo possibility and i would not think that users accidently press <kbd>del</kbd> would be nice if i could quickly delete attachments if jabref goes crazy ^^ ||
412,3491,3508,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"implement #3491: clicking the pdf icon in the linked files editor opens the file resolves #3491 a click on the pdf icon on a linked file in the entry editor opens the file this is consistent with the behavior in the main table and thus i didnt added a new button and / or changed the double-click behavior as it was suggested in the issue----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thats a nice solution btw do you have any idea why the second file in the listvie does not indicate the blue selection ? although it is selected || @lenhard the beauty of javafx! @siedlerchr no idea similarly there are these annoying padding problems of the first row the ""beauty"" of javafx! 😄  || "
413,3472,3509,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixes #3472: files starting with bibtex key of a similar entry are no longer found by mistake <!-- describe the changes you have made here: what why  -->fixes #3472the auto-link algorithm just checked if the file starts with the bibtex key this leads to a lot of false positives since ""einstein1902apdf"" is found for the entry ""einstein1902"" although this pdf probably belongs to a second paper by einstein that was published in the same year this is fixed in this prwith the proposed implementation also the pdf file ""einstein1902aboutsomethingpdf"" is no longer found (since there is really no possibility in telling the difference to ""einstein1902a - a second paperpdf"") thus the user is advised to add some non-letter character after the key----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? how does this relate with the preferences?![grafik](https://user-imagesgithubusercontentcom/1366654/33819590-8f48cb6c-de4b-11e7-80a2-993c8a1396c3png)documentation at http://helpjabreforg/en/filelinks#auto-linking-filesare these settings still respected? || @koppor yes these settings are still valid the fix applies only if you select the first option ""auto link files that start with the bibtex key""  || @koppor why did you removed the ""ready-for-review"" flag and marked this pr as wip? i was and i am still waiting for a second review otherwise this pr is ready from my point of view the minor issues pointed-out by @siedlerchr are now also fixed || think because i watched this pr liked it and just wanted others to focus on other prs || "
414,3505,3512,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixes #3505: another try to fix the npe in the search bar fiexes #3505<!-- describe the changes you have made here: what why  -->i think i managed to locate the problem of the npe and the missing search bar apparently in some conditions the syntax `/` to access the parent in a path does not work for resources thus the css file is not found resulting in a npe----- [ ] change in changelogmd described (bug introduced in 41dev)- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? search bar appears here i think @j0hannes  should run the build at his system currently one has to checkout the code and execute `/gradlew run` as we currently have issues with our code signing certificate || @koppor i just rebuilt the package from git and the search bar is still not there || @j0hannes did you checked-out the branch `fix3505` or still used the master? since this pr is not yet merged the fix is not included in the master branch if you used the correct branch to build is the same error message still there? || anyway i merge this now since the code still works under normal conditions and might help in others so a new checkout of the master branch should work now || @tobiasdiez now its back the package will certainly only use the master branch i though it was already merged there || @j0hannes thanks for the feedback and your help debugging this issue! much appreciated  ||
415,3526,3529,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,add null checks in groupchangeviewmodel this avoids the npes in #3526 however i cant get the groups side pane to repaint and depict the modified groups tree ive tried different ways via calling the `groupssidepane` or setting selected groups in the `statemanager` but no success@tobiasdiez how do i force the `groupsidepane` to display a changed group tree?----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? sadly updates to the group tree in general are ignored see eg https://githubcom/jabref/jabref/issues/3189 normally one would like that all changes are automatically propagated using the event bus / javafx binding but for some reason this does not work (sorry i forgot the details) || ok thanks for clarifying i am not sure what to do with this pr then under the hood it works (avoids the exceptions) but all of this is not visible to the user right now it requires a restart of the application || is the view updated when you switch between databases? this always worked for me so far i would say merge this pr here (since it fixes the npe) and comment in the above issue that there are more update problems ill have a look at this problem but not right now as this week is kind of a hell for me || yes it is updated when switching between databases eg all groups are removed and the all entries group is displayed when i remove the group statement a rename of the group in the file doesnt carry over so there are probably deeper problemsi still have the problem that it tends to display the groups tree of the wrong database but at least the change is reflected somehow || can this be merge now? || sure go ahead ||
416,2533,3533,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix preview performance this unifies the access to the csl engine the adapter class will hold one instance of it and only recreate it when the style changes this improves the performance of from the second call to the preview drastically and should provide an acceptable speed to fix #2533in addition i extended the search for citation styles when jabref is run during developmenti will add changelog and friends but for the moment my biggest problem is that the unit tests are broken on master (at least for me)----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @lenhard @tobiasdiez thanks for the fast review here are to comments to lenhards first message:> in that case the configured citation style can be used but i cannot select a new one in the preferences dialog there the list is emptyyes i did not consider this case i assume the fat-jar contains the styles still packed as jar im sure i can fix this> then when trying to preview items i get exceptions but these exceptions happen reliably for certain bib items so it seems just like a bad combination of the randomly selected style i used for testing (acm sig 3+ authors) and the bib itemstook a while but i could pin it down im not sure i caught the exception before but now you will see ""cannot create preview"" and the exception appears in the log as usual the error comes from your bibentry when you look at your bibtex code you see```month      {december 17-19}```if this is indeed valid bibtex then our csl converter does not handle it correctly you can find [the json format](https://hastebincom/udibubehiwjson) of what `orgjabreflogiccitationstylecsladapter#bibentrytocslitemdata` makes from your code its so short that you spot the error easily csl is choking on the invalid date-partsas soon as you remove the days the item is rendered correctlythis error should have happened before as i did not touch that part im not sure how this can reliably be fixed as we only extract the latex-free fields and turn them into strings that should probably be a different pr || @halirutan thanks for the investigation and i hope you did not waste too much time on that that is not correct bibtex (well bibtex is very open and relaxed and of course you can write it in this way but this is not how the content of the month field is expected) i just opened an old bib file and clicked around not caring too much about the actual data you can ignore that error in your pr herei think a viable strategy would actually be to absorb the exception completely exceptions in jabrefs log should indicate problems in jabref this is not a problem of jabref but of user data and the citation styles library therefore i think it would be sufficient to create a log entry stating that the attempt to parse an entry results in an error from the citation styles library but this can be part of a different pr || things that need to work:1 fast scrolling through the entry liest with preview open2 edit -> copy preview for single and many items3 on a selection right click and copy citation@lenhard i cannot reproduce that the styles are not found with the fat jar can you try to delete and rebuild it and show exactly what you try? i see all styles and i can switch them as usual the fat jar has the same structure as the normal jar with all styles included as files || i am doing the following: - execute `gradlew build` - cd to `build/libs` - execute `java -jar jabref-41-devjar` - for some reason there is nothing available to select in the preview panel (see picture) although the csl files are contained in the fat jar (not as a jar but as the single csl files right in the root of the jar) the log says ```opening: c:\users\joerg\desktop\jl-main\diss\tex\referencesbibsomething went wrong while adding the discovered citationstyles to the list ```![preview](https://user-imagesgithubusercontentcom/1515701/34074258-bcdc0de6-e2ab-11e7-8c2d-d9fba3636aeapng)furthermore i am getting several warnings on the console:```dec 16 2017 10:02:18 pm javafxscenecssstylehelper calculatevaluewarning: could not resolve -fx-info while resolving lookups for -fx-text-fill from rule *log in stylesheet jar:file:/c:/workspaces/jabref/build/libs/jabref-41-dev-fatjar!/org/jabref/gui/errorconsole/errorconsolecss```after these warnings i updated my current installation from java 180_144 to java 180_152 and the warnings were gone but the rest stays the same (no citation styles in the list) my configuration is now```jabref 41-devwindows 10 100 amd64 java 180_152``` || i tested it and i found there is a problem with how you get the path will commit a fix || @halirutan  @lenhard  i fixed the path handling and improved the code for searching inside the jar filefor me it works now when i directly run jabref main in eclipse 🙌 😃  || @siedlerchr can you point out what exactly went wrong with the path so that i dont make the mistake in the future? otherwise nice clean up! i removed your `println` i guess you simply forgot this and i renamed `jarfs` to `jarfs` to satisfy my spell check (i like to have absolutely no warning if possible :smiley: )@lenhard can you test it again your approach is basically what i did too and here it worked || "
417,3538,3539,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix options databinding by adding elements if they are not in the initial map fixes #3538 i dunno if this is the best idea but it works<!-- describe the changes you have made here: what why  -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? can you please explain the reason for the bug? in general the string converter should not modify the source or target map || the reason for the bug is that the fromstring method does a lookup in the map with the current txt in the field if you enter a non predefined string into it the map lookup returns null because not found   ||
418,1018,3541,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"[wip] add ""convert to bibtex format"" cleanup <!-- describe the changes you have made here: what why  -->as [wished in the forum](http://discoursejabreforg/t/convert-back-from-biblatex-to-bib/) and required for #1018----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? what about adding some round-trip integration tests where a bibtex entry is converted into biblatex and back asserting that nothing has changed?this would give us a bit more confidence that all of this is working fine you could start with the example from the forums http://discoursejabreforg/t/convert-back-from-biblatex-to-bib/955/6 || @linusdietz good suggestion i now added round-trip tests in both directions || @lenhard thanks for the review and the suggestion to improve the ui i now made the checkboxes modal ill merge this pr now since it has 15 positive reviews and was on ""ready-for-review"" for almost a month  || "
419,3476,3551,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,make path relative when adding automatically found file fixes #3476<!-- describe the changes you have made here: what why  -->----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
420,2852,3553,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix group search performance this includes currently 2 changes:fixes #28521 the input field for the group search is delayed now it waits until the user has finished typing and starts the search afterward this increases the usability and prevents lags during typing2 the recursivetreeelement caches the current predicate so that branches of the group tree are not tested over and over again this is an ugly solution so far but we need to test if this or something similar (but beautiful) boosts the performance considerably----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @tobiasdiez > the creation of nodes is expensive since the hit counter triggers a run over all entries @halirutan based on your experience with the performance investigation is my observation correct?i guess this is what i saw this morning in the profiler i didnt investigate further but i was surprised that i saw constructor-hits i thought the group-tree is static until it is changed by adding/deleting nodes but instead it seems the tree is rebuilt i havent worked through the whole implementation because there is a lot of stuff in it i havent worked with before jabref this is another reason why i had the hope someone could join on this branch because i dont feel confident to implement a good fix for this fundamental flaw in the design || ok i think i found a solution which reuses the children does not need to store the predicate but nonetheless has a good performance || @lenhard have you seen the comment in the issue this pr should solve?> @tobiasdiez unfortunately the new version is not working as expected while it still filters the groups when a filtered group is selected the associated entries are not updated accordingly in the main table view this was not the case with the previous version || @halirutan sorry i did not look at the issue again and just tested for performance not correctness of course that bug should be fixed before merging || bug fixed -> merge! 😃  || great! ||
421,3576,3578,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,"refactor export code to fix #3576 <!-- describe the changes you have made here: what why  -->fixes  #3576i refactored the export package so that it now has a similar structure of the importer and a similar code can now be used for imports and exports since the issue #3576 didnt occurred for imports this refactoring automatically fixes the problem for the exportnotable changes:- `exportformat` is renamed to `exporter`- `exportformats` is renamed to `exportfactory` and no longer static- `fileextensions` is renamed to `filetype`----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? some mior things the only thing we should discuss is the renaming of the fileextensions to filetypefor me filetype would include actual information about the type or a specific class but in this case its solely the extension || @siedlerchr thanks for the feedback i now changed the code accordinglywhy dont you like the name `filetype`? the class currently contains a description and a list of extensions (eg ""bibtex library"" with ""bib"") this is a bit for information than just extensions (which would be just a `set<fileextension>`) but i have no strong opinion about the name (the rename was triggered by the code `importergetextensions()getextensions()`) || "
422,3112,3591,1,0,0,1,0,1,1,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"maintable leaves the swing year and comes back in a new javafx dress <!-- describe the changes you have made here: what why  -->2017:![old](https://user-imagesgithubusercontentcom/5037600/34457968-d66229c8-edc1-11e7-9a2b-cae5ec8b1bfdpng)2018:![image](https://user-imagesgithubusercontentcom/5037600/34472026-e1498894-ef57-11e7-961c-c64a5030227fpng)there are still many many things missing for a fully working version but i thought i give you an early preview feedback welcomehappy new year everybody!fixes #3356 fixes #3532 and fixes #3112known bugs: (ticked  resolved)- [ ] changes to entries dont mark database as changed- [x] changes to entries are not reflected in main table- [x] cleanup does not work- [x] ctrl + a in entry editor selects all entries in table [not reproducable]- [x] escape does not close entry editor- [x] column width is not correct if the option ""resize to fit window width"" is activated- [ ] select multiple entries by holding mouse button: [code to fix](https://communityoraclecom/thread/2621389)status of features:- [x] sorting (shift + click for multi-column sort)- [x] filtering by search and groups - [ ] context menus for the icons- [ ] right-click menu- [ ] setting special fields like reading status / priority /  through the main table- [ ] marked entries are not highlighted- [ ] drag & drop to and from the table- [ ] float mode does not work- [ ] color cells in table depending on whether the field is optional/required----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?             cool! could you point me to new implementation? in your large commit i see only a lot of icon changes || oh sorry - i forgot to commit all files the main changes are in the `guimaintable` package || while you are working on this you might also take a look at #3356  we could use the latex2html converter and then convert that html formatting to the textflow which was done in the search component tooltips || yes this issue is already fixed merely by switching to javafx - the unicode is correctly displayed (see above the second entry in the table the first screenshot shows the boxes while the correct string is shown in the second screenshot) || one more step in the right direction this pr has the potential to fix a lot of display bugs and we should be able to get rid of the annoying and unmaintained glazed lists librarynevertheless i need to add a word of caution: we cannot allow the same situation as for the entry editor again weve spent almost half a year in un-releaseable limbo because of that the replacement for the main table needs to be absolutely bullet proof however the amount of  lines of code in this pr is too much for a meaningful review so we need a lot of manual testing by basically all developersive played around a bit and i like the new layout of the maintable whats a little strange is that every second row is highlighted differently this should change for the final version edit: things that should be fixed with this pr ) https://githubcom/jabref/jabref/issues?qis%3aissue+is%3aopen+label%3amaintable || @siedlerchr thanks for the feedback ill improve the code accordingly@lenhard i completely agree! we should find a way to have a realeasable version while still work on the migration to javafx the main problem is that the code is tightly coupled to the maintable (ie there is no abstraction layer before the basepanel/maintable that used in the other swing dialogs) this has the potential upset that every single dialog may now trigger a bug (for example because it runs some code not on the javafx thread) so even through i will try to thoroughly test the new code before marking it as ""ready-for-review"" there might still be countless bugs left which we need to find (and fix) in teamwork moreover for the same reason i think we also need to release a beta againthat being said the immediate question is: how much functionality should i try to migrate in this pr and what should follow as new prs? as you said the size of the changes makes the pr already unreviewable but i would really like to have your feedback about some design questions especially since our aim should be not just to improve the gui but also decouple the code and make it more reusablecurrently the new maintable is in a state where the very basic functionality works and the code is decoupled enough to actually write unit gui tests for it there are still some bugs/feature that definitely need to be fixed before a users touches it (eg restore column width context menus for the icons a few display bugs) then there are a few features that are not essential and rather isolated (eg ""marking of entries"") these are probably good candidates for follow-up prs and finally there are features that i dont really see any benefit in reimplementing (eg coloring of table cells when the field is optional/required) or that are not really possible to implement with javafx (eg [""float search""](https://bugsopenjdkjavanet/browse/jdk-8091326)) finally the possible bug fixes @lenhard mentions should also follow as new prsany thoughts on this? (sorry for the long text) || i think we could have a separate main table beta test-release in an additional branch highly experimental and let some users test this functionality who are interested especially we would need some mac/linux guys  || we can create a `javafx` branch where we can integrate not ready features but completed work packages (such as a basic entry table in javafx)the master branch must be release-ready at all times release-ready means: all features of the old versions should be working (or the dev team decided to remove/disable a feature such as the auto completion) || so i used this version now in production during the past few days and fixed a lot of bugs although not all features are yet migrated (see list above) i mark this pr now as ready for review all further changes are coming as extra prs onto this branch i would suggest that you try this version out and if nothing serious pops up i would create a post in the forum advertising this pr and ask users about their opinion (something like a very early access program instead of several beta releases) what do you think? || i would be really cool if you could provide a table that lists all features related to the maintable that were present in the swing version eg sorting options right click options entry drop column sorting and could indicate if these features are working in the new version then we would have an overview of what features actually exist in the main table and we could have a meaningful discussion about which features we want to droppersonally i dont really have an overview of all the things that the maintable can do could you perhaps provide this overview? i guess also @koppor know a thousand maintable features that i do not know || i changed the base branch to ""maintable-beta"" i would propose to proceed as follows:1 @jabref/developers review2 work-in review comments3 merge into `maintable-beta`4 ask users to feedback to `maintable-beta`5 add new prs on `maintable-beta`why? 1 i think prs should be short and be closed fast not left open as the ones of @koppor so we can move on quickly and we can also link to comments of this pr if necessary2 the discussions here are mixed on the implementation details and overall issues i think we should focus on implementation details 😇 in case we need a overview-pr we can create a pr from `maintable-beta` to `master` and describe the overall status there || i am *very* used to the floating search see screenshots at https://githubcom/jabref/jabref/issues/3618 || @lenhard i updated the first post to also include the features that are already migrated (it is only the very basic functionality) right now we do not need to decide what features should be dropped since there is still a lot fundamental functionality to migrate (but we should speak about it in the next devcall) i just dont want this pr to explode even more and get feedback about some of the other refactorings / changes thus the early ready-for-review @koppor sounds like a good plan  || i fixed the close entry editor with escape bug || @lenhard @siedlerchr is this architecturally ok? then i would propose to merge it into `maintable-beta` to reduce the size of prsnote: the ""real"" pr of getting this into jabref is https://githubcom/jabref/jabref/pull/3621 - there code updates are only made as prs to that branch || "
423,3356,3591,1,0,0,1,0,1,1,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"maintable leaves the swing year and comes back in a new javafx dress <!-- describe the changes you have made here: what why  -->2017:![old](https://user-imagesgithubusercontentcom/5037600/34457968-d66229c8-edc1-11e7-9a2b-cae5ec8b1bfdpng)2018:![image](https://user-imagesgithubusercontentcom/5037600/34472026-e1498894-ef57-11e7-961c-c64a5030227fpng)there are still many many things missing for a fully working version but i thought i give you an early preview feedback welcomehappy new year everybody!fixes #3356 fixes #3532 and fixes #3112known bugs: (ticked  resolved)- [ ] changes to entries dont mark database as changed- [x] changes to entries are not reflected in main table- [x] cleanup does not work- [x] ctrl + a in entry editor selects all entries in table [not reproducable]- [x] escape does not close entry editor- [x] column width is not correct if the option ""resize to fit window width"" is activated- [ ] select multiple entries by holding mouse button: [code to fix](https://communityoraclecom/thread/2621389)status of features:- [x] sorting (shift + click for multi-column sort)- [x] filtering by search and groups - [ ] context menus for the icons- [ ] right-click menu- [ ] setting special fields like reading status / priority /  through the main table- [ ] marked entries are not highlighted- [ ] drag & drop to and from the table- [ ] float mode does not work- [ ] color cells in table depending on whether the field is optional/required----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?             cool! could you point me to new implementation? in your large commit i see only a lot of icon changes || oh sorry - i forgot to commit all files the main changes are in the `guimaintable` package || while you are working on this you might also take a look at #3356  we could use the latex2html converter and then convert that html formatting to the textflow which was done in the search component tooltips || yes this issue is already fixed merely by switching to javafx - the unicode is correctly displayed (see above the second entry in the table the first screenshot shows the boxes while the correct string is shown in the second screenshot) || one more step in the right direction this pr has the potential to fix a lot of display bugs and we should be able to get rid of the annoying and unmaintained glazed lists librarynevertheless i need to add a word of caution: we cannot allow the same situation as for the entry editor again weve spent almost half a year in un-releaseable limbo because of that the replacement for the main table needs to be absolutely bullet proof however the amount of  lines of code in this pr is too much for a meaningful review so we need a lot of manual testing by basically all developersive played around a bit and i like the new layout of the maintable whats a little strange is that every second row is highlighted differently this should change for the final version edit: things that should be fixed with this pr ) https://githubcom/jabref/jabref/issues?qis%3aissue+is%3aopen+label%3amaintable || @siedlerchr thanks for the feedback ill improve the code accordingly@lenhard i completely agree! we should find a way to have a realeasable version while still work on the migration to javafx the main problem is that the code is tightly coupled to the maintable (ie there is no abstraction layer before the basepanel/maintable that used in the other swing dialogs) this has the potential upset that every single dialog may now trigger a bug (for example because it runs some code not on the javafx thread) so even through i will try to thoroughly test the new code before marking it as ""ready-for-review"" there might still be countless bugs left which we need to find (and fix) in teamwork moreover for the same reason i think we also need to release a beta againthat being said the immediate question is: how much functionality should i try to migrate in this pr and what should follow as new prs? as you said the size of the changes makes the pr already unreviewable but i would really like to have your feedback about some design questions especially since our aim should be not just to improve the gui but also decouple the code and make it more reusablecurrently the new maintable is in a state where the very basic functionality works and the code is decoupled enough to actually write unit gui tests for it there are still some bugs/feature that definitely need to be fixed before a users touches it (eg restore column width context menus for the icons a few display bugs) then there are a few features that are not essential and rather isolated (eg ""marking of entries"") these are probably good candidates for follow-up prs and finally there are features that i dont really see any benefit in reimplementing (eg coloring of table cells when the field is optional/required) or that are not really possible to implement with javafx (eg [""float search""](https://bugsopenjdkjavanet/browse/jdk-8091326)) finally the possible bug fixes @lenhard mentions should also follow as new prsany thoughts on this? (sorry for the long text) || i think we could have a separate main table beta test-release in an additional branch highly experimental and let some users test this functionality who are interested especially we would need some mac/linux guys  || we can create a `javafx` branch where we can integrate not ready features but completed work packages (such as a basic entry table in javafx)the master branch must be release-ready at all times release-ready means: all features of the old versions should be working (or the dev team decided to remove/disable a feature such as the auto completion) || so i used this version now in production during the past few days and fixed a lot of bugs although not all features are yet migrated (see list above) i mark this pr now as ready for review all further changes are coming as extra prs onto this branch i would suggest that you try this version out and if nothing serious pops up i would create a post in the forum advertising this pr and ask users about their opinion (something like a very early access program instead of several beta releases) what do you think? || i would be really cool if you could provide a table that lists all features related to the maintable that were present in the swing version eg sorting options right click options entry drop column sorting and could indicate if these features are working in the new version then we would have an overview of what features actually exist in the main table and we could have a meaningful discussion about which features we want to droppersonally i dont really have an overview of all the things that the maintable can do could you perhaps provide this overview? i guess also @koppor know a thousand maintable features that i do not know || i changed the base branch to ""maintable-beta"" i would propose to proceed as follows:1 @jabref/developers review2 work-in review comments3 merge into `maintable-beta`4 ask users to feedback to `maintable-beta`5 add new prs on `maintable-beta`why? 1 i think prs should be short and be closed fast not left open as the ones of @koppor so we can move on quickly and we can also link to comments of this pr if necessary2 the discussions here are mixed on the implementation details and overall issues i think we should focus on implementation details 😇 in case we need a overview-pr we can create a pr from `maintable-beta` to `master` and describe the overall status there || i am *very* used to the floating search see screenshots at https://githubcom/jabref/jabref/issues/3618 || @lenhard i updated the first post to also include the features that are already migrated (it is only the very basic functionality) right now we do not need to decide what features should be dropped since there is still a lot fundamental functionality to migrate (but we should speak about it in the next devcall) i just dont want this pr to explode even more and get feedback about some of the other refactorings / changes thus the early ready-for-review @koppor sounds like a good plan  || i fixed the close entry editor with escape bug || @lenhard @siedlerchr is this architecturally ok? then i would propose to merge it into `maintable-beta` to reduce the size of prsnote: the ""real"" pr of getting this into jabref is https://githubcom/jabref/jabref/pull/3621 - there code updates are only made as prs to that branch || "
424,3532,3591,1,0,0,1,0,1,1,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"maintable leaves the swing year and comes back in a new javafx dress <!-- describe the changes you have made here: what why  -->2017:![old](https://user-imagesgithubusercontentcom/5037600/34457968-d66229c8-edc1-11e7-9a2b-cae5ec8b1bfdpng)2018:![image](https://user-imagesgithubusercontentcom/5037600/34472026-e1498894-ef57-11e7-961c-c64a5030227fpng)there are still many many things missing for a fully working version but i thought i give you an early preview feedback welcomehappy new year everybody!fixes #3356 fixes #3532 and fixes #3112known bugs: (ticked  resolved)- [ ] changes to entries dont mark database as changed- [x] changes to entries are not reflected in main table- [x] cleanup does not work- [x] ctrl + a in entry editor selects all entries in table [not reproducable]- [x] escape does not close entry editor- [x] column width is not correct if the option ""resize to fit window width"" is activated- [ ] select multiple entries by holding mouse button: [code to fix](https://communityoraclecom/thread/2621389)status of features:- [x] sorting (shift + click for multi-column sort)- [x] filtering by search and groups - [ ] context menus for the icons- [ ] right-click menu- [ ] setting special fields like reading status / priority /  through the main table- [ ] marked entries are not highlighted- [ ] drag & drop to and from the table- [ ] float mode does not work- [ ] color cells in table depending on whether the field is optional/required----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?             cool! could you point me to new implementation? in your large commit i see only a lot of icon changes || oh sorry - i forgot to commit all files the main changes are in the `guimaintable` package || while you are working on this you might also take a look at #3356  we could use the latex2html converter and then convert that html formatting to the textflow which was done in the search component tooltips || yes this issue is already fixed merely by switching to javafx - the unicode is correctly displayed (see above the second entry in the table the first screenshot shows the boxes while the correct string is shown in the second screenshot) || one more step in the right direction this pr has the potential to fix a lot of display bugs and we should be able to get rid of the annoying and unmaintained glazed lists librarynevertheless i need to add a word of caution: we cannot allow the same situation as for the entry editor again weve spent almost half a year in un-releaseable limbo because of that the replacement for the main table needs to be absolutely bullet proof however the amount of  lines of code in this pr is too much for a meaningful review so we need a lot of manual testing by basically all developersive played around a bit and i like the new layout of the maintable whats a little strange is that every second row is highlighted differently this should change for the final version edit: things that should be fixed with this pr ) https://githubcom/jabref/jabref/issues?qis%3aissue+is%3aopen+label%3amaintable || @siedlerchr thanks for the feedback ill improve the code accordingly@lenhard i completely agree! we should find a way to have a realeasable version while still work on the migration to javafx the main problem is that the code is tightly coupled to the maintable (ie there is no abstraction layer before the basepanel/maintable that used in the other swing dialogs) this has the potential upset that every single dialog may now trigger a bug (for example because it runs some code not on the javafx thread) so even through i will try to thoroughly test the new code before marking it as ""ready-for-review"" there might still be countless bugs left which we need to find (and fix) in teamwork moreover for the same reason i think we also need to release a beta againthat being said the immediate question is: how much functionality should i try to migrate in this pr and what should follow as new prs? as you said the size of the changes makes the pr already unreviewable but i would really like to have your feedback about some design questions especially since our aim should be not just to improve the gui but also decouple the code and make it more reusablecurrently the new maintable is in a state where the very basic functionality works and the code is decoupled enough to actually write unit gui tests for it there are still some bugs/feature that definitely need to be fixed before a users touches it (eg restore column width context menus for the icons a few display bugs) then there are a few features that are not essential and rather isolated (eg ""marking of entries"") these are probably good candidates for follow-up prs and finally there are features that i dont really see any benefit in reimplementing (eg coloring of table cells when the field is optional/required) or that are not really possible to implement with javafx (eg [""float search""](https://bugsopenjdkjavanet/browse/jdk-8091326)) finally the possible bug fixes @lenhard mentions should also follow as new prsany thoughts on this? (sorry for the long text) || i think we could have a separate main table beta test-release in an additional branch highly experimental and let some users test this functionality who are interested especially we would need some mac/linux guys  || we can create a `javafx` branch where we can integrate not ready features but completed work packages (such as a basic entry table in javafx)the master branch must be release-ready at all times release-ready means: all features of the old versions should be working (or the dev team decided to remove/disable a feature such as the auto completion) || so i used this version now in production during the past few days and fixed a lot of bugs although not all features are yet migrated (see list above) i mark this pr now as ready for review all further changes are coming as extra prs onto this branch i would suggest that you try this version out and if nothing serious pops up i would create a post in the forum advertising this pr and ask users about their opinion (something like a very early access program instead of several beta releases) what do you think? || i would be really cool if you could provide a table that lists all features related to the maintable that were present in the swing version eg sorting options right click options entry drop column sorting and could indicate if these features are working in the new version then we would have an overview of what features actually exist in the main table and we could have a meaningful discussion about which features we want to droppersonally i dont really have an overview of all the things that the maintable can do could you perhaps provide this overview? i guess also @koppor know a thousand maintable features that i do not know || i changed the base branch to ""maintable-beta"" i would propose to proceed as follows:1 @jabref/developers review2 work-in review comments3 merge into `maintable-beta`4 ask users to feedback to `maintable-beta`5 add new prs on `maintable-beta`why? 1 i think prs should be short and be closed fast not left open as the ones of @koppor so we can move on quickly and we can also link to comments of this pr if necessary2 the discussions here are mixed on the implementation details and overall issues i think we should focus on implementation details 😇 in case we need a overview-pr we can create a pr from `maintable-beta` to `master` and describe the overall status there || i am *very* used to the floating search see screenshots at https://githubcom/jabref/jabref/issues/3618 || @lenhard i updated the first post to also include the features that are already migrated (it is only the very basic functionality) right now we do not need to decide what features should be dropped since there is still a lot fundamental functionality to migrate (but we should speak about it in the next devcall) i just dont want this pr to explode even more and get feedback about some of the other refactorings / changes thus the early ready-for-review @koppor sounds like a good plan  || i fixed the close entry editor with escape bug || @lenhard @siedlerchr is this architecturally ok? then i would propose to merge it into `maintable-beta` to reduce the size of prsnote: the ""real"" pr of getting this into jabref is https://githubcom/jabref/jabref/pull/3621 - there code updates are only made as prs to that branch || "
425,3596,3597,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,lookup filetypes in enum set to prevent npe due to uninitialized expo… …rterfactoryfixes #3596this is my initial idea maybe we can optimize this<!-- describe the changes you have made here: what why  -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i refactored the list where possible  this can be further improved if this rather simple dialog is ported to javafx (for example getting rid of the glazedcel eventlistl dependency) ||
426,3598,3600,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,make it possible to disable autocompletion in the search bar fixes #3598 by covering the autocompletion in the search bar with the same preference option as in the entry editor ----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
427,3576,3606,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,add exporter desc to enum analog to import fixes #3605follow up from #3576 <!-- describe the changes you have made here: what why  -->![jabrefextension](https://user-imagesgithubusercontentcom/320228/34617477-df47f5b2-f23b-11e7-907e-a0d1e595406epng)----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
428,3605,3606,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,add exporter desc to enum analog to import fixes #3605follow up from #3576 <!-- describe the changes you have made here: what why  -->![jabrefextension](https://user-imagesgithubusercontentcom/320228/34617477-df47f5b2-f23b-11e7-907e-a0d1e595406epng)----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
429,1750,3632,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,export translator field to msoffice 2007 xml upcoming issue from #1750while testing this i noticed that the import was broken (due to the recent export filetype/extension changes) fixed that toodirectly use bookauthors and translator for import from xmladd test ----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? as the feedback was okay i merge this in ||
430,2607,3642,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,extend ris import with multiple fields meeting time is programming time :)this addresses the import related things described in #3634 #2607i basically went through the lists linked by @dsifford in the first issue tried to adapt our import if possible and added custom fields when not our importer tests are still running----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez thanks a lot! i didnt have biblatex in mind when setting the fields your comments are all integrated || is the `risimportertestfiles` class not executed during the travis build? because those tests were actually partly broken anyway i adapted them to the new import structure (which changes a few fields) and i added the ris code from  #3634 as a new test case || regarding the test seems to be a general problem with the parameterized tests and the new junit äi noticed the same with the office xml tests || ok then this is something that really needs fixing ill open an issue for it otherwise this pr is ready to merge from my point of view || in the spirit of getting things done and because all reviewer comments have been addressed ill merge this now ||
431,3634,3642,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,extend ris import with multiple fields meeting time is programming time :)this addresses the import related things described in #3634 #2607i basically went through the lists linked by @dsifford in the first issue tried to adapt our import if possible and added custom fields when not our importer tests are still running----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez thanks a lot! i didnt have biblatex in mind when setting the fields your comments are all integrated || is the `risimportertestfiles` class not executed during the travis build? because those tests were actually partly broken anyway i adapted them to the new import structure (which changes a few fields) and i added the ris code from  #3634 as a new test case || regarding the test seems to be a general problem with the parameterized tests and the new junit äi noticed the same with the office xml tests || ok then this is something that really needs fixing ill open an issue for it otherwise this pr is ready to merge from my point of view || in the spirit of getting things done and because all reviewer comments have been addressed ill merge this now ||
432,3634,3661,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,export no empty lines in ris format this fixes the remaining part of #3634i had a closer look at the export / layout logic and wow this is arcane! the code is more than 12 years old and almost as bad as the bibtex parser used to bethis pr is based on two decisions: - i do not want to change the old layouting code if i do i am almost guaranteed to break it in many ways- i do not know if the removal of empty lines in exported text is really desirable in all cases maybe users wrote their custom formatters to explicitly include empty lines? i cannot tellwe now have one case (ris export) where empty lines are not desired so i implemented a solution that only changes the behavior of the ris export but leaves all others untouched nonetheless it is very easy (single constructor parameter) to let other formats use empty line elimination as well the empty line elimination is done using a hardly understandable but fully functional regex----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
433,3645,3665,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,migrate importer tests to junit5 in the course of https://githubcom/jabref/jabref/pull/3642#issuecomment-358581869 we realized that our current (junit4) parameterized tests are not executed on the (junit5) travis build this is tracked here: #3645 i think this is a huge problem because we are missing out on a lot of validation here this pr is a migration of the paramterized ris tests from junit 4 to junit 5 id like to put this forward to discussion so that we can agree on how our parameterized junit 5 tests are to look like when we have agreed we can migrate all tests so please look at the code and write if you are happy with this[note that parameters cannot be resolved for lifecycle methods](http://junitorg/junit5/docs/current/user-guide/#writing-tests-parameterized-tests-lifecycle-interop) (`@beforeeach`) in junit 5 hence the structure in the pr----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez thanks a lot for the feedback! - regarding test arguments: i dont really see the point in splitting the single argument into two we have used the convention that the `bib` and `importerformat` files have the same name and why not keep leveraging that? also i find it better to do the path conversion in one place only but if we want to pass a stream of paths we always have to do that beforehand - regarding unification of importer tests: i have refactored around a little and arrived at a solution that should work for all importers i quite like how that condenses the `risimportertestfiles` classfun fact: i may have used junit 5 paramterization but so far the assertions were still junit 4 ill change that in the following || the importer tests where running for each file but that seems to have been ignored in the migration process by the junit 5 compi looked at this too but didnt find a way to get it to work again || yes indeed ill gradually go through all parameterized importer tests and try to get them working in junit 5 syntax again as part of this pr || turns out quite a lot of tests for different importers (bibtexml medline tested so far) actually fail and this is down to the implementations of the importers seems like these tests have never been executed beforei am not sure what to do about this here the point of this pr was a refactoring of the testing code not a repair of broken importers || i would merge this if all tests are at least executed or better you merge this in a new branch where we will fix the importer then || i converted and fixed some fetcher tests in another pr i found that the gvk test would also be a goo candidate for using the same schema as here  || i have now migrated the complete importer tests to junit5 syntaxsadly they are in a dire state a lot of them are actually failing and seemed to have never been executed anyway and even except from the refactorings that i have already done there as a lot of things that can still be improvedi think its best if we take the current (failing) state and try to repair each importer and its tests here in the pr this might be some work but the importer tests cannot really continue as broken as they are now help on this is very much appreciated and should be possible without conflicts || you can ignore the failing fetcher test this is already fixed but i wonder why there is now an npe with the method source || i should have more meetings so that i get more programming done :)i think i have repair all importers and their tests now ill see what travis says and ill also do one more round of refactoring on the code (not now) when i am done this can hopefully be merged || lgtm! if you merge master in your branch you will get the fetcher test fixed as well || ok this can be merged from my point of viewalthough this is already a huge refactoring of the existing tests theres certainly more that can be improved i have a few things in mind but i would rather keep them out of this already big pr ill tackle them later when this is merged || that looks weird indeed looking at the first one: https://codecovio/gh/jabref/jabref/src/migrate-parameter-tests/src/main/java/org/jabref/logic/importer/fileformat/bibtexmlimporterjava the `importdatabase` method is recorded as not covered but when i execute the tests in intellij there are twenty test files for that method alone the key seems to be that the missing methods are the ones that use junit5 parameterized tests it seems that codecov does not record the coverage of these tests but they are the core tests of the whole packagebut maybe the problem is still travis? how do i see from our travis output that the tests are really executed? i can push a failing test deliberately but there surely is a better way? || since the travis log contains statement like >13:43:57686 [main] warn  orgjabreflogicmsbibmsbibdatabase - could not parse documenti suppose the tests are correctly invoked (in fact the travis log exploded even more) probably there is a problem with the gradle task `jacocojunit5testreport` (but there is no need to fix this in this pr) || i would merge this in and i think tthere might be a solution for the reports:https://githubcom/junit-team/junit5/issues/1024 ||
434,3648,3670,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,fixes #3648: chained modifiers work again <!-- describe the changes you have made here: what why  -->fixes #3648 the problem was that `resultinglabel  formatterget()format(label)` always used the original input and not the result of the previous modifier----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
435,3679,3690,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"[wip] file link deletion dialog improvements this pull request fixes the following issues:* when a file link in a bibliography entry is deleted by the user a dialog is displayed previously the default (first) dialog option deleted the linked file from disk the default behaviour has been changed to just removing the file link from the entry  this is a fix to issue #3679 fixes #3679 * when clicking the ""cancel"" button in the file link deletion dialog the file  was being deleted from the list this behaviour has been fixed by changing the return value of the `delete()` method when the ""cancel"" button is chosen## example screenshot:![2018-02-04-001057_477x142_scrot](https://user-imagesgithubusercontentcom/20418176/35773368-0191977e-0950-11e8-90cb-ba778105f3e3png)## checklist:- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)---i am unsure whether the remaining checklist items are applicable to this pull requesti would be willing to provide tests for the `delete()` method however the `dialogservice` member cannot be stubbed-in/mocked as it is (as it is marked `final`) and therefore i cant control the returned chosen option from inside the unit testi would appreciate any pointers and suggestions thanks for your contribution! i have tested the changes locally and it works as expecteda little step for you a great step for ~~humanity~~ jabref users )just add the suggestions by  @tobiasdiez  and we can merge it in ps: if you include the word  `fixes #xxxx` then the corresponding issue will be closed automatically when the pr is merged  || thank you for your pointers! i have locally added `buttondatayes` and now i will attempt to prepare a test suite for the `remove()` method at least and push everything out when its ready :smile:  || okay i pushed out the changes adding the button data restored the original button order (at least on linux) but the remove button is now clearly the default and as far as i can tell from [javafx docs](https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/buttonbarhtml) this is the desired behaviourthe test code im not too proud of -- theres some weird hacking going on there to get the tests running and i had to balance between not making them brittle and not worsening the implementations readability just for tests sake if you have ideas for improvements id be happy to go back and fix the ugliness || well if im this close might as well try and make this pr as good as possible!ive added the suggested changes however i did leave some of the parentheses as they were -- near those long mock setup calls to be precise because i couldnt make them look decent otherwise || nice thanks again for your contributions we are looking forward to see more prs from you 😄  ||"
436,3344,3694,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,differentiate inbooks with different chapters this is my simple solution for #3344 issue ive added statement that checks authors titles and chapters of two inbooks what do you think?i have several questions:1 im not sure about using `comparesinglefield` function for comparing chapters because sometimes they are very similar but different for instance: chapter 1 and chapter 2 any idea? my is to remove chapter word from strings and then make the comparison 2 should i also add test for incollections?3 what about pages? as i noticed they can be a replacement for chapters should i consider them in the code?4 can i add another commits with some cleanup and refactor for the files ive touched? i mean adding some finals to make code less error prone etc thanks for your contribution!regarding your questions i can only answer some of them 1 i currently are on my mobile so i cant dig into that much but sounds like an idea you could look what the biblatex manual says about the possibile contents of the field thats our reference when in doubt about a field 2 maybe also a good idea3 could make sense if the same 4 sure code improvement is always good if its within the scope of the implementation regarding of finals you can omit  them in parametersregarding test you could migrate them to junit 5 if not already done for examples you can look at the fetcher tests just a bit different syntax  || ok so i added some more tests and pages field checks nevertheless i dont know how to upgrade tests to junit5 (i mean that there is something more to to than import beforeeach instead of before and i have no idea what it is) any tips?@tobiasdiez - in that case comparesinglefield would return for example empty_in_one constant where my if statement require not_equal so there is no problem :) anyway ive added test to cover that casealso ive made some cleanup and refactor i know a lot of finals but imo it prevents silly mistakes like reassigning values to function parameters (especially error prone in constructors)and ive merge master into my branchso how about now?----------------edit: codacy/pr quality review yells that there is something wrong but when i click details there is website with request error: missing parameter: prid message :/ || thank you for your contribution 😄 👍  ||
437,3535,3708,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,try to change color of magnifier icon i am trying to change the color of the magnifier icon as requested here: #3535however the icon refuses a color change it even opts out of the color scheme of jabref since it is black instead of purple (despite the fact that the icon is configured as purple in the code)@tobiasdiez how can i change the color of this icon? any change will do really for reasons unknown to me the icon straight-out refuses the change ----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) screenshot: ![grafik](https://user-imagesgithubusercontentcom/1366654/36230180-d60d2df6-11d9-11e8-99b5-d01f8055d960png)there is a space between the other icons until the cool solution from https://githubcom/jabref/jabref/issues/3535#issuecomment-352068826 is implemented i am in favor of using this approach reason: this makes the jabref feature explicit![papers search](http://s3amazonawscom/mekentosj-papers3-support-images/knowledgebase/papers%203%20for%20ios/advanced_search7_p3iospng) || well if @koppor really wants this im fine with it although i bet that more users get confused by a cyan-highlighted icon than they are getting enlighted by it ||
438,364,3709,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,group separator escaping fixes #3646  
439,938,3710,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,[wip] dublin core fixes #938 : only supporting [dublin core](https://enwikipediaorg/wiki/dublin_core)removed jabref namespace for xmp xmlns:bibtex removed some unused methods in gui/importer/entryfrompdfcreatorjava (discussed with @koppor and @stefan-kolb)deleted tests for xmputil (new ones are in progress)<!-- describe the changes you have made here: what why  -->----- [ ] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) this pull request is ready for the final review and for merging into master :) || for my general understanding and my newbie state:``` public static void writexmp(path path            collection<bibentry> bibtexentries bibdatabase database            boolean writepdfinfo xmppreferences xmppreferences) throws ioexception transformerexception {        collection<bibentry> resolvedentries        if (database  null) {            resolvedentries  bibtexentries        } else {            resolvedentries  databaseresolveforstrings(bibtexentries false)        }        try (pddocument document  pddocumentload(pathtofile())) {            if (documentisencrypted()) {                throw new encryptedpdfsnotsupportedexception()            }            if (writepdfinfo && (resolvedentriessize()  1)) {                // 1                xmputilwriterwritedocumentinformation(document resolvedentries                        iterator()                        next() null xmppreferences)                xmputilwriterwritedublincore(document resolvedentries null xmppreferences)            }            pddocumentcatalog catalog  documentgetdocumentcatalog()            pdmetadata metaraw  cataloggetmetadata()````for me it makes no sense to write more than one bibentry to the metadata of a pdf file  currently the implementation in xmputilwriter is also limited to a single element but implemented as a list (see line 260 and 110)can i drop the list?@siedlerchr @koppor @tobiasdiez  || i have no real idea concerning your question about the list i would say you could safely remove it but im not sure what happens if multiple entries have the same file linked and write their metadata into it (eg the pdf is a book and i have a bunch of `bookchapters` as separate entries)? || xmputilwriter line 147148before new metadata is written to the pdf all dublincoreschemas are removed so i think that there is currently no option to write more than one metaschemain your case i would assume that the last written data is visible (others lost) || well does the dublin core schema specify multiple entries?  || specifications are available at http://dublincoreorg/specifications/ the abstract model is there: http://dublincoreorg/documents/abstract-model/![grafik](https://user-imagesgithubusercontentcom/1366654/36341139-e8883824-13e9-11e8-8101-7c1db9b4a86fpng)in case i interpret that correctly one record contains one description which may contain multiple record setsthis is the edge case where one wants to write xmp to a proceedingsexample:- one chapter: https://linkspringercom/chapter/101007/978-3-540-79230-7_4- full proceedings: https://linkspringercom/book/101007/978-3-540-79230-7 || i considered all comments to the source code and refactored my code the last commit alters the behavior of the xmp import:the previous implementation only imports the first entry and drops the others the current implementation imports all metadata entries my thoughts are as follows: it is easier to import additional entries and delete not needed ones compared to importing single entries by hand if the needed entry is not the first one  ||
440,3613,3718,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,add cleanup operation for replacing ligatures fixes #3613i have used the mapping listed here: https://enwikipediaorg/wiki/typographic_ligature#ligatures_in_unicode_(latin_alphabets)please note that german users might be surprised by how this replaces the letter `ß`----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok ive taken out the conversion of ß and documented this in the code if there are no other characters that we want to exclude then this pr should be good to go ||
441,3536,3734,1,0,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,0,0,0,0,1,0,"add parser for german months (#3536) changed the month parse that it can also parse german months now this should solve issue #3536have i missed something?(for pe1718: name: johannes preßmar)----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please merge jabrefs branch `master` (should be available at `upstream/master`) to resolve conflicts in changelogmd || the tests are still failing from looking at the code i think that ""mär"" is not parsed correctly could you please investigate this?once all tests are passing on travis i think we can merge this || ill merge into `wip` finish the pr and merge it into `master` || i fixed the issues at https://githubcom/jabref/jabref/pull/37421 the java files had the wrong encoding (utf8 was not used)2 the implementation for ""mär"" and ""märz"" was missing || "
442,3146,3751,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add the menubar to the titlebar in macos fixes #3146![titlebar](https://user-imagesgithubusercontentcom/1254003/36424759-bf93ba9e-1644-11e8-828d-0d46d64dc343png) note that the screenshot shows ""java"" on the top left because i run from intellij if you install jabref from a dmg it should show ""jabref"" || nice!  || "
443,2617,3766,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,update architecture tests to catch static imports fixes a part of #2617updates the architecture tests to junit5 and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
444,3678,3767,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,extend toolbar with more icons and add tool tips i know this is a controversial topic in the maintable-beta right now but to get the discussion going a little more and taking inspiration from #3678 i took the liberty to extend the toolbar with more buttons herethis is really not meant as a final say it just moves the code in place for some buttons that seem of some value for me they can be removed again resorted and the layout is probably also not perfectheres a screenshot:![toolbar](https://user-imagesgithubusercontentcom/1515701/36594431-5af45894-189e-11e8-8b36-53408dee2328png)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) for the mysql fans i really need the two buttons for the shared database if a connection to a mysql is established in the current database 😇  (not for postgresql and oracle database) || @koppor: i find two actions in the code: `standardactionsconnect_to_shared_db` and `standardactionspull_changes_from_shared_db`so if a connection to mysql database is established you want both of these buttons to show and otherwise just the pull/push button? || oh only the second :) - that is needed for mysql (only)the former one is not needed at all currently no clue what it is useful for || decision in devcall:- separate social network buttons from the rest- add tracking for user actions and evaluate in the future which buttons should be displayed || @lenhard an fyi from me and please dont feel pressured: you might have seen that i want to make a consistent layout for all panels toolbars etc ([issue here](https://githubcom/jabref/jabref/issues/3678#issuecomment-367973471)) im going to wait with this until your pr here is pushed then i will merge the maintable-beta again into my local branch and incorporate all changes i really would like to have more icons on the toolbar to get a better feeling for the look || i grabbed the template from the material design icons and started to convert some of the icons we dont have in this style as an example emacs texstudio and vim ![emacs](https://user-imagesgithubusercontentcom/511683/36882887-c06c4910-1dd6-11e8-9830-b07ddf131207png) ![texstudio](https://user-imagesgithubusercontentcom/511683/36882888-c08829be-1dd6-11e8-8406-ddf0f8ac94c7png) ![vim](https://user-imagesgithubusercontentcom/511683/36882889-c0a2abf4-1dd6-11e8-881f-fd83e8fce2d4png)would it be of interest if i pursue this further? if yes does someone know if we can include them as a vector font so that we have those icons scalable to whatever resolution we need? im worrying about retina displays or other 4k devices where 32x32 let alone 16x16 icons look not good || @halirutan i would suggest you contribute that upstream read more at https://githubcom/templarian/materialdesign/blob/master/contributingmdthere are also the [academic icons](https://jpswalshgithubio/academicons/) however there is none for tools but some for dois pubmed || @koppor i might be wrong but the readme there reads in its final paragraph:> please note that at this time the only brand icons we accept requests for are popular social media sites/apps and widely used products/software thanks for understandingin fact i have searched for vim and emacs on the site first and was stunned that such widely used apps cannot be found it doesnt matter i have successfully searched for a way to create our own ttf font for the icons in this way we can stay consistent with our design and we can adjust the icons as we like || @halirutan i would agree that emacs and vim are widely used in case there is no pr yet why not creating a pr? i have to admit that other software is not that popularmaybe we should start another font project? maybe we fit into the [academic icons](https://jpswalshgithubio/academicons/) at least i would try 😇 thus also the latex users would benefit from your work: https://ctanorg/pkg/academicons || why not forking academic icons and proposing our latex-related to them?//edit:: regading vim and emacs you might find them here:https://githubcom/ryanoasis/nerd-fonts//edit2: they also provide a font patcher || i think there is no real need to use a font-based icon svg images can be included more easily in javafx than font-based icons like this:https://githubcom/jabref/jabref/blob/403986f1c244723911cafadeb369064ec2f551cd/src/main/java/org/jabref/gui/iconthemejava#l276-l282the only exception is if the font can be accessed via [fontawesomefx](https://bitbucketorg/jerady/fontawesomefx/overview)  || @tobiasdiez i havent looked at this to be honest what about scaling? for some icons we set the size by giving the font-size like in the `entryeditorcss````tool-bar glyph-icon {    -glyph-size: 18px    -fx-font-size: 2em}```can we achieve consistent sizes when we use partly svg icons? i mean i see that we used `px` here but will this be the same when not used as a font? || good point the file-based icons are shown using https://githubcom/jabref/jabref/blob/403986f1c244723911cafadeb369064ec2f551cd/src/main/java/org/jabref/gui/iconthemejava#l359-l361`imageview` does provide some scale mechanisms but these are probably not accessible via css in general i agree that a font-based solution is desirable my comment should just serve as a warning that it might be not so easy to include an arbitrary font as icon sources and it may be easier to include the svg directly || hi all thanks for the comments i am currently in the process of relocating myself and my family to another country as you can imagine i dont have any free time on my hands so please dont expect action here soon if this blocks progress somewhere else i have no problem if someone else takes over and rounds this off || of course no problem @lenhard since the only thing missing in this pr is the additional push to shared icon i merge now im looking forward to see more prs incoming as soon as your pc is relocated -) ||
445,3799,3800,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,change open last edited dialgo to javafx fixes #3799 @halirutan  have a look if this works for you<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
446,3796,3820,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fixes #3796: pretend that we have every translation for every key fixes #3796- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i think you should base that on master so that we can see it working and then we can cherry pick the commit into maintable-beta || cherry-picked in master ||
447,3818,3821,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix copy linked files dialog showing npe when no linked files <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #3818 (ignore the branch name i  thought it was a different error)the part in the copytask should also be copied to the maintable beta branch the rest is already there----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) travis fails for some timeout reason not related ||
448,3614,3824,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"provides download option in context menu and fixes #3614 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->inspired by the discussion in #3818 i added a ""download file"" option in the context menu of a linked file (if it is an online link) moreover the bug #3614 is fixedthis pr was brought to you with the support of coffee from the jabref cup!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) if you fix checkstyle we can merge || i generated a [structure-diff](https://mediumcom/clarity-bot/reading-structure-diffs-101-3b28134d7b8f) below from pulling ```19945df``` **on jabref:downloadlinks**  into ```988fb54``` on **jabref:master**![structure diff](https://apiclarity-botcom/v1/github/diff/a0iwgzdpcdbzcsqdsvlfyhkbi05fqx8aw2mboevrhetbychk4edzjteg6mwxzwio1hqw7msrreohcoqsdh9q1z6b2g9rhcvd3vbcrhqbhpfob1cbpixpk9mp95snamchnveyg0ncyasqndsjdfj341vty8bays4ikei3ozzwkehekbhlcfb5fwrhix4g6ywoh2cdj3jzuh6dl5o42sj5yhmi2wgxjykatan466zpfvo7iewtzdyhlchoanhvwp5yo4ebk2lkmdhctw1uhajr8qzmyimcjqcj9kuxjwqfytn2p7uagbz8cvrtukongro8gxwihral9p5qdx1dh3wlnoxnyszbqwybstyvllkjy7edwsemltj2r0ofzv3whawdcapc9na05oqlt54tdt5mpsa9qv5id1oj7urjgx7xmvzw1puzhbpoh6x5ar4dwbmdbp5z3v4snvxf3pvlxgznlforsrenznm7zuvciqwahyfp6xakmvvke6k0x6cv7h0g) ||"
449,3818,3824,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"provides download option in context menu and fixes #3614 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->inspired by the discussion in #3818 i added a ""download file"" option in the context menu of a linked file (if it is an online link) moreover the bug #3614 is fixedthis pr was brought to you with the support of coffee from the jabref cup!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) if you fix checkstyle we can merge || i generated a [structure-diff](https://mediumcom/clarity-bot/reading-structure-diffs-101-3b28134d7b8f) below from pulling ```19945df``` **on jabref:downloadlinks**  into ```988fb54``` on **jabref:master**![structure diff](https://apiclarity-botcom/v1/github/diff/a0iwgzdpcdbzcsqdsvlfyhkbi05fqx8aw2mboevrhetbychk4edzjteg6mwxzwio1hqw7msrreohcoqsdh9q1z6b2g9rhcvd3vbcrhqbhpfob1cbpixpk9mp95snamchnveyg0ncyasqndsjdfj341vty8bays4ikei3ozzwkehekbhlcfb5fwrhix4g6ywoh2cdj3jzuh6dl5o42sj5yhmi2wgxjykatan466zpfvo7iewtzdyhlchoanhvwp5yo4ebk2lkmdhctw1uhajr8qzmyimcjqcj9kuxjwqfytn2p7uagbz8cvrtukongro8gxwihral9p5qdx1dh3wlnoxnyszbqwybstyvllkjy7edwsemltj2r0ofzv3whawdcapc9na05oqlt54tdt5mpsa9qv5id1oj7urjgx7xmvzw1puzhbpoh6x5ar4dwbmdbp5z3v4snvxf3pvlxgznlforsrenznm7zuvciqwahyfp6xakmvvke6k0x6cv7h0g) ||"
450,3818,3826,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,show dialog when copy files did not found file follow up from #3818 fixes #3818 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->![grafik](https://user-imagesgithubusercontentcom/320228/37219766-b6707a96-23c4-11e8-830f-0e7f8756eba8png)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
451,3811,3865,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,do no longer log invalidfieldvalueexceptions during autosave fixes  #3811invalidfieldvalueexceptions are no longer printed into the log when they occur during autosave fields in the entry editor still have the warning sign next to themthe normal save operation (ctrl+s) still triggers a warning dialog saying that the file could not be saved----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
452,3870,3871,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,"switch colors of search icon for the two search modes fixes #3870----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) grammar-based search is the advanced search so the magnifier should be cyan when following search string is active:    authorkolb and authorkopptaking examples from the documentation (https://helpjabreforg/en/search#search-modes)all of these are advanced but they are not recognized as such:    title|keywords  ""image processing""    (author  miller or title|keywords  ""image processing"") and not author  brownfollowing is normal mode:    progress “marine aquaculture”progress “marine aquaculture”this is now with cyan this is wrongfollowing is normal mode:    progresscorrectly <s>recognized</s> displayed as normal mode with this patch || if so the whole detection is wrong?! || only the beginning of the detection is somehow wrong for complex terms it is right but for single words it is wrong see the examples above maybe we changed something when going from jabref 36 to 37 || or maybe the detection never was entirely correct if i have a lot of time on my hands i might have a look at the detection algorithm otherwise we can close this pr and / or remove the coloring of the the search icon again after all what is the point of changing its color if the circumstances are incorrect? || @lenhard if you indeed have time to look at the search algorithm please replace it completely -) https://githubcom/jabref/jabref/issues/1975 || it worked in 36 and no one noticed that it broke at 37 so the point isto keep the idea and to fix it the idea in other words: make users awareof the feature and that the search might not work if the grammar basedsearch was intended but not matched (typo in query)am 22032018 19:53 schrieb ""jörg lenhard"" <notifications@githubcom>:or maybe the detection never was entirely correct if i have a lot of timeon my hands i might have a look at the detection algorithm otherwise wecan close this pr and / or remove the coloring of the the search iconagain after all what is the point of changing its color if thecircumstances are incorrect?—you are receiving this because you commentedreply to this email directly view it on github<https://githubcom/jabref/jabref/pull/3871#issuecomment-375419286> or mutethe thread<https://githubcom/notifications/unsubscribe-auth/abtafiyxovx2tof6vct2ytpyzzruwwevks5tg_mcgajpzm4s1mhl> || actually there should be tests for it then as this is not a ui feature but the detection is logic based || did we update the antlr stuff after v36? because the query ""progress"" actually is a valid grammar-based query that compiles with our antlr code thats the reason for the ""wrong"" coloring i have now added code that checks if a query consists only of word / whitespace characters and/or digits and uses a normal contains-based query for that thus grammar-based searches are only executed when special symbols are used although our grammar is more powerfull than that the terms mentioned by @koppor above are now colored as expected @koppor: i hope this limitation is what is wanted please do some testing to see if this matches your expectations || in general good minor issues - not sure whether they should be fixed separately`j` - ok:![grafik](https://user-imagesgithubusercontentcom/1366654/38212666-ddff22e4-36be-11e8-90c4-e6647c6d0c1apng)`jö` - not ok:![grafik](https://user-imagesgithubusercontentcom/1366654/38212682-ed37d40e-36be-11e8-81aa-0f50226aa906png)minor issue:when i clear the field using ctrl+a and then delete (after an advanced search) the marker is still advanced:![grafik](https://user-imagesgithubusercontentcom/1366654/38212778-4a0ec2d2-36bf-11e8-8c36-42db1c9f8d6bpng)otherwise: lgtm :) || thanks for the comments @koppor i fixed all the glitches you described and this pr should now be ready || "
453,3885,3887,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,improvements around external file types <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->i tried to implement #3885 but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after https://githubcom/jabref/jabref/pull/3005 is mergedthus only some relative minor code improvements / fixes:- refactor external file type classes and extract a common `externalfiletype` interface- extract all built-in file types to separate enum (implementing `externalfiletype`)- fix display of external file type editor dialog (which is not shown in the current maintable-beta version)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) since this pr is now ready for review over a month ill merge it despite not having any feedback so far ||
454,3704,3909,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,add required mock to linkedfileviewmodeltest while working on #3704 test were failing in other settings this is a quick fix to get the tests running i think for this build its okay in maintable-beta we already have it refactored  || @siedlerchr i hope there wont be conflicts for the maintable-beta branch then 😇  ||
455,3926,3927,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,prevent accidentaly deleting a second file when pressing del key fixes #3926 the key listener was triggered twice (on pressed + released) resulting in the selection of the second file<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as this is not even a one-liner and i tested the changes i merged them directly in ||
456,3929,3931,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,resolve #3929 correct fetcher messages resolve #3929 @siedlerchr we do?! ||
457,393,3944,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,[wip] replace all ieee urls with https #3930 ieee tests are broken but they were before needs to be fixed fixes #3930 you should add a changelog entry  || i need to work on the tests first before we can merge this! ||
458,3269,3954,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add button-icon for union/intersection in the groups side panel fixes #3269fix display of state for union/intersection in preferencesas we currently unfortunately dont have icons for set intersection/union `set-center` and `set-all`  https://materialdesigniconscom/icon/set-center  in the material design font i used the www and the twitter icon to demonstrate the purpose @halirutan  will then try to integrate the correoct  icons in jabref <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->![grafik](https://user-imagesgithubusercontentcom/320228/38771504-8fe48364-4024-11e8-81b8-a25fa076254cpng)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez  is this now okay? then you could merge it with co-authors  || @tobiasdiez  fixed the issues you m entionend  || i fixed the remaining issues and i am going to merge this one now ||
459,3860,3965,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fixed url column this fixes #3860 url column now shows url or doi correctly and opens on click----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) hi @florian-beetz since you have been involved in the maintable migrations do you want to join tomorrows devcall at 11 am? drop me a note by mail (linus@lynyusde) cheers linus || okay merging this in order to move on i have created another issue to track the tooltips https://githubcom/jabref/jabref/issues/3973maybe @florian-beetz wants to continue with that as the next pr? ( ||
460,3854,3967,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix ebookde refs #3854unfortunately not a very clean fix but it is fine againusing the normal inputstream does not return anything probably as it is detected as automated crawler?the interface with inputstream is just not really fitting here the isbn fetcher tries ebookde first and if no result is found it switches to the chimbori/amazon fetcher is this still valid? || yes ||
461,3966,3968,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,fix ieee fetcher by enabling cookie support fixes #3966 apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
462,3966,3970,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,fixieee fixes #3966  followup from my previous prnow document links  in the format `https://ieeexploreieeeorg/document/7421926/` are supported tooand i also tested the paper linked in the issue from university network that works fine too <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
463,3341,3979,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"[wip] add text file export for ""find unlinked files"" this is to add the feature which allows exporting of the list of files found in ""find unlinked files"" to a text filecloses issue #3341im not sure if it is exactly what you are looking for but i thought i would give it a shot hopefully you will be kind though i welcome constructive feedback of course im not sure it really even needs the progress bar for the exporting because it is so fast but i left it in for now since the importing has one one change i didnt make is changing the list of files to path type from file type i left a note about that above let me know what you think || @jssander  please pull before you continue to work on it i merged master to fix conflicts due to our release today || how do i pull correctly? in idea when i go to pull i think im pulling from my forked master || i made some changes but there is a conflict now in the changelog im not sure how to resolve it || @jssander just keep both lines i did it for you using the github web ui just pull and you are fine at your side too || great! thank you so much ||"
464,3239,3983,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix ieee preview does not display month fix issue [#3239](https://githubcom/jabref/jabref/issues/3239) on [maintable-beta](https://githubcom/jabref/jabref/tree/maintable-beta) branchon month change from combobox on optionalfieldstab month was not appear on ieee stylethe issue get fixed<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please have a look at the travis output regarding the checkstyle there is still some error  || thank you its nice to work with all of you i learn a lot ||
465,3971,3988,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"add rfc entry generator id-type option <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#3971](https://githubcom/jabref/jabref/issues/3971) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #3971 [ui image of entry type in dropdown](https://githubcom/jacksonrya/helpjabreforg/blob/81c1795cfd3b9defc64fd61b71eb85e9e34e7442/en/images/newentrychoosetype-idgeneratorhighlighted-rfcpng)rfc an additional id-based entry generator id type has been added in order to fetch more complete bibtex data compared to doi fetches of rfc typefollowing the diva id type classes as template an rfc fetcher class and fetcher test has been addedi added rfc to the id-based entry generator list within webfetchers so it is an option in the dialogs dropdowncurrently the rfc fetcher class accepts search requests with or without the ""rfc"" prefix--is this an okay feature?additionally help in finding the best [rfc bibtex api](https://wwwrfc-editororg/retrieve/) i am using the api referenced in [#3971](https://githubcom/jabref/jabref/issues/3971)ps this is my first ever contribution to open source so thanks for your patience 😄 ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ive merged your help file change and restarted the travis build so the help pages related error should be gone now!thanks again for your contribution 🥇  || all set thanks for all of your help! ive learned a lot about the process and hopefully wont be as needy next time :) || thank you for your contribution :smile: ! hope to see more from you in the future! ||"
466,3994,3996,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #3994 duplicate unmodifiable list for sorting fix #3994 ```runcommand error: nulljavalangunsupportedoperationexception	at javautilcollections$unmodifiablelistsort(unknown source)	at orgjabrefguiexporterexporttoclipboardactionrun(exporttoclipboardactionjava:59)	at sunreflectnativemethodaccessorimplinvoke0(native method)	at sunreflectnativemethodaccessorimplinvoke(unknown source)	at sunreflectdelegatingmethodaccessorimplinvoke(unknown source)	at javalangreflectmethodinvoke(unknown source)	at spininvocationevaluate(invocationjava:175)	at spinoffspinoffevaluator$1run(spinoffevaluatorjava:108)	at javalangthreadrun(unknown source)```  
467,3986,4002,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&ffixes #3986 fixes #3995 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merge this now and i will create a pr to remove that l&f stuff completely in maintable-beta ||
468,3995,4002,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&ffixes #3986 fixes #3995 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merge this now and i will create a pr to remove that l&f stuff completely in maintable-beta ||
469,3973,4011,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,reimplement tooltips for file and identifier columns this fixes #3973reimplements tooltips for file- url-/doi- and eprint-column in the maintable-beta----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks again for your contribution! ||
470,4013,4015,1,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,1,0,"fix custom exporter not displayed in file chooser fixes  #4013fixed several issues with the custom exporter- filename check for layout files was wrong - commandline name for custom exports was the filename and not the name opposed to what our help says - custom exports could not be added due to our hardcoded enum- expanded the enum with [mixins](http://blogpengyifancom/how-to-extend-enum-in-java/)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the core problem is not the gui but that each exporter has a file type and this file type was also added for the custom exporter these file type used the parse method to find a file type based on the extension the file type class is used for the file filter chooser and an exporter is matched on the file type description but as this is an enum it did not work for custom export as always one of the enum values was used eg the default html export the core changes are in the enum which now implemented an interface in fact its just a rename of the old enum and a simple interface which has the name of the old oneto avoid code duplicates in the anonymous class and the enum i moved them to private static methods  || ok thanks for the explanation i thought a bit more about this problem and came to the conclusion that the cleanest solution is probably to split the description from the ""file type"" if the later is only a list of extensions (xml bib txt ) and the importer/exporter itself contains the description then you can easily create a `extensionfilter` for an importer/exporter (and dont need to pay special attention to custom exporters) what do you think? || this would only work if the custom export follows the standard file types if i want my exporter to have filetype xyz then this would not be possiblewhat i did is to provide a set of standard file types and their descriptions which can be extended to support custom one the standard file types are also used for the importeranother thing which just came to my mind was that we with this approach could also resuse the functionality for the externalfiletype stuff than we could get rid of that completely || ok good point do you want to improve the code around `externalfiletype` as part of this pr or is this a follow-up?i would still separate the file extension from the description text  || i would rather do this in a follow up on the maintable directly  || @tobiasdiez  i now removed the exporter stuff from the filetypes so currently its only used for the importers the key problem with the importers is that we have an ""all available import formats"" plus all the extensions in this case i see no way to filter the importer without having a description in the extension format  || a shot in the blue: instead of https://githubcom/jabref/jabref/blob/e32bdc8ef5731d41252eb53a50cefdf58ea2657d/src/main/java/org/jabref/gui/util/filefilterconverterjava#l26-l29try````java private static filechooserextensionfilter convertimporter(importer importer) {      return toextensionfilter(importergetdisplayname() collectionssingletonlist(importergetfiletype)) }````and at the same time changehttps://githubcom/jabref/jabref/blob/e32bdc8ef5731d41252eb53a50cefdf58ea2657d/src/main/java/org/jabref/gui/util/filefilterconverterjava#l39-l41to````java public static optional<importer> getimporter(filechooserextensionfilter extensionfilter collection<importer> importers) {      return importersstream()filter(importer -> importergetdisplayname()equals(extensionfiltergetdescription()))findfirst() } ````if `getimporter` returns an empty optional you know that there is no specific importer ie the user selected ""any file"" or ""any import format"" || @tobiasdiez  i noticed that it was already possible i just needed to create the map with description/name  and filetype like i did for export it is now analogous to export i removed the not needed filetypeshowever there are still some import formats left which have more than one extension however i think its not worth changing them too  would make things a lot more complicated we already have a good base for future expansions and for using this in combination with externalfiletypes  || if i understand correctly this should go into `master` before merging https://githubcom/jabref/jabref/pull/3621 || yes definitely  || ive refactored a bit more (it was easier to hijack this pr than describe the refactorings in detail -sorry) if you are happy with these changes feel free to merge otherwise just revert my commits || looks good so far  if someone can merge this with co authoring ( i got this wrong last time) || "
471,4014,4016,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,do not trim or remove whitespace from the title based id fetcher fixes #4014 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i now moved trimming down to the concrete fetcher classes and added tests  ||
472,4018,4019,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,fix acm fetcher import of entries fixes #4018 removed `&` sign from id patterntested with a couple of searches works fine<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merge this now as this is a one-liner ||
473,3419,4040,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"convert shareddatabaseconnect dialog to javafx connection works so far  no more freezes regarding addtabs in basepanelsomehow the dialog looks odd @tobiasdiez  any idea what is missing? the checkboxes are not visible correct i just see that it looks really odd in he maintable-beta branch too eg int he event logedit// the conection and the synchronization seems to be working  fixes: #3419   postgressql database connection now supports ssltodo for documentaition:create and configure server certshttps://wwwpostgresqlorg/docs/current/static/ssl-tcphtmlconvert to keystore formathttps://jdbcpostgresqlorg/documentation/head/ssl-clienthtml![grafik](https://user-imagesgithubusercontentcom/320228/44865756-7cd7a280-ac83-11e8-99d0-9c619a929163png)currently i only tested it with postgressql but i see that mysql should also workhttps://devmysqlcom/doc/connector-j/80/en/connector-j-reference-using-sslhtml<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----todo: - check conflict merge dialog- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the display problem probably results from us playing around with different styles and changing defaults since there is no checkbox in the main view it was not noticed that some of the input controls look strange ill have a look at it later || the database connection works so far tested with postgressql i reworked the dialog and fixed an error in the listener which led to freezes the mergeentrydialog is not yet converted this will be done in a future pr the only thing open is the gui styling the dialog looks a bit odd but thats due to some missing css stuff i think  || yes i tried both with and without the tags same behavior i dontunderstand thistobias diez <notifications@githubcom> schrieb am fr 25 mai 2018 15:39:> *@tobiasdiez* commented on this pull request> ------------------------------>> in src/main/java/org/jabref/gui/shared/shareddatabaselogindialogviewjava> <https://githubcom/jabref/jabref/pull/4040#discussion_r190896614>:>> > +    @inject private dialogservice dialogservice> +> +    private final shareddatabasepreferences prefs  new shareddatabasepreferences()> +> +    private final buttontype connect  new buttontype(""connect"" buttondatayes)> +    private final button btnconnect> +    private final jabrefframe frame> +> +    private dbmsconnectionproperties connectionproperties> +    private shareddatabaselogindialogviewmodel viewmodel> +> +    public shareddatabaselogindialogview(jabrefframe frame) {> +        thisframe  frame> +        thissettitle(localizationlang(""connect to shared database""))> +> +        thisgetdialogpane()getbuttontypes()addall(connect buttontypecancel)>> did you also tried it without the surrounding buttontypes tag?>> —> you are receiving this because you authored the thread> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/4040#discussion_r190896614> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/aati5gbj--hytjbd1unf_oiztc9_5v_zks5t2amsgajpzm4ugdlc>> > || now moved all stuff and implemented the validationto the viewmodel and will tackle the shareduimanager stuff next || "
474,4038,4047,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,a first solution for the cli problem #4038 exportfactory is not initialized at this execution pointthe printusage method is used twice the jabrefcli prints the usage if an error occurs during argument parsing and the argumentprocessor prints the usage when --help option is chosen i made two solutions for this problem: - commit 1: some sort of a hack to only get the names of the exporters without altering the processing in the main method ![image](https://user-imagesgithubusercontentcom/30231151/40351621-2505b92c-5dad-11e8-9c3c-c780ae48f514png)  - commit 2: changed the order of execution in the main method the argument processor needs the export factory i dont know if the processing of the preferences will influence the cli functionality?fixes #4038 - [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref tldr: i guess we should use the second method lets see what the others thinki guess the second solution is fine if not we will find outi think we could also extract some methods here for the initialization of the migrations and then the preferences from the start method and afterwards instantiate the argument processor so the start method gets more clear ||
475,4000,4056,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"extract old bibtex key generation action resolves #4000 this is one for the javafx guyswe need a new javafx action here or duplicate parts of the codei already marked the respective code locations with todos- we could use the fxdialogservice but there is an additional checkbox for ""do not ask this question again"" in the old dialog- also i dont know how to properly extract such worker code for javafx otherwise i would have to duplicate the code on all occurences i would suggest you directly implement this on the maintable beta branch otherwise we will get the hell of merge conflicts and we would need to rework the abstractworker againhave a look at the functionality of  backgroundtaskwrap(() || is there any possibility to extract and reuse actions in javafx except from the action in controlsfx? || sure  we do this all the time in the maintable-beta branch we use the `openxyzaction extends simplecommand ` class for the things in `orgguijabrefactions ` || this is also functionality from a beta framework || > we could use the fxdialogservice but there is an additional checkbox for ""do not ask this question again"" in the old dialogthe dialogservice has an option for this where you can add a consumer? which then should store the property || ive now extracted the code of the cite key generation of a single entry and extended it by a warning dialog that is shown if a previous key is about to be overwritten with these changes the buttons in the entry editor show now a button text instead of a single icon fixing this requires https://bitbucketorg/controlsfx/controlsfx/pull-requests/706 to be merged thus in the current state this pr is not mergable but can nonetheless be reviewed || thanks for your efforts! > with these changes the buttons in the entry editor show now a button text instead of a single iconwhat does this mean? why text? || instead of the icon the text ""generate key"" appears this is due to a limitation of the controlsfx library that we use (hopefully my pr there gets merged in the next few days)https://bitbucketorg/controlsfx/controlsfx/pull-requests/706/add-overload-of-configurebutton-accepting/ || can we merge this now? is it released by controlsfx? || yes my pr is finally integrated into the snapshot build of controlsfx and thus ill merge it now || "
476,4041,4057,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #4041 to make push to application work again on osx for unknown reasons it seems no longer possible to give the commandas one single string i created a test class and not even simple commandscan be executed im not sure when this changed but giving the commandas a list of arguments works as expected<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
477,3943,4058,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"cpu leak see #3943- fix java to later version- pretty restrictive for the user unfortunately! @jabref/developers i worked a little bit with jabref 42 and the new jdk and i feel like also the problems with duplicated entries in the search box and freezes are less frequent nowmaybe the constant load provokes these issues even moretherefore i vote to release a new jr version where we force the users to upgrade to the newest java jre/jdk!also refs #3989fixes #3943 || let me finish #4015 today and we can go for a release  || as this really improves the situation (at least for me) i think we should definitly include this in our release || @stefan-kolb which tool did you use for the cpu monitoring?i tried `java version ""180_171""` and it doesnt seem to cause high cpu loadfocused entry editor:![grafik](https://user-imagesgithubusercontentcom/1366654/40957997-e80feefc-6897-11e8-9c61-13a5e5543d56png)unfocused entry editor:![grafik](https://user-imagesgithubusercontentcom/1366654/40958029-0ae5cbfe-6898-11e8-8a8f-d45c041bc6dapng) || i used the visualvm it is actually not caused by the entry editor but by switching between programslet me check v180_171 || "
478,4070,4074,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,mac graphics resolves #4070 @linusdietz @halirutan  can you also take a look as you own a mac please 😄 should also be backported to v4x || @stefan-kolb i certainly can test something but what exactly should i look out for? with jabref open should my macbook use the integrated graphics-card or the fast one? or should i only test if jabref works? || it should use the integrated card || fyi: i just upgraded from jabref 42 to 431 i had to correct the plist again to have jabref use the integrated graphics card see [https://githubcom/jabref/jabref/issues/4070](https://githubcom/jabref/jabref/issues/4070) so i guess that we are just waiting for your corrections to be merged || it seems to work my *activity monitor* says that jabref does not require high-performance gpu is there anything else i should look out for? || i guess thats it @linusdietz  || i guess that is the correct indicator i originally used gfxcardstatus to verify this but i now also compared both cases (old and new) with activity monitor and it is consistent> on 7 jun 2018 at 15:16 patrick scheibe <notifications@githubcom> wrote:> > it seems to work my activity monitor says that jabref does not require high-performance gpu is there anything else i should look out for?> > —> you are receiving this because you commented> reply to this email directly view it on github <https://githubcom/jabref/jabref/pull/4074#issuecomment-395416335> or mute the thread <https://githubcom/notifications/unsubscribe-auth/afhuzmssucntyidon1yyuabj7aca1-1uks5t6setgajpzm4uxrhk>>  ||
479,4098,4100,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,migrate review field in entry preview to comment migrate review field in entry preview to commentreplace review with comment in every layout filefixes #4098 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added a test case || i would vote for merging this i refactored the tests and the migrations so that they no longer call  globalsprefs _ more mocking is not really possible   ||
480,4097,4106,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,opens the directory of the currently edited file when opening a new file opens the directory of the currently edited file when opening a new filefixes #4097----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) done! ||
481,4104,4107,1,0,1,1,1,1,1,0,1,1,1,0,0,1,0,1,1,0,0,0,0,0,0,fix a few things in entry editor <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes two things:- reactivate next/previous entry shortcuts in entry editor (fixes #4104)- preserve focus of text fields in entry editor when the user switches between entriesplease merge and dont squash----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
482,4115,4116,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"dont report journal name as abbreviated when full name  abbreviated name <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #4115 ----- [x] change in changelogmd described- [x] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for the feedback your solution was my initial idea but then went on to modify the `journalrepository` because other (potential) callers of the repository also profit from the change i wouldnt consider ""bioinformatics"" abbreviated when its also the full journal name (which is of course a question of definition)in the end its almost a question of taste and im also fine changing it to your solution (if you think the additional work is worth it -) ) || that was exactly my thought too (that bioinformatics is no abbreviation of bioinformatics) but then we should rather cleanup the list than the code?! but then i thought ok they want to have this journal in there || "
483,4120,4123,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,fix convert to bibtex moves contents of the file field fixes #4120<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) yep that was my thought too ||
484,3859,4124,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,"saves and reloads window state on close and on open saves and reloads window state on close and on openopens by default maximizedfixes #3859----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) code loooks good 👍 ps: if you just enter # followed by the issue number here on github the issue will be auto-linked and if you add sth like ""closes"" or ""fixes"" + # + issue number it will be auto closed when the pr is merged || "
485,3805,4137,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,fix #3805: dash correctly terminates commands in layout files <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #3805 now commands terminated by a hyphen (like `\edition-`) work correctlyway back in 2011 morten added the extra check for hyphens (commit 392bc7a6dd215eb23766378aa90e3995d0847bb7) however im not aware of any field that has a dash in it so im not sure what was the reason for the change (i couldnt find an old bug report)also refactored a bit the layout tests----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
486,4126,4138,1,0,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,single line text fields solution for [#4126](https://githubcom/jabref/jabref/issues/4126) ive used text formatter to force single line behavior hope its enough :) particular fields that should contain only one line are stored in immutable set// 7 tests have failed but they also had failed before on master:> mrdlibimportertest testimportdatabaseishtmlsetcorrectly()> mrdlibimportertest testimportdatabaseistitlesetcorrectly()> mrdlibimportertest testimportdatabaseisyearsetcorrectly()> xmputilreadertest testreadarticledublincorereadrawxmp> xmputilreadertest testreadarticledublincorereadxmp> xmputilwritertest testwritemultiplebibentries> xmputilwritertest testwritexmp cant we just change the underlying gui component from textarea to textfield?also please use plain java for making fields immutable or final  not comgooglecommoncollectimmutableset if possible || @stefan-kolb how about now?ive added editortextfield class similar to editortextarea and extracted addtocontextmenu to interface (contextmenuaddable) also i had to change parameter type textarea to textinputcontrol in few places in order to use classes in generic way || that looks good so far for me! havent tested it yet but codewise it looks good (although the final in front of method parameter is suerpfllous || i use finals to avoid stupid bugs like reassigning variable with them my ide automatically underlines such stuff another thing is that ive decided to make code more readable so ive put new lines between simpleeditor constructor parameters (because there was one long line) and now codacy yells about that should i extract those parameters to another class like simpleeditorparameters or sth? || ping 😄  ||
487,4134,4181,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,fix #4134: no longer freeze when clicking browse in aux import dialog <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->yet another interaction between swing and javafx threads----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
488,3062,4184,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #3062: ctrl + f selects search field again <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->shortcut was simply not registered also remove a bit of legacy code which is no longer needed----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
489,4201,4212,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,make attached files relative to the file directory fixes #4201<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
490,4202,4245,1,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix style issues in about dialog <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #4202 and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states:![image](https://user-imagesgithubusercontentcom/5037600/43546917-155834c2-95da-11e8-89d8-485544d0cd45png)please merge instead of squashing the commits----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgtm  || i am merging this now ||
491,3823,4246,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,"solved #3823 file annotation this pull request solved #3823 and improved the new line remover# removed hyphens and newlines of highlighted texti removed all new lines which **dont have preceded `` or `:`** becaues i think `` or `:` is often used to start a new paragraphtest text:<img src""https://rawgithubusercontentcom/upupming/paste/master/img/test-selectionpng"" width300/>test result:<img src""https://rawgithubusercontentcom/upupming/paste/master/img/20180802201505png""/>there is another problem with the regular expression `(\r?\n|\r)` when i try to use `(?<![|:])(\r?\n|\r)` for excluding the new line end with `` or `:` if its on windows the `\r\n` will be replaced with a whitespace and it is ok however if we encounter `\r\n` the `\r` will be reserved and the `\n` will be replaced by a whitespace in this way the `\r` will not be shown as new line int the field and we dont need this whitespace so instead we should change `\r\n` to `\r\n` directlyso i use javas `%n` to distinguish new line wisely# font size of summary on the left changed to 10px# summary text wrapped# the final example:<img src""https://rawgithubusercontentcom/upupming/paste/master/img/changed-file-notationpng""/><!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez thanks for your review! i will fix them soon || hi i reverted the change for `removehyphenatednewlinesformatter` and `removenewlinesformatter` i have also fixed the tooltip for marking summary**before**<img src""https://rawgithubusercontentcom/upupming/paste/master/img/20180803091540png""/>**after**<img src""https://rawgithubusercontentcom/upupming/paste/master/img/20180803092209png""/>now im going to add some unit tests! || all done~ 😃  || thanks for the quick follow-up! looking forward to your next pr ) || "
492,4241,4252,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix attach file does not relativize file path fixes #4241 attached files were only made relative before if you hit the browse button<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
493,254,4255,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix for issue koppor 254 (auto cleanup url) <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->this issue is [koppor#254](https://githubcom/koppor/jabref/issues/254)set auto cleanup url links on paste action and add cleanup url menu item to the url fieldmost codes are modified from a previous contributor in https://githubcom/jabref/jabref/pull/3394currently the menu item list changed as follows(with defalut editor menu change case convert etc):![](https://user-imagesgithubusercontentcom/36831746/43885542-c2fe8826-9beb-11e8-9814-250861513426png)but i am not sure whether its necessary to add defalut editor menu if not the menu item list would be:![](https://user-imagesgithubusercontentcom/36831746/43885580-e411765e-9beb-11e8-99b2-6a8756bf0cd1png)i have run `/gradlew check` but failed but even if i switch to the master branch which is the same as jabref/master the build still failed with the same error message like:![](https://user-imagesgithubusercontentcom/36831746/43886264-c4c4b8d6-9bed-11e8-9126-e3a0a3ac82d6png)but it seems that i did not modify related classes i dont know what went wrong it confuses me a loti am looking forward to your feedback----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your contribution the gradlew check often fails locally due to some platform specific encoding issues in the terminal you dont reed to run it as it just takes time to run all the test  we use travis ci (continous integration) for testing  as long as the travis ci test does not show any errors its good!)in case travis fails just click on it and you can see where it exactly failed ||
494,4192,4259,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,remove spin comments fixes #4192 comments mentioning spin were removed or replaced with a mention that backgroundtask is now used----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
495,3959,4260,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix for issue 3959: migrate all tests to junit 5 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->hi im trying to fix the issue #3959  and i have some problems here can someone help me?**1 some tests dont seem to have a parameter source**such as  `bibtexmlexportertestjava` `msbibexportformattestfilesjava` `modsexportformattestfilesjava` and so on since i cant get feedback from both travis ci and my ide i couldnt do anything at the moment![image](https://user-imagesgithubusercontentcom/25541992/43997706-ee482a88-9e15-11e8-9b43-9b9f9853c150png)**2 something about the external libraries**for `mainarchitecturetestswitharchunitjava` `testcompile comtngtecharchunit:archunit-junit:083` **isnt enough for migrate this test to junit 5**just a few days ago `archunit` just supported tests with only junit 5 package but this feature needs a `testcompile comtngtecharchunit:archunit-junit:090` and as far as i know this version has not been released yetfor `citekeybasedfilefindertestjava` i havent found an extension in junit 5 for the `mockitojunitrunnerclass` in junit 4 and it seems that their (mock) official version hasnt been release yet too**3 the database test**as i can see those tests have already been migrated partly to junit 5 but the rest of it is the problemive tried to migrate `dbmsprocessortestjava`  but the code is no longer concise after thatfor example ![image](https://user-imagesgithubusercontentcom/25541992/43997780-26078368-9e18-11e8-9fce-43d293fedf88png)this is the old version and![image](https://user-imagesgithubusercontentcom/25541992/43997784-3e0ae356-9e18-11e8-8073-d43eeb12f0d5png)that is the new version and that is only part of itthe reason is that i couldnt pass the parameters to the `@beforeeach` method in junit 5 but junit 4 can use those local variable to pass the parameters i think this is where the difference occurred**4 the gui test**i just change the `@category` annotation to `@tag` annotation as i have known that those tests are mostly obsolete**5 about cleanupworkertest**this test is not hard to migrate from junit 4 to 5 but when i finish and run the tests on my ide two tests failed and the error message is quite weird it seems that the worker doesnt work in junit 5 tests![image](https://user-imagesgithubusercontentcom/25541992/43997847-be8c685a-9e19-11e8-9c3a-a911d9daeafepng)and if there are any errors or something can be improved in other tests that i didnt mention please let me know! thanks!----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your work! most of the conversion looks good concerning your questions:1 the exporter and importer tests use a filename-based convention to find and check the tests for example https://githubcom/jabref/jabref/blob/57126659b4f8ff58c9403af0f4d6aabccf77058c/src/test/java/org/jabref/logic/exporter/modsexportformattestfilesjava#l59-l66finds all files that start with `mods` there are usually two files with the same name: one with `bib` ending and one with `xml` the tests then should test that exporting the content of the bib file using the mods-exporter give the contents of the `xml` file2 yes there is not yet a release of the new archunit so for now the architecture tests can stay using junit 4the mockito runner is not really needed its only purpose is to support the `@mock` annotation but you can always use `variable  mock()` 3 currently there is no neat way to handle this problem (see the open https://githubcom/junit-team/junit5/issues/878)4 looks good5 i think the problem is the setup in https://githubcom/jabref/jabref/pull/4260/files#diff-2e1fadfb1af8461d9d830981c338f225r64 the bib file should reside on the same level as the pdf folder (and not within) || @tobiasdiez  thanks for your answer! ill have a try soon || @tobiasdiez hi! ive done some improments but i still have some questions1 i understand what you say but when i try to enable this line `streamforeach(n -> systemoutprintln(n))` with no other code changed i still get nothing looks like therere no such files on my laptop i suspect that it is the cause of this problem2 done3 ill keep those tests for the time being as that kind of code is just frustrating and of course if you have any requirements ill use the ""complicated"" way to handle it 4 done5 i have a try the `cleanuprelativepathsconvertabsolutetorelativepath()` test passed but the `cleanuprenamepdfrenamesrelativefile()` test still failed so i was wondering if you can give me a further guide about this? it can be a big help![image](https://user-imagesgithubusercontentcom/25541992/44014458-9f8d8aca-9efe-11e8-9a5b-64a50af1756fpng)btw the tests in `fileutiltestjava` use `create()` method which is totally not recommended in the api guide so when migrating it to junit 5 i name a folder manually to imitate the original tests and you can see this in the new version of `fileutiltestjava` if i do something wrong tell me and ill do my best to fix them soon || the failing architecture test is one thing i already experienced a  while ago its because it checks for public class  i was so free to create a  simple patch which fixes thissimply remove the txt extension after download and execute ` git am < 0001-fix-architecture-test-by-removing-check-for-publicpatch`[0001-fix-architecture-test-by-removing-check-for-publicpatchtxt](https://githubcom/jabref/jabref/files/2283533/0001-fix-architecture-test-by-removing-check-for-publicpatchtxt) || the files are in `src\test\resources\org\jabref\logic\exporter` but for some reason the tests dont find them (even on travis) and thus fail  || @tobiasdiez thanks for the previous comment! ive got a little bit about the ""cannot find test files"" problem and ive fixed them in 2 commits the first uses the origin junit 4 the second uses junit 5but some tests in `modsexportformattestfilesjava` and `msbibexportformattestfilesjava` failed they failed both in the origin junit 4 and the version i write junit 5 here is an example for `msbibexportformattestfilesjava` ![image](https://user-imagesgithubusercontentcom/25541992/44089397-320a7a34-9ff9-11e8-8002-8034da799d37png)![image](https://user-imagesgithubusercontentcom/25541992/44089412-46064ae0-9ff9-11e8-8e95-43068246a88fpng)so is that ok just for the migrate task? is there something else i can do to improve that?and also a big thank for @siedlerchr s patch )----------------------------------------------------------hmmm looks like i still got the wrong path || i remember that we had problems with this before that some resources were not int he right folder i will take a look at that || that now some of the exporter tests fail were my fear this probably needs further investigations and fixes for the exporter thus it goes beyond the current pr thus i propose to mark the tests as ignored/disabled for now and we will come back later to fix them  || i am just investigating this and i think i found the issue with the paths || its a classpath issue for exmaple:```        path path  pathsget(msbibexportformattestfilesclassgetresource("""")touri()) > returns e:\workspace\jabref\jabref\bin\main\org\jabref\logic\exporter``` although it should be bin/test || okay i found the issue with the paths i really wondered if it ever worked but well now it does the key is to point to one existing resource the rest can be found dynamically and this leads us actually to some failing tests but i would ignore that for the moment that is a difference @metatronwings  you can use this patch as a start for all the related importer/exporter tests[0001-fix-resolving-of-paths-in-msbibexporterpathpatchtxt](https://githubcom/jabref/jabref/files/2287509/0001-fix-resolving-of-paths-in-msbibexporterpathpatchtxt) || im very glad to see this issue will be resolved by us soon only a few more small questions: **1 some tests have not been migrated yet**the `dbmssynchronizertestjava` and `synchronizationtestsimulatorjava` have not been migrated yet as there is no good way to handle chaos code after migration (see example in `dbmsprocessortestjava`)do i need to migrate them?the `mainarchitecturetestswitharchunitjava` have not too as there is not yet a release of the new archunit**2 since i didnt migrate them how should i write the** `changelogmd` **?**and thanks for all of you! 👍 || @metatronwings  its okay we will sure find a way for them in the long run not that importantyou dont need to add a changelog entry as this is only a code-quality issue which will not have any impact on the normal jabref user we hope you enjoyed it and if you want you can also further contribute looking to see more from you ) || i just converted the two other classes with the legacy file methods to use the nio stuff[0001-include-main-java-in-resources-as-wellpatchtxt](https://githubcom/jabref/jabref/files/2290800/0001-include-main-java-in-resources-as-wellpatchtxt) || sorry but i must do that tomorrow morning because its 12:00pm in my timezone thanks for the patch!  || "
496,3861,4268,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,convert part of the issue#3861 quality->cleanup entries <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->i have done some changes about convert the swing dialogs to javafxits about quality->cleanup entriesbut when the component became the node it doesnt work i mean these checkbox wont change its value when i click them----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please merge the latest version of upstream/master repo from jabref and the checkbox should be working againhere is a [tutorial](https://helpgithubcom/articles/fork-a-repo/#step-3-configure-git-to-sync-your-fork-with-the-original-spoon-knife-repository) on how to setup the remotes  || i went over the code again and it is now ready for merge from mine point of view ||
497,4148,4275,1,0,0,1,1,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"changed the behavior of the field formatting dialog i made the loops for formatting all fields in the fieldformattercleanup class test for not being the key_field  i originally had this in the cleanupsinglestring method to prevent key_field from being cleaned up (reformatted) entirely but decided to let the user specifically format that field  when the user chooses to format all fields at once however the key_field will be not be reformatted this solves issue [#4148](https://githubcom/jabref/jabref/issues/4148) i created a few unit tests  for the last one i hard coded the latex version of the ""ç"" character || my pleasure! || "
498,4233,4289,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix npe in merge entries dialog fixes #4233fix fx thread errorconvert file to path<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) changed that ||
499,4072,4291,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix loading and storing of xmp field exclusions fixes #4072 @koppor  i am not that into the xmp stuff are those ""fields"" i can add there bibtexfields which i can exclude from the export? then it would make sense to have a combobox analogous to the cleanup panel with all fieldsedit// decided to add the combobox with all fields<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->![grafik](https://user-imagesgithubusercontentcom/320228/44588230-6cbc5080-a7b5-11e8-909e-ac190ceedc95png)----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i am going to merge this now if no further comments are coming ) || ![grafik](https://user-imagesgithubusercontentcom/320228/44726074-2fb6cd80-aad7-11e8-95ea-3cea12735751png) ||"
500,4296,4299,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,fix freeze on import into current library execute import inspetion dialog in swing threadfixes #4296<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
501,4087,4311,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix drag and drop in entry editor fixes #4305fixes  #4087 (comment same issue described)consistent with preview panel behavior<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as its a copy and paste of the method handling in the preview panel i merge this now ||
502,4305,4311,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix drag and drop in entry editor fixes #4305fixes  #4087 (comment same issue described)consistent with preview panel behavior<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as its a copy and paste of the method handling in the preview panel i merge this now ||
503,4266,4312,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,convert new entry dialog to javafx followup from  #4266bibtex +custom ![grafik](https://user-imagesgithubusercontentcom/320228/44994592-989eb980-af9f-11e8-9f29-7d95413c42aapng)biblatex + custom![grafik](https://user-imagesgithubusercontentcom/320228/44994753-62ae0500-afa0-11e8-911b-4326879584c9png)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) adressed all comments the duplicate check is actually different handled and is slightly coupled to the import inspection dialog this is stuff for a new pr || i would like to merge this now if no further comments are added ||
504,4307,4317,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"fix that ""rename and move file"" throws file not found exception fixes #4307 moreover i refactored a bit how files are renamed/moved to the default file directory this should make it easier to reuse the code<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ill merge this now so that progress on https://githubcom/jabref/jabref/issues/4306 is not blocked ||"
505,4322,4325,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,wrap preferences in scrollpane as well dont override pref sizequick fix we definitively need to redesign/rearrange some prefsfixes #4322<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
506,3850,4327,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,save sort order column of main table fixes  #4224fixes #3850i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit// i also fixed an fx threading error  when opening a new library (the snackbar output was not onfx thread)@tobiasdiez  any idea if i did sth wrong oder have to set the value somewhere else?<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) sorry no idea would also need to debug this to see whats going on || hm this is odd i created a simple test application based on the code here https://codemakerych/blog/javafx-8-tableview-sorting-filtering/and i experience the same behaviour || apparently the sortorder alone was not sufficient: https://stackoverflowcom/a/52255643/3450689it works now || i will try if i can store the sortorder as well  || i now managed to save the whole sort oder for multiple columns  ||
507,4224,4327,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,save sort order column of main table fixes  #4224fixes #3850i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit// i also fixed an fx threading error  when opening a new library (the snackbar output was not onfx thread)@tobiasdiez  any idea if i did sth wrong oder have to set the value somewhere else?<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) sorry no idea would also need to debug this to see whats going on || hm this is odd i created a simple test application based on the code here https://codemakerych/blog/javafx-8-tableview-sorting-filtering/and i experience the same behaviour || apparently the sortorder alone was not sufficient: https://stackoverflowcom/a/52255643/3450689it works now || i will try if i can store the sortorder as well  || i now managed to save the whole sort oder for multiple columns  ||
508,4152,4337,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix export of corporate author to msoffice fix testsfix  #4329  the underlying problem is the same as in #4152 however i came up with a workaround for msoffice 1 getting the original field2 check for corporate author (braces start and end)3 get latex free value4 readd braces for corporate 5 parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors  this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces  ||
509,4329,4337,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix export of corporate author to msoffice fix testsfix  #4329  the underlying problem is the same as in #4152 however i came up with a workaround for msoffice 1 getting the original field2 check for corporate author (braces start and end)3 get latex free value4 readd braces for corporate 5 parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors  this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces  ||
510,4222,4338,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"added new keyboard shortcut ""ctrl+e"" for closing the entry editor (#4222) enhancement presented here [fixes #4222 i have added a new keyboard shortcut for closing the entry editor by using ""ctrl+e""<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you! first time here  || thanks for your contribution!  👍  looks good to me as well!we hope you are interested in contributiong some more ||"
511,4288,4355,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,auto trim url field <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes [#4288]created a formatter to auto trim all kinds of whitespace defined by java----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes) _no need_- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
512,328,4367,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,arxiv fetcher support http url in this pr i wanted to fix the issue from [koppor#328](https://githubcom/koppor/jabref/issues/328) i simply used existing code in the same file which just takes the identifier at the end of the url and perform a searchfor example: _https://arxivorg/abs/180201168_ to _180201168_the error dialog does not appear anymore and a new entry is made----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) yeah looks good to me! i exactly had the same issue yesterday  that i could not paste the whole url ||
513,4272,4369,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fixed testexportasmodsandthenimportasmods <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->[#4272](https://githubcom/jabref/jabref/issues/4272)----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for quick follow-up! ||
514,3781,4379,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,change latex command handling only for xml chars refs #3838 ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabreftried to solve this issue in pr #4108this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to #3781 #3644? @bernhard-kleine: i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing[testbracesresultxmltxt](https://githubcom/jabref/jabref/files/2487123/testbracesresultxmltxt)[testbracesbibtxt](https://githubcom/jabref/jabref/files/2487124/testbracesbibtxt)i will write tests based on your files if the export is now correct || thank you @johannes-manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title || this is a separate item from the docbook5 export #4319 where i am waiting for feedback || added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error || ping what is the status @johannes-manner? || oversee the comments and the ping sorry for that :) ||
515,3838,4379,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,change latex command handling only for xml chars refs #3838 ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabreftried to solve this issue in pr #4108this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to #3781 #3644? @bernhard-kleine: i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing[testbracesresultxmltxt](https://githubcom/jabref/jabref/files/2487123/testbracesresultxmltxt)[testbracesbibtxt](https://githubcom/jabref/jabref/files/2487124/testbracesbibtxt)i will write tests based on your files if the export is now correct || thank you @johannes-manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title || this is a separate item from the docbook5 export #4319 where i am waiting for feedback || added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error || ping what is the status @johannes-manner? || oversee the comments and the ping sorry for that :) ||
516,4108,4379,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,change latex command handling only for xml chars refs #3838 ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabreftried to solve this issue in pr #4108this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to #3781 #3644? @bernhard-kleine: i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing[testbracesresultxmltxt](https://githubcom/jabref/jabref/files/2487123/testbracesresultxmltxt)[testbracesbibtxt](https://githubcom/jabref/jabref/files/2487124/testbracesbibtxt)i will write tests based on your files if the export is now correct || thank you @johannes-manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title || this is a separate item from the docbook5 export #4319 where i am waiting for feedback || added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error || ping what is the status @johannes-manner? || oversee the comments and the ping sorry for that :) ||
517,4272,4396,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fixes for all mods exporter tests <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->[#4272](https://githubcom/jabref/jabref/issues/4272)----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) github is a bit buggy atm so i dont know which one is the right pr || @siedlerchr this is the right pr this wasnt showing up previously so i created another pr but after githubs issue got fixed found that both prs were showing up so i closed the other one sorry for the confusion ||
518,4360,4405,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,show dialog before creating entry #4360 now when you click new entry in a right toolbar it open an extra dialog where user can select a entry type change tooltip to new article ||
519,4356,4408,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"add a preference to add files in entry editor this pr for #4356 mainly involvesfixes #4356- allowing users to choose how they want to link/copy/rename/move files in entry editor through preferences- apply same behavior of drag and drop for the whole entry editor instead of a different behavior in file view of the entry editor----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues/194)i will log an issue to helpjabreforg if these changes are approved please feel free to suggest any changes thank you!![image](https://user-imagesgithubusercontentcom/7998085/47543328-4004e200-d8a7-11e8-9a5d-fb89a600079apng) codacy seems to have stuck in pending/analyzing state is there something that i need to do from my side so that its analysis is completed? || hit it was probably stuck because you had a merge conflict in the changelogmd file i resolved this ps: for future contributions create a new branch and do not work on master (reduces potential conflicts) || thanks! || @tobiasdiez thanks for reviewing for:> the preference value should only be treated as the default action (when no modifier is pressed)i dont think there is a straightforward solution using the [dragevent](https://docsoraclecom/javafx/2/api/javafx/scene/input/drageventhtml) used in the code this is because i wont be able to detect the modifiers pressed or confirm whether no modifier is pressed i will keep looking into this let me know if you have any guidance to resolve it || the code you edited had this functionality before you can get the modifier using `eventgettransfermode()` (see also the code comments) || what will happen in a case where the transfermode is `move` and would have no `shift` key pressed at that time? the comment states - shift on win or no modifier how would i differentiate between transfermodemove (without shift key pressed) and dragdropped behavior from preference option (as we want this to be read only when there no modifiers)?for the other two modes (link and copy) i was thinking to do an `or` with preference option but that would not be applicable for transfermodemove  || its probably not possible to differentiate between move  no modifier and move  shift thus i would suggest the following behavior:move -> do what is configured in preferences (default: move rename and link file)link -> link file except if preferences  link in this case move rename and linkcopy -> do what is configured in preferences (default: move rename and link file)in this way the user can configure the default action on windows and linux but is also possible to only link the file if he wants to || just need some clarification on the behavior for link i got that if the transfer mode is link then we should allow the user to link file but if the preference is set to link with link as the transfer mode then why should we move rename and link file? shouldnt we follow move rename and link when preference is set to move rename and link and not when it is set link? || i wasnt sure about this either my rationale was to allow for the following behavior:1 users selects ""move & rename"" as default action:  - no modifier -> move & rename  - ctrl ( transfermodelink) -> link2 users selects ""link"" as default action:  - no modifier -> link  - ctrl ( transfermodelink) -> move & renamebecause otherwise the users has no option to perform ""move & rename"" if he selected ""link"" as the default action but im very open for suggestions if this behavior is counter intuitive || i think your option is good but i just feel that it should be documented that what keys would be used for each option in preferences tab in brackets one more suggestion that we can consider is as follows:- pref  move        : shift or no modifier > move	: ctrl > copy 	: alt > link- pref  copy	: shift or no modifier > copy	: alt > link (alt is the ""default"" key for linking so user has one less thing to remember)	: ctrl > move - pref  link	: shift or no modifier > link	: alt > move	: ctrl > copy (ctrl is the ""default"" key for copying so user has one less thing to remember)let me know your thoughts on this || @shahamish150294  please be aware that the keys differ on other operating systems eg linux or mac and not all operating systems differ between all modifiers  see my code comment regarding ubuntu somewhere https://uxstackexchangecom/questions/83748/what-are-the-most-common-modifier-keys-for-dragging-objects-with-a-mouse || your suggestion looks good to mewhatever behavior we choose in the end it should be documented in the help and even better directly during the drag & drop action eg something like the following and replacing ""sposta"" with the real action to be performed (but this is something for a new pr)![image](https://istackimgurcom/a5rtupng) || i have added the logic we discussed above and fixed the linkedfileseditor to allow moving of the files within the file editor i also updated the issue on helpjabref to follow the behavior as we have discussed here for documentation || if @tobiasdiez  gives his okay we can merge this! || "
520,3537,4413,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix group hit counter when adding entries fixes #3537 by replacing the eventbus subscription by a javafx listener lgtm  ||
521,1019,4415,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"searchable/filterable preferences fixes #1019up so far i just created the textbox for searching and fixed a deprecation warningi added @paulkra as collaborator on my forklast step so far: i was asking myself how i can access the text of the different preferences-categories and i was wondering if i need a new interface (something like preftabcontents or preftabcontainer for it or extend existing prefstab interface----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) first of all thanks for your contribtion! 👍 if you look at the code fo the old preferencesfilterdialog you see that the data comes from the `jabrefpreferencesfilter` class in orgjabrefpreferences if you have further questions you can also ask in out gitter chat https://gitterim/jabref/jabrefedit// adjusted my comment || the easiest solution is probably to transverse the complete control node tree and take the text of all label controls || @wtfjoke  @paulkra  what is the current status here? the code looks already promising it would be really nice if you could finish this!  || @siedlerchr its still on my todo list havent found the time to investigate further and were stuck on how i display the filtered preferences i think @paulkra doesnt work on it he still didnt accept my invitation link to my forked repo || okay thanks for the udpate! take your time if you have any questions just ask here or in gitter and we try to help || maybe the jfxhighlighter from https://githubcom/jfoenixadmin/jfoenix/ works to highlight the matches  || @tobiasdiez thanks for the hint however i tested it locally but i didnt liked it that much (for example it did mark the buttons for importing/exporting/show/reset preferences also) if i dont find alternatives i think about using it anways || i tried the _jfoenix_ library but it didnt quite work as expected for eg labels remained highlighted even after changing the query text what i propose is to highlight the matched labels by styling their background with a different color we keep track of the highlighted labels and on every input change reset the highlighted labels and update it with new ones (this could be optimized)note: the entire label is highlighted not a part of it  || @captaindavinci sounds like a good plan the [javafx pseudo class](https://thierrywasylwordpresscom/2018/08/14/style-class-vs-pseudoclass-in-javafx/) seems to work nicely for this || thanks for sharing the article @tobiasdiez  i added the search highlight feature in the latest commithowever i have made use of `labeled` objects hash code when inserting into the `map` this would result in a list of all labels instead of grouping them by their text (could be replaced by a list instead)to avoid this another approach would be to map the texts to a set of labels as well but considering that the number of labels wont be too large i dont think there will be any significant gain in performance || the current approach looks good to me im however wondering why you have the map as the relation label (or text) -> tab for me the converse relation tab -> label feels more natural in the end it probably doesnt really mattersplease also use a `mutlimap<s t>` instead of `map<s set<t>>` || come to think of it the converse relation does seem more natural and has a simpler implementation ill make the required changes and push the codeedit: 1 i am thinking about how to perform better matching of labels for eg one of the tabs has a label named _""sending of emails""_ a query such as _""sending emails""_ would not match any labels but in practice i think it should one possible solution is to split the query string (delimited by space) and check if any token is present in the label name2 right now two filtering actions are performed by tabs and by labels i think both actions should be merged into one3 when no match is found the preference window shows contents of previous tab in this case i think the content of preference window should be replaced by the contents of the first tab which matches the query if none match then it should be blank || @captaindavinci is this ready for review or do you need to further work on it? (the first remark you had concerning ""sending emails"" is a nice suggestion for further improvement but not necessary for merging i would say) || @tobiasdiez yes this is ready for review || thank you for the suggestions @tobiasdiez  and @siedlerchr! i have refactored the code for the most part to account for the changes and will push the code once i have implemented all changes screenshot showing the preferences window when searching:![preferences](https://user-imagesgithubusercontentcom/21019116/54490388-789b6b80-48db-11e9-8532-f3c3d591e68bpng) || @captaindavinci  look at my patch: (import via git am < filepatch)i added the bidiretional binding and a listener in the handler this worked for me[0001-add-bidiretional-binding-to-searchpropertypatchtxt](https://githubcom/jabref/jabref/files/2989767/0001-add-bidiretional-binding-to-searchpropertypatchtxt) || @siedlerchr thank you for sharing the patch however this did not work for me the change listener for `searchtext` is never called i had a similar implementation except for not using `easybind` to register the callback the only way i could make this work was to add a listener to `searchbox` as well and refer to the `searchtext` property in that```searchboxtextproperty()addlistener((o p n) -> {    searchhandlersearchtextproperty()     // required so that changed are reflected})``` || hm this is odd it worked fine for me with this line:    ` searchhandlersearchtextproperty()bindbidirectional(searchboxtextproperty())`whenever i changed the text in the gui field eg key to asdfasd the view was updated and the new findings were highlighted maybe i understand you wrong but i think this is enough? under the hood the bidirectional is nothing else than a wrapper around the changelistener stuff  || also note that its necessary to have a reference to `searchtext` property accessed under the changelistener for `searchbox` could this be related to some sort of premature garbage collection?edit: for me changing the text in the gui field did not update the view or highlight the labels || bindings are created using weaklistener so they might get garbage collected but i still dont understand why it works for me with the patch i would propose you test again with my patch or at least commit the changes and let others test as well unfortunately i am the next days busy at work and probably cant help much || okay i have pushed changes in the mean time i will try testing it again ps: since the `preferencessearchhandler` does not use the `searchtext` property but only the query text can we instead bind the `searchbox` to the `filtertabs` ie not have to deal with binding the text property and string property? || thanks to both @wtfjoke and @captaindavinci for joining forces! || "
522,4422,4426,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix arrayindexoutofboundsexception on second pdf import fixes #4422 the variable formally known as i is a global variable which had -1 after the first run and therefore threw an exception<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added tests ||
523,4409,4428,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fixed radiobuttons in preference menu (#4409) previously multiple radiobuttons in preference menu belonging to the same group were selectable simultaneously this issue is now fixed on multiple occasions allowing only one option per group to be selected at the same time issue: [#4409](https://githubcom/jabref/jabref/issues/4409)  
524,4427,4446,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,set auto-update checkbox enable/disable when reading preferences this patch addresses issue [#4427](https://githubcom/jabref/jabref/issues/4427) added a call to the existing event handler (which enables/disables the checkbox in response to user clicks) when we set the checkbox value from the preferences----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes) _n/a_- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) _n/a_ behavior should beuse timestamp checked - > update timestamp is enabled (can be checked /unchecked)use timestamp unchecked - > update timestamp disabled  ||
525,3189,4470,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,3189 fix group renaming fix group renaming #3189 fixed  || please have a look at the failing tests and please test if the latex stuff is still transformed to unicode after rename  || @ali96kz why did you close the pull request? you can simply push your changes to your branch and the pr is updated  || @tobiasdiez could you review again? ||
526,4467,4484,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,4467 - fix save button fix issue: #4467 when you click `save` and there is no database selected that will act as `save as`  
527,4113,4498,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,improve page checker superseeds the pr #4188 and fixes #4113 now page ranges like `r2-r5` are considered to be correct  
528,4188,4498,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,improve page checker superseeds the pr #4188 and fixes #4113 now page ranges like `r2-r5` are considered to be correct  
529,4365,4519,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed 4365 put html in clipboard fix #4365 i get all tag value and put it in a string  
530,4544,4547,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,do not extract file ending from urls fixes #4544 do not extract file ending from urls should also fix #4480 please check @tobiasdiez i cannot access jstor stuff due to 403 however with any url and some appended key values like ?accetptrue it works for me again || please fix the checkstyle issue (import with * is not allowed) ||
531,3189,4549,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixes that renaming a group did not change the group name in the interface fixes #3189  
532,4539,4555,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"automatically created groups with field to group by as entrytype (#4539) <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->potential solution for [#4539](https://githubcom/jabref/jabref/issues/4539):- made ""entrytype"" as a valid keyword for automatically created groups- added check in <code>bibentry</code> to see if searchfield matches type_header - ""entrytype""- made change in <code>wordkeywordgroup</code> to collect entries for the entrytype groups- screenshots reflecting the change attached -1) all entries -<img width""1434"" alt""all_entries_ss1"" src""https://user-imagesgithubusercontentcom/11676385/50482130-16814780-0a0b-11e9-8559-f5c66bf74236png"">2) automatically create groups field to group by is ""entrytype"" -<img width""1431"" alt""create_group_ss2"" src""https://user-imagesgithubusercontentcom/11676385/50482137-1d0fbf00-0a0b-11e9-820c-defad72fe7e5png"">3) result -<img width""1425"" alt""group_view_ss3"" src""https://user-imagesgithubusercontentcom/11676385/50482142-226d0980-0a0b-11e9-8f49-e677d96ef077png"">----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) hi is there anything else that needs to be done here before this pr can be merged with master ? || if @tobiasdiez  is fine with the change we can merge! ||"
533,2288,4565,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,add uncaught exception message added a simple dialog showing up if an uncaught exception was loggedadded the dialogs text to the german and english language filesfixes [#2288](https://githubcom/jabref/jabref/issues/2288)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you very much for your contribution 👍  we are looking forward seeing more from you ) ||
534,4580,4587,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add a variable to track the change in preview style proposed solution for #4580:i have added a previewstyle variable to check when the preview style changesfrom my observation the layout is updated every time tabs are switched or preview styles are cycled through with the addition of a variable these 2 situations can be differentiated to print out the notification more appropriately----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) looks also good from my site! i am merging this now ||
535,4598,4601,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,convert duplicateresolverdialog to javafx fixes #4598 ![grafik](https://user-imagesgithubusercontentcom/320228/51695559-9c40e480-2003-11e9-8aba-227503ac68c0png)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) yes i thought i added the label on that issue  ||
536,4600,4604,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,enable default cursor for new entry fixes #4600sets text field on focus at the end of initialization by running the javafx thread----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
537,4609,4613,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix preview style configuration fixes #4609user mentioned that after pressing one of the styles and saving it the style is not updatedto change the preview style he has to move the selected style to the right column before pressing ""save""selecting styles in the right column can be previewed in the test panel however the style of bibentry is not updated after pressing `test` to rectify this the citation style is updated in preferencesto ensure preview style configuration is saved the chosen preview style is also saved in the preferencesnote that if preview style (at the left column) is selected the configuration will not be saved----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) code looks good from my side as well could you please test if the error i encountered is also resolved with your code #4621  ? || @siedlerchr that error is not resolved in my pr do you want me to fix it? || @chelseyong  okay thanks for the info if you want you could do this in another pr || thanks again for your contribution! ||"
538,4591,4642,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[#4591] add integrity check for books with edition reported as 1 fixes #4591 @tobiasdiez @siedlerchr could you review this pr also i am not sure why travis is failing || @ronaklakhotia  if you click on the travis build failed (details)  you can expand the failing job in your case its just the localization test which failed  you need to add the string to the english localization file under src/main/resources/l10n```orgjabreflogicl10nlocalizationconsistencytest > findmissinglocalizationkeys() failed    orgopentest4jassertionfailederror: detected language keys which are not in the english language file    paste these into the english language file    edition\ of\ book\ reported\ as\ just\ 1edition of book reported as just 1     > expected: <[]> but was: <[edition\ of\ book\ reported\ as\ just\ 1 (src/main/java/org/jabref/logic/integrity/editioncheckerjava lang)]>        at orgjunitjupiterapiassertionutilsfail(assertionutilsjava:55)        at orgjunitjupiterapiassertequalsfailnotequal(assertequalsjava:195)        at orgjunitjupiterapiassertequalsassertequals(assertequalsjava:184)        at orgjunitjupiterapiassertionsassertequals(assertionsjava:1135)        at orgjabreflogicl10nlocalizationconsistencytestfindmissinglocalizationkeys(localizationconsistencytestjava:111)``` || thanks for the pointer! fixed the failing test ready for review || @tobiasdiez @siedlerchr  ready for review || you can ignore the outdated dependencies its one of the tasks which is allowed to fail  || build passed ready for review ! || any updates? || @ronaklakhotia we have the policy that at least two core developers have to approve a pull request before me merge since we are all working on jabref in our freetime reviewing of a pr might take a day or two (especially over the weekend) but that shouldnt stop you from looking and working at other open issues if you have the motivation and the drive to do so! ||
539,4641,4644,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix for issue 4641: remove usage of tempdirectory extension from junit-pioneer fixes: #4641 removed the tempdirectory extension from junit-pioneer with the built-in extension of junit 54----- [x] manually tested changed features in running jabref- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message) perfect thanks a lot! ||
540,4628,4658,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix for #4628 - cant save new content selectors fixes #4628dialog converted into javafx* old functionalities are preserved* new validations added:** error message thrown when dialog invoked but not active connection exists** remove keyword button is enabled just in case some keyword is selected----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) additionally it would be nice if you could add a screenshot  of the converted dialog || @siedlerchr hi thanks for the reviewi hope i was able to incorporate all the changes mentioned above - listproperty + bindingshere is the screenshot of converted dialog:![image](https://user-imagesgithubusercontentcom/5075491/52918575-d6e32780-32f8-11e9-8a21-78da487f25eepng) || @tobiasdiez thanks for the review - changes have been made || thanks again for your contribution! looking forward to your next pr -) || thanks guys for super guidance! || @ricantech  we have to thank you for your contribution! we hope you are interested in fixing some other issues as well!  ||
541,4610,4660,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fixes #4610 changed the way the groupdialog description is displayed fixes [#4610](https://githubcom/jabref/jabref/issues/4610)- changed groupdialog description node to textflow- groupdialog is no longer resizable- changed the layout of the groupdialog window to be more horizontal- ok button is only enabled after some input![jabrefgroupdialog2](https://user-imagesgithubusercontentcom/25904972/52920648-3f3d0380-330f-11e9-9c84-2d366ae3bd45png)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) > the code looks good to me and we can merge it as it is now nonetheless christoph is right and it would be better to replace the html completely by styled javafx text modules (with corresponding css style classes defined in the `basecss`) since this is a bit of work as you need to fumble around with the localization and its not utterly important i let you decide if you want to work on this or invest your time in something else (eg fixing another issue -) )i definetly agree that this should be done the right way at some point but im not really confident to touch the localization im going to move to another issue so this pr can be merged 😄  || ah i think i just noticed a bug please wait with merging || could you please also take a look at #4678  || ok so i tried to automatically create a database when the user tried to create a new group without a open database but i couldnt get it to run the code to add the group to the open database always ran before the new database was createdin the end i gave up and i just created a warning when the user tries to create a group without a database i hope i made no mistakes while adding the localization> could you please also take a look at #4678this error never occurred when i tried it the report is a little thin and i couldnt recreate itif everything looks good to you you can merge this pr || thanks for the quick follow-up (and sorry for being somewhat pedantic -) ) ||
542,4614,4696,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,remove resolve duplicate keys dialog <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #4614removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply (for all entries or only for the duplicated ones) through the entry editor and/or menu----- [x] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) well however on import there should be a warning and the option to resolve duplicate keys its essential to discover duplicates || @siedlerchr such a feature wasnt implemented (the only check was when opening a database) and is obsolete with my other pr #4692 where now keys are automatically generated for every imported entry duplicate entries are also highlighted in the import dialog || okay then i see no problem! ||
543,4666,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
544,4667,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
545,4668,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
546,4669,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
547,4670,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
548,4671,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
549,4672,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
550,4673,4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
551,4709,4713,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix: bibkey generated does not handle diacritics fixes #4709clean up the author value in `bracketedpattern` after it is retrieved from the `bibentry`----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your contribution unfortunately your changes resulted in a lot of failed tests (look at details of the travis build and then select the failing job) seems like there are some more cases you need to take care of (im not that deep into the bibtexkeygenerator stuff) || noted is there another approach to handle this? || ~currently facing some issues while writing tests: `mockito` and `jfoenixcontrolsjfxsnackbarlayout` cannot be imported whereas `jfoenixcontrolsjfxsnackbarsnackbarevent` works fine i updated to jdk8_202 and it doesnt help~just reimported the project it works now after syncing fork the same error occurs how to fix this?![image](https://user-imagesgithubusercontentcom/30564248/54003936-63f5ff80-4186-11e9-857e-acd053138ee6png) ||  @chelseyong  try merging the current master in eg  (if upstream is the jabref/jabref repo)```git fetch upstream git merge upstream/master```im not an intellij user but executing gradle should be sufficient maybe @halirutan  can tell you more || sorry for the delay i had some software issuessymbol `-` is now removed from key generation ||
552,4703,4720,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix #4703: newline format couldnt be changed fixes #4703<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
553,1506,4722,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"adding additional modifiers to be used in bibtex key generator as i currently wanted to have a possibility to have ""capitalized shorttitles"" in my bibtex keys i reused the already existing `capitalizeformatter` `titlecaseformatter` and `sentencecaseformatter` as ""modifiers"" to be used also for the bibtexkeygeneratorthis implements #1506 and is more flexible as the solution developed by @oscargus at the time in  #1894 as it can be applied to all other fields and not only to titles ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) - https://helpjabreforg/en/bibtexkeypatterns needs to be updated if you merge the current master in the build errors should be resolved (i accidentally pushed some changes to master yesterday)  || as build is now passing after rebase ill merge now ||"
554,4306,4727,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,[#4306] disable renaming fixes #4306 if i remember correctly this is a design flaw in the java language of the functional programming implementation try using the classic if construct  || i am not sure how to get around this does this mean the equals method in optionalutils is redundant because using the if construct would mean i cant use the generic types on issamefile method ||
555,4728,4729,1,0,1,1,0,1,1,1,1,0,1,1,0,1,0,1,1,1,1,0,0,1,0,saving changes and exiting application fixes #4728when the user clicks _save changes_ option the status ofsaving is not shown unlike before i am not sure what might bethe cause of that<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the `teardownjabref(filenames)` executes before the files are actually saved would this be responsible for the ui not being shown? || i dont have the code at hands but this could be a reason you could debug and see where the save happens and when the instance should be closed || okay so this is what i think is happeningthe savedatabaseaction class [dosave()](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/exporter/savedatabaseactionjava#l141) updates ui on _javafxthread_ however the call to `teardownjabrefframe` executes before that and a blank window is shown instead of the uii placed a lock before calling [teardownjabrefframe](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l516) hence blocking that thread but the code under [dosave()](https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/exporter/savedatabaseactionjava#l141) method wasnt executed shouldnt they be running on separate threads? || ill take a look at it tomorrowyash kothari <notifications@githubcom> schrieb am mi 6 märz 2019 19:09:> okay so this is what i think is happening>> the savedatabaseaction class dosave()> <https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/exporter/savedatabaseactionjava#l141>> updates ui on *javafxthread* however the call to teardownjabrefframe> executes before that and a blank window is shown instead of the ui>> i placed a lock before calling teardownjabrefframe> <https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l516>> hence blocking that thread but the code under dosave()> <https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/exporter/savedatabaseactionjava#l141>> method wasnt executed shouldnt they be running on separate threads?>> —> you are receiving this because you commented> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/4729#issuecomment-470214052> or mute> the thread> <https://githubcom/notifications/unsubscribe-auth/aati5iuo25bn99fnkhbjeatcdwabp-jyks5vuarigajpzm4bhhoj>> > || i have a doubt since the `dosave()` method handles `saveexception` what exceptions are we trying to catch under `confirmclose()`? || please remove the runinjavafxthread call only when the dosave is called from gui methods it might that the dosave could be called from a background thread which will result in a not on fx thread exception || will adding a new method `savefromgui()` in `savedatabaseaction` be a good approach to solving this problem? this i think will lead to some redundant code or will require refactoring of the `save` method  ||
556,4584,4730,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,improve toolbar icons and their layout group and reorder the toolbar icons and add generate bibtex keys button now it looks like on the @martinkarims prototypes <br>screenshots of the new layout:![right](https://user-imagesgithubusercontentcom/32721326/53910396-7d863280-4032-11e9-9308-cdace307167bjpg)![left](https://user-imagesgithubusercontentcom/32721326/53910397-7e1ec900-4032-11e9-8d7a-9f86ef757ceejpg)this pr fixes #4584 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
557,4724,4731,1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,fix default import format pattern remove display arrayadd migrationfixes #4724<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
558,4474,4738,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,adding support for input methods fixes #4474<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you! i am enjoying the process so far ||
559,4666,4744,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"move library specific key pattern dialog call to library menu follow-up of #4666 and #4707: menu entry ""bibtex key patterns"" is calling a library specific dialog to set key patterns the global key patterns are managed using ""options"" -> ""preferences""thus: moving it to ""library"" menu:![grabbed_20190310-174125](https://user-imagesgithubusercontentcom/676652/54088195-bdfbee00-435b-11e9-8fab-063fe84f9805png)(another minor addition: setting title of dialog which was empty before)----- ~~change in changelogmd described~~- ~~tests created for changes~~- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- ~~check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~  "
560,4745,4746,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,0,"[wip] switch to the mariadb connector from the mysql one switch from `commysqlcjjdbcdriver` to `orgmariadbjdbcdriver`## references#4745 ## checklisthappy to work on these as required- [x] change in changelogmd described- [x] tests created for changes (modified original)- [x] manually tested changed features in running jabref ([travis](https://travis-ciorg/kiwiroy/jabref/builds/504417225))- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) hey @kiwiroy thank you for this contribution!after some minutes of comparing the jdbc drivers im not sure why mariadb is the obvious way to go so please add more reasoning both here in the comments as well as a condensed version in an architecture decision record here https://githubcom/jabref/jabref/tree/master/docs/adrthis will help us to judge upon the benefits and consequences of this change || im curious: would it be possible to have both connectors eg mysql and mariadb together so that a user can choose between them or does this create conflics? || just some comments here first:im unsure if this is relevant but this [blog] has *some* background informationmariadb provide a comprehensive [feature comparison] though that is mainlyserver features rather than client as far as possible they maintain protocol[compatibility] for clientsfor the linked issue (#4745) the mysql connector does not connect to the pamenabled server despite [claims] the mysql connector documentation mention aconfiguration property [authenticationplugins] which is a *""comma-delimited listof classes that implement commysqlcjprotocolauthenticationplugin""* a pamclass id expect `dialog` cannot be seen in the connector either<img width""286"" alt""commysqlcjprotocolaauthentication"" src""https://user-imagesgithubusercontentcom/313562/54109224-f32f3b80-4442-11e9-86b6-72e0b019ec93png"">the [mariadb] implementations include a specific class for thisthis [stackoverflow][stackoverflow-1] thread pointed me to the mariadb connectoras a replacement that would achieve a connection and the comment in [this one][stackoverflow-2]suggests that performance will not be an issue> the performance in mysql and with the mysql-connectorj was worse in all cases than mariadbit is possible to have the two resident in the class path [concurrently][blog]: https://hackrio/blog/mariadb-vs-mysql[feature comparison]: https://mariadbcom/kb/en/library/mariadb-vs-mysql-features/[compatibility]: https://mariadbcom/kb/en/library/mariadb-vs-mysql-compatibility/[authenticationplugins]: https://devmysqlcom/doc/connector-j/80/en/connector-j-reference-configuration-propertieshtml[results]: https://devmysqlcom/doc/search/?d218&p1&qauthenticationplugin[mariadb]: https://githubcom/mariadb/mariadb-connector-j/tree/master/src/main/java/org/mariadb/jdbc/internal/com/send/authentication[stackoverflow-1]: https://stackoverflowcom/a/26930596/7456461[stackoverflow-2]: https://stackoverflowcom/questions/50473450/mariadb-jdbc-driver-not-batching-updates-efficiently-vs-sql-server[pam walkthough]: https://mariadbcom/resources/blog/writing-a-mariadb-pam-authentication-plugin/[claims]: https://devmysqlcom/doc/connector-j/80/en/connector-j-using-pamhtml[serverpam]: https://devmysqlcom/doc/refman/80/en/pam-pluggable-authenticationhtml[concurrently]: https://githubcom/mariadb/mariadb-connector-j/blob/master/documentation/use-mariadb-connector-j-drivercreole#having-mariadb-and-mysql-driver-in-the-same-classpath || first [pass](https://githubcom/jabref/jabref/compare/masterkiwiroy:concurrently) at mysql **and** mariadb travis test suite [passes](https://travis-ciorg/kiwiroy/jabref/builds/504587880) and local testing of mariadb connector against the database with pam auth succeeds while only changing the dropdown to mysql results in the `unable to load authentication plugin dialog` message**nb** as the driver is the only difference i chose to reuse the mysqlprocessor class https://githubcom/jabref/jabref/compare/masterkiwiroy:concurrently#diff-30b9c551de374dcefae08e56aad3dec9r577 || yeah cool that it works! that would be best compromise here i think  || right should this pr be closed and a new one created - after a little tidy up?also any pointers on how [this passed](https://travis-ciorg/kiwiroy/jabref/builds/504575907) while including [this line](https://githubcom/kiwiroy/jabref/compare/51ff33cb61e2^648c92231c6a#diff-a465c056fb9283b0efd14091f4eb8d66r42) || hm that is really odd regarding the test try debugging the test locally or add a systemoutprintln before comparing the values to see the outputyou can either reuse this  pr if you want or use the other pr whatever you want || @kiwiroy  what is the current status here? it would be really nice to have this inlcuded || i’ve had a busy few weeks will attend to it soon  || @kiwiroy any update? || closing due to inactivity feel free to reopen it if you have time to work on it || i resolved the conflicts and are going to merge it i will add an adrwe keep only mariadb reason: mysql connector/j 80 is licensed under gpl source: <https://downloadsmysqlcom/docs/licenses/connector-j-80-gpl-enpdf>> without limiting the foregoing grant of rights under the gplv2 and additional permission as to separately licensed software this connector is also subject to the universal foss exception version 10 a copy of which is reproduced below and can also be found along with its faq at http://ossoraclecom/licenses/universal-foss-exceptioni understand that there is that foss exception but i am not aware of the consequences - and that exception is not commonly known || "
561,1019,4759,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,feature: implement search filter in show preferences add a search box in show preferences window to allow users to filterpreference optionsresolves #1019<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->![preferences](https://user-imagesgithubusercontentcom/21019116/54366500-bfe4ea80-4696-11e9-8d07-e0cd0428ed66png)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) codewise lgtm could you please provide a screenshot how it looks like when the search matched/text is found? || @siedlerchr i have added a screenshot now || 1 will moving the checkbox next to the search field provide a better ux?2 should the `count` label be bound to `filteredoptionssize()`? || yeah! thats cool looks good i would move the checkbox to the top next to the search fieldregarding your second option: either you directly bind it to the filtered list size property or you update the text in the method which is your current way   but both together will result in an error: a bound value cannot be set )so as you automatically call the updatemodel method on changes you can leave it as is  || but the `updatedmodel()` is called only when check box is changed i was wondering if having it update while filtering would be a good addition || on moving the checkbox to the top next to the search field what are your opinion on it @tobiasdiez @siedlerchr ?![2019-03-15-181809_1920x1080_scrot](https://user-imagesgithubusercontentcom/21019116/54432431-2f1e1580-474f-11e9-8f1b-b5b43c5e8b43png) || yep that is exactly what i meant! looks good! and thanks for fixing this longstanding issue ) || i am glad it came out as expected! :)however i think that the `count` label should be bound to the `table` size so that the right count is shown when filtering i will push the changes and we can decide on whether to merge the change or stick with the current setup  ||
562,4023,4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improve remote messaging fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast) surpasses #4460<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) does not work: still possible to start a second instance from within eclipse```20:40:59400 [javafx application thread] debug orgjabreflogicremoteclientremoteclient - could not ping server at port 6050 - javanetsockettimeoutexception: connect timed out	at javanetdualstackplainsocketimplwaitforconnect(native method)	at javanetdualstackplainsocketimplsocketconnect(dualstackplainsocketimpljava:85)	at javanetabstractplainsocketimpldoconnect(abstractplainsocketimpljava:350)	at javanetabstractplainsocketimplconnecttoaddress(abstractplainsocketimpljava:206) ``` || this sounds like the first instance failed to respond did you made sure that both instances run from the new code? do you get an error message in the first instance? || yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors  || tested again today seems to work now ||
563,4460,4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improve remote messaging fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast) surpasses #4460<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) does not work: still possible to start a second instance from within eclipse```20:40:59400 [javafx application thread] debug orgjabreflogicremoteclientremoteclient - could not ping server at port 6050 - javanetsockettimeoutexception: connect timed out	at javanetdualstackplainsocketimplwaitforconnect(native method)	at javanetdualstackplainsocketimplsocketconnect(dualstackplainsocketimpljava:85)	at javanetabstractplainsocketimpldoconnect(abstractplainsocketimpljava:350)	at javanetabstractplainsocketimplconnecttoaddress(abstractplainsocketimpljava:206) ``` || this sounds like the first instance failed to respond did you made sure that both instances run from the new code? do you get an error message in the first instance? || yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors  || tested again today seems to work now ||
564,4481,4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improve remote messaging fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast) surpasses #4460<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) does not work: still possible to start a second instance from within eclipse```20:40:59400 [javafx application thread] debug orgjabreflogicremoteclientremoteclient - could not ping server at port 6050 - javanetsockettimeoutexception: connect timed out	at javanetdualstackplainsocketimplwaitforconnect(native method)	at javanetdualstackplainsocketimplsocketconnect(dualstackplainsocketimpljava:85)	at javanetabstractplainsocketimpldoconnect(abstractplainsocketimpljava:350)	at javanetabstractplainsocketimplconnecttoaddress(abstractplainsocketimpljava:206) ``` || this sounds like the first instance failed to respond did you made sure that both instances run from the new code? do you get an error message in the first instance? || yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors  || tested again today seems to work now ||
565,4755,4761,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,enable import button only if entry selected <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes [#4755](https://githubcom/jabref/jabref/issues/4755)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
566,4764,4769,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix removing entries when source-code-field is out of focus fixes #4764the issue was `storesource()` method is called when entry is out of focus however if another entry is selected then `currententry` is updated to that and `storesource()` is called with the previous `codearea` but updating it in the second entry thus causing a duplicationfix was to pass the entry as another argument to `storesource()` <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
567,4754,4779,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,fix illegalargumentexception when ranking entries add names for ranking entries event so it does not generate an illegalargumentexceptionthis pr fixes #4754 ----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
568,4785,4791,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix npe in duplicate resolver dialog fixes #4785init method was accessing the database field before it was initializedfixes #4786pass a new bibdatabsecontext()<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as this are very simple fixes i merge directly) ||
569,4786,4791,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix npe in duplicate resolver dialog fixes #4785init method was accessing the database field before it was initializedfixes #4786pass a new bibdatabsecontext()<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as this are very simple fixes i merge directly) ||
570,4736,4792,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,relativizes paths to aux files <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes issue [#4736](https://githubcom/jabref/jabref/issues/4736)changes:1 introduced a new `latexfiledirectory` to metadatajava2 the path of the aux file is now serialized as a relative path with respect to the `latexfiledirectory`3 the `getfilepath()` of texgroup now returns the relative path of the aux file used to create the group4 each user can define their own `latexfiledirectory` similar to `userfiledirectory`5 i have implemented tests to check for basic parsing/serialization and also to check that the relative path is being found correctly6 when user selects an aux file via the browse button they are shown the relative path of the file in `texgroupfilepath` in group dialog----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
571,4789,4794,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix closing of library not handling backup and autosave manager shutdown fixes #4789the issue was when the tab is closed by clicking x it did not callthe method `closetab()` which handles the closing of backup andautosave manager<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you for those kind words! :smile:  || thank you very much for this fix can you please write a changelog entry before we merge this?edit: actually im not sure when this bug was introduced probably only recently so we dont need a changelog entry ||
572,4763,4797,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,"fix right clicking on any entry and selecting ""open folder"" results in the nullpointer exception fixes #4763the issue was when a user right-clicks an entry and right click ""open folder""  then it results in null pointer exception in linux systemthe main cause for this issue was in the linux implementation of nativedesktop(linuxjava#openfolderandselectfile) that code looks for an environment variable named desktop_session and if this variable is not set in any system then it will result in null pointer exceptionthe fix was to check if desktop_session variable is present or not if not present then run a default command which will try to open the folderanother issue was that if a system does not have a file browser installed then right-clicking on any entry and selecting ""open folder"" option will not do anything(if there is no file browser installed in the system)to fix this issue ive added an option in preference setting window to set command or program for default file browser where a user can explicitly set command or let jefref use a default behavior like this:![jabref-fix-4763](https://user-imagesgithubusercontentcom/17297948/54761987-39418780-4c19-11e9-999e-2b62fa24b237png)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) could you please check issue #4802 as well? || @siedlerchr  okay ill try to fix this issue ||"
573,4441,4807,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,item count in a group updated correctly <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes issue [#4679](https://githubcom/jabref/jabref/issues/4679)this pr fixes the first issue i could not reproduce the second issue the item count should now be updated correctlythe problem was because of the listener not getting notified when changes were being made this was due to the weak listener which was attached to observablelist returned by `databasecontextgetdatabase()getentries()`https://stackoverflowcom/questions/44341400/whats-the-purpose-of-fxcollections-unmodifiableobservablelistthe only case where this pr might not work is when we are dealing with a library in which there are no groups other than the all entries [#4441](https://githubcom/jabref/jabref/issues/4441) that is because the group being utilized in the line `texttextproperty()bind(groupgethits()asstring())` in file /gui/groups/grouptreeviewjava is the group all entries that is present even before you open any library in jabref this causes value to not be set properly but the only time it happens is if the only group you have in the new library is all entries once we are able to fix that this pr should work in all cases----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) > is this the only instance where listeners are registered against the list returned by `getentries`? i would also be nice if you could add a small comment in the code explaining why we need to hold a reference to the list (because some ides would suggest to convert the field to variable with field scope)i am not sure about that i can check for other instances over this week ||
574,4679,4807,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,item count in a group updated correctly <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes issue [#4679](https://githubcom/jabref/jabref/issues/4679)this pr fixes the first issue i could not reproduce the second issue the item count should now be updated correctlythe problem was because of the listener not getting notified when changes were being made this was due to the weak listener which was attached to observablelist returned by `databasecontextgetdatabase()getentries()`https://stackoverflowcom/questions/44341400/whats-the-purpose-of-fxcollections-unmodifiableobservablelistthe only case where this pr might not work is when we are dealing with a library in which there are no groups other than the all entries [#4441](https://githubcom/jabref/jabref/issues/4441) that is because the group being utilized in the line `texttextproperty()bind(groupgethits()asstring())` in file /gui/groups/grouptreeviewjava is the group all entries that is present even before you open any library in jabref this causes value to not be set properly but the only time it happens is if the only group you have in the new library is all entries once we are able to fix that this pr should work in all cases----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) > is this the only instance where listeners are registered against the list returned by `getentries`? i would also be nice if you could add a small comment in the code explaining why we need to hold a reference to the list (because some ides would suggest to convert the field to variable with field scope)i am not sure about that i can check for other instances over this week ||
575,4805,4815,1,0,0,1,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,0,enhanced message log worked on  [#4805](https://githubcom/jabref/jabref/issues/4805)  removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log4j because logevent-objects are reused they were copied in logmessagesadd  but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for [#4811](https://githubcom/jabref/jabref/issues/4811)closes #4805 closes #4811----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @siedlerchr @tobiasdiez i thought while im at this anyway i could also do it properly and checked all calls to dialogservicenotify i refactored all places where the method was called from a background thread so that i could remove `defaulttaskexecutorruninjavafxthread` from dialogservicenotifyat two points however it was not as easy see the review abovewhat do you think? || thanks for the update the `backgroundtask` has `updateprogress` and `updatemessage` for these cases however an implementation along these lines needs further refactoring i guess in my opinion we can leave it like that for the moment and merge || ok so maybe a follow-up issue could then be to improve the identifier lookup and maybe also the fulltext lookup using `updateprogress` and `updatemessage` ?this is ready for merge then i guess || yes to change the identifer lookkup and the other would be a good followup issue ||
576,4811,4815,1,0,0,1,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,0,enhanced message log worked on  [#4805](https://githubcom/jabref/jabref/issues/4805)  removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log4j because logevent-objects are reused they were copied in logmessagesadd  but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for [#4811](https://githubcom/jabref/jabref/issues/4811)closes #4805 closes #4811----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @siedlerchr @tobiasdiez i thought while im at this anyway i could also do it properly and checked all calls to dialogservicenotify i refactored all places where the method was called from a background thread so that i could remove `defaulttaskexecutorruninjavafxthread` from dialogservicenotifyat two points however it was not as easy see the review abovewhat do you think? || thanks for the update the `backgroundtask` has `updateprogress` and `updatemessage` for these cases however an implementation along these lines needs further refactoring i guess in my opinion we can leave it like that for the moment and merge || ok so maybe a follow-up issue could then be to improve the identifier lookup and maybe also the fulltext lookup using `updateprogress` and `updatemessage` ?this is ready for merge then i guess || yes to change the identifer lookkup and the other would be a good followup issue ||
577,4817,4818,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,put renaming of file entries in javafx thread for cleanup closes #4817 because field changes must be done in the javafx thread i put the field change in a callable to be executed by the javafx threadthis issue might arise for other cleanup tasks as well----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your pullrequest! || @tobiasdiez im sorry i was a bit careless with this pull request and used a class from the `gui` inside the `logic` package and now the build fails shall i open another pull request to revert this or can you fix this on the master branch? ||
578,4819,4822,1,0,0,1,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,convert autolinkfilesaction to javafx fixes #4819also convert a few other message boxes to javafx<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgt build failing is due to previous problematic pr with cleanup ||
579,4820,4835,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,all buttons in custom dialogs react on enter all buttons in custom dialogs react now also on <kbd>enter</kbd> (the default behavior <kbd>space</kbd> in javafx is not affected by this change)fixes #4820 ----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message) could you please check the edit strings dialog? cause it has an editable table and  you need to press enter to confirm the column value im not sure if this interfers with the main dialog button  || from my point of view there is no intereference the confirmation of the value via enter works ||
580,4735,4839,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix parser exception when loading tex-groups with non-existing file fixes #4735 catch file not found exception and handle non existing aux files gracefully<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
581,4840,4847,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,removed default constructor of fxdialogservice fix for #4840 needs test and discussion~~removed injection mechanism for dialogservice in order to remove its default constructor because through the null value used in the default constructor the nullpointerexceptions were caused~~----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
582,3531,4848,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix custom name formatters fixes #3531<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
583,3905,4860,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,remove deprecated awt apple extension fixes #3905<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @linusdietz  @halirutan  could you please test if this removal breaks anything related to mac? the only thing from the code might be the file handling eg double? click on a bib file in the finder  || tested it for a day no issues appeared ||
584,4873,4876,1,0,0,1,0,1,1,1,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,fix saving of strings fix removing of stringsfixes #4873the only problem i now have i cant reliable detect/prevent dupliacte stringseg a user can have a string with label a and content b and a user can enter a new string a  with content cthe first string would now be overwritten@tobiasdiez  do you have an idea if we can directly prevent the entering of duplicates?the addall method simply adds all strings and updates the content if found previously it would always report a duplicate label exceptionmaybe one could check the id value if its present or equals<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks now its functional ||
585,4857,4892,1,0,0,0,1,1,1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,0,0,fixed closing of the shared database login dialog if the user enters wrong authentication details - #4857 fix for the issue -  dialog close after pressing ok button #4857 - fixed closing of the shared database login dialog if the user enters wrong authentication details----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
586,4579,4896,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,store column widths as integer fixes #4579store column widths as integer <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
587,4905,4918,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,fixes throwing an exception when id field is present in bib file fixes #4905<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) should the exception also be removed from the `clearfield` method?https://githubcom/jabref/jabref/blob/23e9e523e36705fd2562c300e4fc7bc73f7ac8c5/src/main/java/org/jabref/model/entry/bibentryjava#l463-l468 || yes please also remove it from the clear field method! ||
588,4864,4931,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"improve author parsing fixes #4864 the author class added an additional space when converting ""a o"" to the dotted version ""a o""<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  "
589,4932,4935,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,throw bibentrynotfound exception in case entry is no longer present fixes #4932 when an entry got removed a npe complaining about an empty database was thrown because of some weird unkownbibtexentry thingnow the correct bibentrynotfound  exception is thrown showing the problematic reference mark<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
590,4940,4943,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,fix threading issue with opening from recent libraries fixes #4940on windows 10 i could not reproduce the original exception but im very convinced that i found the threading culprit<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
591,4844,4950,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixes remaining issues in #4844 fixes #4844 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->as usual the situation was not as easy as it seemed to be in #4887 i reused now the existing renaming logic for ""renaming to suggested filename"" which performs some more checks like not to overwrite existing files and also takes the ""file directory"" settings into accountthus this should fix the remaining problem mentioned in #4844----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  "
592,4886,4964,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,remove ui threadlist for maintable as it prevents sorting in maintable fixes #4886renenables sortingtried a bit around and could not find any side issue so far<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added it around the original getentries that works now as well || jabref 50-dev--snapshot--2019-05-11--master--3baa6bd22linux 4180-18-generic amd64 java 180_191yes seems to work fine  its a little slow perhaps?  jabref seems to need a up to 7 seconds to sort a newly-selected date/year column (thinkpad t560 with i5 core cpu bib database with 4000+ entries) and a few seconds after a sort to start receiving keystrokes again  alphabetic field columns sort more quicklythanks!dominik || @tobiasdiez  i didnt encounter any problems with the cleanup maybe we can remove the wrapper? seems to cost performance ||
593,4913,4965,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"fix downloading pdf produces html as extension if we already have a filetype we use that instead of relying on the autodetectionfixes #4913<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i tried adding a test but its a bit complicated as the logic is an lambda in the preparedownloadtask method and solely testing the new method which just passes the type as parameter is trivial || mhh you should be able to test the `download` method directly:```javalinkedfile onlinefile  new linkedfile(""http://arxiv something"")linkedfileviewmodel viewmodel  new linkedfileviewmodel(onlinefile )viewmodeldownload()assertequals(""expectedpath"" onlinefilegetlink())```needs a bit more setup but should work in principle || got it to work with heavy mocking and refactoring the shitty externalfiletypes singleton is really bad for testingneeds some cleanup of the test class now delete some  things which are no longer necessary || "
594,4968,4970,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,bump jsoup to 1121 and switch jsoups stringutil for jabrefs stringutil here is a correction for #4968: it bumps jsoup from 1113 to 1121 and also it switchs jsoups stringutil for jabrefs stringutil in all files that used it----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
595,2016,4979,1,0,0,1,1,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,fix command line help text now in the cli help text arguments and descriptions have been rewritten for fixing simplifying and detailing them betterit fixes issue #2016![cli help](https://user-imagesgithubusercontentcom/12954316/57963224-94de7780-7921-11e9-9d06-5e00be984fbepng)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
596,4977,4980,1,0,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,1,0,resize different fonts changing entry type now jabref uses the same typography for the two menus to change entry type (and for the tooltip)it fixes #4977![entry_type_menu](https://user-imagesgithubusercontentcom/12954316/57971729-07873b80-7992-11e9-84cd-a92f8ea28444png)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
597,496,4981,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,duplicate check on import should be run in background task #4963 created background task for the work done in org/jabref/gui/importer/importentriesviewmodeljava:68 @siedlerchr thank you for the review your suggestion is committed as per call flow i havent found some bottleneck for viewmodel as per call flow if gets called mainly org/jabref/gui/importer/importentriesdialogjava:73but i guess as you wrote it worth to have this task done in a separate thread for both use cases  ||
598,4991,4993,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix icon size - the second the entry-editor showed a slightly smaller icon for the generatebibtexkey-button this bug also had an effect on the display of icon size in #4991the generatebibtexkey-button is now a button like every other button in fxml the actionobject was put into a standard-fxml-method everything works including undo and asking before overwriting----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ready to review || thanks for the fix! ||
599,4995,4996,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix the attach file dialog for starting on the users main directory now the ""attach file"" dialog in the right-click menu for an entry starts on the working directory instead of the users main directory it is the same behavior as when adding a file from the entry editorit solves [#4995](https://githubcom/jabref/jabref/issues/4995)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  "
600,4997,4999,1,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix iee fetcher fixes #4997 add exception dialog on import failcheck if we have keywords field present in json<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
601,5002,5011,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"[wip] latex integration project hey! this is the pull request where i will be uploading everything related to the latex integration project which tobias mentioned in #5002for the moment i have been coding the backend of the tex parser and preparing tests for these classes before the end of this week i will add support for nested files and cross-references and will keep improving the related documentatio y feedback is more than welcome! **:""d** a suggestion for the ui of the search result window: i like the design of researchgate to show the citations ![image](https://user-imagesgithubusercontentcom/5037600/59087955-7e1ab780-8906-11e9-9c84-1678dfad75e4png)we can do something similar just replacing the reference (minimal two-spheres ) with the name of the latex document and the links (""view"") with an option to jump to the citation in the latex filein general tables are nice if you want to compare items while lists are preferred if the user is more interested in the details of an item i guess for the search result window we are in the second case (although that might differ from user to user) || thanks for your feedback @siedlerchr and @tobiasdiez! now all identified issues should be fixed- todo: add support for multicite commands- todo: expand integration test || @tobiasdiez what do you think of this gui according to the example that you proposed?![parser ui](https://user-imagesgithubusercontentcom/12954316/59455214-01ab3b80-8e14-11e9-8fb8-fcf777fb1842png)by the way you all can follow the development of the user interface in [other pull request](https://githubcom/davidemdot/jabref/pull/1) (this one is becoming very big) || i have renamed crossingkeys to texbibentriesresolver do you think this is a clear method signature?regarding bibdatabase and cloneentry() they were related to an idea from the first few days but it does not make sense anymoreall your remarks should be solved now!furthermore i have been working on the gui too hope to commit the latest changes soon || thanks for the update the code looks good to me now and from my point of view we can merge this pr onto a new branch at the jabref repository this allows you to open further prs against this new branch with proper updates and build checks moreover our build infrastructure kicks in and we get a proper build which we could share with users to get early feedback@siedlerchr @linusdietz  || @davidemdot if possible can you please change the target branch to a new one (say jabref/latexintegration) if not please open a new pr targeting this branch thanks || @tobiasdiez i can change this pr to another branch but i am not allowed to create a new one in this repocould you open it please? just writing the name in the branch selector menu and![new_branch](https://user-imagesgithubusercontentcom/12954316/60295745-c422d400-9924-11e9-9fc1-5924286c0391png) || done! https://githubcom/jabref/jabref/tree/latexintegration || ive merged this now so you can target your new prs onto `jabref:latexintegration` (with proper github notifications and build infrastructure) || "
602,501,5014,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,adding doi to test entry - fixes #5013 one liner to have also a doi available in the entry to test the preview function@nomicrosoftbuhtz any more suggestions what should be added?----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a loti would like to have some `comments` (in the past it was `notes` wasnt it?) and `groups` and `keywords`how could we handle `issue`? as i understand biblatex `issue` is used when `number` and `volume` does not exists and vis-a-vis i also know that some journals or import/export mechanism generates entries with all three attributesif we are still in wish-modewhat is about the `gettestentrybook()` is it still used?beside an `@article` i would like to see a testentry for `@incollection` (of course combined with a `@collection` entry || only three wishes! -) i also added `issue` `keywords` and `comment` to the test entry `groups` in general would also be possible - but as there are different ways to configure groups (eg based on keywords etc) its hard to configure a preview to show all possibilitiesthe `gettestentrybook()` method is used in the libreoffice settings - but not in the entry preview preferences ||
603,3942,5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"select push app in preferences as asked by @tobiasdiez here is my alternative proposal this closes #4991 by mergingfixes #674 closes #3942 and closes #4368<img width""242"" alt""prefpushtoapp"" src""https://user-imagesgithubusercontentcom/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342png"">this branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push-applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review || i added some eye-candy you will be charmed -)<img width""330"" alt""select push application"" src""https://user-imagesgithubusercontentcom/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cfpng""> || looks good to me! || ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences-dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards 50 and the fate of swing || looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good  || works fine at least if i understood you right i hope so || looks very good to me now thanks again! || you are welcome this was fun - again! lets push jabraf forward towards 50 -) || "
604,4368,5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"select push app in preferences as asked by @tobiasdiez here is my alternative proposal this closes #4991 by mergingfixes #674 closes #3942 and closes #4368<img width""242"" alt""prefpushtoapp"" src""https://user-imagesgithubusercontentcom/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342png"">this branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push-applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review || i added some eye-candy you will be charmed -)<img width""330"" alt""select push application"" src""https://user-imagesgithubusercontentcom/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cfpng""> || looks good to me! || ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences-dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards 50 and the fate of swing || looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good  || works fine at least if i understood you right i hope so || looks very good to me now thanks again! || you are welcome this was fun - again! lets push jabraf forward towards 50 -) || "
605,4991,5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"select push app in preferences as asked by @tobiasdiez here is my alternative proposal this closes #4991 by mergingfixes #674 closes #3942 and closes #4368<img width""242"" alt""prefpushtoapp"" src""https://user-imagesgithubusercontentcom/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342png"">this branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push-applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review || i added some eye-candy you will be charmed -)<img width""330"" alt""select push application"" src""https://user-imagesgithubusercontentcom/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cfpng""> || looks good to me! || ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences-dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards 50 and the fate of swing || looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good  || works fine at least if i understood you right i hope so || looks very good to me now thanks again! || you are welcome this was fun - again! lets push jabraf forward towards 50 -) || "
606,674,5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"select push app in preferences as asked by @tobiasdiez here is my alternative proposal this closes #4991 by mergingfixes #674 closes #3942 and closes #4368<img width""242"" alt""prefpushtoapp"" src""https://user-imagesgithubusercontentcom/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342png"">this branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push-applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review || i added some eye-candy you will be charmed -)<img width""330"" alt""select push application"" src""https://user-imagesgithubusercontentcom/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cfpng""> || looks good to me! || ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences-dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards 50 and the fate of swing || looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good  || works fine at least if i understood you right i hope so || looks very good to me now thanks again! || you are welcome this was fun - again! lets push jabraf forward towards 50 -) || "
607,4440,5025,1,0,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"add warning for empty bibtex keys in entry editor added a warning for empty bibtex keys in entry editor  fixes #4440 a request came in to have the entry editor provide a warning when the bibtex key field is empty in order to make the warning icon appear 2 changes were necessary**1 - added new key value pair to multi map in fieldcheckers:** to check for a valid bibtex key in the entry editor the fieldcheckers object had the following key - value pair in its multimap( fieldnamekey validbibtexkeychecker object ) where fieldnamekey is the string ""key""when the bibtexkeyeditorviewmodel tries to actually run this check they key it provides to the fieldcheckers instance is bibentrykey_field (""bibtexkey"") instead of fieldnamekey (""key"") to accommodate for this bibentrykey_field was added to the fieldcheckers multimap**2 - added null and empty string check in validbibtexkeycheckercheckvalue():** fixing the first issue caused an error to come arise in bibtexkeygeneratorcleankey() when called by validbibtexkeycheckercheckvalue() this error was due to null strings being fed into bibtexkeygeneratorcleankey() to fix this a check for null or zero length strings was added this check also returned the ""empty bibtex key"" message**note:** an issue with the fix is that while it does create the ""empty bibtex key"" warning the ""invalid bibtex key"" warning is pushed down pictures of this issue are attached<img width""436"" alt""warningicon1"" src""https://user-imagesgithubusercontentcom/38050737/58768790-6641dd00-856e-11e9-96da-f51c6c79c2a1png""><img width""420"" alt""warningicon2"" src""https://user-imagesgithubusercontentcom/38050737/58768794-71950880-856e-11e9-8364-929ece03ec50png"">----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  "
608,3861,5033,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"convert preferencedialog to mvvm one of the last missing things in #3861 is the conversion of the preferencedialog and some of its tabs to mvvm i understood that in the future jabrefpreference probably need properties to make them bindable but for now i think this goes beyond this prit works as expected i took the liberty to add a split-pane between the conents and the tablist to enable the user to change the width between them so this pr is not just about refactoring the dialog -)this is very early shot on this matter i dont know if you think its worth moving on with this and to look also into the tabs<img width""427"" alt""preferencedialog"" src""https://user-imagesgithubusercontentcom/50491877/58988728-985b7500-87e2-11e9-9664-4fcc8a1410e5png"">tabs to convert to mvvm- [x] general- [x] filethe following conversions will be done in other prs as this one would grow too large- [x] entry table #5315- [x] entry table columns #5185- [x] external programs #5047- [x] entry preview #5062- [x] groups #5141- [x] entry editor #5315- [x] bibtex key generator #5360- [x] import #5315- [x] export sorting #5315- [x] name formatter #5265- [x] xmp metadata #5265- [x] network #5141- [x] advanced #5141- [x] appereance #5360after conversion of the tabs- [x] code cleanup simplification refactoring- [ ] reordering the preferences----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) wow! thanks for your take on this!this is really a great thing ideally for each tab you would have an fxml marked with root so its a custom component (you have a similar concept in modern web front-end stuff) for the default export options i already did that because they are reused in the library properties dialog  || > for the default export options i already did that because they are reused in the library properties dialogoh yeah i see that now this is great this is almost all the work i can almost just copynpaste yours 😆  || i made some visual improvements and converted the generaltab to mvvm still everything wip but you can see where the road goes ~~i encountered a problem id like to ask to help with:i wasnt able to apply l10n on the controls on the pane - which is why travis is currently failing - but on the large headings which are basically labels too very strange do you have an idea?~~![generalstab](https://user-imagesgithubusercontentcom/50491877/59047072-7b2ab300-8883-11e9-9029-8e6a1b42df27png) || the basic workflow is now understood the other tabs shouldt take too long but i do not have much spare time the next days so it could take some days i can continue to commit and do some cleanups in the meantime could you take a quick trivial look into the code if i did something utterly wrong so i dont repeat it? || thank you very much! i think we should follow the suggestion by @tobiasdiez  and merge this asap and you or others can then create the fxml and logic for new tabs || ok i will get this ready to merge asap but there really need to be some cleanups after converting the last one of the tabs || i added the filetab beacause i already started with it before we were talking about merging this asap but should be soon ready now i am to tired should be ready saturday night || sorry i was not able to present a solution including the validator i got them somehow working but there is still an big issue: somehow the validator does not seem to be updated after something was typed in the textfield the stringproperty keeps somehow the old input if i dont disable and reenable it i will have another try tomorrow || ok validators work i got the dialog and the two tabs general and file converted including the validators where they were in the first placeshould be ready to review and probably be merged if there is no issue left so the the other tabs can be converted by other prsafter converting the last dialog there need to be some interface changes to prefstab to make validsettings bindable and to make some cleanups i did not want to do them now because it would blow up this pr way more || fixed two little things and injected dialogservice ready again ||"
609,4461,5042,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"convert merge shared entries to javafx last ""big"" dialog for conversion to javafx refs #4894 remove old dialoguse the already created merge dialognow it looks like this: ![grafik](https://user-imagesgithubusercontentcom/320228/59150373-ac8db500-8a22-11e9-8e77-25f317fe9d8epng)before:![jabref+updaterefusedold](https://user-imagesgithubusercontentcom/320228/59150377-be6f5800-8a22-11e9-8cd0-871cc64b84b2png)one odd thing i noticed and this refs probably #4461  is that whenever i paste an entry in the shared database it gets duplicated multiple time this looks oddly familiar i remember that this was having to do with the subscribers and the event bus system  <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  "
610,5043,5048,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,preserve encoding while copy and pasting in maintable fixes #5043encodes and decodes data with utf-8 merging this now! ||
611,5028,5056,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix order of other fields fixes #5028 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your contribution could you please adjust your title of the pr and describe how/ or why the fix works? thanks in advance || @tobiasdiez sure ill add comment descriptions for the next prs btw i cannot merge this pr any reason? || only members of the core jabref development team are able to merge prs this is normal for most github organizations/projects each pr should ideally be reviewed by at least two jabref core developers to maintain a high quality of the code base  || @siedlerchr sure i thought the reason might be something like a ci build failure or any  ||
612,5023,5058,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix automaticalls set file links task not runinng executing the created task would have been helpful 🤦‍♂ fixes #5023<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
613,5066,5068,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,add copy linked files action to contextmneu in general tab fixes #5066 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added a variant for a single entry and did some refactoring ||
614,5045,5086,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,bugfix/5045 : modified the existing logic to comply crossref resolution with biblatex specification fixes  #5045<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your contribution could you please add a test for the changed code? || @tobiasdiez @siedlerchr sure ill make those amendments and the uts || @tobiasdiez could you please review the latest commit thanks :)  || > looks good to me now> please merge the latest master changes in there have been renaming of the fields classes so you need to fix this then we can merge@siedlerchr i pulled the changes from master this pr can be merged to the master now thanks || > please review the importsfixed and organized imports please review and merge || > > > > please review the imports> > fixed and organized imports please review and mergeplease have a look at travis checkstyle output star imports are not allowedif you use intellij you can directly import the code style from the config folderfor eclipse you can run /gradlew eclipse to automatically import the correct code styleif you then run organize imports in the ide it will be correct || > > > please review the imports> > > > > > fixed and organized imports please review and merge> > please have a look at travis checkstyle output star imports are not allowed> if you use intellij you can directly import the code style from the config folder> for eclipse you can run /gradlew eclipse to automatically import the correct code style> > if you then run organize imports in the ide it will be correctfixed imports issue please review ||
615,4816,5101,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fixes ris data field <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->this pull resquest fixes issue [#4816](https://githubcom/jabref/jabref/issues/4816)when importing ris files jabref checks for date fields (y1pyda and y2) and uses the first one it finds the problem is that y2 refers to access date da in most cases is a generic date and py is the publication year(reliable field)* https://githubcom/jabref/jabref/blob/40600b35420e688ee5d5758224717b484ad34f84/src/main/java/org/jabref/logic/importer/fileformat/risimporterjava#l196-l203we couldnt find references to y1(primary date?) however as already cited in [#4816](https://githubcom/jabref/jabref/issues/4816) and by doing some exports we found y1 to be  pys synonym furthermore when py received a higher priority than y1 some tests cases didnt pass as there were a missing month field in bib  we established a priority system indicated by the datetags (lowest index higher priority)https://githubcom/vmichelan/jabref/blob/2f243c16f08f2cfeba6f1ab4651970d90eb55546/src/main/java/org/jabref/logic/importer/fileformat/risimporterjava#l31we added 2 test cases for this and changed one of the old ones adding the month field*https://webarchiveorg/web/20120717122530/http://refmancom/support/direct%20exportzip** nicely displayed in: https://githubcom/aurimasv/translators/wiki/ris-tag-map----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for the feedback @siedlerchr!those are great suggestions using a list is much better and since indexof returns -1 if it doesnt find the element we can use it to find out if the element is in datetags and to get its index like this:```java } else if ((tagpriority  datetagsindexof(tag)) ! -1 && valuelength() > 4) {    if (tagpriority < datepriority) {```i think this is a good solution the problem is that like isdatetag its also o(n) i dont know if thats really a problem but if it is maybe we should use a hashmap?also since finding out if a tag is a date is a one liner now i will remove the isdatetag and getdatepriority methods and because we dont need to pass datetags to these methods anymore i think we should move it from the class to the method importdatabasei would like to hear what you think about these considerations i think with this out of the way we can make the final version and fix the failed check to make it ready for merge thanks || if your arraylist is ordered/sorted you can use collectionsbinarysearch but i think in this case its over engineering )>premature optimization is the root of all evil ~ donald knuththe complexity really is only for large nbut i think you can omit one time searching the list see my comment at the code || thank you for your work! ||
616,4680,5121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add option to allow for integers in field ""edition"" when running database in bibtex mode <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->issue [#4680](https://githubcom/jabref/jabref/issues/4680)this is a new fork from the old pull requesti added a checkbox in preferences/generaltab to allow insert integers in field edition when bibtex mode is running also i modified editionchecker class to permit this configuration as well as the test cases in integritychecktest class----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok i focused on the preference-stuff made a comment everything else fits into the pattern so i guess besides the ""override"" - lgtmdid you notice the unresolved merge-conflicts? || please fix the changes proposed from @calixtus and merge the latest jabref master branch in your branch  || "
617,5002,5123,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add search for citations in latex files (back-end and gui) here is a **latex parser tool** that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will **ask the user for a directory** to search tex files then the user could **select specific files** after that the tool parses these files and **shows all the bibliographic entries found** in a new dialog box![latex_parser](https://user-imagesgithubusercontentcom/12954316/61177635-9ef7bc00-a5da-11e9-9f4d-b3cfc45d96c4gif)related issue: [#5002](https://githubcom/jabref/jabref/issues/5002)----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot!  ||
618,5128,5142,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix substring exception in find unlinked files refactor to own method and add testthe exception came when the parsed editor string did not end with a colon and two spacesfixes #5128 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
619,4629,5150,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix for issue 4629 fix #4629<!-- describe the changes you have made here:       link issues by using the following pattern: [#4629 ](https://githubcom/jabref/jabref/issues/4629)     the title of the pr must not reference an issue because github does not support autolinking there -->-----  distinguish the user action between menu and button-  reuse the acitons class to add enum to the description of user action![图片](https://user-imagesgithubusercontentcom/44337029/61925971-37118000-afa1-11e9-9ae1-32d0a68cec32png)![图片](https://user-imagesgithubusercontentcom/44337029/61925983-44c70580-afa1-11e9-943c-605349f82faapng)![图片](https://user-imagesgithubusercontentcom/44337029/61925992-4d1f4080-afa1-11e9-9db8-fe8d2d169567png) just change the jabrefaction as your suggestion :) || hey @ffffatgoose it would be awesome if you could have a look at the comments and find some time to incorporate them in the pr or discuss them in the comments in case you disagree || i feel very sorry to delay for so long i have some question for the class `actions` below are the codes of button creation in the main frame of gui as the javadoc told `olddatabasecommandwrapper` and `actions` is deprecated however they are still in use…… https://githubcom/jabref/jabref/blob/9daa645ccb213853b2b42d5f562db60933405114/src/main/java/org/jabref/gui/jabrefframejava#l529-l541the input parameter is in the form of `actions` so i reuse the class to return the exact actionname of user action waiting for suggestions :d || i feel confused about the checkstyle error……ask for some help![图片](https://user-imagesgithubusercontentcom/44337029/62770511-c5bbec00-bacd-11e9-9760-41c62175ceb3png) || @ffffatgoose  this is not related to your changes its a problem in the master branch #5182  || hi @ffffatgoose  jabref is in the middle of converting the gui from the old swing-controls to javafx (see pr #4894 ) and also refactoring the codebase to the mvvm-pattern this is why actions oldcommandwrapper etc are deprecated but are still used since not everything is already refactored this will take timeto bring some relief from confusion the controlsfx-library brings its own action-class which is different from the standardactions-enum and the deprecated actions-enum the mvvmfx-actionclass is just the eventhandler the standardactions-enum of jabref (and the action-interface) includes only the information about the action (text icon etc) since not everything is converted yet most of the menuitems still use the olddatabasewrapper-stuffabout your checkstyle-issue: i was able to reproduce it with the vanilla-sources i think it has something to do with the gradle-build-script and some recent updates of the junit-library would be probably the best to create a new issue in the issuetracker on githubedit: whoopsie while writing my comment @siedlerchr was quicker || @ffffatgoose  @calixtus  the checkstyle problem on the master should be gone now || get it~ i only used the class `actions` in the place that the input parameter is in the form of `actions` like this:https://githubcom/ffffatgoose/jabref/blob/92b007ecaf0725932a99d5c30134ba77e53922d8/src/main/java/org/jabref/gui/actions/olddatabasecommandwrapperjava#l54-l57therefore i think its no use to add a new enum for it is there and else problem i should solve or it is necessary to change my way to solve this?  tvt || @davidemdot  could you take a second look if this is ready? || @tobiasdiez do you think this is fine to merge? || yes looks good to me! thanks again for your contribution!  ||
620,5152,5190,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,border for group color indicator and some space for tooltip refs #5152 one of my groupcolors is white which made it hard to see in the jabref windowi added a thin grey border so one can see even white groups on white backgroundalso i made the area the user can put his mousepointer in to show the tooltip a little wider (3 pixels were to small)left before right after![groupcolorbefore](https://user-imagesgithubusercontentcom/50491877/62962782-e783de80-bdff-11e9-9e95-a333b7bdf441png) ![groupcolorafter](https://user-imagesgithubusercontentcom/50491877/62962785-e94da200-bdff-11e9-9930-617c466f9f32png)ready to review----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
621,5152,5191,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,fix issue 5152 tooltip and icon added to group cell fixes #5152 fix issue with a missing tooltip and icon in the color group column i used default_group_icon from jabreficons to supplement the missing icon hi i just saw your pr with a very close relationship to mine #5190   there are two little issues i spotted but i think both should work well together 👍  || you can ignore codecov its for gui stuff not really relevant we try to focus on important tests for logic and model eg the methods and classes there should have tests || thanks for your contribution! ||
622,5194,5195,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,add citation commands to texparser we added a few more citation commands: `autocite` `autocite` `blockcquote` and `textcquote`this pr fixes #5194----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
623,5125,5196,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,0,1,1,0,0,1,0,implement ottobib fetcher fetcher does not return bibtex data in plain text instead its part of an html text areafix isbn testsupdate user agentfollow up from #5125----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
624,5163,5197,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,fix issue with missing year value in year column fixes #5163 fix issue with missing year value in year column the query to receive this value was missing in the ieeejava simply added one   ----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your contribution its better if you create a new branch for a fix or feature this makes it easier to only see the related changes and not the other merge historyhere is a description how it workshttps://wwwatlassiancom/git/tutorials/comparing-workflows/feature-branch-workflow || sorry for the problem and thanks for the tip would you like me to redo the last commit? i can reset my local repo make a change and send it back in new branch?  or just leave it as it is now?  || for this small commit it should be sufficient to just merge the latest upstream master changes in your branch  ||
625,5198,5201,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix exception when adding new entry fixes #5198<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
626,4699,5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix double paste on different os fixes #4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste working in linux as well! ||
627,4836,5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix double paste on different os fixes #4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste working in linux as well! ||
628,4845,5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix double paste on different os fixes #4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste working in linux as well! ||
629,5220,5224,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix exception when adding field formatter in cleanup entries dialog this fixes #5220  
630,5021,5230,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,treat unknown fields as multi-line fields fixes #5021 unknown fields are now treated as multi-line fields in the future we should provide an ui interface to specify or change properties of fields<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
631,5245,5259,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,avoid erroneous materialdesigniconfactory fix for  [#5245](https://githubcom/jabref/jabref/issues/5245) refactoring of the code for managing icons now all usages of `dejensdfxglyphs` or `dejensdfxglyphsmaterialdesignicons` are encapsulated in the package `guiicon`in there the usage of `dejensdfxglyphsmaterialdesigniconsutilsmaterialdesigniconfactory` is avoided because of the error described in the issue----- [ ] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok thank you for your suggestions i reworked it now and tried to improve it further by keeping all things related to materialdesignicons inside `guiicon` and outside of this package only `jabreficon`s are used that also made the class `jabrefmaterialdesigniconfactory` obsoleteit is working now as expected but there is one thing which should be improved: in the class `orgjabreflogicgroupsdefaultgroupsfactory` there was an import of `dejensdfxglyphsmaterialdesigniconsmaterialdesignicon` which passed the architecture tests when i refactored it i exchanged it with an import of `orgjabrefguiiconicontheme` which caused the architecture test to fail now im not sure how exactly the functionality in `defaultgroupsfactory` is needed and dont know how to properly do it to let the test pass i used a string constant nowi also added the architecture test you suggested and hope that it is correct as i havent done anything with archunit yet :) || > > > looks good but that workaround is no longer necessary?its not a workaround anymore but more a refactoring which also fixes the issuei would also say that it is ready to merge there is just the thing i described:> in the class `orgjabreflogicgroupsdefaultgroupsfactory` there was an import of `dejensdfxglyphsmaterialdesigniconsmaterialdesignicon` which passed the architecture tests when i refactored it i exchanged it with an import of `orgjabrefguiiconicontheme` which caused the architecture test to fail now im not sure how exactly the functionality in `defaultgroupsfactory` is needed and dont know how to properly do it to let the test pass i used a string constant now || i am going to merge this now looks good to me i think the issue with the groupfactory is when you store and read groups with an icon?  ||
632,5277,5265,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,conversion of preferences / xmp and nameformatters to mvvm follow up to #5033 quick and easy same issue with combobox as in #5185 filed bug report in #5277 ![xmp](https://user-imagesgithubusercontentcom/50491877/64081185-e9093e00-ccfd-11e9-873c-ad66e15de5b2png)![nameformatters](https://user-imagesgithubusercontentcom/50491877/64081184-e6a6e400-ccfd-11e9-8726-e09406eaeef3png)should be ready to review ----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) im going to have to resolve some merge-conflicts after merging #5185  || > as usual a big thanks for your work! again as usual the code looks really good a few minor suggestions and then we can merge from my point of view>> (will review your other pr as soon as possible have a bit much to do at the moment sorry)as usual: there is no hurry! really im just coding this in my not so free time to distract me from my real work with my thesis this is just to have some fun and to remind me of the days i studied informatik in 2004 || sorry for asking: but why do i receive e-mail notifications about this pr here? i am not subscribed to it || @codeberg-asgithubalternative-buhtz  you may have accidentally subsribed or comemnted earlier on this pr? or you are watching the repo at the top right side next to an issue or pr you can unsubscribe ||
633,522,5266,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,issue #5223 issue #5223 add @software and  @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype](https://user-imagesgithubusercontentcom/41503450/64082532-e2d08d00-cd10-11e9-95f9-fec5d57d0f0dpng)![entrytypepreferences](https://user-imagesgithubusercontentcom/41503450/64082551-0a275a00-cd11-11e9-9af6-b16a5394865dpng)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) looks good so far please add a changelog entryregarding the fields: you can look up in the biblatex documentation: 211:https://wwwctanorg/pkg/biblatexfor the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes #xxxx or fixes #xxx then the issue will be automatically closed when the pr is merged || which biblatex styles support `@dataset`? || biblatex-bath does (https://ctanorg/pkg/biblatex-bath) ||
634,5223,5266,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,issue #5223 issue #5223 add @software and  @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype](https://user-imagesgithubusercontentcom/41503450/64082532-e2d08d00-cd10-11e9-95f9-fec5d57d0f0dpng)![entrytypepreferences](https://user-imagesgithubusercontentcom/41503450/64082551-0a275a00-cd11-11e9-9af6-b16a5394865dpng)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) looks good so far please add a changelog entryregarding the fields: you can look up in the biblatex documentation: 211:https://wwwctanorg/pkg/biblatexfor the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes #xxxx or fixes #xxx then the issue will be automatically closed when the pr is merged || which biblatex styles support `@dataset`? || biblatex-bath does (https://ctanorg/pkg/biblatex-bath) ||
635,5245,5276,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,add shorten doi field formatter <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->### what this pr adds?this pr is related to [koppor#343](https://githubcom/koppor/jabref/issues/343)i added a field formatter called **shorten doi** formatter which shortens doi using http://shortdoiorg service you run the formatter from _cleanup entries dialog_ by adding it to _run field formatter_ listit looks to work fine it enables one way conversion from doi to short doi### implementation details:i assumed that short doi is still a legal doi thats why i adjusted the doi class to work with short dois### feedback wantedi id like to ask for your feedback about the code at this stage### next step- add a more accessible ui - a toggle button next to the doi field _shortened/long version_ (this was suggested by @koppor)this will require adding opposite conversion (from short doi to doi) as http://shortdoiorg servcie doesnt offer such a feature i see two approaches:1 store the original doi during the conversion for further back conversion**drawback:** you may not convert from short doi to doi if you havent done the opposite conversion for at least one time2 try to obtain doi from short doi using https://doiorg service as it is possible by catching the http redirectioni find the 1st approach fine the 2th approach is not really good as we are not using any public api and this can stop working in the futurewhat do you think folks? :)### importantif you would like to checkout this branch and test locally please use [shortdoi-workaround](https://githubcom/dawidowoc/jabref/tree/shortdoi-workaround) branch which uses workaround by @r0light for issue [#5245](https://githubcom/jabref/jabref/issues/5245) on master branch there is an issue with accessing _general tab_ in bibentry editor----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you for review i applied changes as you suggested in commentsnow you have to decide what about this more accessible ui to this feature imho adding it to right-click menu as suggested by @tobiasdiez sounds nice but as you said its unfortunately blocked at the moment by #5254 what do you think @tobiasdiez @siedlerchr @koppor?would you like to merge this pr (if you approve it of course) and create a new issue for the ui enhancement in the future or rather do ui in this pr? || i think you can create a new issue for adding it to the context menu and then refer to that blocker issue || i think we can already merge and ill add a comment concerning the ui implementation in https://githubcom/koppor/jabref/issues/343thanks again for your contribution ||
636,526,5280,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"revert ""[wip] get jabref running in eclipse"" reverts jabref/jabref#5264  "
637,5045,5282,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix/field inheritance this implements the complex biblatex rule set to solve the crossref inheritance issue #5045 ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your contribution! codewise looks in general good to me it would be nice if you could incoropate some more tests you can make a parameterized test then maybe || @siedlerchr @tobiasdiez i reworked and extended the tests according to your suggestions thanks for your valuable feedback ||
638,4958,5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes [#5108](https://githubcom/jabref/jabref/issues/5108) fixes [#5109 ](https://githubcom/jabref/jabref/issues/5109)furthermore the threading issue part of #4958 is fixed by using `uithreadstringproperty`new classes are added to `guiutiluithreadaware` which enable a wrapper class around `observablelist` which ensures that changes are propagated on the javafx application threadi started with `uithreadlistdecorator` but others like `uithreadmapdecorator` could be implemented similarly----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok it took me while to reproduce #4958 reliably but now i added a `uithreadstringproperty` in `personseditor` which wraps the original property and the issue should be fixed now@tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in `guifieldeditors` ? || thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side? || > > > thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side?alright not quite i want have another look at it and also add some comments to the new classes || ok from my side this would be ready to merge@tobiasdiez thanks for the help and feedback for this! || i guess #5010 is obsolete now? ||
639,5108,5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes [#5108](https://githubcom/jabref/jabref/issues/5108) fixes [#5109 ](https://githubcom/jabref/jabref/issues/5109)furthermore the threading issue part of #4958 is fixed by using `uithreadstringproperty`new classes are added to `guiutiluithreadaware` which enable a wrapper class around `observablelist` which ensures that changes are propagated on the javafx application threadi started with `uithreadlistdecorator` but others like `uithreadmapdecorator` could be implemented similarly----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok it took me while to reproduce #4958 reliably but now i added a `uithreadstringproperty` in `personseditor` which wraps the original property and the issue should be fixed now@tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in `guifieldeditors` ? || thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side? || > > > thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side?alright not quite i want have another look at it and also add some comments to the new classes || ok from my side this would be ready to merge@tobiasdiez thanks for the help and feedback for this! || i guess #5010 is obsolete now? ||
640,5109,5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes [#5108](https://githubcom/jabref/jabref/issues/5108) fixes [#5109 ](https://githubcom/jabref/jabref/issues/5109)furthermore the threading issue part of #4958 is fixed by using `uithreadstringproperty`new classes are added to `guiutiluithreadaware` which enable a wrapper class around `observablelist` which ensures that changes are propagated on the javafx application threadi started with `uithreadlistdecorator` but others like `uithreadmapdecorator` could be implemented similarly----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok it took me while to reproduce #4958 reliably but now i added a `uithreadstringproperty` in `personseditor` which wraps the original property and the issue should be fixed now@tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in `guifieldeditors` ? || thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side? || > > > thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side?alright not quite i want have another look at it and also add some comments to the new classes || ok from my side this would be ready to merge@tobiasdiez thanks for the help and feedback for this! || i guess #5010 is obsolete now? ||
641,3142,5325,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,use binding to update global state manager <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular fixes #3142  and fixes #4441moreover i fixed an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
642,4441,5325,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,use binding to update global state manager <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular fixes #3142  and fixes #4441moreover i fixed an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection)----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
643,4846,5326,1,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix problem with search and switching between libraries fixes #4846 by using bindings instead of listeners<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
644,2857,5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improve group coloring and item count fixes #5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group also fixes #2857 (at least i couldnt replicate it anymore)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
645,3112,5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improve group coloring and item count fixes #5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group also fixes #2857 (at least i couldnt replicate it anymore)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
646,5327,5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,improve group coloring and item count fixes #5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group also fixes #2857 (at least i couldnt replicate it anymore)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
647,5334,5338,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix npe when opening a non existing file from the recent files menu fixes #5334 dialogservice object was null because the filehistorymenu class is initialized before the ctor of jabref frame creates the dialog service object<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
648,5263,5340,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix various copy to clipboard issues pt 1: fixing #5263 by only using the text content to be added in the right-click-copy functionality in the preview (see https://githubcom/jabref/jabref/pull/5340/files#diff-b84aeae22f7f719bc60f1ae34ecb39f6)pt 2: right click option in maintable: additionally store content also in string format that can be accessed then with simple text editorspt 3: improve also functionality in ""export to clipboard"" dialogcurrently all ""exporters"" are used for ""export to clipboard"" - however the ones which are creating files like pdfs cannot be used for copying to clipboard - thus they are filtered out now additionally in case rtf or html content is exported the specific clipboardcontent has been used----- [x] change in changelogmd described- [x] tests ~~created~~ adjusted for changes - [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez if you dont have further objections i would merge it to master 😃  ||"
649,5333,5347,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix display bug for keyword groups with empty keywords fixes #5333 by filtering out empty keywords<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
650,5348,5351,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix exception when closing jabref fixes #5348 by using javafx windows instead of awt windows<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
651,5254,5352,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,bring back the context menu as explained in https://githubcom/jabref/jabref/issues/5254#issuecomment-526588221 it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround fixes #5254 and refs https://githubcom/javafxports/openjdk-jfx/issues/583moreover i removed the custom tab handling because it is now working as expected (ie #2902 is fixed in java 9+)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
652,2902,5352,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,bring back the context menu as explained in https://githubcom/jabref/jabref/issues/5254#issuecomment-526588221 it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround fixes #5254 and refs https://githubcom/javafxports/openjdk-jfx/issues/583moreover i removed the custom tab handling because it is now working as expected (ie #2902 is fixed in java 9+)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
653,5022,5354,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix group color when scrolling fixes #5022 problem was that the pseudo-class was not initialized correctly but was only triggered upon changes<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
654,4868,5355,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix default group color now groups have a dark gray instead of white as their default color fixes #4868<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
655,4574,5356,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,show more than one group color bar shows multiple colored bars if the entry belongs to more than one group (with color) implements #4574![image](https://user-imagesgithubusercontentcom/5037600/65716295-25cb1980-e09f-11e9-9e94-e4a0f3a324cbpng)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) +1 for left-aligned if one does not know the feature this looks better to meanything else left? || ok left aligned it is ready to merge from my pov ||
656,5369,5382,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix for #5369 - fallback to 0 in case stored preview cycle pos does no longer exist fix for #5369problem should in theory not happen as always a correct size should be stored - however if for example csl styles are not loaded properly the mentioned exception in #5369 might occurto prevent this upon creating the preview prefs now the stored cycle position is now compared to the actual list of previews before being set <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described - i think as this is not a common problem can be omitted?- ~~[ ] tests created for changes~~- [x] manually tested changed features in running jabref- ~~[ ] screenshots added in pr description (for bigger ui changes)~~- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~  
657,5246,5385,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,reenable prevcycle <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->okay this should be working again now however without the csl styles working (see #5246) its a bit hard to check -) fixes https://githubcom/jabref/jabref/issues/5221----- [x] change in changelogmd described- ~~[ ] tests created for changes~~- [x] manually tested changed features in running jabref- ~~[ ] screenshots added in pr description (for bigger ui changes)~~- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~  
658,5359,5392,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix 5359: writing of editor field is duplicated fixes #5359 serialization of `orfields` was not implemented properly as the currently written field was not stored correctly----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- ~~ screenshots added in pr description (for bigger ui changes) ~~- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- ~~check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~  
659,5169,5395,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix exception when merging entries the problem was that `sourcechanged` was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime solution: run `sourcechanged` on the javafx thread but synchronouslyfixes #5169<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merged to keep things moving however it would be nice if my code questions would lead no another pr adding comments on the code ||
660,5383,5421,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,add change listener to main table to scroll to imported entry add change listener to main table to scroll to imported entry #5383----- [x] change in changelogmd described- [x] tests created for changes      --> not really testable via unit tests- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)     --> not needed- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please re-review || @siedlerchr what do you think? || loos good to me now as well! thanks for your contribution ||
661,5084,5432,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix cursor jump fixes #5084 the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like #5084 where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are fixed now<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) when you create a new entry the focus should be in the first field does this still hold true?  || @siedlerchr thats a good suggestion but does not even work in the current master something for another pr maybe ||
662,5447,5448,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix nullpointer on import fixes #5447----- [x] change in changelogmd described- [ ] tests created for changes  --> not testable with unit tests- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)  --> not needed- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
663,5244,5451,1,0,0,1,0,1,1,1,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,add option to display entry preview as tab in entry editor adds the entry preview as a tab fixes #5244 also fixes #5446 plus a bit of refactoring![image](https://user-imagesgithubusercontentcom/5037600/66870882-b3b16a80-efa2-11e9-9900-c2d9ec3dbfb0png)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
664,5446,5451,1,0,0,1,0,1,1,1,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,add option to display entry preview as tab in entry editor adds the entry preview as a tab fixes #5244 also fixes #5446 plus a bit of refactoring![image](https://user-imagesgithubusercontentcom/5037600/66870882-b3b16a80-efa2-11e9-9900-c2d9ec3dbfb0png)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
665,5035,5454,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix highlight issues for lists fixes #5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
666,5277,5454,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fix highlight issues for lists fixes #5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
667,5452,5471,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,mark oostyle as invalid if no defaultstyle in addtion dsplay correct layout for article and bookfixes  #5452 todo: add documentation issue<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
668,5069,5472,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix highlight problem in entry preview fixes #5069 by using markjs<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
669,5463,5481,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix for issue 5463 fixed issue #5463 (https://githubcom/jabref/jabref/issues/5463)----- - [x]  change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work 👍 ill merge this pr nowi hope you enjoyed contributing to jabref i would like to continue working with you what do you think about resolving https://githubcom/jabref/jabref/issues/5485? this issue was recently reported and is about an important feature of jabref ||
670,2389,5482,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add x11 primary selection clipboard support _related to issue #2389 (**jabref and the x window clipboard/selections**)_i have been testing different alternatives and i think that this is the best choice (for using `xclipboard` a new dependency is needed and it does not give any added value)- all contents that jabref sends to the system clipboard will be available in the x11 primary clipboard too (ie `copyversiontoclipboard()` in the about dialog) so it is possible to paste it in a text editor doing click in the middle/third mouse button![copy_version](https://user-imagesgithubusercontentcom/12954316/67137766-aca48980-f23a-11e9-9bf0-a96ee1ef920fgif)- it is necessary to call the `install()` method in every text field where you want to use it for the moment it is activated in the `globalsearchbar` therefore you can try it: write something select a piece of text and do click in the middle button![global_search](https://user-imagesgithubusercontentcom/12954316/67137765-ab735c80-f23a-11e9-8f17-2015c9833a20gif)- now `clipboardmanager` uses the singleton pattern it is instantiated once in `globalsjava`any feedback will be more than welcome! **:""d**----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you on working on this no linux at hand currentlythe primary and secondary buffers are completely separate buffers so the test case is:1 open jabref2 add a new entry3 have the entry editor opened showing the author and title field4 select `milton {abramowitz} and irene a {stegun}` (here in this issue) and press <kbd>ctrl</kbd>+<kbd>c</kbd> to copy that text to the primary buffer5 select `handbook of mathematical functions with formulas graphs and mathematical tables` with the mouse to not press any keyboard shortcut6 switch to jabref (maybe using <kdbd>alt</kbd>+<kbd>tab</kbd>)7 go to the title field8 press the middle mouse key9 check expectation: `handbook of mathematical functions with formulas graphs and mathematical tables` is pasted10 go to the author field11 press <kbd>ctrl</kbd>+<kbd>v</kbd>12 expectation: `milton {abramowitz} and irene a {stegun}` appears@davidemdot could you check if it works like that?@gregoa this is the expected behavior if i remember the linux desktop correctly i checked https://docskdeorg/trunk5/en/kde-workspace/klipper/clipboard-modeshtml which seems a good short resource on that i see at https://askslashdotorg/story/04/06/02/1832201/dealing-with-the-unix-copy-and-paste-paradigm that firefox pastes the secondary clipboard at <kbd>ctrl</kbd>+<kbd>v</kbd> if text was selected in firefoxshort summary for x11 clipboards: https://unixstackexchangecom/a/139193/18033 longer text (good introd pargraphs) : https://wwwuninformativde/blog/postings/2017-04-02/0/posting-enhtml i learned there is `clipboard` (typically <kbd>ctrl</kbd>+<kbd>c</kbd>/<kbd>v</kbd>) and `primary` (mouse text highlight)source for the bibtex example: https://enwikipediaorg/wiki/bibtex || @koppor after last commit which activates the `primary` clipboard for all `textfield`/`textarea` controls in the entry editor your test case works exactly as you said || @gregoa @nomicrosoftbuhtz could you test if it meets your expectations? - find the build at http://buildsjabreforg/issue-2389/ ||"
671,5469,5483,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix not on fx thread error for custom entry types fixes #5469 revert change done in  #5423 because the actual code just opens the already loaded databasesat this point the databases are already loaded in a background thread<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
672,5485,5495,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,fix deprecated crossref rest api parameter fixes #5485 changed the query parameter `querytitle` (which is deprecated) to`querybibliographic`<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for the quick fix! for your next pull request please use a short description of the fix  in the title and the actual (fixes #xxx) in the description because this makes it easier for us to see what the pr is about without checking the issue number firsttip: github takes the first line of the commit message as title in a prtext after an empty line (linebreak) will be considered as description text ||
673,5496,5497,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,try to fix dark theme path fix dark themeworkaround until https://githubcom/openjdk/jfx/pull/22 is fixedfixes #5496<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) gradle also works fine || still invalid url || should work now ||
674,4949,5501,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,new ads fetcher i added a new fetcher that uses the new ads api some open question for implementation:* which ids should be viable ids for idbasedfetchers? only doi? only ads bibcode? the current/old version can handle both but im not sure if this is intentional * we need an api key to access the api i have one for development but someone has to create one for the project * we need to set a limit on how much search results are shown is 20 a good value?refs #4949 ----- [x] change in changelogmd described- [x] tests created for changes- [x] cleanups tasks (change comments and documentation)- [x] manually tested changed features in running jabref- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] add api key that looks already really good nice job! - if it is (relatively) easy to implement then doi + bibcode support would be nice- i will request an official key- 20 entries sounds indeed gooddo you have any questions codewise at the moment or anything else where we can help? || > if it is (relatively) easy to implement then doi + bibcode support would be nicethat is no problem i already have implemented this> do you have any questions codewise at the moment or anything else where we can help?at the moment i dont have any questions but i would like to get as much feedback as possible || right now i have implemented the fetcher in a new class should we keep the old one and remove it later? || you can delete/replace the old fetcher there is no point in having two fetcher for the same online service || great thanks! any plans / chances that the new fetcher will be back ported to the latest stable release (43) !? ||
675,5508,5513,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,making importing a single file easier (issue #5508) fixes #5508 i added a condition to see if only one entry is being importedif the condition adheres -> mark the entry as selected----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i would totally agree with you but when i try that it doesnt seem to select the entryi had though to put it there too at first any other suggestion as to how to make it work? || usually the problem is that the code is run before the control is initialized completely to fix this it is usually sufficient to wrap everything in a `platformrunlater()` call can you please try this out here as well? thanks || i tried to wrap the if-statement in a platformrunlater() and it did not workalso tried to wrap all of initialze in a platformrunlater with and without the if-statement in itit did not select the single file being importeddo you have any suggestions as to what i could do differently? sorry for the inconvenience of this pr ||
676,5449,5519,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,fix xmp null error fixes #5449 was caused by wrapping a set of fields in a treeset without specifying the comparator<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
677,5516,5521,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix text colour in merge dialogue fixes: #5516the colour of the textfields in the merge dialogue was set to black i set that to `-fx-light-text-color` (#9aa3af) in mergeentriescssno need for documentation updatetested manually on local environmentopen to suggestion for test cases 😄 ps: forgive me if i missed something this is my first pr to a relatively large project ✨ <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)changes:<img width""843"" alt""screenshot 2019-10-26 at 10 36 00"" src""https://user-imagesgithubusercontentcom/17515408/67618546-cde01980-f7e8-11e9-8f51-f304d822f3dfpng""> <img width""843"" alt""screenshot 2019-10-26 at 10 36 00"" src""https://user-imagesgithubusercontentcom/17515408/67617774-97050600-f7de-11e9-97fd-9329a56a5a66png"">changed colour of field text in merge window from black to gray ps: forgive me if i missed something this is my first pr to a relatively large project || tested the change manually however im open to suggestions in regards to what other gui test i see that diffhighlightingtestjava checks style classes  || the failing test on travis is `bibentrywritertestjava:alphabeticserialization()` introduced today on master (not related to this ticket) will update with master again once the above is resolved || thank you for your review! ill test the css change and push that as well soon 😄  || @matthiasgeiger im having a hard time finding which property makes the radio buttons look black when they are not selected do you know where it could come from?in the meantime i spotted that i was affecting the light theme with the new css now that is fixed :)  || welcome to jabref and thanks for your contribution the substructure of the `radio-button` is described here https://docsoraclecom/javase/8/javafx/api/javafx/scene/doc-files/cssrefhtml#radiobutton so `radio-button radio` applies to the outer ring while `radio-button dot` is for the centered dot these admit also additional pseudo-classes controlling the appearance in the different states for example `radio:armed` is for the armed state and there are also `selected` `determinate` and `indeterminate` || updated radio button to look like this thank you for your help @tobiasdiez! 👍 <img width""912"" alt""screenshot 2019-10-27 at 00 50 49"" src""https://user-imagesgithubusercontentcom/17515408/67627409-da4d8c00-f853-11e9-816a-6e0f2b1dcab3png""> || :+1: great! looks good to me now! || "
678,5332,5525,1,0,0,1,0,1,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,1,0,remove empty customization warning fixes #5332 problem was that the dialog was shown whenever the library contained customized entry types even if the customizations were equal to the customization stored in the global preferences a bit of refactoring/renaming along the way<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
679,5532,5533,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix a bug that threw a npe when using middle mouse click on windows hotfix for solving #5532 code looked good since its a hotfix i just merged ||
680,4430,5539,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,improve performance improve performance by:- caching fields as keywordlist- remove duplicate change listener- remove preference access in loopwith these changes the mega huge library of @aegit works without too much delays (the initial loading of the database is a bit slow but still ok) thus this pr is a potential fix for #4430 and for https://githubcom/jabref/jabref/issues/5071<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez wonderful! let me know when i can start testing this fix ||
681,5546,5554,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,make entry editor dnd behave as specified in settings <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #5546 the setting only applies to the entry editor the maintainable is still differentiating between the dnd modifiers as implemented in the linked pr@koppor  refs #3765----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) in my opinion dnd onto the maintable and the entry editor should behave the same otherwise its really confusing that some operations on the entry editor respect some settings while a similar action on the maintable does not || agree both should behave as outlined above (if possible) 😅tobias diez <notifications@githubcom> schrieb am sa 2 nov 2019 15:01:> in my opinion dnd onto the maintable and the entry editor should behave> the same otherwise its really confusing that some operations on the entry> editor respect some settings while a similar action on the maintable does> not>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/5554?email_sourcenotifications&email_tokenaaknu7tgk3hmyctmnlvt7olqrwb4ba5cnfsm4jh6cp4kyy3pnvwwk3tul52hs4dfvrexg43vmvbw63lnmvxhjktdn5ww2zloorpwszgoec44sfa#issuecomment-549046548>> or unsubscribe> <https://githubcom/notifications/unsubscribe-auth/aaknu7vfuzsixudq7dlsvmtqrwb4bancnfsm4jh6cp4a>> > || @koppor why did you merged this although it removes functionality that we both agreed should be kept?! ill revert since this is not a proper fix in my opinion  || i understood your comment wrong: i thought with this pr they would behave the same i did not check whether the entry editor supports modifier keysone should update https://githubcom/koppor/jabref/issues/368 wrt the current behavior of the entry editor ||
682,5452,5556,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,select newly added jstyle in table to prevent exception fixes #5452<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
683,5551,5558,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix #5551 - dont remove unwanted characters before first author is s… heyim copying my comment from the issue page:i found that in bracketedpatternjava on line 846 the comma is removed and therefore the authorlist is not correcthttps://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/logic/bibtexkeypattern/bracketedpatternjava#l846i would fix this issue by not applying bibtexkeygeneratorremoveunwantedcharacters before extracting the author but afterwards the tests pass but can anyone think of a problem with that approach?as it is my first pr to this project any suggestions are highly appreciated thanks for the great work!----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)![image](https://user-imagesgithubusercontentcom/4035371/68075812-6ceaaf80-fdad-11e9-9638-0588eed7e545png) thanks for your contribution! looks good to me i currently cant think of any issues with this fix and thats why we have tests for such cases 😉  || i am glad that i could help ||
684,5555,5560,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix 5555 status popups as discussed in #5555 this pr removes some obsolete notifications and additionally removes notifications during autosavei have also removed the strings from the language file however i was not sure if this was correct?----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message) @ka0o0  thanks for your contribution again! could you please fix the checkstyle error? then its ready for merge || @siedlerchr i forgot to remove the unused import it should pass the style check now ||
685,4826,5614,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"add option to parse new references from plain text using grobid service [solving #4826] this pr should solve [#4826](https://githubcom/jabref/jabref/issues/4826)this jabref extension is developed as part of a software engineering course even though we write this feature mainly for our university course we are willing to adjust our feature so that jabref can benefit from itthe feature is now ready for review it reintroduces the possibility to extract references from plain text using a custom grobid server this is implemented via a new searchbasedfetcherone could work some more on the grobid server (see : https://githubcom/nikodemkch/grobid/commit/e89810bd82b1b39cfcf82150d37b2200ac510a30) but sadly we do not have time for that----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message) note: in https://githubcom/jabref/jabref/pull/5628 i tried to bring-back the old menu item (as it exists in the 4x versions of jabref) || quick statement about the points you mentioned:- the documentation you read is not up to date especially in terms of the dialogue-popups on branch milestone3 we already reused the existing pop-up window and added the entries automatically after parsing moreover since the user might want to add multiple entries at once we inserted a checkbox which enables the user to create a new library tab so that possibly wrong parsed references are not immediately in his (the current) libraryscreenshot:![ceckbox](https://user-imagesgithubusercontentcom/55385340/69046635-be27af80-09f9-11ea-99c5-74ed025ac7cbpng)(we will change the buttons soon)- we changed our mind and do not intend to implement the conversion function (tei to bib) by ourselves anymore (after seeing [this](https://githubcom/kermitt2/grobid/blob/master/grobid-core/src/main/java/org/grobid/core/data/biblioitemjava#l1739) method and [this](https://githubcom/kermitt2/grobid/blob/master/grobid-core/src/main/java/org/grobid/core/data/biblioitemjava#l1959) method)the reference text is parsed by the grobid server which already has the needed function we just change the function to return the processed citation in bibtex format rather than tei format [(here)](https://githubcom/kermitt2/grobid/blob/master/grobid-service/src/main/java/org/grobid/service/process/grobidrestprocessstringjava#l277) thats why we need a custom grobid server (we will link this server in this pr)- we already implemented a checkbox to use a custom grobid server ip( preferences -> advanced tab) if unchecked the default value is selected probably we should set that to http://cloudscience-minercom/grobid/  but the problem is that this server seems to be constantly overwhelmed by the number of incoming requests thats why we hosted the server on localhost for testing purposes you can find a manual how to start that server [here](https://grobidreadthedocsio/en/latest/grobid-service/) (it uses gradle)screenshot:![grobid](https://user-imagesgithubusercontentcom/55385340/69046537-79037d80-09f9-11ea-9229-6b57519815ccpng)- we will try to change our package structure button placing as well as used dependencies according to your suggestions this week we will also try to update the documentation || concerning:> (maybe switch the two buttons in the existing implementation - the go-on-button should always be right and never label ""cancel"" label it ""return to library"" so that the user knows what happens)that depends on the os you can add the correct [type](https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/buttontypehtml) and then javafx will put them in the right order automatically (and ""cancel"" is pretty ok) || please merge https://githubcom/jabref/jabref/pull/5628 into your branch then i will close that pr || 👍 - i would make the checkbox an additional button""insert into current library"" and ""insert into new library"" || here is the link to the custom grobid server: https://githubcom/nikodemkch/grobid || @koppor do we have the resources to host the grobid server? i dont think many people have the knowledge to install and setup gropid on localhost || @tobiasdiez there are options maybe we ""just"" limit the request rates ""just"" limit the requests per user per hour or simply charge for it || we will check options how to host and maybe host some public service in beta || we finished our work for this week (except unit-test and documentation)we added a new button in the toolbar:![2019-11-22](https://user-imagesgithubusercontentcom/55414329/69440253-c446c480-0d48-11ea-974f-a93037199229png)after pressing this button (or the corresponding context menu button) this window appears:![2019-11-22 (2)](https://user-imagesgithubusercontentcom/55414329/69440287-d6286780-0d48-11ea-933c-1e6c49e91ce8png)while waiting for the server response the following dialog is displayed:![2019-11-22 (3)](https://user-imagesgithubusercontentcom/55414329/69440298-da548500-0d48-11ea-920e-eea563665d5fpng)after successfully parsing the entries are created and one of them is displayed inside the entryeditor:![2019-11-22 (5)](https://user-imagesgithubusercontentcom/55414329/69440305-e2acc000-0d48-11ea-85f7-829352256fcdpng)when grobid fails to parse a string the following message is displayed: (this is also the case when some entries are parsed successfully and some are not)![2019-11-22 (7)](https://user-imagesgithubusercontentcom/55414329/69440325-ed675500-0d48-11ea-880b-8f118e79bde6png)the user must separate the entries with double semicolon () (we had no better idea)the still open to dos are:- write the unit tests- update the documentation- add localization entries- work on the grobid serveralso we intergrated our code better into the existing code base it would be nice to get some feedback on thatnote: the grobid server does not work right with java 13 we used java 11 for the server but recommended is java 8 (as stated [here](https://grobidreadthedocsio/en/latest/install-grobid/))(the server had some nullpointer exceptions for no reason sometimes) || unit tests have now been implementedthe documentation was updated to match the current development status and to track changes in our timeline and planning || hey @nikodemkch @obsluk00 @marcelluethi!we want to help you by deploying a grobid server i hope you understand that it is important that the server is maintained by the @jabref/developers team ive already set up the default grobid server but what i read is that you want to customize the server? can you point me to a repo from which i can deploy you custom server? || hey @linusdietz the repo is [here](https://githubcom/nikodemkch/grobid)the only difference to the original server is the following: https://githubcom/nikodemkch/grobid/commit/e89810bd82b1b39cfcf82150d37b2200ac510a30we still have to look at the requested changesthank you for deploying the server || > hey @linusdietz> the repo is [here](https://githubcom/nikodemkch/grobid)> the only difference to the original server is the following: [nikodemkch/grobid@e89810b](https://githubcom/nikodemkch/grobid/commit/e89810bd82b1b39cfcf82150d37b2200ac510a30)> we still have to look at the requested changes> thank you for deploying the serverso i do have the server running it might be a bit slow but feel free to test it and report your findings to me (potentially via slack ive invited @nikodemkch )http://grobidcmintumde:8070/ || whats the current status here? is this already ready for review or do you need input on certain parts? || today we will fix the requested changes and try to fix the travis pipeline then we will open the pr for review sadly we will probably not find the time to change the grobid server as requested as the examination phase is kicking in (first exam on december 20th)  || this pr is now ready for review sadly the provided server (http://grobidcmintumde:8070/) seems to not work properly (i cant access the page even in a browser it says the server took too long to respond) the feature was tested with a locally hosted server || >  sadly the provided server (http://grobidcmintumde:8070/) seems to not work properly (i cant access the page even in a browser it says the server took too long to respond)sorry! indeed the server is running but the port in question is unreachable from the internet ill have a look || the server should be available now can you check again? || thanks for the feedback we will work on this pr the next days || @nikodemkch could you please merge upstream/master so that our github workflows are triggered on push?please also be aware of eol issues:<blockquote class""twitter-tweet""><p lang""en"" dir""ltr"">anyone experiencing &quoterror: your local changes to the following files would be overwritten by merge: src/test/resources/org/jabref/logic/importer/fileformat/bibtexmlimportertestarticle2bib&quot can just delete src/test/resources/org/jabref/logic/importer/fileformat/*bib 1/3</p>&mdash jabref (@jabref_org) <a href""https://twittercom/jabref_org/status/1209951514934087681?ref_srctwsrc%5etfw"">december 25 2019</a></blockquote> <script async src""https://platformtwittercom/widgetsjs"" charset""utf-8""></script>  || sorry for our late response but we will finish our feature as soon if the upcoming exams are over :)(january 23th i hope this is ok to mention that here) || could you shortly outline why jruby is needed? i thought a ""simple"" http call is made to a grobid server? || > could you shortly outline why jruby is needed? i thought a ""simple"" http call is made to a grobid server?jruby is not needed anymore at the beginning of this feature project we thought about including a different parser that uses jruby but we are using grobid via http now || status update: we have resolved all requested changes and are now fixing the pipeline || we have finished this feature and waiting for your reviewsince we must document all ui changes here they are:one can access the new feature in two ways:![jabref1](https://user-imagesgithubusercontentcom/10480362/74393916-ab135880-4e0b-11ea-8c71-3a9bbc4e4369png)![jabref2](https://user-imagesgithubusercontentcom/10480362/74393918-ae0e4900-4e0b-11ea-8b6d-330c93c01c36png)when pressed the following screen will appear:![jabref3](https://user-imagesgithubusercontentcom/10480362/74393943-bebebf00-4e0b-11ea-8ec2-b92f9f6efc8fpng)![jabref4](https://user-imagesgithubusercontentcom/10480362/74393950-c1b9af80-4e0b-11ea-904e-ff35e6314ee3png)when pressed the following notification appears:![jabref5](https://user-imagesgithubusercontentcom/10480362/74393988-d7c77000-4e0b-11ea-8f63-287ccf0a6178png)and here is the end result when parsing is complete:![jabref6](https://user-imagesgithubusercontentcom/10480362/74394010-e3b33200-4e0b-11ea-9671-c8e077d2692epng) || just a little pr mainte ce || were on it and are confident itll be ready early next week if there are no other changes necessary unfortunately our lectures will begin next week which means well have to put this project on the back burner for a bit if we fail to deliver for the 50 release || > thanks a lot for the very good revision ive only a couple of minor remarks left before we can merge would be awesome if you could address them in a timely manner so that your pr still makes it into the 50 release in two weeks> > @koppor is it possible to create the domain `grobidjabreforg` as an alias for @linusdietz grobid server? in this way we can change the server in the future without changing the url and thus without the need of a new releasei have resolved all these issues and am re-requesting your review || ![grafik](https://user-imagesgithubusercontentcom/1366654/74851124-1a70d700-533b-11ea-9d51-1656764debc8png)![grafik](https://user-imagesgithubusercontentcom/1366654/74851148-22307b80-533b-11ea-8bc7-7cf5f388bbe3png)pasting ```textkolb s wirtz g: towards application portability in platform as a serviceproceedings of the 8th ieee international symposium on service-oriented system engineering (sose) oxford united kingdom april 7 - 10 2014```from https://wwwuni-bambergde/pi/team/kolb-stefan/![grafik](https://user-imagesgithubusercontentcom/1366654/74851445-88b59980-533b-11ea-954f-81079ff9da74png)result:```bibtex@misc{kolb  author  {s kolb and g wirtz}  title   {towards application portability in platform as a service}}```result is so so however user experience is ok the only thing is the textbox can it be soft-wrapped? || > ![grafik](https://user-imagesgithubusercontentcom/1366654/74851124-1a70d700-533b-11ea-9d51-1656764debc8png)> > ![grafik](https://user-imagesgithubusercontentcom/1366654/74851148-22307b80-533b-11ea-8bc7-7cf5f388bbe3png)> > pasting> > ```> kolb s wirtz g: towards application portability in platform as a service> proceedings of the 8th ieee international symposium on service-oriented system engineering (sose) oxford united kingdom april 7 - 10 2014> ```> > from https://wwwuni-bambergde/pi/team/kolb-stefan/> > ![grafik](https://user-imagesgithubusercontentcom/1366654/74851445-88b59980-533b-11ea-954f-81079ff9da74png)> > result:> > ```> @misc{kolb>   author  {s kolb and g wirtz}>   title   {towards application portability in platform as a service}> }> ```> > result is so so however user experience is ok the only thing is the textbox can it be soft-wrapped?we made the conscious design choice to go without softwrapping user input to improve quality of user experience when passing multiple entries but changing it isnt a problem and we should be able implement softwrapping together with the other requested changes until the weekend  || i see the problem we decided to split entries at line breaks (regex: ""[\\\r\\\n]+"")without the line break you copied over from the website the result is quite better:```@article{kolbjune27july22015  author     {s kolb and j lenhard and g wirtz}  year       {june 27 - july 2 2015}  address    {new york ny usa}  booktitle  {application migration effort in the cloud - the case of cloud platforms proceedings of the 8th ieee international conference on cloud computing (cloud)}}```softwrap makes sense since it (mentally) prevents the user from adding more breaks after he pasted his referenceswe thought using line breaks would be most convenient but we can easily change this to double line breaks or even something else so what do you think? @koppor  || as the example shows it would be indeed good to change the item separation to two lines (so that one empty line needs to be between the entries) could you also add this as a short comment in the prompt text ""please enter the plain text references "" to make it easier for users to discover the feature thanks || ready for review againsee comments in open issues abovealso the feature now separates at double empty lines onlyand this is displayed to the user (since the commit below) || think we are good to gofor a follow up the `accept` header should be set i created a follow-up issue at https://githubcom/koppor/jabref/issues/406thank you so much for working on this issue and keeping up the work after the exam phase! 🎉  || @koppor the address is still pointing to tum and your alias is not working: https://githubcom/jabref/jabref/pull/5614/files#r381558452 would be nice to fix this before the release || we also want to thank you very much! it was a great experience for the whole team to participate on your project it was very helpful that you mentioned so many import details that we didnt see that helped us improving our skills to become a good software engineer! :-) 🎉  || @tobiasdiez added it to https://githubcom/koppor/jabref/issues/406 || @koppor good but can we also fix that before we release this weekend?!  || thank you for your support and feedback during the development of this feature!i got response for my feature request at grobid asking for a service call that can process multiple requests at once https://githubcom/kermitt2/grobid/issues/540#issuecomment-589164981indeed the second use case is not what we are looking foras i understand i as caller would have the choice between sending everything in one request with little slower processing or creating and collecting multiple async threads but slightly faster processing so what do you think @koppor @tobiasdiez ? || "
686,5615,5629,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #5615 side pane not remembering position hii found a bug where javafx was doing some recalculations during the initial layouting setting `setresizablewithparent` before initial layouting was finished resulted in javafx assuming a wrong fixed widthi changed that by adding the code to a run later blockit works good for me on mac are there any concerns with that?best regardskai- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
687,5522,5646,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"dark theme visibility fixes there had been some visibility issues with the interface when in dark theme- changed the color of the vertical scroll bar in dark mode to allow it to be more visible against the other colors- changed the color of the accent behind the number selected which appears in the group tree when an item in a group is selected to allow for the number inside to be more readablefixes [#5522](https://githubcom/jabref/jabref/issues/5522)then:![](https://user-imagesgithubusercontentcom/12767489/67626176-9cdf0380-f83f-11e9-9a23-a89a80dac849png)now:![screen shot 2019-11-19 at 5 44 54 pm](https://user-imagesgithubusercontentcom/20655124/69198088-2b6e3a00-0af9-11ea-9f9d-bb15896b3623png)----- [x ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> sorry if i did anything wrong this is my first pull request on a public repoalso happy birthday if youre reading this dad! || @ageofadz thank you for being brave and submitting a pull request this is how open source should work 🎉 regarding the red cross its because our test coverage checker sometimes fails due to time outs you can ignore this error (refs https://githubcom/jabref/jabref/pull/5618) || thank you very much for your contribution! 🥇  looks good to me! would you mind fixing the preview (ciation styles) panel for openoffice/libreoffice as well? this is the same one as in the entry editor so it should be easy to adapt || just for clarification: @siedlerchr is referring to the issue mentioned here:https://githubcom/jabref/jabref/issues/5522#issuecomment-547054970 || > thank you very much for your contribution! 🥇 looks good to me! would you mind fixing the preview (ciation styles) panel for openoffice/libreoffice as well? this is the same one as in the entry editor so it should be easy to adaptthanks so much for the feedback everyone!started working on a few of the changes as for the changes to the openoffice style selection theres a method in /gui/preview/previewviewerjava called settheme() that can apply a theme to previewarticle and previewbook in /gui/openoffice/styleselectdialogviewjava with a note about [an open issue on openjdk](https://githubcom/openjdk/jfx/pull/22) i was able to add `previewarticlesettheme(""dark_css"")` to get the text in the openoffice style selection to fit the dark mode but because it only takes strings i havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selectedheres the methods code:`    public void settheme(string theme) {``        if (themeequals(themeloaderdark_css)) {``            // we need to load the css file manually due to a bug in the jdk``            // todo: remove this workaround as soon as https://githubcom/openjdk/jfx/pull/22 is merged``            url url  jabrefframeclassgetresource(themeloaderdark_css)``            string dataurl  ""data:text/csscharsetutf-8base64"" +```                    `base64getencoder()encodetostring(stringutilgetresourcefileasstring(url)getbytes())````            previewviewgetengine()setuserstylesheetlocation(dataurl)``        }``    }` || what do you mean with the following?> but because it only takes strings i havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selectedthe method allows you to load the `darkcss` in which you then can add/change the necessary style information || > what do you mean with the following?> > > but because it only takes strings i havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selected> > the method allows you to load the `darkcss` in which you then can add/change the necessary style informationbecause it checks if ""darkcss"" is passed in as an argument and switches to dark theme if it is it needs a string that says which theme is active for it to change according to what theme the user selectedat the time i couldnt find one but i found the hashmap in jabrrefpreferences and passed that into it now with `jabrefpreferences prefs  jabrefpreferencesgetinstance()` and `previewarticlesettheme(prefsget(jabrefpreferencesfx_theme))` which appear to work!testing right now will update my pull requests later today with that addition and your earlier suggestions || >jabrefpreferences prefs  jabrefpreferencesgetinstance() and previewarticlesettheme(prefsget(jabrefpreferencesfx_theme)) which appear to work!in the style select dialogview you have access to the preferences via the preferences service which is a wrapper (for dependency injection via the fxml loader) for the jabrefpreferenceswe try to pass dependencies always as constructor arguments (inversion of control principle) to avoid direct dependency callsso the idea would be to add a method eg getactivetheme to the preferencesservice which returns the theme for the preferences then you can call settheme on the previewviewer || hey many thanks once again for everyones feedback!the [newest commit](https://githubcom/ageofadz/jabref/commit/aa06737230927cd0c9cd32a9860d26e20c367797) has updates to darkcss based on @tobiasdiazs suggestion to overwrite scroll bar and group hit colors in addition to @siedlerchrs suggestion to update the styleselectdialogview using the preferences services wrapper injection as opposed to a hard dependency to jabrefpreferencesattached is a screenshot displaying the changes to scrollbar and group selected indicator (visually unchanged since first commit) and the oo style selection dialog view![screen shot 2019-11-23 at 12 08 20 pm](https://user-imagesgithubusercontentcom/20655124/69483590-d11df380-0dee-11ea-86b2-5d637eeda3d9png)[]  tests created for changes[x]  manually tested changed features in running jabref[x]  screenshots added in pr description (for bigger ui changes)[x]  checked documentation: is the information available and up to date? if not: issue created at https://githubcom/jabref/user-documentation/issues || this looks good! thanks for the follow-upi think you latest commit reverted the changes in the previous commit https://githubcom/ageofadz/jabref/commit/b812b62b6b854795fc9c012aa458959ed581bcfe you can use git cherry-pick to integrate these changes as well || > this looks good! thanks for the follow-up> > i think you latest commit reverted the changes in the previous commit [ageofadz@b812b62](https://githubcom/ageofadz/jabref/commit/b812b62b6b854795fc9c012aa458959ed581bcfe) you can use git cherry-pick to integrate these changes as wellto fix that should i use `git cherry-pick ^aa06737230927cd0c9cd32a9860d26e20c367797b812b62b6b854795fc9c012aa458959ed581bcfe`?the commit from two hours ago should have just added gettheme() to preferencesservices and jabrefpreferences and updated the styleselectdialogview to remove directly calling jabrefpreferences to refer to the preferencesservices gettheme() || mr @koppor git wizard can you please assist with the git issue || if it is only the commit b812b62b6b854795fc9c012aa458959ed581bcfe `git cherry-pick b812b62b6b854795fc9c012aa458959ed581bcfe` is enough (no need for commit ranges) possibly conflicts have to be resolved just resolve it with the ide and then commit the result i use `git gui` and click on the envelope buttons at the upper left || newest commit cherry-picks b812b62 and resolved conflicts in changelogmd and styleselectdialogviewjavathank you git wizard @koppor! || i think a `git push` is missing? maybe you cherry-picked on the wrong branch? you can always check the current overall branch status with `gitk --all&` then it displays where which branch currently points to (maybe the articleh https://lostechiescom/joshuaflanagan/2010/09/03/use-gitk-to-understand-git/ helps a bit?) || the latest commit is 4411dceb783f1d16ceffae10e77b1c52fb2cf390 `gitk --all&` shows it as head with 508c2bedd0c70991fb2506f0cd6351f40026ca91 as parent `git status` says im up to dateunsure why it isnt appearing in the pr but appears on [my fork](https://githubcom/ageofadz/jabref/commits/master) || you pushed it to your master branch but not to the base branch of this pr || this looks good now thanks again and looking forward to your next pr 😄 ! || couldn’t wish for a better first pr learned a lot and had a blast i’m stoked to do many morethank you all very much for being so helpful and patient commit after commit 😂 || "
688,5257,5665,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,improve change scanner if a file is changed externally jabref is doing a 3-way merge between the last saved value vs current value in jabref vs new value in filethe way this is done is by first comparing the last saved file with the current (changed) file and then trying to find additional/other changes in the currently open database this is really complex and i believe there is some subtle bug in the logic leading to #5257with this pr the change scanner is changed to a to simple 2-way merge between the current value in jabref vs new value in file this is way simpler and i hope this pr fixes #5257in a few edge cases the 2-way merge has a small disadvantage for example consider the following steps:- user a opens file- user a changes field `author` to `user a` and adds field `title` with value `new`- user b opens file- user b changes field `author` to `user b`- user b saves fileat this point user a gets a message that the file changed with the following changes:- field `author` changed from `user a` to `user b`- field `title` was removedthe 3-way merge could detect that `title` was newly added and thus could automatically reapply this change  this is no longer possible with the simple 2-way merge<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> we have to be careful how this works together with a shared database || the shared databases have their own update/sync mechanism but i do agree that this should be made consistent at some point || i am making it consistent <s>in my local dev branch</s> at https://githubcom/jabref/jabref/pull/5669 that one uses the merge entries dialog as it is the case in the shared database dialog does also cover the edge case by @tobiasdiez || is the reference file updated after the conflicts are reported? (is it necessary? i would guess: yes because changes reported should not be reported again - and the reference file is not the bib file on disk)is it possible to add some test cases? || i removed the reference file completely || how hard is it to embed the [merge entries dialog](https://docsjabreforg/finding-sorting-and-cleaning-entries/mergeentries) at the yellow place below?![grafik](https://user-imagesgithubusercontentcom/1366654/69784577-61c14e80-11b6-11ea-9e10-7c782218e908png) || @koppor the merge entries dialog is already consisting of a borderpane called `mergeentries` which can be embedded easily see the `mergeentriesdialog` || minor wish: <kbd>esc</kbd> should be enabled for closing the dialog(refs https://githubcom/jabref/jabref/issues/2949) || @siedlerchr great! may i ask whether you could do it? || i if can wait until this evening or afternoon i can try to add it || improved the pr based on the comments didnt change anything to the ui as this was not the subject of this pr so we are going ahead with this pr and further work on https://githubcom/jabref/jabref/pull/5669 after the release of 50? || this pr has the advantage that its finished and seems to work 🎉 maybe we will offer both possibilities:- transparent merge of changes (#5669)- explicit merge of changes (this pr)@siedlerchr can you do the integration of the merge entries dialog in a separate pr? - this evening is still long and i am really looking forward to it meanwhile ill work on the other pr ||
689,5664,5666,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,auto file finder follows symbolic links <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there-->fixes #5664 i didnt tried it but it should work<!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> needs to be tested on linux and mac os x @lyzardking and @linusdietz maybe you could test that? maybe even add a test case (which runs only on linux and osx?) || i just tried this out on my system with the deb from master installed to see if i was having the same issueit seems to work already- i added a reference with key foobar - added in the file path in settings the link created with `ln -s`- in the path i created a foobarpdf filejabref seems to import it the only problem i can see is that it added two files one from the normal folder and one from the symlink ||
690,3874,5667,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"rename ""lookup fulltext"" to ""download fulltext"" closes #3874 and surpasses #5216does not addresses the follow-up issues mentioned in https://githubcom/jabref/jabref/pull/5216#issuecomment-557589116<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  "
691,5216,5667,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"rename ""lookup fulltext"" to ""download fulltext"" closes #3874 and surpasses #5216does not addresses the follow-up issues mentioned in https://githubcom/jabref/jabref/pull/5216#issuecomment-557589116<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  "
692,5661,5670,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,improve column preference migration <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there-->fixes #5661<!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
693,5653,5671,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix copy drag and drop action fixes #5653<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
694,5679,5680,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,add throttle to autosaveuimanager as discussed in #5679 there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) when working on this the comments on https://githubcom/jabref/jabref/issues/5071#issuecomment-554769666 should be checked 😇  || i found the scheduledservice from javafx mabye this is an option as well?https://openjfxio/javadoc/12/javafxgraphics/javafx/concurrent/scheduledservicehtml || @koppor  by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progressthis leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?as i can see there are two `savedatabaseaction` created: one in the `basepanel` and one in the `autosavemanager` no locking is happening so basically the later manual saved version could be overwritten by the older autosave one?  || @siedlerchr i think this is more for recurring tasks rather to simply defer a task as it says that it will go from scheduled -> running -> finished -> scheduled automatically || actually @siedlerchr you were right! there is a `scheduledthreadpoolexecutor` i now completely changed the way to tackle the problem `autosavemanager` had a normal `executorservice` there was actually a bug when saving took longer `executorservice` would through an exception as the pool size was only of the size one  under certain circumstances newer information might not get auto-saved thereforethe current implementation replaces the `executorservice` by an `scheduledexecutorservice`additionally the bug of #4877 can now be reproduced when autosave is enabled change something and quickly press ctrl-s -> you will see the error so we should make the savedatabaseaction thread safe to prevent the error@koppor what do you think? || ah cool that sounds good thread safe sounds fittingthere are different ways to achieve this and maybe one of those newer locking things is helping https://docsoraclecom/en/java/javase/13/docs/api/javabase/java/util/concurrent/package-summaryhtml || @ka0o0 do you use eclipse or intellij? with intellij (and the complete setup from https://githubcom/jabref/jabref/wiki/guidelines-for-setting-up-a-local-workspace) the autoformat takes care>  by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progress this leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?(unsure whether this is still the question) - either cancel the current autosave or let it go and then trigger it again i would prefer the former (as long as we write to `sav`  and then move to `bib` - thus we do not destroy the `bib` file of the user) || @koppor actually i have important that already but i forgot to do auto formatting before committing ive now created a pre-commit hook which runs checkstyle so that this doesnt happens again || thanks again! ||
695,7276,5694,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"bump checkstyle from 826 to 827 bumps [checkstyle](https://githubcom/checkstyle/checkstyle) from 826 to 827<details><summary>release notes</summary>*sourced from [checkstyles releases](https://githubcom/checkstyle/checkstyle/releases)*> ## checkstyle-827> https://checkstyleorg/releasenoteshtml#release_827</details><details><summary>commits</summary>- [`98aa588`](https://githubcom/checkstyle/checkstyle/commit/98aa588f1a3431cf401f0265c2e071f2c4507014) [maven-release-plugin] prepare release checkstyle-827- [`916799d`](https://githubcom/checkstyle/checkstyle/commit/916799d2f280dd81829cbefe731b90a867fd1207) doc: add 827 releasenotes- [`44961c0`](https://githubcom/checkstyle/checkstyle/commit/44961c026fa0811b987f68b3cc0b678b5c17f7bc) issue [#7083](https://github-redirectdependabotcom/checkstyle/checkstyle/issues/7083): fix wrapping handing xml indentation- [`1aa1e54`](https://githubcom/checkstyle/checkstyle/commit/1aa1e5433f40c46658bf6ae28aef1c57779320fc) issue [#7083](https://github-redirectdependabotcom/checkstyle/checkstyle/issues/7083): add media-query for small devices use wrapper for tables svgs- [`7054edc`](https://githubcom/checkstyle/checkstyle/commit/7054edc6733a9b8911aaf913dd1969e227f258c4) revert ""issue [#7288](https://github-redirectdependabotcom/checkstyle/checkstyle/issues/7288): fix xwiki build on wercker""- [`c442c78`](https://githubcom/checkstyle/checkstyle/commit/c442c78f24af273ebc770bc31a2579a9d9831418) issue [#7288](https://github-redirectdependabotcom/checkstyle/checkstyle/issues/7288): fix xwiki build on wercker- [`cdbc25d`](https://githubcom/checkstyle/checkstyle/commit/cdbc25d8af6036a40d08e6febc0519e3a3630253) config: bump picocli from 404 to 411- [`abc6ae5`](https://githubcom/checkstyle/checkstyle/commit/abc6ae5d2b4df943886e63739163c592f825daf4) config: bump maven-enforcer-plugin from 300-m2 to 300-m3- [`5b718f2`](https://githubcom/checkstyle/checkstyle/commit/5b718f25026ffcf6aa8728e8ee39fbfcdb4e369f) config: disable mac jdk11+ until [#7276](https://github-redirectdependabotcom/checkstyle/checkstyle/issues/7276)- [`6fbac46`](https://githubcom/checkstyle/checkstyle/commit/6fbac46bd510cc9a2d66210c86da2307183a005e) config: bump sevntu to 1360- additional commits viewable in [compare view](https://githubcom/checkstyle/checkstyle/compare/checkstyle-826checkstyle-827)</details><br />[![dependabot compatibility score](https://apidependabotcom/badges/compatibility_score?dependency-namecompuppycrawltools:checkstyle&package-managergradle&previous-version826&new-version827)](https://dependabotcom/compatibility-scorehtml?dependency-namecompuppycrawltools:checkstyle&package-managergradle&previous-version826&new-version827)dependabot will resolve any conflicts with this pr as long as you dont alter it yourself you can also trigger a rebase manually by commenting `@dependabot rebase`[//]: # (dependabot-automerge-start)if all status checks pass dependabot will automatically merge this pull request[//]: # (dependabot-automerge-end)---<details><summary>dependabot commands and options</summary><br />you can trigger dependabot actions by commenting on this pr:- `@dependabot rebase` will rebase this pr- `@dependabot recreate` will recreate this pr overwriting any edits that have been made to it- `@dependabot merge` will merge this pr after your ci passes on it- `@dependabot squash and merge` will squash and merge this pr after your ci passes on it- `@dependabot cancel merge` will cancel a previously requested merge and block automerging- `@dependabot reopen` will reopen this pr if it is closed- `@dependabot close` will close this pr and stop dependabot recreating it you can achieve the same result by closing it manually- `@dependabot ignore this major version` will close this pr and stop dependabot creating any more for this major version (unless you reopen the pr or upgrade to it yourself)- `@dependabot ignore this minor version` will close this pr and stop dependabot creating any more for this minor version (unless you reopen the pr or upgrade to it yourself)- `@dependabot ignore this dependency` will close this pr and stop dependabot creating any more for this dependency (unless you reopen the pr or upgrade to it yourself)- `@dependabot badge me` will comment on this pr with code to add a ""dependabot enabled"" badge to your readmeadditionally you can set the following in the `dependabot/configyml` file in this repo:- update frequency- automerge options (never/patch/minor and dev/runtime dependencies)- out-of-range updates (receive only lockfile updates if desired)- security updates (receive only security updates if desired)</details> ```[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/bibtexkeypattern/bracketedpatternjava:53:8: unused @param tag for bibentry [javadocmethod][ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/bst/bibtextextprefixjava:24:8: unused @param tag for numofchars [javadocmethod][ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/openoffice/oobibstylejava:346:8: unused @throws tag for ioexception [javadocmethod]> task :checkstylemain[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/openoffice/oobibstylejava:372:8: unused @throws tag for ioexception [javadocmethod][ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/openoffice/oobibstylejava:398:8: unused @throws tag for ioexception [javadocmethod]``` || one of your ci runs failed on this pull request so dependabot wont merge it- [gui tests](https://developergithubcom/actions/)- [checkstyle](https://developergithubcom/actions/)- [deploy on macos](https://developergithubcom/actions/)- [deploy on windows](https://developergithubcom/actions/)dependabot will still automatically merge this pull request if you amend it and your tests pass ||"
696,5537,5717,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix import into currently open library remove unnecessary parallel execution of `addtab` which fixes #5537<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
697,5284,5724,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fix multiple entries allowed in crossref (issue #5284) fixed issue #5284 where multiple entries were allowed in crossref field whereas only one should be allowed https://githubcom/jabref/jabref/issues/5284 i merge even though the co-authored-by-strings are not correct```co-authored-by: julien bénardco-authored-by: lucas berettico-authored-by: venceslas roullier```source from https://helpgithubcom/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors![grafik](https://user-imagesgithubusercontentcom/1366654/70868277-7015b580-1f7f-11ea-9c54-d6148a87ec51png) || for follow-up: please ensure that ""checkstyle"" runs through there was a wrong import order@julien29121998 did you configure your ide correctly? || nevertheless thank you for putting effort into this looking forward to more contributions! || "
698,4224,5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,persistent column sortorder this pr should make the column sort order persistent @siedlerchr [asked me](https://githubcom/jabref/jabref/pull/5544#issuecomment-548879914) to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it?fixes #4800 fixes #4224refs #5713 and #5368follow-up to  #4327 and #5544the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending || thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it again?a shortcut for quicker testing: after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog || yes works fine after resetting the preferences 👍 codewise also looks good i let have @tobiasdiez  the final say on this ) || great did you notice any performance drops? || so far not sorting alone in a huge database with over 6400 entries and many groups takes a long time so this is definitely not related to the storage of the order || i am so free to merge this ) ||
699,4800,5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,persistent column sortorder this pr should make the column sort order persistent @siedlerchr [asked me](https://githubcom/jabref/jabref/pull/5544#issuecomment-548879914) to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it?fixes #4800 fixes #4224refs #5713 and #5368follow-up to  #4327 and #5544the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending || thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it again?a shortcut for quicker testing: after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog || yes works fine after resetting the preferences 👍 codewise also looks good i let have @tobiasdiez  the final say on this ) || great did you notice any performance drops? || so far not sorting alone in a huge database with over 6400 entries and many groups takes a long time so this is definitely not related to the storage of the order || i am so free to merge this ) ||
700,5368,5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,persistent column sortorder this pr should make the column sort order persistent @siedlerchr [asked me](https://githubcom/jabref/jabref/pull/5544#issuecomment-548879914) to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it?fixes #4800 fixes #4224refs #5713 and #5368follow-up to  #4327 and #5544the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending || thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it again?a shortcut for quicker testing: after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog || yes works fine after resetting the preferences 👍 codewise also looks good i let have @tobiasdiez  the final say on this ) || great did you notice any performance drops? || so far not sorting alone in a huge database with over 6400 entries and many groups takes a long time so this is definitely not related to the storage of the order || i am so free to merge this ) ||
701,5713,5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,persistent column sortorder this pr should make the column sort order persistent @siedlerchr [asked me](https://githubcom/jabref/jabref/pull/5544#issuecomment-548879914) to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it?fixes #4800 fixes #4224refs #5713 and #5368follow-up to  #4327 and #5544the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending || thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it again?a shortcut for quicker testing: after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog || yes works fine after resetting the preferences 👍 codewise also looks good i let have @tobiasdiez  the final say on this ) || great did you notice any performance drops? || so far not sorting alone in a huge database with over 6400 entries and many groups takes a long time so this is definitely not related to the storage of the order || i am so free to merge this ) ||
702,2868,5731,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #2868 - keep source groups selected after drag and drop this pr fixes a bug where the selection of the source groups was lost after drag and drop (#2868) i noticed a bug in the mapping from `groupnodeviewmodel` to the corresponding `treeitem`the bug might also have caused other selection related bugs- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) thanks again for the contribution! || very welcome guys :) happy to be able to support you ||
703,5037,5738,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,bugfix for multiscreen made following changes to solve multiscreen issue fixes #5037:at jabrefgui:-  new local variable correctedwindowpos  to support saving of screendata- change in method openwindow to open window at the mainscreen if needed- made method printwindowstate() to print out windowposition data (if logger in debug mode)- made method  testexternalcoordinates() to test if window is on external screen- made method numberofmonitors() to test if external screen is connected( |-> numberofmonitors() finally replaced by screengetscreens()size())at jabrefpreferences: - made copy of the window position and size variables (recognised with _core)- made initialisation for the variables described above(made in accordance with an project on software engineering at university basel in cooperation with @unibas-marcelluethi)<!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) thanks for the contribution please remove the travis integration as we recently switched to github actionsotherwise this looks good so far || thanks for the quick follow-up! ||
704,5602,5781,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,"fix gui tests fixes #5602 refs #2768wanted to know why our gui tests are broken the reason seems to be that we dont pass the preferences objects directly around but use `globalsprefs` at more places currently the issue is in `maintablejava`:```java        importhandler  new importhandler(                framegetdialogservice() database externalfiletypes                globalsprefsgetfilepreferences()                globalsprefsgetimportformatpreferences()                globalsprefsgetupdatefieldpreferences()                globalsgetfileupdatemonitor()                undomanager                globalsstatemanager)```i would propose to convert the constructor of `maintable` (and `basepanel`) to a builder pattern (because we have more than three arguments) and add passing of these preferencesalternatively we can mock `globalsprefsgetfilepreferences()` etc this is also ok for me as i accept global objects however we had a long discussion that we should get rid off `globals`is https://githubcom/jabref/jabref/issues/1579 the right issue where we discussed `globalsprefs`? i think the comment at https://githubcom/jabref/jabref/pull/1593#discussion_r71328057 summarizes the discussion +1 for extracting `globalsprefs` and mocking the relevant data i dont think a builder pattern is necessary as the relevant classes are rarely initialized and all arguments need to be present anyway   || im not sure whether we should continue with it like that should we tryother solutions such as eclipse jubula - which are independent from theconcrete code i see that separate preferences for model and logic makessense for gui it is *much* effort is it really worth the effort? do weneed these kinds of tests? would it make more sense to do black box testing?maybe we should let this task (enable testing by testfx) be done bystudents in a training next year? seems to be much more work than expectedi wanted to come up with a quick solution to get it running to have ourtests greentobias diez <notifications@githubcom> schrieb am do 26 dez 2019 09:45:> *@tobiasdiez* commented on this pull request> ------------------------------>> in src/main/java/org/jabref/gui/basepaneljava> <https://githubcom/jabref/jabref/pull/5781#discussion_r361403371>:>> > @@ -1458 +1548 @@>      private optional<databasechangemonitor> changemonitor  optionalempty()>      private jabrefexecutorservice executorservice>> -    public basepanel(jabrefframe frame basepanelpreferences preferences bibdatabasecontext bibdatabasecontext externalfiletypes externalfiletypes) {> -        thispreferences  objectsrequirenonnull(preferences)> +    public basepanel(jabrefframe frame basepanelpreferences basepanelpreferences bibdatabasecontext bibdatabasecontext externalfiletypes externalfiletypes groupviewmode groupviewmode filepreferences filepreferences importformatpreferences importformatpreferences updatefieldpreferences updatefieldpreferences fileupdatemonitor fileupdatemonitor statemanager statemanager consumer<columnpreferences> updatecolumnpreferences supplier<timestamppreferences> timestamppreferencessupplier) {>> i think its better to pass a preferenceservice if you need to store> preference options (or get the current preferences at a later moment)>> —> you are receiving this because you authored the thread> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/5781?email_sourcenotifications&email_tokenaaknu7twqxuo7zoyxcoov3lq2rvlja5cnfsm4j6n67d2yy3pnvwwk3tul52hs4dfwfihk3dmkjsxc5lfon2fezlwnfsxpktdn5ww2zloorpwszgocqg7hui#pullrequestreview-336458705>> or unsubscribe> <https://githubcom/notifications/unsubscribe-auth/aaknu7wsb7ivc7guv3zzo5lq2rvljancnfsm4j6n67dq>> > || i think gui tests would be nice to have its a good idea to let students extend the code coverage in a forthcoming project (similarly to what we did with the fetcher test suite) however we should provide a few basic tests that serve as an orientation with mvvm there shouldnt be any need for ui tests in the traditional sense (testfx or jubala or whatever) as one can simply write unit tests for the view model classes moreover the current gui tests dont add much value in my opinion for me it would be fine to remove all gui tests that we have currently || the whole ""mess"" is only for the basepaneltest - to fix the other tests was easy i removed all the ""improvements"" and made only cosmetic changes || "
705,3840,5786,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix ""&"" on previews <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there-->proposed solution for #3840 i deleted a line where the & was getting escaped when generating the preview apparently csl already handles some kind of escapingthe following entry```@misc{b1111  author  {b a}  title   {c \& d}  year    {1111}}```generates this html```<div class""csl-entry"">  <div class""csl-left-margin"">[1]</div><div class""csl-right-inline""> a b ôc &#38 dö 1111</div></div>```which renders in the previewlayout like this![ampersand](https://user-imagesgithubusercontentcom/16848115/71487443-8e2db200-27d8-11ea-85c4-05b6e88176a3png)<!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i fear that will destroy the html export and other custom html exportsthe htmlchars formatter is used there a lothttps://docsjabreforg/import-export/export/customexports#adding-a-custom-export-filteranother idea which just came to my mind have you tried without the html chars formatter eg if it works if you remove the html chars formatter in that step? || you are right! i removed the formatter from the csl adapter and it works just fine ill update the pr || @josejesinohui thank you for working on jabref - could you please merge upstream/master so that our automated checks are triggered on your pr? || would it be possible to add test cases here? you already provided a snippet - the reason is that in one year someone touching csladapter wont know that the htmlcharsformatter was removed and will re-add it again there wont be any automatism preventing that || hi sorry for the delay i will add tests and update my pr || perfect thanks for the quick followup! ||"
706,4719,5799,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,"reimplement custom entry types dialog fixes #4719 very early draftfield type should be radio button to switch between optional/requiredtodo:- [x] add check for empty fields and types (prevent them with validator)![grafik](https://user-imagesgithubusercontentcom/320228/71933194-dae29700-31a1-11ea-9690-2110c706c0dfpng)<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> cool that you worked on this!as a suggestion i would not follow the original design very closely instead of having different lists for required and optional fields i would add one big list of all fields with a checkbox toggling between required/optional  || thanks for the idea that indeed sounds more practical maybe a radio button column  || question which just came to my mind: do we allow changing the default entry types and their fields? eg removing a field from an entry type like article?@koppor  || yes it was possible to add/remove fields from the built-in entry types || @tobiasdiez  what is the preferred way to add new fields to a an existing entry type?i saw the entrytypesmanager with  the `addcustomormodifiedtype`  but i am not sure if this is the right approach    || yes that methods sounds right i vaguely remember that the complete entry type had to be ""replaced"" instead of only specifying the added/removed fields easiest way is probably to look at the original code || this looks really nice and is leagues above the original dialog in terms of user friendliness good job! || still a few things to do especially saving and removing all the fields back to the db and the prefs but at least adding to the gui already works (without any further effects) || @tobiasdiez  do you have an idea why the tableview content has these ""empty"" fields when i change between a list with more and fewer fields? tableview is bound bidirecitonal to the fieldsfortypeproperty         thisfieldsfortypeproperty  new simplelistproperty<>(existingfieldsfortype)```        easybindsubscribe(selectedentrytypesproperty type -> {            if (type ! null) {                list<fieldviewmodel> typesforfield  typeswithfieldget(type)                existingfieldsfortypesetall(typesforfield)            }        })```![grafik](https://user-imagesgithubusercontentcom/320228/72083772-a508f400-3302-11ea-9820-edc62d69ff7cpng) || the table view is programmed in such a way that always the complete visible table is filled with rows thus even if there is no datahttps://githubcom/jabref/jabref/pull/5799/files#diff-6f6e1e1c919b9cd2136e6a4b1d7d684ar78creates the toggle buttons moreover rows are reused (ie not re-created)i think it should suffice to add the check `item ! null` to https://githubcom/jabref/jabref/pull/5799/files#diff-acc3954e085edb6f809d80a9c419f431r26 and perhaps add an else statement with `setgraphic(null)` || thanks! that worked! || `selected field null` in stdout when i open the dialog || @burrbull  thanks for your interest however this is still work in progress and not yet ready  especially saving is not yet implemented  || in `biblatex` mode there should be 3 position: `required` `optional` `optional2` || @burrbull  we want to drop the difference between optional and optional 2 field sin the long run we had already discussion about this in the past #2790 || hi a very useful functionality in 431 was the manual sorting (not only in alphabetical order) of the fields in the edit entry panel are you planning to implement this in this version? thanks for this nice work || general functionality is now ready loading saving and removing of types is possiblealso removing and adding fields to standard types is workingremoving standard entry types like article has no effect || can someone update builds?https://buildsjabreforg/customizeentrydlg/ || @burrbull  we have currently some problems with our buildserver at buildsjabreforg however you can download it from here: https://githubcom/jabref/jabref/pull/5799/checks?check_run_id416697659in the top right corner click on artifacts:![grafik](https://user-imagesgithubusercontentcom/320228/73437031-e6158680-434b-11ea-8389-e4aec693caa3png) || bugwhen i try to move `optional` field to `required` whole `required` list emptiedi use biblatex || @burrbull  thanks for testing could you please add some more details on how to reproduce this`?what steps did you do where? || i think i found the problem working on it changes are not properly propagated || somehow the celledit event is not propagated to the listener here although the radiobuttoncell fires an event any idea where the problem could be @tobiasdiez ?code is adapted from here https://stackoverflowcom/a/27558557```       fieldtypecolumnseteditable(true)        fieldtypecolumnsetoneditcommit((celleditevent<fieldviewmodel fieldtype> t) -> {            tgettableview()getitems()get(tgettableposition()getrow())setfieldtype(tgetnewvalue())        })``` || @burrbull  i fixed the issue with the switch between required and optional aso the modified types are correctly loaded again from the preferences when opening the dialog || regarding the gui i jave just one more question: by default the required and optional are not shown complete i already tried to reduce the size of the left column but that didnt really work (i hate those column resizing shit in javafx)![grafik](https://user-imagesgithubusercontentcom/320228/73611314-145fc400-45e1-11ea-8b62-51d689522746png) || you can try to set a preferred width in https://githubcom/jabref/jabref/pull/5799/files#diff-fc34c7711de24071db18be303713d72fr34alternatively you increase the scene width || now i have```javalangruntimeexception: javalangreflectinvocationtargetexception	at orgjabrefmergedmodule/javafxfxmlfxmlloader$methodhandlerinvoke(unknown source)	at orgjabrefmergedmodule/javafxfxmlfxmlloader$controllermethodeventhandlerhandle(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireeventimpl(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireevent(unknown source)	at orgjabrefmergedmodule/javafxeventeventfireevent(unknown source)	at orgjabrefmergedmodule/javafxscenenodefireevent(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolbuttonfire(unknown source)	at orgjabrefmergedmodule/comsunjavafxscenecontrolbehaviorbuttonbehaviormousereleased(unknown source)	at orgjabrefmergedmodule/comsunjavafxscenecontrolinputmapinputmaphandle(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireeventimpl(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireevent(unknown source)	at orgjabrefmergedmodule/javafxeventeventfireevent(unknown source)	at orgjabrefmergedmodule/javafxscenescene$mousehandlerprocess(unknown source)	at orgjabrefmergedmodule/javafxscenesceneprocessmouseevent(unknown source)	at orgjabrefmergedmodule/javafxscenescene$scenepeerlistenermouseevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$2(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent(unknown source)	at orgjabrefmergedmodule/comsunglassuiviewhandlemouseevent(unknown source)	at orgjabrefmergedmodule/comsunglassuiviewnotifymouse(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguicustomentrytypescustomizeentryactionexecute(unknown source)	at orgjabref/orgjabrefguiactionsjabrefactionlambda$new$2(unknown source)	at orgjabrefmergedmodule/orgcontrolsfxcontrolactionactionhandle(unknown source)	at orgjabrefmergedmodule/orgcontrolsfxcontrolactionactionhandle(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireeventimpl(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireevent(unknown source)	at orgjabrefmergedmodule/javafxeventeventfireevent(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolmenuitemfire(unknown source)	at orgjabrefmergedmodule/comsunjavafxscenecontrolcontextmenucontent$menuitemcontainerdoselect(unknown source)	at orgjabrefmergedmodule/comsunjavafxscenecontrolcontextmenucontent$menuitemcontainerlambda$createchildren$12(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventhandlermanagerdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventbasiceventdispatcherdispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventdispatchchainimpldispatchevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireeventimpl(unknown source)	at orgjabrefmergedmodule/comsunjavafxeventeventutilfireevent(unknown source)	at orgjabrefmergedmodule/javafxeventeventfireevent(unknown source)	at orgjabrefmergedmodule/javafxscenescene$mousehandlerprocess(unknown source)	at orgjabrefmergedmodule/javafxscenesceneprocessmouseevent(unknown source)	at orgjabrefmergedmodule/javafxscenescene$scenepeerlistenermouseevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$2(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent(unknown source)	at orgjabrefmergedmodule/comsunglassuiviewhandlemouseevent(unknown source)	at orgjabrefmergedmodule/comsunglassuiviewnotifymouse(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_runloop(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationlambda$runloop$11(unknown source)	at javabase/javalangthreadrun(unknown source)caused by: javalangreflectinvocationtargetexception	at javabase/jdkinternalreflectnativemethodaccessorimplinvoke0(native method)	at javabase/jdkinternalreflectnativemethodaccessorimplinvoke(unknown source)	at javabase/jdkinternalreflectdelegatingmethodaccessorimplinvoke(unknown source)	at javabase/javalangreflectmethodinvoke(unknown source)	at comsunjavafxreflecttrampolineinvoke(unknown source)	at jdkinternalreflectgeneratedmethodaccessor5invoke(unknown source)	at javabase/jdkinternalreflectdelegatingmethodaccessorimplinvoke(unknown source)	at javabase/javalangreflectmethodinvoke(unknown source)	at orgjabrefmergedmodule/comsunjavafxreflectmethodutilinvoke(unknown source)	at orgjabrefmergedmodule/comsunjavafxfxmlmethodhelperinvoke(unknown source)	 97 morecaused by: javalangruntimeexception: a bound value cannot be set	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybaseset(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertysetvalue(unknown source)	at orgjabref/orgjabrefguicustomentrytypescustomentrytypedialogviewmodeladdnewfield(unknown source)	at orgjabref/orgjabrefguicustomentrytypescustomizeentrytypedialogviewaddnewfield(unknown source)	 107 more```when try to add new field || @siedlerchr one little remark: hovering the dustbin icon of eg the field ""doi"" states ""remove field from entry type **doi**"" which is not appropriate ||  @systemoperator  one question does the table update properly ( i am referring to the other bug) if you add a new type add a new field/remove a new field? || @burrbull  all errors fixed || @siedlerchr concerning updating the table everything works perfectly but when i add a new entry type then i firstly get an exception:```javalangruntimeexception: javalangreflectinvocationtargetexception	at javafxfxml/javafxfxmlfxmlloader$methodhandlerinvoke(fxmlloaderjava:1787)	at javafxfxml/javafxfxmlfxmlloader$controllermethodeventhandlerhandle(fxmlloaderjava:1670)	at javafxbase/comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(compositeeventhandlerjava:86)[]```and afterwards i get another exception:```javalangnullpointerexception	at javabase/javautilabstractcollectionaddall(abstractcollectionjava:335)	at javafxbase/javafxcollectionsmodifiableobservablelistbaseaddall(modifiableobservablelistbasejava:99)	at javafxbase/javafxcollectionsmodifiableobservablelistbasesetall(modifiableobservablelistbasejava:88)[]```and then the entry shows up in the tablesubsequenty when i delete a newly inserted entry type then sometimes a null pointer exception occurs:```javalangnullpointerexception	at javabase/javautilabstractcollectionaddall(abstractcollectionjava:335)	at javafxbase/javafxcollectionsmodifiableobservablelistbaseaddall(modifiableobservablelistbasejava:99)	at javafxbase/javafxcollectionsmodifiableobservablelistbasesetall(modifiableobservablelistbasejava:88)	at orgjabref/orgjabrefguicustomentrytypescustomentrytypedialogviewmodellambda$new$2(customentrytypedialogviewmodeljava:91)	at easybind@103/orgfxmisceasybindeasybindlambda$subscribe$12(easybindjava:263)[]```and when i select another entry type and simply click on the newly added entry type there is another null pointer exception || oh i have not seen that it was already mentioned previously || ah thanks i thought i had fixed this already probably forgot to commit this on my other pc just fixed it will take a bit until the binaries are updated || testing the fixed one: some corner cases:- adding several entry types without any name (or at least two types with the same name): exceptions occur when deleting them- adding several (or sometimes just one) new fields without any name: exception || thats one thing i want to prevent empty fields and empty entry types wont be allowed   will add a validator that in the next daysjust wanted to be curious about the table updating refreshing the main difference between the other table for external file types and this one is that i created a viewmodel for the table and i think in the other dialog the externalfiletype is directly used  || sounds good empty types should not be allowed as well as types with the same name || > thats one thing i want to prevent empty fields and empty entry types wont be allowed will add a validator that in the next days> > just wanted to be curious about the table updating refreshing the main difference between the other table for external file types and this one is that i created a viewmodel for the table and i think in the other dialog the externalfiletype is directly usedconcerning the external file types: maybe the problem is that there is a type hierarchy involved and the table uses the interface externalfiletype basically all cases could be covered with just one externalfiletype as well (#5902) || there will be a follow-up pr to fix one small issue> eigentlich fehlt nur noch ein check dass man keinen doppelten typ/field angeben muss> aber der wird eh nicht gespeichert bzw ist dann beim reload nicht dabei> ansonsten ist es soweit fertig || "
707,5820,5823,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,fix for multiple error messages in messed up source editor fixes #5820jabref created a new instance of codearea everytime an entry was selected and bound multiple listeners to the codearea and to the validationstatus in bindtoentry refactored it a little bit so the codearea stays persistent and the error messages are only displayed oncedid some minor refactorings to the other validators and to modulesinfo too to avoid warning messages from the ide and fixed a minor mistake from a previous pr in darkcss no screenshot as there is no visual change- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> thanks for the fix i dont know exactly what  but i remember we had issues with the code area when going up and down in the main table with an open entry editor and also when importing? i know that there was a reason why it was created new every time maybe @tobiasdiez remembers || this should do the trick now apparently javafx fires the focus event after loading the next entry and registering a listener does not mean it is also runwhat i dont understand is the failing gui test it fails somehow during setting the test up trying to call getsourcestring with an empty bibentryit does not fail with a real entry open in jabref but only with the test should i modify the test? || the new fix looks good to!i guess the test fails as `currententry` is null in https://githubcom/jabref/jabref/pull/5823/files#diff-e6eac13930d81c3c9c3ddc47d1b354a9r223you can change https://githubcom/jabref/jabref/blob/master/src/test/java/org/jabref/gui/entryeditor/sourcetabtestjava#l81 to `notifyaboutfocus` ||
708,4684,5826,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,"conversion of group dialog to mvvm-pattern a first approach to convert the add/edit group dialog to the mvvm-pattern and a step forwards to implement the changes @martinkarim supposed in #4684 still some problems and things to talk aboutthe most obvious one is: groupdescription i really dont know what to do with this personally i think this description stuff shuld go into the help page its a wild mesh-up of error messages validation messages for the regex and some hints about the groupthe next thing are the different group types @martinkarim supposed to merge most of them as they mostly intersect each other but if we do this we need to provide migrations for the old groups too this would probably go far beyond this prscreenshot belowthe old labels of the checkboxes a displayed as a tooltip now but they should be better placed in the help pagei have some problems with the validators somehow if i bind the disableproperty of the ok button to validproperty of the validator java throws a npe if i dont get this working i need to think about a workaroundi need to stop procrastinating now and get back to studying- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> 👍 for removing the description i like how the dialog looks in your screenshot nicely done!(i would maybe left-align the options ""case sensitve"" and ""regular expression"") || so i got no other opinions descriptions are gone![group dialog](https://user-imagesgithubusercontentcom/50491877/72668799-b2249200-3a2a-11ea-9267-4454fa9e06e9png)refs #5833 but this pr does only change the groups dialog it does not fix the issue mentioned || looks good so far! || the constructors are gone and the whole globals-stuff in this part probably too as i made same bigger changes i would appreciate it if you could just take a quick look at the latest commit and the changes to the optics again expecially the enummap is this ok this way? i really did not like the gettext-method<img width""450"" alt""group"" src""https://user-imagesgithubusercontentcom/50491877/73127124-fd571b80-3fbb-11ea-8905-8f79ba0482bepng""> || merging then || "
709,5816,5841,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix missing file extension for downloaded files fixes #5816 by falling back to pdf as default file type<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
710,5253,5855,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix opening pdf with okular in linux (#5253) <!-- possible fix for issue #5253clicking on a document icon does not open the associated pdf  the pdf viewer opens and closes immediately this seems to be related to kde desktop with okular as default pdf reader when okulas gives an error/warning message discarding ""send sms via kde connect"" (""shareurl"")it is not correctly handled and the program closesone possible solution is to read the buffer in some way when xdg-open is called by runtimegetruntime()exec()-->- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> thanks for your contribution @t-morales !may i ask you to to unabbreviate the variables and to give them a selfexplaining name? you can also link the fix in github to automatically close the issue (""fixes #5253"")just because im curious: how does the fix work? edit: nevermind just saw the extensive discussion -) || @calixtus as i said in the issue #5253 i am not familiarized with java it was more or less a trial and error procedure with the help of the comments of other users not so sure why this works and it would be good if someone with better understanding on java took a look at that || thanks for the follow-up! || "
711,5862,5868,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix #5862 it was indeed the throttler (at least it is working now for me)<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
712,5861,5879,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixes making paths of linked files relative (web urls will not be touched anymore) fixes #5861description:- cleaning up entries with ""make paths of linked files relative (if possible)"" broke web urls and resulted in various other issues subsequently this pr fixes this issueit has been tested for local files and web urls- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> thank you very much for your contribution!fix looks good!  || is there still something i need to do or is everything fine because one check failed? || you can ignore the failing check its just the upload of the binaries which sometimes failsour code quality policy requires a review from a second reviewer for external developers before it can be mergedi think you also should add a changelog entry since its at least an error from the beta/previous version || would a proper implementation of rfc 3986 be an overkill? maybe this could be achieved with a proper regex?https://toolsietforg/html/rfc3986spotted thishttps://stackoverflowcom/questions/30847/regex-to-validate-uris#30858 || @calixtus checking a path as follows could be a simple alternative https://wwwgeeksforgeeksorg/check-if-url-is-valid-or-not-in-java/ but nevertheless i also see advantages with the current approach since it also detects urls as web urls even if they are potentially broken in some way this was the reason why i created it like that i think the main goal is to identify a web url rather than checking its validity || @systemoperator  that should work using new url() in practice and i think should be sufficient for most cases as an indicator || i eg think about the following scenario: given are broken web urls like:- https://www googleat/ <- mind the unintended space character- https://wwwgoogleat/ <- mind the unintended second period- i think in this screnario it is more important to identify whether it is a web url or not rather than making it more strict saying checking whether it is a valid web url because in the case that it would be a invalid web url (as eg shown above) then in this scenario the url would again get cleaned up and thus it will become even more ""destoryed"" as it would be interpreted as a local file url again and many other issues would again show upon the other hand if a broken url gets identified as a web url then it will be processed properly and everything will work out but when opening the url it just cannot be loadedin my opinion this method is all about identifying a web url not validating one (thats why it is called isonlinelink() rather than isvalidonlinelink()) || somewhere i think youre some kind of right too on the other hand where do we want to decide whats still a acceptable and what not? what about ""file://"" (im aware that normally a file path is printed without this here but it still could happen) we also had a few months ago someone here using jabref as database for genetics stuff and not for books (proofing the mutability of jabref)please dont misunderstand me i get your point and i dont exactly know the right answer || before implementing it i thought about many of those things with the current implementation a file link starting with ""file://"" will not be interpreted as a web url anyway so this would be fine as well || at least the javadoc should then be adapted -) || of course i would like to hear @tobiasdiezs recommendation about that as well then i will implement it as desired :) || i think the current implementation is a good compromise in the ideal world the url is valid and a proper validation as @calixtus would be preferable however the data quality we get from some fetchers is suboptimal so that it is a good idea to error on the save side (eg better identify to many paths as web urls) i suggest to merge now and come back to it later if users complain / provide problematic use cases || "
713,5853,5903,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix properly resolves orfields of required fields addresses: #5859 and partially #5853this fix adds all entries of orfields of the required fields of entrytypedefinitions to the list of required fields for the tab ""required fields"" of the entry editor- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) please resolve the conflicts and fix the checkstyle issue than we can merge || @siedlerchr is there still something i need to do? which checkstyle issue do you mean? || see https://githubcom/jabref/jabref/pull/5903/checks?check_run_id422021255ive fixed it for you and will merge now thanks again for another great pr! ||"
714,5859,5903,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix properly resolves orfields of required fields addresses: #5859 and partially #5853this fix adds all entries of orfields of the required fields of entrytypedefinitions to the list of required fields for the tab ""required fields"" of the entry editor- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) please resolve the conflicts and fix the checkstyle issue than we can merge || @siedlerchr is there still something i need to do? which checkstyle issue do you mean? || see https://githubcom/jabref/jabref/pull/5903/checks?check_run_id422021255ive fixed it for you and will merge now thanks again for another great pr! ||"
715,5905,5917,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,added update method to typepropertylisteners fixes #5905 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
716,5821,5923,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"disable search when no library is opened and fix exception when getsearchresultsize returned nulli found this wile trying to reproduce hopefully fixes #5897and fixes #5821<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> jabref 50-beta409--2020-02-09--6a9c915linux 530-28-generic amd64 java 13021 close all libraries2 type abc in search box3 multiple ""uncaught exception"" error messages pop up![image](https://user-imagesgithubusercontentcom/762246/74193544-bfd9cb80-4c14-11ea-894b-631971afb17cpng)```javalangnullpointerexception	at orgjabref/orgjabrefguisearchglobalsearchbarlambda$new$10(unknown source)	at javabase/javautiloptionalifpresent(unknown source)	at orgjabref/orgjabrefguisearchglobalsearchbarlambda$new$11(unknown source)	at orgjabrefmergedmodule/orgfxmisceasybindeasybindlambda$subscribe$12(unknown source)	at orgjabrefmergedmodule/comsunjavafxbindingexpressionhelper$genericfirevaluechangedevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxbindingexpressionhelperfirevaluechangedevent(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybasefirevaluechangedevent(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybasemarkinvalid(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybaseset(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertysetvalue(unknown source)	at orgjabref/orgjabrefguistatemanagersetsearchquery(unknown source)	at orgjabref/orgjabrefguisearchglobalsearchbarperformsearch(unknown source)	at orgjabrefmergedmodule/orgreactfxutilfxtimerlambda$restart$0(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationsharedtimelineclipcorevisitkeyframe(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationsharedtimelineclipcoreplayto(unknown source)	at orgjabrefmergedmodule/javafxanimationtimelinedoplayto(unknown source)	at orgjabrefmergedmodule/javafxanimatio imationaccessorimplplayto(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationsharedsingleloopclipenvelopetimepulse(unknown source)	at orgjabrefmergedmodule/javafxanimatio imationdotimepulse(unknown source)	at orgjabrefmergedmodule/javafxanimatio imation$1lambda$timepulse$0(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/javafxanimatio imation$1timepulse(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationabstractmastertimertimepulseimpl(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationabstractmastertimer$mainlooprun(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitpulse(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitpulse(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitpulsefromqueue(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitlambda$runtoolkit$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguijabrefdialogserviceshowerrordialogandwait(unknown source)	at orgjabref/orgjabreffallbackexceptionhandlerlambda$uncaughtexception$0(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$10(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguijabrefdialogserviceshowerrordialogandwait(unknown source)	at orgjabref/orgjabreffallbackexceptionhandlerlambda$uncaughtexception$0(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$10(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguijabrefdialogserviceshowerrordialogandwait(unknown source)	at orgjabref/orgjabreffallbackexceptionhandlerlambda$uncaughtexception$0(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$10(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_runloop(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationlambda$runloop$11(unknown source)	at javabase/javalangthreadrun(unknown source)``` || seems like you still have an old version from yesterday this is fixed in todays version  || i hope so!  the version of 10 feb isnt downloadable yet  ill report back when ive tried it || @wujastyk  unfortunately we currently have no space left on our build server however you can download a version from here https://githubcom/jabref/jabref/actions/runs/37249397 || "
717,5897,5923,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"disable search when no library is opened and fix exception when getsearchresultsize returned nulli found this wile trying to reproduce hopefully fixes #5897and fixes #5821<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> jabref 50-beta409--2020-02-09--6a9c915linux 530-28-generic amd64 java 13021 close all libraries2 type abc in search box3 multiple ""uncaught exception"" error messages pop up![image](https://user-imagesgithubusercontentcom/762246/74193544-bfd9cb80-4c14-11ea-894b-631971afb17cpng)```javalangnullpointerexception	at orgjabref/orgjabrefguisearchglobalsearchbarlambda$new$10(unknown source)	at javabase/javautiloptionalifpresent(unknown source)	at orgjabref/orgjabrefguisearchglobalsearchbarlambda$new$11(unknown source)	at orgjabrefmergedmodule/orgfxmisceasybindeasybindlambda$subscribe$12(unknown source)	at orgjabrefmergedmodule/comsunjavafxbindingexpressionhelper$genericfirevaluechangedevent(unknown source)	at orgjabrefmergedmodule/comsunjavafxbindingexpressionhelperfirevaluechangedevent(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybasefirevaluechangedevent(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybasemarkinvalid(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertybaseset(unknown source)	at orgjabrefmergedmodule/javafxbeanspropertyobjectpropertysetvalue(unknown source)	at orgjabref/orgjabrefguistatemanagersetsearchquery(unknown source)	at orgjabref/orgjabrefguisearchglobalsearchbarperformsearch(unknown source)	at orgjabrefmergedmodule/orgreactfxutilfxtimerlambda$restart$0(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationsharedtimelineclipcorevisitkeyframe(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationsharedtimelineclipcoreplayto(unknown source)	at orgjabrefmergedmodule/javafxanimationtimelinedoplayto(unknown source)	at orgjabrefmergedmodule/javafxanimatio imationaccessorimplplayto(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationsharedsingleloopclipenvelopetimepulse(unknown source)	at orgjabrefmergedmodule/javafxanimatio imationdotimepulse(unknown source)	at orgjabrefmergedmodule/javafxanimatio imation$1lambda$timepulse$0(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/javafxanimatio imation$1timepulse(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationabstractmastertimertimepulseimpl(unknown source)	at orgjabrefmergedmodule/comsunscenarioanimationabstractmastertimer$mainlooprun(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitpulse(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitpulse(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitpulsefromqueue(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitlambda$runtoolkit$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguijabrefdialogserviceshowerrordialogandwait(unknown source)	at orgjabref/orgjabreffallbackexceptionhandlerlambda$uncaughtexception$0(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$10(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguijabrefdialogserviceshowerrordialogandwait(unknown source)	at orgjabref/orgjabreffallbackexceptionhandlerlambda$uncaughtexception$0(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$10(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationenternestedeventloopimpl(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_enternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuiapplicationenternestedeventloop(unknown source)	at orgjabrefmergedmodule/comsunglassuieventloopenter(unknown source)	at orgjabrefmergedmodule/comsunjavafxtkquantumquantumtoolkitenternestedeventloop(unknown source)	at orgjabrefmergedmodule/javafxstagestageshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontrolheavyweightdialogshowandwait(unknown source)	at orgjabrefmergedmodule/javafxscenecontroldialogshowandwait(unknown source)	at orgjabref/orgjabrefguijabrefdialogserviceshowerrordialogandwait(unknown source)	at orgjabref/orgjabreffallbackexceptionhandlerlambda$uncaughtexception$0(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$10(unknown source)	at javabase/javasecurityaccesscontrollerdoprivileged(unknown source)	at orgjabrefmergedmodule/comsunjavafxapplicationplatformimpllambda$runlater$11(unknown source)	at orgjabrefmergedmodule/comsunglassuiinvokelaterdispatcher$futurerun(unknown source)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplication_runloop(native method)	at orgjabrefmergedmodule/comsunglassuigtkgtkapplicationlambda$runloop$11(unknown source)	at javabase/javalangthreadrun(unknown source)``` || seems like you still have an old version from yesterday this is fixed in todays version  || i hope so!  the version of 10 feb isnt downloadable yet  ill report back when ive tried it || @wujastyk  unfortunately we currently have no space left on our build server however you can download a version from here https://githubcom/jabref/jabref/actions/runs/37249397 || "
718,5906,5925,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix maintable not updated when changing entry type fixes #5906<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
719,5892,5938,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix not escaping special characters in search pattern fixes #5892the error when searching for ""doi 101210/endrev/bnz006"" (or any phrases containing special javascript regular expression characters) is caused by not escaping special characters before passing search  pattern to javascript script used for highlighting words in preview view<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> > a test would be greatok i will write a test || i think this is really great as well! thank you! ||"
720,5939,5940,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,fix #5939 by creating a mutable list in opendatabaseaction this pr fixes the problem when opening a library from the recent libraries menu fixes #5939 - [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) thanks again for your contribution! 👍  || we tried it locally did not fix the issue we will switch to `listof()` ||
721,5882,5945,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,try to fix linux pdf opening again fixes #5942  and fixes probably #5882<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> could you please try again with the newest version from this branch?i forgot one method  ||
722,5942,5945,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,try to fix linux pdf opening again fixes #5942  and fixes probably #5882<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> could you please try again with the newest version from this branch?i forgot one method  ||
723,5275,5955,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,0,0,added menubuttons to integritycheckdialog this pr adds menubuttons to the integritycheckdialog because there was a complaint that the filters were not very easy to find fixes #5275 i did not implement the option to make the current filters in the table persistent as the use case for this is extremly limited (sorry) controlsfx does not support this and the workaround would be hugei dont think that documentation is necessary for this as it should be very obvious to understand![integrity_without_panel](https://user-imagesgithubusercontentcom/50491877/74672662-12376100-51ae-11ea-873c-2021f38466d2png)![integrity_with_panel](https://user-imagesgithubusercontentcom/50491877/74672664-14012480-51ae-11ea-808d-cb8ba79e8ae4png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> looks good! ||
724,5604,5969,1,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,0,0,1,0,refactored subtile changes to optics of library properties fixes #5604 some subtile changes (added a scrollpane) to the library properties dialog (and to saveorderconfigdisplay and to fieldformattercleanupspanel) fieldformattercleanupspanel needs to be refactored in the future to mvvm-pattern but this pr is just a quick fix for the issue so the library properties are somewhat usable on scaled displays![librarypropsup](https://user-imagesgithubusercontentcom/50491877/74947122-aeee3e80-53fa-11ea-83b5-90a4934e2e15png)![librarypropsdown](https://user-imagesgithubusercontentcom/50491877/74947132-b1509880-53fa-11ea-84b1-40e0f26bd8c5png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
725,5968,5983,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fixed loosing group if the most bottom one in list is dragged on itself fixes #5968 - [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
726,6015,6018,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,add shortscience integration <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there-->this pr introduces a simple integration towards shortscience as tracked by #6015 the integration is in the form of an additional context menu item called *search shortscience* which if clicked will open the users web browser to the search results for the selected entrys titlei experimented with generating a direct link to the shortscience page for the article instead of linking to the search results but the uri scheme is not entirely consistent nor predictable at shortscience so it was deemed more effort than it was worth <!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>- [x] port right click menu to new style as in #5958 ![example](https://user-imagesgithubusercontentcom/23704106/75283908-0255f780-5814-11ea-8c2b-2d4f02b33ea9png)there are a few things im uncertain about implementation-wise i implemented this in what i believe is the same way as the other menu actions which is through the use of the deprecated class oldcommandwrapper im not sure if this is the best place to put the functionality nor if the deprecated class is still the correct approach im also still working on a testing strategy hi @stevensdavid  thank you for your work and your pr you are right baseaction is deprecated and i already prepared a pr to completly remove the deprecated baseaction stuff from the rightclickmenuthe future way to implement menu actions is to put the action information in standardactions and to implement the action as a class extending simplecommand should be very straight forward for some hints please have a look at my pr #5958 if you have questions just ask me im happy to help you || > hi @stevensdavid  thank you for your work and your pr you are right baseaction is deprecated and i already prepared a pr to completly remove the deprecated baseaction stuff from the rightclickmenu> the future way to implement menu actions is to put the action information in standardactions and to implement the action as a class extending simplecommand should be very straight forward for some hints please have a look at my pr #5958 if you have questions just ask me im happy to help youhey @calixtus! it seems i need a few of the changes in api that you implemented in order to use the new style making it difficult to port the feature to the new style before your pr is merged specifically id need the new signature for `rightclickmenucreate` that you implemented in d1d74c7d4d12c81b1b324fc4f973f2f437b2bb83 as it includes the statemanager and the actionhelper methods you introduced in f664d10470572e00e1f5c91bbc3eec83853abb92 these commits dont seem particularly easy to cherry-pick without getting your other refactoring work and im not entirely sure if it is considered good practice to cherry-pick partial commits as i havent done that before 😅  || yes maybe its better to wait until after the release of 50 its better not to introduce new features right now but to stabilize the current branch so we can release in some days and to put this feature into 51 || @stevensdavid you can base at @calixtuss branch if that works out or just merge his branch into your branch || i ended up merging @calixtuss branch into this one so the diff looks larger than it actually is as such this shouldnt be merged before #5958the code has been rewritten to use the new style and i have broken out the link generation into a separate method which now has a few test cases should the documentation and changelog be updated as part of this?edit: code style errors seem to be inherited from the merge and are not from new changes || i changed the base branch to `replace_deprecated` to enable reviewing the diff to https://githubcom/jabref/jabref/pull/5958longer explanation: i mirrored the current state of https://githubcom/jabref/jabref/pull/5958 into the branch `replace_deprecated` by locally cloning @calixtuss fork (`git remote add calixtus ` `git fetch calixtus`) checking out the branch and pushing it to here (`origin`) || @koppor thank you for the feedback! ive pushed new commits that should resolve your comments  ||
727,5701,6031,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,translation for specialfield names in preferences names of special fields were not translated in preferencesfixes #5701 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
728,5832,6054,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix warning display issue for entering a title made of two words <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there-->  hello! this pr fixes the issue that a warning is displayed when users enter a title made of two sentences in the entry editor fixes #5832 <!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> hi @koppor thank you for your review! i have made changes to the code i found that there is an existing test which is testtitlechecks() in integritychecktestjava for this functionality so i added test cases for the title with delimiters there please let me know if there is anything else i need to take care of happy to make a contribution || @eetian we are in ""nitpicking"" mode 😇 it might cost more time to refine the code to provide some background: the jabref team decided to improve the code quality thus we aim for all code being a model for java coders to learn how things work see https://devdocsjabreforg/development-strategy for details thus we kindly ask you to include our feedback please do not hesitate to contact us in case you have any question || # [codecov](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&elh1) report> merging [#6054](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&eldesc) into [master](https://codecovio/gh/jabref/jabref/commit/1a36304b5ed8f76594c89e4db91c46a267a73efa?srcpr&eldesc) will **increase** coverage by `001%`> the diff coverage is `100%`[![impacted file tree graph](https://codecovio/gh/jabref/jabref/pull/6054/graphs/treesvg?width650&tokengocyt97xqp&height150&srcpr)](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&eltree)```diff@@             coverage diff              @@##             master    #6054      +/-   ##+ coverage     4154%   4155%   +001%     - complexity     6874     6880       +6       files          1092     1090       -2       lines         46341    46234     -107       branches       5562     5558       -4     - hits          19251    19212      -39     + misses        25642    25574      -68       partials       1448     1448```| [impacted files](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&eltree) | coverage δ | complexity δ | ||---|---|---|---|| [/java/org/jabref/logic/integrity/titlecheckerjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ludgvncml0es9uaxrszunozwnrzxiuamf2yq) | `9166% <100%> (+075%)` | `8 <0> (+1)` | :arrow_up: || [jabref/logic/shared/event/connectionlosteventjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9ldmvudc9db25uzwn0aw9utg9zdev2zw50lmphdme) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | || [va/org/jabref/logic/importer/fulltextfetchersjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl0z1bgx0zxh0rmv0y2hlcnmuamf2yq) | `6666% <0%> (-625%)` | `14% <0%> (+1%)` | || [java/org/jabref/preferences/jabrefpreferencesjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml3byzwzlcmvuy2vzl0phyljlzlbyzwzlcmvuy2vzlmphdme) | `2558% <0%> (-225%)` | `16% <0%> (ø)` | || [java/org/jabref/logic/shared/dbmssynchronizerjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9eqk1tu3luy2hyb25pemvylmphdme) | `707% <0%> (-192%)` | `39% <0%> (-2%)` | || [in/java/org/jabref/logic/shared/dbmsprocessorjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9eqk1tuhjvy2vzc29ylmphdme) | `8248% <0%> (-057%)` | `46% <0%> (ø)` | || [/java/org/jabref/logic/importer/fetcher/arxivjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivqxjyaxyuamf2yq) | `8698% <0%> (-052%)` | `30% <0%> (ø)` | || [abref/gui/importer/actions/opendatabaseactionjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9pbxbvcnrlci9hy3rpb25zl09wzw5eyxrhymfzzufjdglvbi5qyxzh) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: || [/main/java/org/jabref/gui/maintable/maintablejava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9tywludgfibguvtwfpblrhymxllmphdme) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: || [n/java/org/jabref/gui/entryeditor/entryeditorjava](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9lbnryewvkaxrvci9fbnryeuvkaxrvci5qyxzh) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: ||  and [17 more](https://codecovio/gh/jabref/jabref/pull/6054/diff?srcpr&eltree-more) | |------[continue to review full report at codecov](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&elcontinue)> **legend** - [click here to learn more](https://docscodecovio/docs/codecov-delta)> `δ  absolute <relative> (impact)` `ø  not affected` `?  missing data`> powered by [codecov](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&elfooter) last update [1a363047d95ba7](https://codecovio/gh/jabref/jabref/pull/6054?srcpr&ellastupdated) read the [comment docs](https://docscodecovio/docs/pull-request-comments) || @eetian thank you for keeping working on it good to go now! || "
729,6066,6110,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,"groups: searching for keywords field mandatory value not checked closes #6108 closes #6066 - [x] alert dialog triggered![image](https://user-imagesgithubusercontentcom/2141507/76635849-5ec15280-6548-11ea-93d6-87187f759a17png)- [x] active info icons:![image](https://user-imagesgithubusercontentcom/2141507/76633553-33893400-6545-11ea-8bc9-28e7a6b3ce38png)- [x] inactive info icons![image](https://user-imagesgithubusercontentcom/2141507/76633606-456ad700-6545-11ea-81fc-87f429984a87png)- [x] dialog should not close when error dialog is discarded!@calixtus not sure if we have this problem in more dialogs the `setresultconverter` method will always close the dialog we want to go abck to the dialog if errors are displayed as alert dialogs  however we need to use `addeventfilter` for this i guess (am no expert in javafx @tobiasdiez) see dialog validation section at https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/dialoghtml in other dialogs we dont show any error message instead we disable the ok buton until all required fields are set the dialog is duplicate see for example the shareddatabaselogin dialog || @siedlerchr i really like that metaphor think its also in place in angular apps ^^ refs https://githubcom/koppor/jabref/issues/410 (which states that we should document it) || i agree but thats not what i fixed and what the pr is about -) || i agree that the ok-button should be disabled in case there are validation errors the code for this seems to be in place as well so i guess there is a bug somewhere @siedlerchr @calixtus do you have an idea where? || i did take a look at the code and tried a little bit around but i must confess i dont ever reach the alert dialog the button disableproperty is with this pr now completly and correctly ""bound"" to the validation status and im unable to click the button so huh?also i agree to the button-disabled-metaphor || so simply remove the dialog and all is done || disabled button should work except for when the dialog is opened at first the checks only come into place when one has entered data in the mandatory fields we need to trigger the validation after initialization to change this || can we track the additional changes in a follow up issue? id rather limit this pr to the fixes  if possible || "
730,6108,6110,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,"groups: searching for keywords field mandatory value not checked closes #6108 closes #6066 - [x] alert dialog triggered![image](https://user-imagesgithubusercontentcom/2141507/76635849-5ec15280-6548-11ea-93d6-87187f759a17png)- [x] active info icons:![image](https://user-imagesgithubusercontentcom/2141507/76633553-33893400-6545-11ea-8bc9-28e7a6b3ce38png)- [x] inactive info icons![image](https://user-imagesgithubusercontentcom/2141507/76633606-456ad700-6545-11ea-81fc-87f429984a87png)- [x] dialog should not close when error dialog is discarded!@calixtus not sure if we have this problem in more dialogs the `setresultconverter` method will always close the dialog we want to go abck to the dialog if errors are displayed as alert dialogs  however we need to use `addeventfilter` for this i guess (am no expert in javafx @tobiasdiez) see dialog validation section at https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/dialoghtml in other dialogs we dont show any error message instead we disable the ok buton until all required fields are set the dialog is duplicate see for example the shareddatabaselogin dialog || @siedlerchr i really like that metaphor think its also in place in angular apps ^^ refs https://githubcom/koppor/jabref/issues/410 (which states that we should document it) || i agree but thats not what i fixed and what the pr is about -) || i agree that the ok-button should be disabled in case there are validation errors the code for this seems to be in place as well so i guess there is a bug somewhere @siedlerchr @calixtus do you have an idea where? || i did take a look at the code and tried a little bit around but i must confess i dont ever reach the alert dialog the button disableproperty is with this pr now completly and correctly ""bound"" to the validation status and im unable to click the button so huh?also i agree to the button-disabled-metaphor || so simply remove the dialog and all is done || disabled button should work except for when the dialog is opened at first the checks only come into place when one has entered data in the mandatory fields we need to trigger the validation after initialization to change this || can we track the additional changes in a follow up issue? id rather limit this pr to the fixes  if possible || "
731,5245,6121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,icons from material design icons not recognized fixes #6078related #5245@jabref/developers  2b760cddf53cceae54fd149774226461f5290daa caused this issuehttps://githubcom/jabref/jabref/issues/5245obviously only icons contained inside jabreficons are available nowthe question is - do we really want this feature? not sure if changing the line back to ```        return enumsgetifpresent(materialdesigniconclass iconcodetouppercase(localeenglish))                    tojavautil()                    map(icon -> new internalmaterialdesignicon(getcolor() icon))``` will reintroduce the referenced issue (https://githubcom/jabref/jabref/issues/5245)this feature also only makes sense if we have a dropdown with all available icons inside the new/edit group dialog imho![image](https://user-imagesgithubusercontentcom/2141507/76682572-845c6380-65fd-11ea-9384-8b105d66bd76png) # [codecov](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&elh1) report> merging [#6121](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&eldesc) into [master](https://codecovio/gh/jabref/jabref/commit/8dd744409158a343f2577d416fbbf7b6027b1371?srcpr&eldesc) will **decrease** coverage by `<01%`> the diff coverage is `0%`[![impacted file tree graph](https://codecovio/gh/jabref/jabref/pull/6121/graphs/treesvg?width650&tokengocyt97xqp&height150&srcpr)](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&eltree)```diff@@             coverage diff              @@##             master    #6121      +/-   ##- coverage     4155%   4154%   -001%     - complexity     6878     6879       +1       files          1090     1090                lines         46233    46233                branches       5557     5557              - hits          19211    19208       -3     - misses        25575    25577       +2     - partials       1447     1448       +1```| [impacted files](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&eltree) | coverage δ | complexity δ | ||---|---|---|---|| [java/org/jabref/gui/groups/groupnodeviewmodeljava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9ncm91chmvr3jvdxbob2rlvmlld01vzgvslmphdme) | `6168% <0%> (ø)` | `23 <0> (ø)` | :arrow_down: || [jabref/logic/shared/event/connectionlosteventjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9ldmvudc9db25uzwn0aw9utg9zdev2zw50lmphdme) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | || [bref/logic/remote/server/remotelistenerserverjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3jlbw90zs9zzxj2zxivumvtb3rltglzdgvuzxjtzxj2zxiuamf2yq) | `7096% <0%> (-646%)` | `7% <0%> (ø)` | || [a/org/jabref/logic/shared/postgresqlprocessorjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9qb3n0z3jlu1fmuhjvy2vzc29ylmphdme) | `7959% <0%> (-409%)` | `10% <0%> (ø)` | || [java/org/jabref/logic/shared/dbmssynchronizerjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9eqk1tu3luy2hyb25pemvylmphdme) | `707% <0%> (-192%)` | `39% <0%> (-2%)` | || [in/java/org/jabref/logic/shared/dbmsprocessorjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9eqk1tuhjvy2vzc29ylmphdme) | `8248% <0%> (-17%)` | `46% <0%> (ø)` | || [ef/logic/importer/fetcher/abstractisbnfetcherjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivqwjzdhjhy3rjc2jurmv0y2hlci5qyxzh) | `100% <0%> (+1111%)` | `5% <0%> (+1%)` | :arrow_up: || [org/jabref/logic/importer/fetcher/isbnfetcherjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivsxnibkzldgnozxiuamf2yq) | `8947% <0%> (+3684%)` | `8% <0%> (+1%)` | :arrow_up: || [/logic/importer/fetcher/isbnviaebookdefetcherjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivsxniblzpyuvib29rrgvgzxrjagvylmphdme) | `100% <0%> (+4166%)` | `5% <0%> (+2%)` | :arrow_up: |------[continue to review full report at codecov](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&elcontinue)> **legend** - [click here to learn more](https://docscodecovio/docs/codecov-delta)> `δ  absolute <relative> (impact)` `ø  not affected` `?  missing data`> powered by [codecov](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&elfooter) last update [8dd7444c29db2e](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&ellastupdated) read the [comment docs](https://docscodecovio/docs/pull-request-comments) || i doubt this works  || > i doubt this worksit does at least starting from `gradle run` what are your doubts? || please test also with `/gradlew jlink` it will build the image locally and you can start the batit makes a huge difference if it is packaged together or executed from gradle  || > please test also with `/gradlew jlink` it will build the image locally and you can start the bat> it makes a huge difference if it is packaged together or executed from gradleworks for me /started via jabrefbat) i can set the group icon any other side effects i need to check? || if this works then other cases should also work have you tested saving your bib file with groups and icon and closing and reopening that bib file then?if this works as well it will be good to go || > if this works then other cases should also work> have you tested saving your bib file with groups and icon and closing and reopening that bib file then?> if this works as well it will be good to gosaving and reopening worked || agreed || please also add a changelog  ||
732,6078,6121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,icons from material design icons not recognized fixes #6078related #5245@jabref/developers  2b760cddf53cceae54fd149774226461f5290daa caused this issuehttps://githubcom/jabref/jabref/issues/5245obviously only icons contained inside jabreficons are available nowthe question is - do we really want this feature? not sure if changing the line back to ```        return enumsgetifpresent(materialdesigniconclass iconcodetouppercase(localeenglish))                    tojavautil()                    map(icon -> new internalmaterialdesignicon(getcolor() icon))``` will reintroduce the referenced issue (https://githubcom/jabref/jabref/issues/5245)this feature also only makes sense if we have a dropdown with all available icons inside the new/edit group dialog imho![image](https://user-imagesgithubusercontentcom/2141507/76682572-845c6380-65fd-11ea-9384-8b105d66bd76png) # [codecov](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&elh1) report> merging [#6121](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&eldesc) into [master](https://codecovio/gh/jabref/jabref/commit/8dd744409158a343f2577d416fbbf7b6027b1371?srcpr&eldesc) will **decrease** coverage by `<01%`> the diff coverage is `0%`[![impacted file tree graph](https://codecovio/gh/jabref/jabref/pull/6121/graphs/treesvg?width650&tokengocyt97xqp&height150&srcpr)](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&eltree)```diff@@             coverage diff              @@##             master    #6121      +/-   ##- coverage     4155%   4154%   -001%     - complexity     6878     6879       +1       files          1090     1090                lines         46233    46233                branches       5557     5557              - hits          19211    19208       -3     - misses        25575    25577       +2     - partials       1447     1448       +1```| [impacted files](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&eltree) | coverage δ | complexity δ | ||---|---|---|---|| [java/org/jabref/gui/groups/groupnodeviewmodeljava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9ncm91chmvr3jvdxbob2rlvmlld01vzgvslmphdme) | `6168% <0%> (ø)` | `23 <0> (ø)` | :arrow_down: || [jabref/logic/shared/event/connectionlosteventjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9ldmvudc9db25uzwn0aw9utg9zdev2zw50lmphdme) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | || [bref/logic/remote/server/remotelistenerserverjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3jlbw90zs9zzxj2zxivumvtb3rltglzdgvuzxjtzxj2zxiuamf2yq) | `7096% <0%> (-646%)` | `7% <0%> (ø)` | || [a/org/jabref/logic/shared/postgresqlprocessorjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9qb3n0z3jlu1fmuhjvy2vzc29ylmphdme) | `7959% <0%> (-409%)` | `10% <0%> (ø)` | || [java/org/jabref/logic/shared/dbmssynchronizerjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9eqk1tu3luy2hyb25pemvylmphdme) | `707% <0%> (-192%)` | `39% <0%> (-2%)` | || [in/java/org/jabref/logic/shared/dbmsprocessorjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl3noyxjlzc9eqk1tuhjvy2vzc29ylmphdme) | `8248% <0%> (-17%)` | `46% <0%> (ø)` | || [ef/logic/importer/fetcher/abstractisbnfetcherjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivqwjzdhjhy3rjc2jurmv0y2hlci5qyxzh) | `100% <0%> (+1111%)` | `5% <0%> (+1%)` | :arrow_up: || [org/jabref/logic/importer/fetcher/isbnfetcherjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivsxnibkzldgnozxiuamf2yq) | `8947% <0%> (+3684%)` | `8% <0%> (+1%)` | :arrow_up: || [/logic/importer/fetcher/isbnviaebookdefetcherjava](https://codecovio/gh/jabref/jabref/pull/6121/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2xvz2ljl2ltcg9ydgvyl2zldgnozxivsxniblzpyuvib29rrgvgzxrjagvylmphdme) | `100% <0%> (+4166%)` | `5% <0%> (+2%)` | :arrow_up: |------[continue to review full report at codecov](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&elcontinue)> **legend** - [click here to learn more](https://docscodecovio/docs/codecov-delta)> `δ  absolute <relative> (impact)` `ø  not affected` `?  missing data`> powered by [codecov](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&elfooter) last update [8dd7444c29db2e](https://codecovio/gh/jabref/jabref/pull/6121?srcpr&ellastupdated) read the [comment docs](https://docscodecovio/docs/pull-request-comments) || i doubt this works  || > i doubt this worksit does at least starting from `gradle run` what are your doubts? || please test also with `/gradlew jlink` it will build the image locally and you can start the batit makes a huge difference if it is packaged together or executed from gradle  || > please test also with `/gradlew jlink` it will build the image locally and you can start the bat> it makes a huge difference if it is packaged together or executed from gradleworks for me /started via jabrefbat) i can set the group icon any other side effects i need to check? || if this works then other cases should also work have you tested saving your bib file with groups and icon and closing and reopening that bib file then?if this works as well it will be good to go || > if this works then other cases should also work> have you tested saving your bib file with groups and icon and closing and reopening that bib file then?> if this works as well it will be good to gosaving and reopening worked || agreed || please also add a changelog  ||
733,5529,6130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,small improvements in preferences dialog changes:- reduces the size of the rarely used import/export/show/reset-preferences buttons to icon buttons to free space to display all of the tabs in the list ( fixes #6038 )- the font size is now controlled by a spinner (a text field with arrows on the right side)- the comboboxes now have valuefactories to properly display the real name of the languages the charsets and the bibdatabasemode which incorrectly displayed `biblatex` instead of `biblatex`- some keyboard events are added to the add-textfields in nameformattertab etc to make usage more intuitive- removed obsolete and non functional `open pdf` settings  ( closes #5529 )![preferences_polish](https://user-imagesgithubusercontentcom/50491877/76712228-efe62400-6716-11ea-84ad-9b331ea046a4png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> # [codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elh1) report> :exclamation: no coverage uploaded for pull request base (`master@10f5468`) [click here to learn what that means](https://docscodecovio/docs/error-reference#section-missing-base-commit)> the diff coverage is `408%`[![impacted file tree graph](https://codecovio/gh/jabref/jabref/pull/6130/graphs/treesvg?width650&tokengocyt97xqp&height150&srcpr)](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&eltree)```diff@@            coverage diff            @@##             master    #6130   +/-   ##  coverage          ?   4162%             complexity        ?     6888             files             ?     1090             lines             ?    46233             branches          ?     5554             hits              ?    19243             misses            ?    25547             partials          ?     1443```| [impacted files](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&eltree) | coverage δ | complexity δ | ||---|---|---|---|| [/java/org/jabref/gui/desktop/os/nativedesktopjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl05hdgl2zurlc2t0b3auamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [java/org/jabref/gui/desktop/os/defaultdesktopjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl0rlzmf1bhrezxnrdg9wlmphdme) | `0% <ø> (ø)` | `0 <0> (?)` | || [src/main/java/org/jabref/gui/desktop/os/linuxjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl0xpbnv4lmphdme) | `576% <ø> (ø)` | `3 <0> (?)` | || [g/jabref/gui/preferences/externaltabviewmodeljava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9fehrlcm5hbfrhylzpzxdnb2rlbc5qyxzh) | `0% <ø> (ø)` | `0 <0> (?)` | || [/java/org/jabref/preferences/newlineseparatorjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml3byzwzlcmvuy2vzl05ld0xpbmvtzxbhcmf0b3iuamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [src/main/java/org/jabref/gui/desktop/os/osxjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl09twc5qyxzh) | `0% <ø> (ø)` | `0 <0> (?)` | || [c/main/java/org/jabref/gui/desktop/os/windowsjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl1dpbmrvd3muamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [va/org/jabref/gui/preferences/externaltabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9fehrlcm5hbfrhylzpzxcuamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [/org/jabref/gui/preferences/appearancetabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9bchblyxjhbmnlvgfivmlldy5qyxzh) | `0% <0%> (ø)` | `0 <0> (?)` | || [/org/jabref/gui/preferences/xmpprivacytabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9ybxbqcml2ywn5vgfivmlldy5qyxzh) | `0% <0%> (ø)` | `0 <0> (?)` | ||  and [9 more](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree-more) | |------[continue to review full report at codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elcontinue)> **legend** - [click here to learn more](https://docscodecovio/docs/codecov-delta)> `δ  absolute <relative> (impact)` `ø  not affected` `?  missing data`> powered by [codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elfooter) last update [10f5468c015a82](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&ellastupdated) read the [comment docs](https://docscodecovio/docs/pull-request-comments) || lgtm just one minor issue: its called biblatex (all lowercase not biblatexwe had the confirmation from the official authors that its should be all lowercase  || > lgtm just one minor issue: its called biblatex (all lowercase not biblatex> we had the confirmation from the official authors that its should be all lowercasedoh || could you please fix the checkstyle issue (introduced from another commit but so we can merge)[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/gui/exporter/saveactionjava:14:28: { is not followed by whitespace [whitespacearound] ||
734,6038,6130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,small improvements in preferences dialog changes:- reduces the size of the rarely used import/export/show/reset-preferences buttons to icon buttons to free space to display all of the tabs in the list ( fixes #6038 )- the font size is now controlled by a spinner (a text field with arrows on the right side)- the comboboxes now have valuefactories to properly display the real name of the languages the charsets and the bibdatabasemode which incorrectly displayed `biblatex` instead of `biblatex`- some keyboard events are added to the add-textfields in nameformattertab etc to make usage more intuitive- removed obsolete and non functional `open pdf` settings  ( closes #5529 )![preferences_polish](https://user-imagesgithubusercontentcom/50491877/76712228-efe62400-6716-11ea-84ad-9b331ea046a4png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> # [codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elh1) report> :exclamation: no coverage uploaded for pull request base (`master@10f5468`) [click here to learn what that means](https://docscodecovio/docs/error-reference#section-missing-base-commit)> the diff coverage is `408%`[![impacted file tree graph](https://codecovio/gh/jabref/jabref/pull/6130/graphs/treesvg?width650&tokengocyt97xqp&height150&srcpr)](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&eltree)```diff@@            coverage diff            @@##             master    #6130   +/-   ##  coverage          ?   4162%             complexity        ?     6888             files             ?     1090             lines             ?    46233             branches          ?     5554             hits              ?    19243             misses            ?    25547             partials          ?     1443```| [impacted files](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&eltree) | coverage δ | complexity δ | ||---|---|---|---|| [/java/org/jabref/gui/desktop/os/nativedesktopjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl05hdgl2zurlc2t0b3auamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [java/org/jabref/gui/desktop/os/defaultdesktopjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl0rlzmf1bhrezxnrdg9wlmphdme) | `0% <ø> (ø)` | `0 <0> (?)` | || [src/main/java/org/jabref/gui/desktop/os/linuxjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl0xpbnv4lmphdme) | `576% <ø> (ø)` | `3 <0> (?)` | || [g/jabref/gui/preferences/externaltabviewmodeljava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9fehrlcm5hbfrhylzpzxdnb2rlbc5qyxzh) | `0% <ø> (ø)` | `0 <0> (?)` | || [/java/org/jabref/preferences/newlineseparatorjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml3byzwzlcmvuy2vzl05ld0xpbmvtzxbhcmf0b3iuamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [src/main/java/org/jabref/gui/desktop/os/osxjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl09twc5qyxzh) | `0% <ø> (ø)` | `0 <0> (?)` | || [c/main/java/org/jabref/gui/desktop/os/windowsjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl1dpbmrvd3muamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [va/org/jabref/gui/preferences/externaltabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9fehrlcm5hbfrhylzpzxcuamf2yq) | `0% <ø> (ø)` | `0 <0> (?)` | || [/org/jabref/gui/preferences/appearancetabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9bchblyxjhbmnlvgfivmlldy5qyxzh) | `0% <0%> (ø)` | `0 <0> (?)` | || [/org/jabref/gui/preferences/xmpprivacytabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9ybxbqcml2ywn5vgfivmlldy5qyxzh) | `0% <0%> (ø)` | `0 <0> (?)` | ||  and [9 more](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree-more) | |------[continue to review full report at codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elcontinue)> **legend** - [click here to learn more](https://docscodecovio/docs/codecov-delta)> `δ  absolute <relative> (impact)` `ø  not affected` `?  missing data`> powered by [codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elfooter) last update [10f5468c015a82](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&ellastupdated) read the [comment docs](https://docscodecovio/docs/pull-request-comments) || lgtm just one minor issue: its called biblatex (all lowercase not biblatexwe had the confirmation from the official authors that its should be all lowercase  || > lgtm just one minor issue: its called biblatex (all lowercase not biblatex> we had the confirmation from the official authors that its should be all lowercasedoh || could you please fix the checkstyle issue (introduced from another commit but so we can merge)[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/gui/exporter/saveactionjava:14:28: { is not followed by whitespace [whitespacearound] ||
735,2581,6143,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,add aps fetcher (refactored) fixes #818 part of #2581 follow up from #6026 <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> failing test is not relevant i merge now ||
736,6026,6143,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,add aps fetcher (refactored) fixes #818 part of #2581 follow up from #6026 <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> failing test is not relevant i merge now ||
737,818,6143,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,add aps fetcher (refactored) fixes #818 part of #2581 follow up from #6026 <!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> failing test is not relevant i merge now ||
738,430,6151,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,actionhelper to test for present file this pr fixes koppor#430it took a little bit more refactoring than expected for it does not only check if standardfieldfile has text inside but if the file is also really present in the file system there are some design decisions im unsure of:there is no alert about that no file is really present the menu entry is just disabled although there is a file symbol in the main table (since standardfieldfile is not empty)feedback could be implemented in the files editor in the entry editor as validationthe other thing is that in theory at last the table does not yet automatically update if a file is added or removed (so no file is attached) this would require  probably an array of observables to be used as an invalidation alert im unsure where to start with that however only in theory pracitcally the entry is unselected automatically if i change something about the attached files in the entry editor so nobody would notice if this would not be implemented- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i added some validation the regular validation mechanics of controlsfx seem somewhat broken the icon is shown but behind every other ui element so instead i just marked the background of the cells with files that do not exist in the filesystem in the warning color![grafik](https://user-imagesgithubusercontentcom/50491877/77452088-d1a6b500-6df5-11ea-8ba9-44586dbdd4aepng)theoretically this one is mergable ||
739,4373,6152,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"allow reordering of custom entry types fields additionally restore the old multiline property and make it configurablecurrent status:- adding/removing/reordering works- removing standard entry types has no effect (they are always readded if deleted- sort fields alphabetically? would that effect the order? needs investigation> cannot sort it influences the save order refs #5230 and #4373fixes  #6338<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> linkedhashset is no solution either as the standard fields are always inserted firsttodo check it again || @tobiasdiez i currently have the problems that in my hashmap which contains entry types with their corresponding fields the fields order is not updated if i change them via drag and drop in the main tablethis is logical because the fieldswithtypes  is not an observableany idea how i can do this with some binding foo? can i add some observabelist to that map?https://githubcom/jabref/jabref/pull/6152/files#diff-8313b29670cb7c9bc50c020e1b2b5f17l80-r101 || im not sure what exactly you mean a `map<entrytype observablelist<field>>` does not work? || i tired it but its a bit more complicated i think (or maybe i am thinking too complicated)i would need to bind a listproperty to the values collection of my mapand then i would need to change that listproperty (fieldsfortype) content based on my selected entry types currently i am doing this more or less manually```    private final listproperty<fieldviewmodel> fieldsfortype    private final observablelist<fieldviewmodel> allfieldsfortype  fxcollectionsobservablearraylist(extractor -> new observable[] {extractorfieldname() extractorfieldtype()})      for (bibentrytype entrytype : alltypes) {            list<fieldviewmodel> fields  entrytypegetallfields()stream()map(bibfield -> new fieldviewmodel(bibfieldgetfield() entrytypeisrequired(bibfieldgetfield()) bibfieldgetpriority() entrytype))collect(collectorstolist())            typeswithfieldsput(entrytype fxcollectionsobservablearraylist(fields))        }                thisfieldsfortype  new simplelistproperty<>(allfieldsfortype)        easybindsubscribe(selectedentrytypes type -> {            if (type ! null) {                allfieldsfortypesetall(typeswithfieldsget(type))            }        })``` || i guess the following might work:- create your `map<entrytype observablelist<fields>> entrytypeswithfields` - when the user selects an `entrytype` then set `fieldsfortype` to `entrytypeswithfieldsget(entrytype)` it is important that you set really the observable list and not the contents of the list (ie not `setall`)by the way the whole map construction seems to be overly complicated why not create a `entrytypeviewmodel` that wraps a given entry type and also contains an observable list of fields then you can have a simple observable list of entrytypeviewmodels which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type || @tobiasdiez  sometimes when i go up and down in the dialog and switch between the entry types suddenly the fields are empty any idea what this means or why this occurs?  || the issue with the delete on change is fixednow i think i encountered a bug with the entrytypesmanager parsing if a custom entry type has only required or optional fields (eg one of the fields array is empty) a ""ghost"" bib field is createdneed to invesitgate this ![grafik](https://user-imagesgithubusercontentcom/320228/84420329-2b12c900-ac1a-11ea-938b-4c9fb3a55598png) || todo: 1 modify type article add field langid2 make optional 3 move after number4 save5 reopen dialog> langid field is no longer after number it has moved to a different positionproblem possible: in bibentrytypesmanager```   public sortedset<bibentrytype> getalltypes() {            sortedset<bibentrytype> alltypes  new treeset<>(customormodifiedtype)            alltypesaddall(standardtypes)            return alltypes        }``` || yeah! i found the bug:custom entry types order is now correctly stored and also applied to entry editor!![grafik](https://user-imagesgithubusercontentcom/320228/85931460-d41d1d00-b8c4-11ea-9f22-56a42ee58aadpng) || "
740,6338,6152,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"allow reordering of custom entry types fields additionally restore the old multiline property and make it configurablecurrent status:- adding/removing/reordering works- removing standard entry types has no effect (they are always readded if deleted- sort fields alphabetically? would that effect the order? needs investigation> cannot sort it influences the save order refs #5230 and #4373fixes  #6338<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> linkedhashset is no solution either as the standard fields are always inserted firsttodo check it again || @tobiasdiez i currently have the problems that in my hashmap which contains entry types with their corresponding fields the fields order is not updated if i change them via drag and drop in the main tablethis is logical because the fieldswithtypes  is not an observableany idea how i can do this with some binding foo? can i add some observabelist to that map?https://githubcom/jabref/jabref/pull/6152/files#diff-8313b29670cb7c9bc50c020e1b2b5f17l80-r101 || im not sure what exactly you mean a `map<entrytype observablelist<field>>` does not work? || i tired it but its a bit more complicated i think (or maybe i am thinking too complicated)i would need to bind a listproperty to the values collection of my mapand then i would need to change that listproperty (fieldsfortype) content based on my selected entry types currently i am doing this more or less manually```    private final listproperty<fieldviewmodel> fieldsfortype    private final observablelist<fieldviewmodel> allfieldsfortype  fxcollectionsobservablearraylist(extractor -> new observable[] {extractorfieldname() extractorfieldtype()})      for (bibentrytype entrytype : alltypes) {            list<fieldviewmodel> fields  entrytypegetallfields()stream()map(bibfield -> new fieldviewmodel(bibfieldgetfield() entrytypeisrequired(bibfieldgetfield()) bibfieldgetpriority() entrytype))collect(collectorstolist())            typeswithfieldsput(entrytype fxcollectionsobservablearraylist(fields))        }                thisfieldsfortype  new simplelistproperty<>(allfieldsfortype)        easybindsubscribe(selectedentrytypes type -> {            if (type ! null) {                allfieldsfortypesetall(typeswithfieldsget(type))            }        })``` || i guess the following might work:- create your `map<entrytype observablelist<fields>> entrytypeswithfields` - when the user selects an `entrytype` then set `fieldsfortype` to `entrytypeswithfieldsget(entrytype)` it is important that you set really the observable list and not the contents of the list (ie not `setall`)by the way the whole map construction seems to be overly complicated why not create a `entrytypeviewmodel` that wraps a given entry type and also contains an observable list of fields then you can have a simple observable list of entrytypeviewmodels which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type || @tobiasdiez  sometimes when i go up and down in the dialog and switch between the entry types suddenly the fields are empty any idea what this means or why this occurs?  || the issue with the delete on change is fixednow i think i encountered a bug with the entrytypesmanager parsing if a custom entry type has only required or optional fields (eg one of the fields array is empty) a ""ghost"" bib field is createdneed to invesitgate this ![grafik](https://user-imagesgithubusercontentcom/320228/84420329-2b12c900-ac1a-11ea-938b-4c9fb3a55598png) || todo: 1 modify type article add field langid2 make optional 3 move after number4 save5 reopen dialog> langid field is no longer after number it has moved to a different positionproblem possible: in bibentrytypesmanager```   public sortedset<bibentrytype> getalltypes() {            sortedset<bibentrytype> alltypes  new treeset<>(customormodifiedtype)            alltypesaddall(standardtypes)            return alltypes        }``` || yeah! i found the bug:custom entry types order is now correctly stored and also applied to entry editor!![grafik](https://user-imagesgithubusercontentcom/320228/85931460-d41d1d00-b8c4-11ea-9f22-56a42ee58aadpng) || "
741,6068,6174,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"fix overwritting downloaded files with same name added auto-numbering for downloaded file names which conflict with file names in the current directory #6068 <!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required) > thank you for your contribution> > some nitpick comments inside 😇> > two more things:> > 1 please keep `filenamecleaner` and introduce `filenameuniqueness` reason: there is no shared code between the two utility methods (no [cohesion](https://enwikipediaorg/wiki/cohesion_(computer_science)) in the sence of data only in the sense of the general setting) small classes make it easier to maintain them> 2 can you try to include a check of `filesmismatch` (see https://stackoverflowcom/a/56680991/873282 for details) at download -> before the same file is linked just do not link it instead of creating ` (1)pdf`i think our problem is that different files are getting downloaded as ""defaultpdf"" (when no bibtex key exists)if we use `filesmismatch` (as you mentioned in number 2 above) since both paths refer to same file path it would return a `match` and hence not download the other files (which we do not want i guess ?)  || > > 2 can you try to include a check of `filesmismatch` (see [stackoverflowcom/a/56680991/873282](https://stackoverflowcom/a/56680991/873282) for details) at download -> before the same file is linked just do not link it instead of creating ` (1)pdf`> i think our problem is that different files are getting downloaded as ""defaultpdf"" (when no bibtex key exists)yeah> if we use `filesmismatch` (as you mentioned in number 2 above) since both paths refer to same file path it would return a `match` and hence not download the other files (which we do not want i guess ?)long solution would be:1 `defaultpdf` exists2 download as `default (1)pdf`3 store it in the linked files4 check if `defaultpdf` equals `default (1)pdf`5 if `defaultpdf` equals `default (1)pdf` then a) remote `default (1)pdf` from the file system b) remove `default (1)pdf` from the list of linked files c) add a notification that the file already existsi thought that one can omit step 3 - step 5c is necessary in all casesi see that this is not strongly part of your pr so can be left for future work**submitted as https://githubcom/jabref/jabref/issues/6197** || comments addressed there are some code style issues which i will quickly fix in `master` after merge || thank you for having kept up the work looking forward to more contributions! || "
742,6178,6179,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"truncates the link and/or the link description in the column ""linked files"" in main table if too long references: #6178- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> thanks for your pr as this is a display issue i would prefer if this could be fixed on the gui side (ie no changes in the `logic` package) one option would be to use the built-in javafx facilities and put the text in a `labeled` control and use the textoverrun https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/labeledhtml#textoverrunproperty || the first argument in the constructor of the java-fx `menuitem` requires a string:https://githubcom/jabref/jabref/blob/efe1b2e246748ec36b5991e6d972d9cac09e355c/src/main/java/org/jabref/gui/maintable/maintablecolumnfactoryjava#l401so unfortunately my hands are tied here || you can set the text overrun property also on the menu item: https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/labeledhtml#textoverrunproperty || i could not find out a way how to adapt it using the `menuitem` (both links redirect to the same web page) suggestions are welcome || the `labeled` is part of the `menuitem` and thus cannot be accessed directly from code however its possible to use css similar to here: https://stackoverflowcom/questions/44087291/how-to-set-context-menu-width-to-match-choice-box || not all works as preferred but at least it is better than without it `-fx-pref-width` makes the item bigger as needed (but at least it works) `-fx-max-width` and `-fx-text-overrun: center-ellipses` would be preferred but it does not work `-fx-wrap-text: true` does not work either its slightly frustrating since it should have been a quick fix feel free to suggest any solution || for me adding```menu-item > label {    -fx-pref-width: 100px}```in `basecss` worked (this of course has to be further specialized as this changes every menu item)![image](https://user-imagesgithubusercontentcom/5037600/79000550-231ca700-7b4d-11ea-9ea4-8dc075e880bbpng) || `-fx-pref-width` already works the way it is implemented so far in my opinion 100px is too small because hardly anything can be read in the combination with description and url this gets even worse furthermore this `overrunstylecenter_ellipsis` thingy (or any other customized `overrunstyle`) does not work as expected i personally prefer my initial commit where both the description and the url get centered ellipsis (since this shows the relevant parts in a perfect way) and the context menus width is only as big as needed but limited as well thus this is what i currently use for my local jabref version^^ how about moving the truncation code from the first commit to the location where there is now this `-fx-pref-width`? || i agree `100px` is too small i just wanted to show you how pref-width + ellipses do work truncating the link and the description separately is indeed a good suggestion should be able by putting them in separate labels (with pref width + elipse overflow)  || @systemoperator ping 😇  || the current implementation has the following flaws:- opening the context menu where several files/links are associated: even if the texts are very short the width of the context menu has the defined max width `-fx-max-width` does not work at all so `-fx-pref-width` has been used but it always sets the context menu to the defined max width (and wrapping the text does not work either)  - preference: the context menu should only be as big as needed (otherwise its irritating and disturbing) i have tried to fix it but i did not succeed it seems to be a bug- if the text in the context menu exceeds the defined max width then it currently gets truncated at the end of the text with (right) ellipses ("""") even though i have declared that centered ellipses (`-fx-text-overrun: center-ellipses`) should be used probably this is another bug  - preference:    - centered ellipses should be shown:      - `descriptive text of the file (/dfdfdf/asdas/filehtml)`    - if this works another improvement would be using centered ellipses for both the descriptive text and for the path/link:      - `descriptive  file (https://wwwyzd//filehtml)`my initial commit truncated the text itself and added centered ellipses which would eliminate the aforementioned second flaw furthermore there was no need to define a max width since the text was truncated and thus also the context menu itself did not exceed a specific width and was only as wide as required by the text as a result it would have eliminated all flaws mentioned aboveconsidering all the issues concerning the java-fx components i would tend to a solution which simply truncates the texts itself (as already suggested in earlier comments above) this is what i currently use for my local jabref instance || okay youve convinced me its a bit unfortunate that there is no css-based fix because i really think that truncating should be handled by the javafx controls but well if its not possible then yeahso im fine with changing the display text itself as it was done in one of your earliest commits please add a helper method to `controlhelper` https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/util/controlhelperjava that does the actually truncation and can be reused a bit similar to https://githubcom/openjdk/jfx/blob/7b0619004af2e2d1b1a32084ef92ff5cd3880900/modules/javafxcontrols/src/main/java/com/sun/javafx/scene/control/skin/utilsjava#l218 which might also be helpful for the implementation thanks! || @tobiasdiez what do you think about it? || merging now thank you very much || "
743,6049,6184,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"include ""append"" functionality in the ""import entries dialog"" needs testing @stefan-kolb maybe? 😇 fixes #6049co-authored-by: christoph <siedlerkiller@gmailcom>co-authored-by: tobias diez <tobiasdiez@gmxde>co-authored-by: carl christian snethlage <50491877+calixtus@usersnoreplygithubcom>  "
744,607,6203,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add tooltips for all entry types for #6074 the pull request refers to issue #6074 by @systemoperator change: add tooltips in the ""select entry type"" dialog you can see the tooltip when hovering a button of an entry typeremaining: add those tooltips in the left side of the entry editor and in the main table when clicking ""change entry type""fixes #6074 still havent figured it out yet how to implement the remaining stuff so any help would be much appreciated!and please let me know what you think of my implementation so far! @dimitra-karadima right clicking an entry in the main table callshttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l50which further callshttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l57-l58 || @siedlerchr i have noticed that the entry types `patent` and `periodical` as well as the type alias `electronic` do not exist in `standardentrytypejava` but `suppperiodical` exists and other type aliases as well (acutally all other types except those three exist) is there a special reason for that? || > > > @siedlerchr i have noticed that the entry types `patent` and `periodical` as well as the type alias `electronic` do not exist in `standardentrytypejava` but `suppperiodical` exists and other type aliases as well (acutally all other types except those three exist) is there a special reason for that?some of those types eg patent were from the ieetran package but are now also in the official biblatex package i dont know if those package is still in use but i guess it was just historical reasons why they are there maybe @koppor  can enlighten ushttps://ctanorg/pkg/ieeetran?langde || > @systemoperator check my latest commit! and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! i am new to the project and open source in general so i am a little bit lost!@dimitra-karadima you can add the tooltips by adapting the methodhttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l33-l42to something like the following minimal working example:```java    public static menuitem createmenuitem(entrytype type bibentry entry undomanager undomanager) {        custommenuitem menuitem  new custommenuitem(new label(typegetdisplayname()))        menuitemsetonaction(event -> {            namedcompound compound  new namedcompound(localizationlang(""change entry type""))            entrysettype(type)                 ifpresent(change -> compoundaddedit(new undoablechangetype(change)))            undomanageraddedit(compound)        })        tooltip tooltip  new tooltip(""descriptional tooltip"")        tooltipinstall(menuitemgetcontent() tooltip)        return menuitem    }```so you basically replace `menuitem` with `custommenuitem` and configure it as shown abovethe good thing is that this will set the tooltips for both pending cases:- when changing the entry type in the entry editor (left side of the entry editor)- when right clicking a reference in the main table and clicking `change entry type`:smile: || > > > > @systemoperator check my latest commit! and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! i am new to the project and open source in general so i am a little bit lost!> > @dimitra-karadima you can add the tooltips by adapting the method> > https://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l33-l42> > to something like the following minimal working example:> > ```java>     public static menuitem createmenuitem(entrytype type bibentry entry undomanager undomanager) {>         custommenuitem menuitem  new custommenuitem(new label(typegetdisplayname()))>         menuitemsetonaction(event -> {>             namedcompound compound  new namedcompound(localizationlang(""change entry type""))>             entrysettype(type)>                  ifpresent(change -> compoundaddedit(new undoablechangetype(change)))>             undomanageraddedit(compound)>         })>         tooltip tooltip  new tooltip(""descriptional tooltip"")>         tooltipinstall(menuitemgetcontent() tooltip)>         return menuitem>     }> ```> > so you basically replace `menuitem` with `custommenuitem` and configure it as shown above> > the good thing is that this will set the tooltips for both pending cases:> >     * when changing the entry type in the entry editor (left side of the entry editor)> >     * when right clicking a reference in the main table and clicking `change entry type`> > > 😄@systemoperator thanks for your help! i have added the tooltips and in the change entry type please take a look and let me know what you think! || @dimitra-karadima i wanted to merge but some tests are still failing can you please have a look at them thanks! || > > > @dimitra-karadima i wanted to merge but some tests are still failing can you please have a look at them thanks!@tobiasdiez i tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks if you could help me in any way would be much appreciated! || @dimitra-karadima try to merge in the latest upstream/master branch in your branch taht shoudl resolve most problems || > > > @dimitra-karadima try to merge in the latest upstream/master branch in your branch taht shoudl resolve most problems@siedlerchr thanks for your input but unfortunately it didnt work i dont know what to do because my master branch also fails these tests is it possible that i have done any mistake while building the project in eclipse? || hm this is odd  i will test it locally || @dimitra-karadima  the issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example) i merged your pr and updated the config to exclude your file || > > > @dimitra-karadima the issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example) i merged your pr and updated the config to exclude your file@siedlerchr thank you so much for your help! || "
745,6074,6203,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add tooltips for all entry types for #6074 the pull request refers to issue #6074 by @systemoperator change: add tooltips in the ""select entry type"" dialog you can see the tooltip when hovering a button of an entry typeremaining: add those tooltips in the left side of the entry editor and in the main table when clicking ""change entry type""fixes #6074 still havent figured it out yet how to implement the remaining stuff so any help would be much appreciated!and please let me know what you think of my implementation so far! @dimitra-karadima right clicking an entry in the main table callshttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l50which further callshttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l57-l58 || @siedlerchr i have noticed that the entry types `patent` and `periodical` as well as the type alias `electronic` do not exist in `standardentrytypejava` but `suppperiodical` exists and other type aliases as well (acutally all other types except those three exist) is there a special reason for that? || > > > @siedlerchr i have noticed that the entry types `patent` and `periodical` as well as the type alias `electronic` do not exist in `standardentrytypejava` but `suppperiodical` exists and other type aliases as well (acutally all other types except those three exist) is there a special reason for that?some of those types eg patent were from the ieetran package but are now also in the official biblatex package i dont know if those package is still in use but i guess it was just historical reasons why they are there maybe @koppor  can enlighten ushttps://ctanorg/pkg/ieeetran?langde || > @systemoperator check my latest commit! and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! i am new to the project and open source in general so i am a little bit lost!@dimitra-karadima you can add the tooltips by adapting the methodhttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l33-l42to something like the following minimal working example:```java    public static menuitem createmenuitem(entrytype type bibentry entry undomanager undomanager) {        custommenuitem menuitem  new custommenuitem(new label(typegetdisplayname()))        menuitemsetonaction(event -> {            namedcompound compound  new namedcompound(localizationlang(""change entry type""))            entrysettype(type)                 ifpresent(change -> compoundaddedit(new undoablechangetype(change)))            undomanageraddedit(compound)        })        tooltip tooltip  new tooltip(""descriptional tooltip"")        tooltipinstall(menuitemgetcontent() tooltip)        return menuitem    }```so you basically replace `menuitem` with `custommenuitem` and configure it as shown abovethe good thing is that this will set the tooltips for both pending cases:- when changing the entry type in the entry editor (left side of the entry editor)- when right clicking a reference in the main table and clicking `change entry type`:smile: || > > > > @systemoperator check my latest commit! and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! i am new to the project and open source in general so i am a little bit lost!> > @dimitra-karadima you can add the tooltips by adapting the method> > https://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l33-l42> > to something like the following minimal working example:> > ```java>     public static menuitem createmenuitem(entrytype type bibentry entry undomanager undomanager) {>         custommenuitem menuitem  new custommenuitem(new label(typegetdisplayname()))>         menuitemsetonaction(event -> {>             namedcompound compound  new namedcompound(localizationlang(""change entry type""))>             entrysettype(type)>                  ifpresent(change -> compoundaddedit(new undoablechangetype(change)))>             undomanageraddedit(compound)>         })>         tooltip tooltip  new tooltip(""descriptional tooltip"")>         tooltipinstall(menuitemgetcontent() tooltip)>         return menuitem>     }> ```> > so you basically replace `menuitem` with `custommenuitem` and configure it as shown above> > the good thing is that this will set the tooltips for both pending cases:> >     * when changing the entry type in the entry editor (left side of the entry editor)> >     * when right clicking a reference in the main table and clicking `change entry type`> > > 😄@systemoperator thanks for your help! i have added the tooltips and in the change entry type please take a look and let me know what you think! || @dimitra-karadima i wanted to merge but some tests are still failing can you please have a look at them thanks! || > > > @dimitra-karadima i wanted to merge but some tests are still failing can you please have a look at them thanks!@tobiasdiez i tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks if you could help me in any way would be much appreciated! || @dimitra-karadima try to merge in the latest upstream/master branch in your branch taht shoudl resolve most problems || > > > @dimitra-karadima try to merge in the latest upstream/master branch in your branch taht shoudl resolve most problems@siedlerchr thanks for your input but unfortunately it didnt work i dont know what to do because my master branch also fails these tests is it possible that i have done any mistake while building the project in eclipse? || hm this is odd  i will test it locally || @dimitra-karadima  the issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example) i merged your pr and updated the config to exclude your file || > > > @dimitra-karadima the issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example) i merged your pr and updated the config to exclude your file@siedlerchr thank you so much for your help! || "
746,6194,6232,1,0,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,1,0,0,0,1,0,"allow basic markup syntax custom previews add markdownformatter using https://githubcom/vsch/flexmark-java/ to format markdownto configure markdown in custom previews add the ""markdown"" formattermarkdown is enabled by default for the comment field as requested in https://githubcom/jabref/jabref/issues/6194fixes #6194 ![image](https://user-imagesgithubusercontentcom/11259344/78190391-35735280-7474-11ea-9f40-7a2191d082d4png)- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> needed to merge `master` to sync the pr with your state @alexandergirgis refs https://twittercom/githubstatus/status/1245817118542553089could you fix checkstyle? ||"
747,6042,6233,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add disable/enable calculation of items in group fixes #6042 this is my first pull request to a project (new java developer) **add:** disable/enable calculation of items in groupi realized that groupnodeviewmodeljava class uses method ""calculatenumberofmatches"" to get number of items looks like it uploads full database from disk every time you need to calculate no of items in group therefore if you have 1 thousand groups it will read the entire database 1 thousand times ui changes:- added new checkbox in preferences/groups - ""display quantity of items in group""- added new property display_group_quantity to jabrefpreferencesjava file- connected new checkbox with jabrefpreferencesjava i used another preferences as a samplelogic changes:- i added link to jabrefpreferences in grouptreeview class if user wants to display groups quantity a panel with quantity will be shown quantity is calculated when groupnodeviewmodel class is initialized so i decided to wrap a panel into an ""if"" statementtests passed  thanks for your contribution and thanks for investigating:>looks like it uploads full database from disk every time you need to calculate no of items in group therefore if you have 1 thousand groups it will read the entire database 1 thousand timescould you add some details on this problem so maybe we are able to fix the underlying issue as well || good dayi was working on this issue: [https://githubcom/jabref/jabref/issues/6042](url)it says jabref starts slowly if you have a lot of groups proposed improvement: disable calculation of items quantity in groupkind regardsgennadiy || oh i was a bit quick with merging just saw that the code only influences the display of the hit number but the cost intensive process is the actual calculation of this number which still happenscould you please open a follow-up pr which makes sure that the calculation is also not done thankshttps://githubcom/jabref/jabref/blob/b5d5ed00e075e66fcbd34a1ac0cac37d1ee7d9ce/src/main/java/org/jabref/gui/groups/groupnodeviewmodeljava#l228-l236 || hisorry my bad i saw this last week and forgot today in the morning would you mind if i add preferencesservice to groupnodeviewmodel?`@inject private preferencesservice preferencesservice`in this case my ""if"" statement goes from grouptreeview to groupnodeviewmodel (calculatenumberofmatches() method) like this: ```    private void calculatenumberofmatches() {        // we calculate the new hit value        // we could be more intelligent and try to figure out the new number of hits based on the entry change        // for example a previously matched entry gets removed -> hits  hits - 1        if (preferencesservicegetdisplaygroupcount()) {            backgroundtask                    wrap(() -> groupnodecalculatenumberofmatches(databasecontextgetdatabase()))                    onsuccess(hits::setvalue)                    executewith(taskexecutor)        }    }```ok? || we can also remove calculatenumberofmatches() from groupnodeviewmodel constructor and have 2 options:option no 1- insert calculatenumberofmatches() into gethits() method before returning a value to grouptreeviewoptions no 2- create a public method gethitsfromdatabase() (having calculatenumberofmatches inside) and call it from grouptreeview before calling gethits() but only if count of if tems in groups is enabled || i think the solution you proposed in https://githubcom/jabref/jabref/pull/6233#issuecomment-609422615 is perfect! || "
748,620,6240,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,add simple unit tests for #6207 i have split some unit tests into different methods with only one assert statement@koppor  please let me know what you think about my additions so far!- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> i would split it even further create a separate class for each integritychecktest (eg one class for edition one for author ) as we also have a different class for each integrity check || hi @dimitra-karadima  thanks for you effort writing unit tests is sometimes boring but can also be very educational thank you very muchalso i wanted to ask you to keep the checkboxes in the pr description as they are always useful to us to get a quick overview to which extent a pr is done even if only one checkbox makes sense in a pri took the liberty to readd them by myself || > > > hi @dimitra-karadima  thanks for you effort writing unit tests is sometimes boring but can also be very educational thank you very much> also i wanted to ask you to keep the checkboxes in the pr description as they are always useful to us to get a quick overview to which extent a pr is done even if only one checkbox makes sense in a pr> i took the liberty to readd them by myselfthanks for your input! i will keep it in mind for the upcoming prs! || @dimitra-karadima did you already found the time to address the comments above? || > > > @dimitra-karadima did you already found the time to address the comments above?@tobiasdiez sorry i was a little bit busy but until sunday i will commit my new changes! || > > > @dimitra-karadima did you already found the time to address the comments above?@tobiasdiez  what do you think about my latest commit? || looks got o me please resolve the conflicts at `integritychecktestjava` || > > > looks got o me please resolve the conflicts at `integritychecktestjava`@koppor i fixed it! || @dimitra-karadima thank you for continuing to work on it it would be very nice if you looked at our automated tests the **checkstyle** is failing:![grafik](https://user-imagesgithubusercontentcom/1366654/81454537-def0e680-918c-11ea-974c-9afd11a22bbepng)you can avoid the unused imports if you *format* the file please ensure that you have the jabref code style active in intellij see https://devdocsjabreforg/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#using-jabrefs-code-style for details || had to retrigger the build workflows as they were not executed correctly checkstyle still fails:![grafik](https://user-imagesgithubusercontentcom/1366654/81596615-acc9c980-93c4-11ea-991d-6a3e58d62ca4png)@dimitra-karadima you can execute the checkstyle checks locally either in the ide or using `gradlew checkstylemain` || thank you for the follow up - i merged it as a single commit into a local branch in this repository i will address the minor comments for myself there  ||
749,6170,6242,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix storing of custom jstyles fixes #6170rename method for internalstyle<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
750,5740,6248,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,number of items found in importentriesdialog this pr finishes the abandoned pr from cloudfenrir (closes #5740)![grafik](https://user-imagesgithubusercontentcom/50491877/78508642-ab373100-7788-11ea-951e-27c1687aeb80png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
751,6229,6258,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,"fix inspire fetcher use application/x-bibtex headerfixes #6229<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
752,6169,6264,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,"showing correct icon on main table linked files column <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6169 hello i have fixed the bugs that appear in the icon of the linked file column i create a draft pull request if there are breaking any contribution rules please let me know if everything is ok i will create a pull request then i have tested to import some format of doc just a simple test of docx pptx and pdf format files![image](https://user-imagesgithubusercontentcom/31007740/78802067-f30bc180-79ef-11ea-87bc-d6859b2c77b4png)about the source code i have a question: i found the wrong icon still shows in the general -> files list which only shows pdf icon no matter what format of files attached then i found orgjabrefguifieldeditorslinkedfileviewmodel#gettypeicon() which directly indicate the icon to pdf which seems like the source of the bug there is a todo comment above which seems like this bug has already discovered then i went through the issue list and tried to find some relevant thing to this bug (todo) but nothing found i would be happy if you can provide more info about it thanks ^_^![image](https://user-imagesgithubusercontentcom/31007740/78802219-28181400-79f0-11ea-8ca8-c025b8515d8bpng)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your instructions! im not very familiar with the code in fact really appreciate that you can indicate the source of the problem i will try again for the addition bug (i think) i will try to work on it and thanks for your tips || nice to hear! you can also reuse this pr if you want (just push your updates to the same branch)  || please be aware that a ""linkedfile"" can also be a http url or link i dont know if this is actually considered in the file type || ok i will reuse this pr next time i want to commit some code@siedlerchr thanks for your additional tips which i have not considered yet i will review the source code carefully || <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6169 and finish the todo additional feature which has mentioned beforehello i have fixed the bugs that appear in the icon of the linked file column and finish the additional feature i create a draft pull request if there are breaking any contribution rules please let me know if everything is ok i will create a pull request then i have tested to import some format of doc just a simple test of docx pptx and pdf format files![image](https://user-imagesgithubusercontentcom/31007740/78802067-f30bc180-79ef-11ea-87bc-d6859b2c77b4png)![image](https://user-imagesgithubusercontentcom/31007740/79324610-707c8800-7f42-11ea-8153-e9bca13888d5png)for the bugs i found that is coming from the wrong filter i think it should be a mistakefor the additional features i was using the same method in: https://githubcom/jabref/jabref/blob/8968ccfd5d39d66a080ef0b6c6bbd4e8b0a7d543/src/main/java/org/jabref/gui/maintable/maintablecolumnfactoryjava#l412-l416i think the modification wont do any harm to other code<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository || i have finished the changing of changelogmd and the deletion of todo comments thanks for your instructions! @tobiasdiez @siedlerchr  || perfect! thanks again for your contribution and hope to see the next pr from you soon! || > perfect! thanks again for your contribution and hope to see the next pr from you soon!im searching for our next target issue ^_^ || "
753,6266,6269,1,0,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,1,0,0,0,1,0,"fix import into current library issuing wrong message this change fixes #6266 in which an erroneous message ""import canceled"" is displayed when importing into the current library this fix was accomplished by modifying the parameter of the extends clause of the importentriesdialog class to have a return type of boolean rather than void and making setresultconverter return false rather than null<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository welcome to jabref and thanks for your contribution! can you please describe how your changes fix #6266? i couldnt find the place where the return value of the dialog was used || hello since this issue is a duplicate of #4841 i followed the comments on that issue and implemented [your possible solution](https://githubcom/jabref/jabref/issues/4841#issuecomment-486271379) which resolved the issue to be honest i do not know exactly how this fixed the issue || i have pushed a commit fixing the indentation and fixing the problem in the findunlinkedfilesdialog || thanks again for your contribution! 👍 we hope you are interested in contributing further ) || youre welcome! this was fun i hope to contribute further as well ||"
754,6065,6272,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"ris import takes the wrong date and duplicates abstract fixes #6065 1 fixed an issue with ""duplicate values in abstract field2 checked code and couldnt reproduce second error: ""publication date is taken from the y2 field not from the correct y1""see lines 207-220 of `risimporterjava` it works fine and importing publication date as expected tested on file from @crystalfp (see file attached to issue)kind regardsgennadiy- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository ok will do || thanks! ||"
755,5737,6287,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,ui consistency - bibtexstringeditordialog rework follow up to #5737  took me only about four and a half months to figure that out thanks @tobiasdiez 😜 : nodelookup did not work as the textfield node was not present at the time a edit cell was createdgood news is: i found a way to bypass the restrictions of the private textfield variable bad news is its a bit of a hack but hopefully somewhat leightweight~also changes in tables should now be commited if the focus is lost~ temporarily removed again since there are deeper issues with the cellfactoryim still working on some minor issues especially the validation in tablecells is completly dysfunctional![grafik](https://user-imagesgithubusercontentcom/50491877/79221111-85c7b880-7e55-11ea-87f2-e3a8e7545c86png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository finally most of the dialog works but i had several problems with listening to the focus lost eventthis revealed some deeper issue with the cellfactory i have been investigating the last few daysthere was a very strange issue with the cells: editing worked only on the first item and on the fifth and so on in case a listener is registered with the tablecell at first i was not able to understand the issue so i decided to work on the validation in the meantime since the controlsfx-validation decoration did not work too (the icon was b/w and hidden behind the border of the cell i chose to highlight the whole cell instead by a pseudo class as we did in #6151)  this led me finally to understand the direction where the issue with the first and the fifth row came from probably jabref is reusing nodes again to create tablerows a picture is better than a thousand words:![grafik](https://user-imagesgithubusercontentcom/50491877/79954224-53354580-847d-11ea-9aad-05731fb34316png)there seems to be something wrong with the cellfactory i tried to understand the issue but had no success yet so i could use some advise maybe @tobiasdiez can help me here since he was able to solve a similar problem with the listcellfactory in #5454 (i tried his solution here did i do something wrong?) || this should now be somewhat ready for reviewthis should already an improvement to the earlier version of this dialog auto edit works etc but due to a bug in javafx commit on focus lost is not working a workaround i tried produces only more problems this seems to be a known issue but there is no progress in fixing it since 2017 ( https://bugsopenjdkjavanet/browse/jdk-8089514 )so ill leave it at this point i believe the dialog is better then before although it is not perfect ||
756,6237,6289,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,fix xmpexportertest hotfix for xmpexportertest not workingas soon as pr goes through i will mergefollow up on code-quality will be done at #6237the issue was introduced during removing of `@deprected` method in #6283  
757,6285,6290,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fix selecting custom export for copy to clipboard with uppercase file ext fixes #6285<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
758,4373,6315,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,0,1,0,"make wrap fields also visible in entry editor fixes #4373i simple reused the fieldformatterpreferences wrapfieldlist more like a hackthe original multiline property got removed in #5230a more elegant solution would be to maybe add this to the custom entry types dialog?<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i would leave a proper implementation for the future this depends also a bit on #6152  || pinghow do we proceed here? || i m merge this now and will work on a more clean solution ||"
759,6286,6345,1,0,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,0,0,1,0,fix export to clipboard dialog icon fixes #6286 ![image](https://user-imagesgithubusercontentcom/34676841/80279600-1d9f8f00-86ff-11ea-8067-5f7cb22265e4png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository could you please also add a changelog entry?  || entry added ||
760,5522,6368,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix various dark theme issues related issues: #5522  #5699 - [x] dragndrop text![image](https://user-imagesgithubusercontentcom/34676841/80455105-72275200-892b-11ea-92d5-a8a60c088b20png)- [x] dialogs![image](https://user-imagesgithubusercontentcom/34676841/80455194-9f740000-892b-11ea-8beb-06059c51ee7bpng)![image](https://user-imagesgithubusercontentcom/34676841/80455257-b6b2ed80-892b-11ea-843c-a1caa061e781png)![image](https://user-imagesgithubusercontentcom/34676841/80455353-dcd88d80-892b-11ea-95b6-513272c9530epng)the issue is that i dont find the dialogs graphics (eg the confirmation image) adequate so maybe create custom ones for the dark theme (or remove them)?- [x] scroll panethe scroll pane is quite visible (at least on my side) so i dont know if that issue has been considered as resolved or not?![image](https://user-imagesgithubusercontentcom/34676841/80455595-596b6c00-892c-11ea-8280-945f800426b8png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository changes regarding the scroll bar:![image](https://user-imagesgithubusercontentcom/34676841/80480932-d0672b80-8951-11ea-93e2-dd1c155db64bpng)on hover:![image](https://user-imagesgithubusercontentcom/34676841/80480942-d52bdf80-8951-11ea-9b2c-f4abe967501bpng) || perfect thank you again! ||
761,5699,6368,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix various dark theme issues related issues: #5522  #5699 - [x] dragndrop text![image](https://user-imagesgithubusercontentcom/34676841/80455105-72275200-892b-11ea-92d5-a8a60c088b20png)- [x] dialogs![image](https://user-imagesgithubusercontentcom/34676841/80455194-9f740000-892b-11ea-8beb-06059c51ee7bpng)![image](https://user-imagesgithubusercontentcom/34676841/80455257-b6b2ed80-892b-11ea-843c-a1caa061e781png)![image](https://user-imagesgithubusercontentcom/34676841/80455353-dcd88d80-892b-11ea-95b6-513272c9530epng)the issue is that i dont find the dialogs graphics (eg the confirmation image) adequate so maybe create custom ones for the dark theme (or remove them)?- [x] scroll panethe scroll pane is quite visible (at least on my side) so i dont know if that issue has been considered as resolved or not?![image](https://user-imagesgithubusercontentcom/34676841/80455595-596b6c00-892c-11ea-8280-945f800426b8png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository changes regarding the scroll bar:![image](https://user-imagesgithubusercontentcom/34676841/80480932-d0672b80-8951-11ea-93e2-dd1c155db64bpng)on hover:![image](https://user-imagesgithubusercontentcom/34676841/80480942-d52bdf80-8951-11ea-9b2c-f4abe967501bpng) || perfect thank you again! ||
762,6370,6371,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,disable the generate button if the id field is empty fixes #6370 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks looks good to me!ps: if you write `fixes #12345`  in the body (fixes followed by issue nunber without the code tags) github will close the issue automatically on merge || thanks again for your contribution! ||
763,6357,6377,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fixes #6357: file directory bug was introduced in https://githubcom/jabref/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3 sorry @calixtus for suspecting you 👼also a bit of code cleanup is included for example i tried to minimize using strings and favored `path`s instead<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > sorry @calixtus for suspecting you 👼forgiven and forgotten you owe me one 😉  || thanks for the quick reviews! ||"
764,6091,6379,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,fix library sort order get lost this pr fixes #6091co-authored-by: heriniaina randrianasolo <hjsrandrianasolo@gmailcom>co-authored-by: omar tachour <omartchr@hotmailcom>co-authored-by: sadji micipsa <micipsasadji@gmailcom>this error is due to the absence of an object equality test for the saveinspecifiedorder attribute so we have  handled this error by correcting the equals function in the saveorderconfig class - [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository your changes look good to me but im currently trying to understand why this fixes the error could you please explain that in a bit more detail?  || @hrandrianasolo i tested your changes and they dont seem to make a difference so could you please explain it || hi @siedlerchrwe apologize for the delay i am the colleague of @hrandrianasolo the bug correction works very well on a version which is not up to datewe have well compiled and executed the modified code and we found that the bug is corrected there i am trying to test it on the new versionregarding the explanation the configuration of the export sort order is represented by the class saveorderconfig in librarypropertiesdialogview there are two objects of type saveorderconfig:→ oldsaveorderconfig: represents the old configuration→ newsaveorderconfig: represents the new configurationwe compare the equality of its last two to see if a change has been made or not after several tests we realized that the equals function in saveorderconfig did not take into account the equality of all attributes || hi @siedlerchr i inform you that i tried our correction on todays version it also worked !! || hi everyone sorry for the delay as my colleague explained above regarding the explanation of the fix i put here screenshots of the bug fix instead of the screen recorder because i cant put it in the comments![sélection_054](https://user-imagesgithubusercontentcom/38815271/81502413-1de28180-92de-11ea-8729-6b1af36f1f6fpng)![sélection_055](https://user-imagesgithubusercontentcom/38815271/81502415-1e7b1800-92de-11ea-8669-3dcd8df30402png)![sélection_056](https://user-imagesgithubusercontentcom/38815271/81502416-1f13ae80-92de-11ea-9413-3482dcf1a92bpng) || thanks for the explanation lgtm  || we merge to get things moving forwardwe will add the `changelogmd` change by ourselves ||
765,5662,6381,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,1,0,added a download checkbox to the import dialog when importing entries users now have a checkbox available to downloadfiles linked via urli am not a gui expert and am wondering whether my fix is appropriate and is considered clean in the mvc-concept since the functionality was already implemented in the linkedfileviewmodel i just created an instance and let it handle the download is that ok? if not copying the code over (and resolving some dependencies) would be the easiest but also the dirtiest solution to this problem is there an appropriate place the code in linkedfileviewmodel could be moved so it is callable in importentriesviewmodel?fixes #5662![image](https://user-imagesgithubusercontentcom/10479048/80735472-04d51600-8b11-11ea-9d20-969e8d1dd974png)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your contribution! looks good already! i think your approach is the best solution there are multiple pieces in the code which create the linkedfileviewmodel so its totally fineif you want to learn more about the gui principle mvvm https://devdocsjabreforg/readings-on-coding/javafxif you want to make it persistent i think an option in the preferences is fine maybe add to the file tab?  then you could add it as part of the filepreferences || please do not add the translations here directly they are managed via https://crowdincom/project/jabref and will be overwritten if you modify them here || hi thanks for the fast reply so i should add the english file and leave the others be? || > thanks for your contribution! looks good already! i think your approach is the best solution there are multiple pieces in the code which create the linkedfileviewmodel so its totally fine> > if you want to learn more about the gui principle mvvm https://devdocsjabreforg/readings-on-coding/javafx> if you want to make it persistent i think an option in the preferences is fine maybe add to the file tab? then you could add it as part of the filepreferencesi think the import tab would be more appropriate dont you think? || just add it where it suits best )  || i went with filepreferences after all as the other settings of the importtab are stored there as wellone last thing that bugs me: after downloading the file it is put after the online link so when i click on the entry it still opens the online link i think it would make sense to reverse that order dont you think?i plan on reversing it in any case and giving the user the option (in the preferences only not on each import) to remove the online link in case a file was successfully downloaded || @btut  yes that sounds like a good idea but i am not sure if  removing the online link at all is a good idea there might be cases where its useful to keep it maybe when you share the bib file and the other user does not have downloaded the pdf yet  just put the pdf in front of the link  || @siedlerchr exactly thats why i would have that functionality configurable in preferences (and off by default) || okay that sounds reasonable  || i noticed that jabref was opening the online link by default not because the file was second in the list but because it was never actually linked to the entry i did that and now when clicking on the file jabref asks me if i want to open the link or the filenow it makes no more sense to me to have the option to delete the link and i will not implement it || ok i think i am satisfied nowto sum up:the import dialog now offers a check-box if the user selects the check-box and the imported entry contains an online link jabref will download the file it is stored in the directory set up by file directory pattern and named according to the filename format pattern in the import-tab of the preferences dialog the file entry is prepended to the imported bib-entrythe user can choose to have that check-box selected by default in the import-tab of the preferences dialog || > thanks codewise looks good to me!great!> also good that you now take the filedirpattern and filenamepattern into account i think this was also one issue when downloading from the entry editorindeed this bugged me even before i coded this feature i tried looking for an issue to reference here but could not find any thoug so maybe this was just me || @btut  thanks again for your good work! looking forward seeing more from you! :) || i think the status item is enough work for another pr best thing would probably to finish the logic of this pr first with the most basic progress indicator possible merge this pr and then create another pr for the status indicator as it would probably affect way more parts of the code || dont misunderstand me i do like the idea of a generic progress for jabref toojust do one step after another || ok to conclude this pr i suggest the following:1 pr to fix the entry duplication for the right-click download action2 pr to remove the dead progress-bar code3 pr to implement the list of background tasks and its graphical representation in the guii can probably get to the first two today but will need some time for the third i will create a pr after only a couple of commits so we can start discussing there i hope you dont mind || great thank you go aheadsplitting this up in multiple prs makes it just easier to review and later to debug if there are unknown sideeffects ||
766,6303,6386,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix jstyle was invalid with default section at the start fixes #6303adapted the error message to give a hint what is probably missingi also noticed a problem in eclipse when executing the l10n test it was missing an add-opens<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
767,6383,6389,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fix underscore character being omitted from file name in recent libraries list fixes: #6383 ![image](https://user-imagesgithubusercontentcom/34676841/80824286-6b743580-8bde-11ea-8555-20569278d326png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository perfect thanks for the quick follow-up! ||
768,6430,6402,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix action helper when no library is open this fixes #6430 an exception when opening the view menu with an empty library<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository a fix using `easybindmonadic` similar to the other fix doesnt work? this is i guess the cleanest solution since you dont need to worry about null values anymore (its the bindings version of `optional`) || @tobiasdiez  thanks for the hint i refactored it now seems to still work i am not that into those binding stuff i am wondering about the  fieldbinding that seems uncessary now? ||"
769,6403,6406,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,restore some missing keyboard shortcuts fixes #6403 - [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks again for the contribution would be cool if you could check the other keybindings as well if there are some missingà simply search for reference should be the easiest way to find any missing one ||
770,6297,6407,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,fixed an issue where a new entry is not shown in the library if a filter/search is active fixes #6297 i used the existing endsearch method of globalsearchbar to clear the search if a new entry is addedprobably the solution is quite quick and dirty and i am not sure if it fits to your architecture and if i added it at the the right spot in the codei would be happy about feedback and advice for the future! - [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? @nsmt09  it would be really cool if you could change this so we can merge your pr || > @nsmt09 it would be really cool if you could change this so we can merge your pr@siedlerchr sorry i was really busy the last weeks totally forgot about thati adjusted the fix like you recommended by injecting the statemanager and using clearsearchquery ||
771,4699,6419,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix pasting on mac and linux pr #6313 caused the double pasting issue on macos (see #4699)after the first paste  the edit action focusowner did somehow trigger on mac and this resulted in executing paste twicefixes #4699 i really dont get where the bug is reverting this reopens issue #6293especially because by logic this should be here so where is the bug this should be fixed before 51 || @calixtus whoops i overlooked the original issue (#6293) for your pr (#6313)so we are in some kind of situation where we have contradicting behavior in two operating systems that kinda sucks since we need to differentiate between those now :/last time this was the fix: https://githubcom/jabref/jabref/pull/5210 but maybe this is when we also introduced #6293?! || i have been thinking this through since the hint of @siedlerchr the thing is the insert command should stand here is there another issue with macos some method fired by macos we did not see yet? || if we dont find out the root cause in mac we could add an ugly os check for linux/mac || i already stumbled upon other methods (`jabrefframein::openaction` `quit` and `about`) especially for macos did i mention that i dont like apple? 😉  || i agree with @calixtus the command there makes sense @linusdietz can you debug and report which other code triggers the `paste` command on macos? || os: macos catalina 10154 (19e287)hello everyoneim currently trying to reproduce the error of non working menu items or duplicating objects during ""paste"" command (from google scholar and between two bib libraries) but i canti use intellij idea to start jabrefare there any issues with copy/paste? || @gena928 just to double check: you are on latest `master` (https://githubcom/jabref/jabref)? @linusdietz maybe you can add a screencast using [loom](https://wwwloomcom/)? || @koppor  yes im on latest masteri downloaded last build and pulled changes from github both (last build and source code in intellij) show no error ie record inserts without duplicates || looks like i see an errorits very phantom ie i still can not understand what should i do to repeat it sometimes i have 2 entries inserted sometimes only one ill continue testing and try to do something about it || ok i need some help )) looks like `paste()` command of `maintablejava` executed twice:1) in `editactionjava` and this was deleted by current pull request now its back again? line 78:`framegetcurrentbasepanel()paste()`2) in `maintablejava` method `setupkeybindings`i tracked first case and it turns out that `editactionexecute()` called by `jabrefframejava` line 740 (`createmenu()` method) when i commented that line jabref inserts only one item per each ctrl+v commandso in general paste command is called:- first time because we have `maintablesetupkeybindings` and it triggered by ctrl+v- second time because ctrl+v command triggers main menu command (edit>paste) || sorry for our late replythank you for you work in tracing this bugthe deletion of `framegetcurrentbasepanel()paste()` was the unsuccessful attempt to fix the issue in this prwould you like to create a fix for this issue following your investigations and to open a new pr so we can probably close this one and merge yours with the master branch? || @calixtus i hoped to get some ideas about solving this issue ok if there are no any ideas i will continue to investigate myself we have to disable main menu from listening ""ctrl+v"" and keep it listening in `maintablejava`ill be back with ideas || does ctrl + c or ctrl + x also call an edit action? maybe there is some design flaw in a hotkey that is defined twice by setupkeybindings and the the menu command || ctrl+x works in the same way1) when i press ""command + x"" the program deletes 2 (two) entries from current lib2) then i move the cursor to another lib and press ""command + v""3) jabref inserts last entry to the new library ie one entry just disappearsit looks like jabref cut entries twicechecked from intellij and using last stable version from jabreforg  || why do we need `setupkeybindings` method in `maintablejava`? when i delete copy/paste/cut commands from it the program works finethis lines:```                    case paste:                        paste()                        eventconsume()                        break                    case copy:                        copy()                        eventconsume()                        break                    case cut:                        cut()                        eventconsume()```so why do we need those commands in `maintablejava`? || the reason is that you can define custom keybindings (options? manage keybindings) for all commands and so people can use their emacs/vim whatever paste command stylefor mac we use the keybindings and simply replace ctrl with meta in the keybindingrepositorymaybe that is part of the problem as well?```   public keycombination getkeycombination(keybinding bindname) {        string binding  get(bindnamegetconstant())        if (osos_x) {            binding  bindingreplace(""ctrl"" ""meta"")        }        return keycombinationvalueof(binding)    }``` || @siedlerchr if i remove this line of code  `binding  bindingreplace(""ctrl"" ""meta"")` i just have to use ""command"" button on mac instead of ""control"" a bit more natural for iosthe problem persistswhat about main menu? i mean if you wanna change key combinations and we remove that lines from `maintablejava` does main menu works with new key combinations for copy/pase/cut?  || i will test this on windows : options -> customize keybindings:![grafik](https://user-imagesgithubusercontentcom/320228/82217214-61f70700-991a-11ea-890e-c3dc1d1f2a30png)i changed copy/paste to the following (alt gr+o and alt gr+p) i can copy and paste using those shortcuts ctrl+c and ctrl+v then dont worki also tested uncommenting the `setupkeybindings `in maintableno difference no duplicatesso now we would need someone on linux who can test this || linux user wanted! :-) || @lyzardking  could you assist in testing this on linux? assigg some other shortcuts to copy/pastetest if it worksand then do a test with commenting out the method setupkeybindings  in maintable || sure i can test both stable and the version from buildsjabreforgits not clear to me what i should be doingive never had duplicates in pasting if thats the issue here || issue #6293 was about merging in pasting in linux and windows lets follow the mac related stuff here || will look into this as i have now a mac at hand || nope didnt fix it but i think i found the real reason now || doesnt work on linuxi hadnt noticed this issue before  || in the deb it now doesnt work even if i press ctrl+v || i think i have found the root cause now pasting to a new library should work now as well please try again when the new build is ready || new build is ready  please try pasting an entry from a library to a new empty libraryhttps://buildsjabreforg/pull/6419/merge/ || it works but i have top copy ctrl-v multiple times to get it to work if the library is emptythe copy/paste buttons are not active on an empty libraryon a not empty library it works normally || works fine on windows as well the menu buttons are disabled on windows as well i think they are only activated if you have at least one entry selected but this is a minor issuetherefore i would  propose to merge this || regarding the disabled/enabled menu items we track the issues at https://githubcom/koppor/jabref/issues/419 || the problem turns out to be a bit complex we need to find a way to differ if an action was triggered by key or not or to move the keybinding from the maintable to the edit actiontherefore i would prefer to have this pr in as it enables copy pasting vai keyboard commands and we can reopen the other issue regarding the menu commands || "
772,6180,6423,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,"keep group pane size when resizing window (#6180) <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6180hello i think i have fixed this bug the main reason for this bug is group pane is resizable with parent(window size) i add one line in **jabrefframejava** to set group pane not resizable with parent thus it can keep size when resizing window the following is manual test:before resizing window:![image](https://user-imagesgithubusercontentcom/55199983/81079463-29225f80-8f22-11ea-9f09-86dfc36e2489png)after resizing window:![image](https://user-imagesgithubusercontentcom/55199983/81079505-38091200-8f22-11ea-98f9-d914348e957dpng)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks! but i dont understand what is the meaning of ""it does not make sense to put them together"" put what together?in fact keeping group size when resizing window is similar to `project pane` of intellij idea in idea project pane keeps size when resizing window if it doesnt keep size the following behavior will occur:![image](https://user-imagesgithubusercontentcom/55199983/81147433-dfcb2200-8fac-11ea-84d1-e59b9c36ad5epng)since group pane only need to display group tree it doesnt need too much space when resizing window and we need to resize group pane manully if this happens thus i think keeping size when resizing window has its utilitywhats more in idea it has scroll bar for project pane if the window size is too small![image](https://user-imagesgithubusercontentcom/55199983/81149252-71885e80-8fb0-11ea-892c-fd9f1aab8a0cpng)i think this behavior can also be involved in jabref if this point can be agreed id like to create a new issue about this and work for it || @hollyqqqqq  >thanks! but i dont understand what is the meaning of ""it does not make sense to put them together"" put what together?sorry for the misunderstanding i was meaning that you are right a separation of the group reisze and the parent window resize is betteryou could also try to add the scrollbars in your pr as well or create a new one  || ok i see thank you very much!  || yes user can still resize the sidepane manually and i have added the change log in changelogmd || "
773,6349,6426,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,sorting custom entry fields that contain numerical values @mootezsaad  and i have worked together and this pull request fixes #6349 we added a new comparator for numeric cases and now they are sorted as integers and not alphabetically - [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i think something went wrong with the merge?  || hi @dimitra-karadima @koppor and me had a mob session tonight and we took the liberty to use your pr to teach me a bit about git since there were only some checkstyle-nitpicks with your pr left we hope you dont mind we finished your work in #6450 thank you very much for your work on this we hope you did enjoy working with jabref you are always welcome to contribute more || > > > hi @dimitra-karadima > @koppor and me had a mob session tonight and we took the liberty to use your pr to teach me a bit about git since there were only some checkstyle-nitpicks with your pr left we hope you dont mind we finished your work in #6450 > thank you very much for your work on this we hope you did enjoy working with jabref you are always welcome to contribute more@calixtus of course no problem! thanks for fixing and merging my code! ||
774,3915,6427,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"add truncate as a bibtex key modifier <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #3915 adds a truncate modifier to the [available bibtex key modifiers](https://docsjabreforg/setup/bibtexkeypatterns#modifiers) for ""a title"" the bracketed pattern `[title:truncate3]` produces the result ""a t""- the syntax is `truncaten` (`[title:truncate5]`) to mimic the pattern of `authn` etcremaining- [x] see if layered expressions are reasonable to implement eg [[auth][title]:truncate10]- [x] update changelog- [x] documentationthings i am not sure about- [x] should `truncate` be a formatter(orgjabref/logic/formatter)? currently formatters does not accept arguments- [x] the interaction between bibtex key generation and truncate might lead to unexpected results as whitespaces are removed after truncation unless this is considered obvious it should perhaps be mentioned in the documentation of `truncate` eg for ""a title"" `[title:truncate3]` will lead to the `bibtexkey` ""at""- [x] should this be included in the changelog?- [x] there were a `bracketedpatterntest` in `orgjabref/logic/util/` is there a correct location for the `bracketedpatterntest`?<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->others- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository 1 changelog yes please2  ideally it would be a formatter maybe we need to adapt the interface to allow arguments3 whitespace: at least it should be documented4 brackedpatterntest yes would be nice if you could integrate your tests there as they test with a bibtex entry and multiple formattersotherwise looks already good as starting point || > 2\ ideally it would be a formatter maybe we need to adapt the interface to allow argumentsi missed how regexformatter is implemented ill just mimic that and it shouldnt be a problem || [updates to documentation](https://githubcom/jabref/user-documentation/pull/276) || in a nutshell1 `truncaten` has been added as a formatter2 directory names are truncated to a length of 255 characters using a utility function for filenames* i dont think i should change the parser there is a large risk i will create more issues than i solve* it might be possible to shorten the code in `java/org/jabref/logic/bibtexkeypattern/bracketedpatternjava` quite a bit if larger parts of the code is turned into formatters and formatters can accept arguments (either in the constructor or in the format method both are currently being used) || when i try to import a file from an url using a pattern that creates a javaniofilefilesystemexception the directory cannot be created but the file is still downloaded should i try to fix that as part of this pull request as well?<edit>if a file cannot be downloaded to the location specified by a file pattern it makes more sense (to me) that the file isnt downloaded at all</edit> || your changes look so far is this ready then? || yes the last conflicts should be resolved now || the last change (change of test names) can be removed but it seems more consistent with the guidelines? || for me its fine for external contributors we have the rule that at least two developers should review a pr so when a second dev gives his okay its ready for merge! ||"
775,6146,6440,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add support for jumping in ordered author list by typing letters <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6146i think i have added the support for jumping to the entry when typing lettersshould i add some comments to the method i added?thanks :d<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @leitianjian  thank you very much for your contributionyet i still have a question and a suggestion for your pr || thanks for your suggestions the method in jumptosearchkey provides a very good template i will rewrite the code and try to add test cases to test it || hi i think i have done it now i used the stream to replace the for loop you have mentioned above but i cannot construct a test case to test the method i added i only test manually i set the time to 700ms because i think 1s is too long for our typingthanks in advance || is this ready for review? || > i only test manually i set the time to 700ms because i think 1s is too long for our typingthats fine  there are many scenarios some gui stuff just cannot be tested || > > i only test manually i set the time to 700ms because i think 1s is too long for our typing> > thats fine there are many scenarios some gui stuff just cannot be testedyeah i found the sad truth finally t^t || @calixtus thanks for your suggestions i made a mistake when i adjust the code format and had not realized that || > lgtm thanks for your contribution!> > (i didnt test if this interferes with typing in the entry editor or searchbar but it shouldnt as the event is registered on the maintable)yeah i tested it manually which will not interfere with the searchbar the target of the input is depended on the focusing window || ok 2 approvals @koppor s suggestions are fixed and the change is testedim going to merge this now@leitianjian  thank you very much for your contribution i hope you liked working on jabref and consider to contribute more ||"
776,6453,6455,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix autocomplete thread fixes #6453the autcomplete binding was triggered when a cleanup called setbibentry from a background thread<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
777,6472,6475,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixed #6472 that multiple background task popups stacked over each other <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixed https://githubcom/jabref/jabref/issues/6472i added a globle popover variable to hide existed popover(if any)if a pop over is showing and i clicked on the background tasks button the showing pop over will hide first then the new pop over will show the pop overs wont stack over![image](https://user-imagesgithubusercontentcom/5562899/81819801-60b48b80-9562-11ea-8856-ab45b2c66fc6png)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository it would be really nice if you could finish this pr and try the changes so that we can merge this pr soon  || > it would be really nice if you could finish this pr and try the changes so that we can merge this pr soonyes sorry for the late change i have made that please check it again! ||"
778,6477,6478,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix libre office connection and other progress dialogs fixes #6477error was introduced in #6443 with the progressdialog showandwait i had to revert that @btut the showandwait broke all dialogs which used the dialog  (eg) also copy linked files)<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository uh i forgot to roll that back the progressdialog is not actually used by the background-task functionality because i could not get it to worki think it would be better to change the name of the method to showprogressdialog the old name showprogressdialogandwait suggests that the dialog is waited for || indeed good idea i renamed it now  || do i get that right that most of the progress dialogs can probably be converted to be displayed in the new progress popup? || i dont know which other features use the progress dialoguei had three problems with the progress dialogue:- it displays the progress of an actual task i wanted to show a list of tasks- it is not waited for- there is no way to close it when the progress reached 100%in the dialogue that i implemented as a solution for this i used the list of tasks stored in statemanager it would be easy to pass a list of tasks instead then we could add an option to the dialogue to only show and it could replace the other dialoguesbut as the original dialogue is not waited for i guess it is only used as information to the user how about registering the relevant task in the background-task list in statemanager? then you could just pop up the new dialogue you could even pop up the pop-over of the task-progress-indicator in the toolbar this would be very similar to a show-only dialog (no wait) the user can hide it and check the status later by clicking on the progress-indicator againimo this would be a good way to go i think the new dialogue and pop-over are more informative as they show the actual progress of tasks if available afaict from the code the old dialogue just showed an indeterminate progress bar ||  i just checked and it is just the waitforsavefinished dialog that creates a task for this purpose the other times the dialogue is shown it is shown with actual worker tasks so progress should be shown || i agree these progress dialogs can be replaced by using the new progress popup none of them actually has a reason to block the ui and can safely be run in the background in my opinion || the only critical application is indeed the connection to libreoffie but that could also be done in a background task because its usually finished very fast however we have to be careful of tasks throwing exceptions the copy linked files to folder displays a progress dialog and afterwards the result dialogindeed it doesnt make sense to block the ui with a progress dialog here ||"
779,6459,6479,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fixes generated bibtex key and display of institute authors <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6459 fixes #6465 there are two parts of this issue1 a null is prepended to an abbreviated bibtex key2 curly brackets are not respected (in the maintables author column?)**1 fix to the prepended null***what is going on?*`bracketedpatterngenerateinstitutionkey` gets called for any author enclosed in curly brackets (eg `""{the school of life}""`) the method expects an institute of technology or university and appends its name to the key (eg null if there is no name)*why is it going on?*academic institutions can have long generated bibtex keys unless abbreviated eg `""royal institute of technology: the school of electrical engineering and computer science""` which `generateinstitutionkey` shortens to `riteecs`*fix*replace a null valued university with an empty string the drawback is potentially very short bibtex keys (eg `the school of life` -> `l`)*what are alternatives?*1 regex matching universities and technological institutions which is hard to implement correctly on the other hand the drawback is an unexpected bibtex key in a corner case in the case of `the school of life` would be abbreviated to `sl` instead of `l`**2 fix to the author column**when the list of authors gets converted to a latex-free version all curly brackets are removed since the whole string is parsed as latex when the latex-free string is used to create/fetch an `authorlist` it will no longer contain any brackets and the information needed to format the string is gone**3 what i think is left to do**- [x] find out why `{the school of life}`  isnt respected in the author field of the gui- [x] ~~attempt to match universities etc with regex~~ assume that names that have comma separated parts are universities- [x] ~~update `bibtexkeygeneratortest` as it makes heavy use of deprecated methods~~ the deprecated methods are essentially convenience methods so they have been moved inside the test file- [x] see if the readability of `generateinstitutionkey` can be improved- [x] ~~change the key generator for institution/corporate names to a formatter?~~ `generateinstitutionkey` should not be a separate formatter it is only called by `normalize`and<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > find out why {the school of life} isnt respected in the author field of the guii think it could be that the latex2unicode convert is called for the author field it kills the extra braces i had a similar problem in the msoffice exporter  i think i implemented a workaround there || ah nice thank you! i will take a look! || i believe this is fixable in `bibentrygetlatexfreefield` by splitting it into bibtex/latex according to whichever bibtex version are supported but the problems are1 i cant find which bibtex version we are supporting in [adr](https://githubcom/jabref/jabref/tree/master/docs/adr) nor anywhere else2 `bibentrygetlatexfreefield` appears to be used both for bibtex in utf-8 (eg `""{lâtëx}""`) and for fully ""expanded"" text (eg `""lâtëx""`) as those are incompatible perhaps it makes sense to split the method and track down what method wants what?3 should i do this?4 i can attempt to do the same workaround but it doesnt really solve the problem (as i understand it)?i can also look at it a bit more and see if i have missed something anyway any suggestion/hint is greatly appreciated @siedlerchr  || hithanks for investigating the underlying problem is the latex2unicode (external library) kills the braces it has of course no understanding of an author refs  #4152 and #6155 i fear there is no easy solution we use the latexfree field method to not have latex code displayed in the main table #6329 i would treat this as a secondary issueregarding the second issue:> replace a null valued university with an empty string the drawback is potentially very short bibtex keys (eg the school of life -> l)what about using a formatter that uses the capital letters?  eg jabref would then become jrand orgs with abbreviations eg uno or who would stay as is similar to the title formatter || regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantif i understand things correctly there are currently three different cases relevant to #4337 and #4152assuming we are using the bibtex format described at [bibtexorg (special symbols)](http://wwwbibtexorg/specialsymbols/)1 plain bibtex eg `kurt {g\""od}el`: used as the internal representation?2 bibtex ""with unicode"" eg `kurt {göd}el`: used for exporting to a unicode-aware file format and editing in unicode?3 formatted text eg `k gödel`: used to display to a user or export to a latex/bibtex unaware environment`bibentrygetlatexfreefield` handles case 3 while to the best of my knowledge no function/method handles case 2the issue with case 2 is that latex and bibtex are two incompatible ""languages"" (since some reserved words are the same) therefore if we are using the format described at [bibtexorg (format)](http://wwwbibtexorg/format/) the ""correct"" way of dealing with case 2 using `bibentrygetlatexfreefield` is to either split out the latex components and ""translate"" them to unicode separately or to escape the parts that are in bibtex format  if i am using the [bibtexorg format](http://wwwbibtexorg/format/) at least all non-nested curly bracketsl not preceded by a keyword should be escaped* `{jabref}` -> `\{jabref\}` * `proceedings of the {ieee}` -> `proceedings of the \{ieee\}`which is then dealt with correctly in `bibentrygetlatexfreefield`what i was trying to argue is that case 2 and case 3 must be dealt with differently i can deal with this after issue #6459 if that is of interest?**however i just realized that issue #6459 is case 3 and can most likely be solved by changing the order of method calls** please point out if something is unclear or incomprehensible i am trying to improve my writing skills but i am well aware that i have some practice ahead of me my only excuse is that it is still morning here x) || regarding the second issue that does sound better i cant think of any case where keeping all capitalized letters isnt good and it should be compatible with the current implementation || >regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantno problem :) we are happy for every contributor its just a complex issue its just complicated issue because it involves corporate authors and unicodei try to provide some background on this: **unicode**:originally bibtex and latex did not support unicode thats why you have to use those latex-escaping of umlauts and other charactersbiblatex the successor of bibtex supports unicode but many journals still require bibtexand many citations from online resources still contain latex-escaping of charactersoriginally jabref maintained a bidirectional mapping between latex escaped characters and their unicode equivalent some time ago we switched to the [latex2unicode library](https://githubcom/tomtung/latex2unicode) of course javafx has no idea of latex therefore having a title or an author encoded in latex must obviously converted to unicode for displayeg > `kurt {g\""od}el` becomes `kurt gödel`**corporate authors**:see the [biblatex manual](https://mirrorinformatikhs-fuldade/tex-archive/macros/latex/contrib/biblatex/doc/biblatexpdf) section 233 corporate authors and editors:>corporate authors and editors are given in the author or editor field respectivelynote that they must be wrapped in an extra pair of curly braces to prevent data parsing from treating them as personal names which are to be dissected into their components example: `author {{national aeronautics and space administration}}`in jabref the latex2unicode formatter is called for **every field** and the formatter now receives the `string toconvert  {national aeronautics and space administration}` the latex2unicode formatter now kills the curly braces as they could indicate some latex commands and returns `string converted  national aeronautics and space administration`jabref now splits the author according to it rules and thinks its in this case two authors separated by authors the only solution i see is to check if its a corporate authors convert it to unicode and add the braces again one really difficult edge case is for example  ` author  {\l{}}ukasz micha\l{}` could be easily interpreted as corporate authorsi hope my long explanation helps you a bit to understand the problem maybe you come up with an idea  || hello @k3kaw8pnf7mkmdsmphz27  thank you for your work in fixing this issue! and thanks for that informative context @siedlerchr  thats a very interesting edge case i think there could be a test where braces are counted to corroborate that the brace at the very beginning is not closed earlier on (that would be the case where formatting as a corporate author would apply i think)i have some code in python that does something related (though the opposite: it matches the most ancient parenthesis first) ill adapt it when i return home```pythondef par_count2(text: letters opener: str  ""("" closer: str  "")"") -> numbers:    """"""base algorithm to count matching parentheses    parameters    ----------    `text` : `str`        the string to be parsed against matching opener and closer    `opener` : `str`        the character(s) to be considered as the opener of a sequence    `closer` : `str`        the character(s) to be considered as the end of a sequence    yields    ------    `count` : `int`        a sequence of `int` that are the number of matches for each character    examples    --------    here are some base examples of expected output and actual output        ``(((((((((``        ``123456789``    >>> [c for c in par_count2(""((((((((("")]    [1 2 3 4 5 6 7 8 9]        ``)))))))))``        ``123456789``    >>> [c for c in par_count2("")))))))))"")]    [1 2 3 4 5 6 7 8 9]        ``()()()()()()()()()``        ``112233445566778899``    >>> [c for c in par_count2(""()()()()()()()()()"")]    [1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9]        ``((((((((()))))))))``        ``123456789123456789``    >>> [c for c in par_count2(""((((((((()))))))))"")]    [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]        ``))()())(())``        ``12334456767``    >>> [c for c in par_count2(""))()())(())"")]    [1 2 3 3 4 4 5 6 7 6 7]    ``(a)()(a)()(b)()(a)()(a)``    ``11122323445156673788949``    >>> [c for c in par_count2(""(a)()(a)()(b)()(a)()(a)"")]    [1 1 1 2 2 3 2 3 4 4 5 1 5 6 6 7 3 7 8 8 9 4 9]    """"""    # type declarations for local variables    count: int    character: str    pending_from: int    pending_to: int    others: counter[str]    count  0    pending_from  0    pending_to  0    others  counter()    # logging recommends using %s substitutions instead of f-strings or    # string interpolation with brackets    logger  logginggetlogger(__name__)    loggerdebug(""about to parse %s with %s and %s"" text opener closer)    for character in text:        if character  closer:            if pending_from ! pending_to:                pending_from + 1                yield pending_from            else:                count + 1                pending_from  count                pending_to  count                yield count        elif character  opener:            count + 1            pending_to  count            yield count        else:            othersupdate(character)            yield othersget(character 0)    loggerinfo(""parsed %s with %s and %s"" text opener closer)``` || @rolandog  your hint with the braces gave me the idea and i think we maybe have already a solution for this problem i cant believe its been hidden in plain sight 🤦 this method is used in the bracketedpattern class to define if its an insituation (corporate author or not) https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/model/strings/stringutiljava#l418-l446and the test:https://githubcom/jabref/jabref/blob/862078a4db316cfd15bd77be68d3d2b010feab3b/src/test/java/org/jabref/model/strings/stringutiltestjava#l181-l193 || hi @rolandog ! thank you for the very detailed issue!! it makes things a lot easier :pi have done a ""bad"" code update to demonstrate what i think is the issue with displaying names in the maintable (ie the order of method calls) @siedlerchr and @rolandog you are both (of course) most welcome to add any comment/change any code and if there is any way i can make life easier for you do tell i am currently quite new to github and my todo-list notes and links are currently kept in a offline jupyter document and i have no idea how to do it differently x)@siedlerchr thank you for the overview and the biblatex manual link! i have been looking for that one ooi am going to stay out of the biblatex discussion for now because i believe `kurt {g\""od}el` should be `kurt gödel` it doesnt mean i am not interested in the issue just that i have a lot of reading ahead of me apparently a lot have changed since 1994 and bibtex 10 ) || @k3kaw8pnf7mkmdsmphz27 youre welcome im glad to have helped pinpoint this and thank you for taking on this issue!and thats great @siedlerchr im happy that it seems that this may not need extreme refactoring thats a very clever function!however i think i found an edge case where `isincurlybrackets` may present a false positive in its current form (inspired by the corporate author kurt gödel society but instead using łukasz michał as part of a corporate author name)im not familiar with jabrefs whole codebase so mismatched braces may be caught earlier on as per:https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/bibtex/fieldwriterjava#l41-l74here is an example displayed as a test where one of the entries would throw an error (the last one):```java@test void testisincurlybrackets() {    /** correct     * c        : {\l{}}ukasz micha\l{}     * brackets : 1  210             10     * count    : 1  112             22     */    assertfalse(stringutilisincurlybrackets(""{\l{}}ukasz micha\l{}""))    /** correct     * c        : {{\l{}}ukasz micha\l{} society}     * brackets : 12  321             21        0     * count    : 11  111             11        1     */    asserttrue(stringutilisincurlybrackets(""{{\l{}}ukasz micha\l{} society}""))    /** mismatched braces should return false?     * c        : {{\l{}}ukasz micha\l{} {society}     * brackets : 12  321             21 2       1     * count    : 11  111             11 1       1     */    assertfalse(stringutilisincurlybrackets(""{{\l{}}ukasz micha\l{} {society}""))}```in case this isnt filtered by `checkbraces` then checking the final value of `brackets  0` could prevent that edge case:```java/**  * checks if the given string has exactly one pair of surrounding curly braces <br>  * strings with escaped characters in curly braces at the beginning and end are respected too  * @param tocheck the string to check  * @return true if the check was succesful false otherwise  */ public static boolean isincurlybrackets(string tocheck) {     int count  0     int brackets  0     if ((tocheck  null) || tocheckisempty()) {         return false     } else {         if ((tocheckcharat(0)  {) && (tocheckcharat(tochecklength() - 1)  })) {             for (char c : tochecktochararray()) {                 if (c  {) {                     if (brackets  0) {                         count++                     }                     brackets++                 } else if (c  }) {                     brackets--                 }             }             return count  1 && brackets  0         }         return false     } }``` || @rolandog  thanks for testing and checking that edge case feel free to submit a new pr and in that way you can also fix the workaround i used in the msbibauthor for the ms office exporter https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/msbib/msbibconverterjava#l119 || ""curly brackets are not respected (in the maintables author column?)"" is the same as issue #6465should i leave it alone in this pr or update this one to close both? || since they are related you can update your pr to close both just add it also to the changelog then  || i am having issues finding a case that is supposed to break the method `fixauthornatbiblatexfree` ill look at it a bit longer before extending the same tests to the other methods but i dont think i will come up with anythingother than that i cant find any tests for `bibentrytableviewmodel` nor `maintablenameformatter` i dont think i should attempt to create any as at least `bibentrytableviewmodel` has gone through quite a bit of changes recently || if you cant find a case thats breaking the test its a good sign )regarding tests for other classes i think this would be beyond the scope of the pr here || @k3kaw8pnf7mkmdsmphz27  as you now have some more deep insights into the bibtexkeypattern generation now than i can you maybe help that usere here in the forum? https://discoursejabreforg/t/help-with-regex-in-key-generation/2115 || sure i will look at it i somehow missed that jabref has a forum oo || so what remains are1 preferences no longer updates without restart (eg from none to natbib) that is not within the scope of the pr and i am guessing someone is fixing it already2 weird things happens if you try to escape curly brackets in the author section of required fields i am guessing the \ is being protected somewhere i can open up an issue about it but i dont have time to look at it until the 1th of may || thanks already for your contribution and the extensive tests just let me know if its finished so far then we can review it it would be nice if you could open an issue for the two problems especially that preferences reloading i guess escaping the curly brackets should hopefully be not that common in the author field more relevant for the title field or so i guess  || > i just saw two minor style issues nitpicks but nothing importanti am trying to learn and improve nitpicking is appreciated and encouraged! :) || @k3kaw8pnf7mkmdsmphz27 big thanks for your work on thisi just noticed some latex commands are not cleared in the now-master-buildhas this been an issue before / is this still an issue with latex2unicodeadapter?![image](https://user-imagesgithubusercontentcom/50491877/83175844-db61d700-a11c-11ea-8c0b-b581b8e37ef5png)test library is jabrefauthors in src/test/resources/testbib || which ~~file in particular~~  and which ~~settings~~ entry table ""format of author and editor name""? || hum i am not sure what is going on ill have a look || most of those should be ""cleared"" and are cleared when i build locally but that might be something wrong with my setup || looks fine for me as well:![grafik](https://user-imagesgithubusercontentcom/320228/83180207-60e88580-a123-11ea-8839-57ef0a8e5249png)firstname lastname option and do not abbreviateedit// @calixtus  do you have ""show names unchanged"" activated?  || i think i could reproduce @calixtus screenshot in jabref 51--2020-05-28--ffa07cd but right now i seem unable to do so again (and i have tried) || @k3kaw8pnf7mkmdsmphz27 if you have ""show names unchanged"" in the prefs activated then no conversion is happening || i see so the solution would be to change `return nametoformat` to `return latex2unicodeadapterformat(nametoformat)` or similar in maintablenameformatter || @calixtus i thought the intent of that option was to leave the names completely unchanged?also if you change that dont forget to add a cacheeditwith cache i mean something along the line of `private string authorsnatbiblatexfree` in `authorlist` || uh im not going to change anything today 😄 i was just wondering about that || hum actually that is my bad jabref 50 does indeed ""clear"" the latex even when `show names unchanged` is set should i open up an issue and fix this then?  || yes it would be nice if you could provide a fix (no need to create an issue before) || ok i apparently dont know how to do this i created [https://githubcom/jabref/jabref/pull/6552](https://githubcom/jabref/jabref/pull/6552) || well thank you all for reviewing this pr it is very appreciated! ❤️ 🎉 🎈ill take the reviews and results to heart and make sure the next pr will create fewer issues 🤦  || "
780,6465,6479,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fixes generated bibtex key and display of institute authors <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6459 fixes #6465 there are two parts of this issue1 a null is prepended to an abbreviated bibtex key2 curly brackets are not respected (in the maintables author column?)**1 fix to the prepended null***what is going on?*`bracketedpatterngenerateinstitutionkey` gets called for any author enclosed in curly brackets (eg `""{the school of life}""`) the method expects an institute of technology or university and appends its name to the key (eg null if there is no name)*why is it going on?*academic institutions can have long generated bibtex keys unless abbreviated eg `""royal institute of technology: the school of electrical engineering and computer science""` which `generateinstitutionkey` shortens to `riteecs`*fix*replace a null valued university with an empty string the drawback is potentially very short bibtex keys (eg `the school of life` -> `l`)*what are alternatives?*1 regex matching universities and technological institutions which is hard to implement correctly on the other hand the drawback is an unexpected bibtex key in a corner case in the case of `the school of life` would be abbreviated to `sl` instead of `l`**2 fix to the author column**when the list of authors gets converted to a latex-free version all curly brackets are removed since the whole string is parsed as latex when the latex-free string is used to create/fetch an `authorlist` it will no longer contain any brackets and the information needed to format the string is gone**3 what i think is left to do**- [x] find out why `{the school of life}`  isnt respected in the author field of the gui- [x] ~~attempt to match universities etc with regex~~ assume that names that have comma separated parts are universities- [x] ~~update `bibtexkeygeneratortest` as it makes heavy use of deprecated methods~~ the deprecated methods are essentially convenience methods so they have been moved inside the test file- [x] see if the readability of `generateinstitutionkey` can be improved- [x] ~~change the key generator for institution/corporate names to a formatter?~~ `generateinstitutionkey` should not be a separate formatter it is only called by `normalize`and<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > find out why {the school of life} isnt respected in the author field of the guii think it could be that the latex2unicode convert is called for the author field it kills the extra braces i had a similar problem in the msoffice exporter  i think i implemented a workaround there || ah nice thank you! i will take a look! || i believe this is fixable in `bibentrygetlatexfreefield` by splitting it into bibtex/latex according to whichever bibtex version are supported but the problems are1 i cant find which bibtex version we are supporting in [adr](https://githubcom/jabref/jabref/tree/master/docs/adr) nor anywhere else2 `bibentrygetlatexfreefield` appears to be used both for bibtex in utf-8 (eg `""{lâtëx}""`) and for fully ""expanded"" text (eg `""lâtëx""`) as those are incompatible perhaps it makes sense to split the method and track down what method wants what?3 should i do this?4 i can attempt to do the same workaround but it doesnt really solve the problem (as i understand it)?i can also look at it a bit more and see if i have missed something anyway any suggestion/hint is greatly appreciated @siedlerchr  || hithanks for investigating the underlying problem is the latex2unicode (external library) kills the braces it has of course no understanding of an author refs  #4152 and #6155 i fear there is no easy solution we use the latexfree field method to not have latex code displayed in the main table #6329 i would treat this as a secondary issueregarding the second issue:> replace a null valued university with an empty string the drawback is potentially very short bibtex keys (eg the school of life -> l)what about using a formatter that uses the capital letters?  eg jabref would then become jrand orgs with abbreviations eg uno or who would stay as is similar to the title formatter || regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantif i understand things correctly there are currently three different cases relevant to #4337 and #4152assuming we are using the bibtex format described at [bibtexorg (special symbols)](http://wwwbibtexorg/specialsymbols/)1 plain bibtex eg `kurt {g\""od}el`: used as the internal representation?2 bibtex ""with unicode"" eg `kurt {göd}el`: used for exporting to a unicode-aware file format and editing in unicode?3 formatted text eg `k gödel`: used to display to a user or export to a latex/bibtex unaware environment`bibentrygetlatexfreefield` handles case 3 while to the best of my knowledge no function/method handles case 2the issue with case 2 is that latex and bibtex are two incompatible ""languages"" (since some reserved words are the same) therefore if we are using the format described at [bibtexorg (format)](http://wwwbibtexorg/format/) the ""correct"" way of dealing with case 2 using `bibentrygetlatexfreefield` is to either split out the latex components and ""translate"" them to unicode separately or to escape the parts that are in bibtex format  if i am using the [bibtexorg format](http://wwwbibtexorg/format/) at least all non-nested curly bracketsl not preceded by a keyword should be escaped* `{jabref}` -> `\{jabref\}` * `proceedings of the {ieee}` -> `proceedings of the \{ieee\}`which is then dealt with correctly in `bibentrygetlatexfreefield`what i was trying to argue is that case 2 and case 3 must be dealt with differently i can deal with this after issue #6459 if that is of interest?**however i just realized that issue #6459 is case 3 and can most likely be solved by changing the order of method calls** please point out if something is unclear or incomprehensible i am trying to improve my writing skills but i am well aware that i have some practice ahead of me my only excuse is that it is still morning here x) || regarding the second issue that does sound better i cant think of any case where keeping all capitalized letters isnt good and it should be compatible with the current implementation || >regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantno problem :) we are happy for every contributor its just a complex issue its just complicated issue because it involves corporate authors and unicodei try to provide some background on this: **unicode**:originally bibtex and latex did not support unicode thats why you have to use those latex-escaping of umlauts and other charactersbiblatex the successor of bibtex supports unicode but many journals still require bibtexand many citations from online resources still contain latex-escaping of charactersoriginally jabref maintained a bidirectional mapping between latex escaped characters and their unicode equivalent some time ago we switched to the [latex2unicode library](https://githubcom/tomtung/latex2unicode) of course javafx has no idea of latex therefore having a title or an author encoded in latex must obviously converted to unicode for displayeg > `kurt {g\""od}el` becomes `kurt gödel`**corporate authors**:see the [biblatex manual](https://mirrorinformatikhs-fuldade/tex-archive/macros/latex/contrib/biblatex/doc/biblatexpdf) section 233 corporate authors and editors:>corporate authors and editors are given in the author or editor field respectivelynote that they must be wrapped in an extra pair of curly braces to prevent data parsing from treating them as personal names which are to be dissected into their components example: `author {{national aeronautics and space administration}}`in jabref the latex2unicode formatter is called for **every field** and the formatter now receives the `string toconvert  {national aeronautics and space administration}` the latex2unicode formatter now kills the curly braces as they could indicate some latex commands and returns `string converted  national aeronautics and space administration`jabref now splits the author according to it rules and thinks its in this case two authors separated by authors the only solution i see is to check if its a corporate authors convert it to unicode and add the braces again one really difficult edge case is for example  ` author  {\l{}}ukasz micha\l{}` could be easily interpreted as corporate authorsi hope my long explanation helps you a bit to understand the problem maybe you come up with an idea  || hello @k3kaw8pnf7mkmdsmphz27  thank you for your work in fixing this issue! and thanks for that informative context @siedlerchr  thats a very interesting edge case i think there could be a test where braces are counted to corroborate that the brace at the very beginning is not closed earlier on (that would be the case where formatting as a corporate author would apply i think)i have some code in python that does something related (though the opposite: it matches the most ancient parenthesis first) ill adapt it when i return home```pythondef par_count2(text: letters opener: str  ""("" closer: str  "")"") -> numbers:    """"""base algorithm to count matching parentheses    parameters    ----------    `text` : `str`        the string to be parsed against matching opener and closer    `opener` : `str`        the character(s) to be considered as the opener of a sequence    `closer` : `str`        the character(s) to be considered as the end of a sequence    yields    ------    `count` : `int`        a sequence of `int` that are the number of matches for each character    examples    --------    here are some base examples of expected output and actual output        ``(((((((((``        ``123456789``    >>> [c for c in par_count2(""((((((((("")]    [1 2 3 4 5 6 7 8 9]        ``)))))))))``        ``123456789``    >>> [c for c in par_count2("")))))))))"")]    [1 2 3 4 5 6 7 8 9]        ``()()()()()()()()()``        ``112233445566778899``    >>> [c for c in par_count2(""()()()()()()()()()"")]    [1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9]        ``((((((((()))))))))``        ``123456789123456789``    >>> [c for c in par_count2(""((((((((()))))))))"")]    [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]        ``))()())(())``        ``12334456767``    >>> [c for c in par_count2(""))()())(())"")]    [1 2 3 3 4 4 5 6 7 6 7]    ``(a)()(a)()(b)()(a)()(a)``    ``11122323445156673788949``    >>> [c for c in par_count2(""(a)()(a)()(b)()(a)()(a)"")]    [1 1 1 2 2 3 2 3 4 4 5 1 5 6 6 7 3 7 8 8 9 4 9]    """"""    # type declarations for local variables    count: int    character: str    pending_from: int    pending_to: int    others: counter[str]    count  0    pending_from  0    pending_to  0    others  counter()    # logging recommends using %s substitutions instead of f-strings or    # string interpolation with brackets    logger  logginggetlogger(__name__)    loggerdebug(""about to parse %s with %s and %s"" text opener closer)    for character in text:        if character  closer:            if pending_from ! pending_to:                pending_from + 1                yield pending_from            else:                count + 1                pending_from  count                pending_to  count                yield count        elif character  opener:            count + 1            pending_to  count            yield count        else:            othersupdate(character)            yield othersget(character 0)    loggerinfo(""parsed %s with %s and %s"" text opener closer)``` || @rolandog  your hint with the braces gave me the idea and i think we maybe have already a solution for this problem i cant believe its been hidden in plain sight 🤦 this method is used in the bracketedpattern class to define if its an insituation (corporate author or not) https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/model/strings/stringutiljava#l418-l446and the test:https://githubcom/jabref/jabref/blob/862078a4db316cfd15bd77be68d3d2b010feab3b/src/test/java/org/jabref/model/strings/stringutiltestjava#l181-l193 || hi @rolandog ! thank you for the very detailed issue!! it makes things a lot easier :pi have done a ""bad"" code update to demonstrate what i think is the issue with displaying names in the maintable (ie the order of method calls) @siedlerchr and @rolandog you are both (of course) most welcome to add any comment/change any code and if there is any way i can make life easier for you do tell i am currently quite new to github and my todo-list notes and links are currently kept in a offline jupyter document and i have no idea how to do it differently x)@siedlerchr thank you for the overview and the biblatex manual link! i have been looking for that one ooi am going to stay out of the biblatex discussion for now because i believe `kurt {g\""od}el` should be `kurt gödel` it doesnt mean i am not interested in the issue just that i have a lot of reading ahead of me apparently a lot have changed since 1994 and bibtex 10 ) || @k3kaw8pnf7mkmdsmphz27 youre welcome im glad to have helped pinpoint this and thank you for taking on this issue!and thats great @siedlerchr im happy that it seems that this may not need extreme refactoring thats a very clever function!however i think i found an edge case where `isincurlybrackets` may present a false positive in its current form (inspired by the corporate author kurt gödel society but instead using łukasz michał as part of a corporate author name)im not familiar with jabrefs whole codebase so mismatched braces may be caught earlier on as per:https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/bibtex/fieldwriterjava#l41-l74here is an example displayed as a test where one of the entries would throw an error (the last one):```java@test void testisincurlybrackets() {    /** correct     * c        : {\l{}}ukasz micha\l{}     * brackets : 1  210             10     * count    : 1  112             22     */    assertfalse(stringutilisincurlybrackets(""{\l{}}ukasz micha\l{}""))    /** correct     * c        : {{\l{}}ukasz micha\l{} society}     * brackets : 12  321             21        0     * count    : 11  111             11        1     */    asserttrue(stringutilisincurlybrackets(""{{\l{}}ukasz micha\l{} society}""))    /** mismatched braces should return false?     * c        : {{\l{}}ukasz micha\l{} {society}     * brackets : 12  321             21 2       1     * count    : 11  111             11 1       1     */    assertfalse(stringutilisincurlybrackets(""{{\l{}}ukasz micha\l{} {society}""))}```in case this isnt filtered by `checkbraces` then checking the final value of `brackets  0` could prevent that edge case:```java/**  * checks if the given string has exactly one pair of surrounding curly braces <br>  * strings with escaped characters in curly braces at the beginning and end are respected too  * @param tocheck the string to check  * @return true if the check was succesful false otherwise  */ public static boolean isincurlybrackets(string tocheck) {     int count  0     int brackets  0     if ((tocheck  null) || tocheckisempty()) {         return false     } else {         if ((tocheckcharat(0)  {) && (tocheckcharat(tochecklength() - 1)  })) {             for (char c : tochecktochararray()) {                 if (c  {) {                     if (brackets  0) {                         count++                     }                     brackets++                 } else if (c  }) {                     brackets--                 }             }             return count  1 && brackets  0         }         return false     } }``` || @rolandog  thanks for testing and checking that edge case feel free to submit a new pr and in that way you can also fix the workaround i used in the msbibauthor for the ms office exporter https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/msbib/msbibconverterjava#l119 || ""curly brackets are not respected (in the maintables author column?)"" is the same as issue #6465should i leave it alone in this pr or update this one to close both? || since they are related you can update your pr to close both just add it also to the changelog then  || i am having issues finding a case that is supposed to break the method `fixauthornatbiblatexfree` ill look at it a bit longer before extending the same tests to the other methods but i dont think i will come up with anythingother than that i cant find any tests for `bibentrytableviewmodel` nor `maintablenameformatter` i dont think i should attempt to create any as at least `bibentrytableviewmodel` has gone through quite a bit of changes recently || if you cant find a case thats breaking the test its a good sign )regarding tests for other classes i think this would be beyond the scope of the pr here || @k3kaw8pnf7mkmdsmphz27  as you now have some more deep insights into the bibtexkeypattern generation now than i can you maybe help that usere here in the forum? https://discoursejabreforg/t/help-with-regex-in-key-generation/2115 || sure i will look at it i somehow missed that jabref has a forum oo || so what remains are1 preferences no longer updates without restart (eg from none to natbib) that is not within the scope of the pr and i am guessing someone is fixing it already2 weird things happens if you try to escape curly brackets in the author section of required fields i am guessing the \ is being protected somewhere i can open up an issue about it but i dont have time to look at it until the 1th of may || thanks already for your contribution and the extensive tests just let me know if its finished so far then we can review it it would be nice if you could open an issue for the two problems especially that preferences reloading i guess escaping the curly brackets should hopefully be not that common in the author field more relevant for the title field or so i guess  || > i just saw two minor style issues nitpicks but nothing importanti am trying to learn and improve nitpicking is appreciated and encouraged! :) || @k3kaw8pnf7mkmdsmphz27 big thanks for your work on thisi just noticed some latex commands are not cleared in the now-master-buildhas this been an issue before / is this still an issue with latex2unicodeadapter?![image](https://user-imagesgithubusercontentcom/50491877/83175844-db61d700-a11c-11ea-8c0b-b581b8e37ef5png)test library is jabrefauthors in src/test/resources/testbib || which ~~file in particular~~  and which ~~settings~~ entry table ""format of author and editor name""? || hum i am not sure what is going on ill have a look || most of those should be ""cleared"" and are cleared when i build locally but that might be something wrong with my setup || looks fine for me as well:![grafik](https://user-imagesgithubusercontentcom/320228/83180207-60e88580-a123-11ea-8839-57ef0a8e5249png)firstname lastname option and do not abbreviateedit// @calixtus  do you have ""show names unchanged"" activated?  || i think i could reproduce @calixtus screenshot in jabref 51--2020-05-28--ffa07cd but right now i seem unable to do so again (and i have tried) || @k3kaw8pnf7mkmdsmphz27 if you have ""show names unchanged"" in the prefs activated then no conversion is happening || i see so the solution would be to change `return nametoformat` to `return latex2unicodeadapterformat(nametoformat)` or similar in maintablenameformatter || @calixtus i thought the intent of that option was to leave the names completely unchanged?also if you change that dont forget to add a cacheeditwith cache i mean something along the line of `private string authorsnatbiblatexfree` in `authorlist` || uh im not going to change anything today 😄 i was just wondering about that || hum actually that is my bad jabref 50 does indeed ""clear"" the latex even when `show names unchanged` is set should i open up an issue and fix this then?  || yes it would be nice if you could provide a fix (no need to create an issue before) || ok i apparently dont know how to do this i created [https://githubcom/jabref/jabref/pull/6552](https://githubcom/jabref/jabref/pull/6552) || well thank you all for reviewing this pr it is very appreciated! ❤️ 🎉 🎈ill take the reviews and results to heart and make sure the next pr will create fewer issues 🤦  || "
781,369,6504,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,enable users to simultaneously search all searchbasedfetchers this pr enables users can send queries to all e-libraries simultaneously through the `websearchpane` ref [#369](https://githubcom/koppor/jabref/issues/369)it adds a new `searchbasedfetcher` called `compositesearchbasedfetcher` that delegates the query to all of the fetchers it is composed of and merges the fetched results in  `webfetchersgetsearchbasedfetchers`  a `compositesearchbasedfetcher` is added that contains all `searchbasedfetchers` if this pr gets approved an additional [documentation entry](https://docsjabreforg/finding-sorting-and-cleaning-entries) has to be added- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > it would be nice if you could some more fetchers to your test and also test what happens when one fetcher returns an errori replaced the tests with parameterized tests || > thanks for your contribution i like the idea!im happy about that!> for now only a initial impression after scrolling through the code: did you test it in a running jabref?i tested it with a few queries and it worked so far ^^  > im somewhat afraid that this quickly leads to jabref being blocked by some databases since it issues quite a lot of requests  moreover if i understand the implementation correctly then every fetcher is always asked which should lead to quite a huge list of returned entries (probably with perhaps many duplicates)one option might be to offer the user a way to configure which fetchers to include?in my current implementation i do not offer any post-processing yet i think doing post-processing in the fetcher is not a great design idea what do you think? :) where should i implement the post-processing of the fetched entries? || jaxb refs #6350  and https://githubcom/jabref/jabref/issues/6302 ||
782,6485,6508,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixes missing library properties context menu on library tab fixes issue #6485 to implement context menu on library tabswith the ""library properties"" menu item![image](https://user-imagesgithubusercontentcom/42524526/82621629-481b2580-9ba1-11ea-8301-d643b14faa1apng)<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @oltman-b thank you for your effort in creating this pull request codewise it looks good to mehowever i think the right click menu itself is something we really should discuss with the other developers since this is a bit controversial at least for me 😉  || jabref 382:![grafik](https://user-imagesgithubusercontentcom/1366654/82867871-e3a6f000-9f2b-11ea-8cc7-031aceb5d115png)@oltman-b could you (re-)add this functionality too? || thank you for the pr we will go ahead with merging!we created a follow-up issue at https://githubcom/jabref/jabref/issues/6527 - and would be happy if you worked on it 🌮  || > jabref 382:> > ![grafik](https://user-imagesgithubusercontentcom/1366654/82867871-e3a6f000-9f2b-11ea-8cc7-031aceb5d115png)> > @oltman-b could you (re-)add this functionality too?thank you! since making this commit i decided to start working in net so i removed my java dev tools for the time being if i get some extra time id like to work on the related issue but if anybody else wants to take it feel free  ||"
783,6507,6511,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"return true in action helper if file is online link otherwise it will be interpreted as path which obiously failsfixes #6507<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->~~- [ ] change in changelogmd described (if applicable)~~ dev version only- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
784,6447,6516,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,"add some javadoc and fix the preview update issue <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6447 i have taken a long time considering how to update the preview when preference change after i found that the previewpanel will be bind to entry in fieldseditortabjava then we can just update the layout in previewpaneljava#setentry()some ideas:can we using observer pattern to refactor the code: jabrefpreferences as observable object and component need preferences can register as observer if the preferences were changed we can notify the affected component to do an update?<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks codewise looks good to me we are currently in the process of refactoring the preferences in general and trying to solve the ""updating of preferences"" without restarting jabref as well  || > thanks codewise looks good to me we are currently in the process of refactoring the preferences in general and trying to solve the ""updating of preferences"" without restarting jabref as wellwhat is the current idea of refactoring these preferences code? i wonder where i can see these discussions? thanks! || @leitianjian : developer discussion happens here: https://gitterim/jabref/jabref feel free to participate or even contribute if you like we can talk a bit about the principles behind my current attempt in refactoring the preferences || > @leitianjian : developer discussion happens here: https://gitterim/jabref/jabref > feel free to participate or even contribute if you like we can talk a bit about the principles behind my current attempt in refactoring the preferencesthanks for your kindness recently im busy with other things so i cannot fully participate in it but i will keep track of your pr and the chat in gitter maybe i can learn something or provide some ideas || thanks again for your contribution! i took the freedom to merge it ) || thanks! || "
785,6515,6518,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"refactor main table preferences follow up to #6509 merged table preferences see the screenshot![grafik](https://user-imagesgithubusercontentcom/50491877/82758371-7d648500-9de6-11ea-8e4e-4cd2c64823dcpng)fixes #6515 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i think the ""enable special fields"" should move to another preference tab as this is not really related to the main table moreover is the ""show extra columns"" still needed (and what does it do)? any maybe rename ""natbib style"" to what it actually represents (which is actually not clear to me) || show extra columns adds additional columns to the combobox providing a column for every filetype (instead of one column displaying different icons for each filetype) in refactoring the tabs to the mvvm pattern we discussed removal of these columns but decided to keep them as they were not really complicated to implement or maintain we didnt want to kill a feature (even though there is probably hardly a use case) without needabout special fields: i did not yet have any better idea to place them but the general tab but this is no permanent solution so i decided to keep this as it is and leave it to a dedicated specialfields pr because i would like to focus here on extracting the calls to jabrefpreferences out of the codebasenatbib style is (if i remember right) lastname or lastname et al || done what i planned to do here@tobiasdiez do you have a suggestion for the natbib label? || what about ""show only lastname"" instead of natbib? (but this is already in abbreviationsso im not sure what natbib actually does -))ok then i would vote to remove the ""show extra columns"" option and always add these fields to the dropdown its not hurting if there are a couple of more options to selecti agree with the special fields it was just an observation as you were already touching the codeill review the code later || i fear a merge conflict in/with #6479  regarding the maintableformatter therefore i would propose to first merge the other pr and then this || agreed i took a look at it we definitely should merge #6479 first integrating the changes shouldnt be that hard although we worked on the same code we were working on different aspects || #6479  has been merged now || "
786,5904,6528,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"additional check if values have changed in bindtoentry fixes  #5904- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository not yet mergeable its still in testing im not sure if this really solved the problem im waiting for @gianlucabaldassarre to answer in the issue thread || seesms not to work type randomly in the comment field and create new lines etc and type againhit ctrl + s cursor jumps again to the beginning || @siedlerchr : ok so i wait for updated versions> seesms not to work> type randomly in the comment field and create new lines etc and type again> hit ctrl + s cursor jumps again to the beginning || @siedlerchr just put me on a track the issue occurs now if you save after creating a new line in saving the fields are trimmed of whitespaces || this should do the trick lets wait for the deployment || mhhh this looks dangerous not sure what consequences could arise when the field value and textfield value are different (even if it just whitespace difference) what about moving the `trim` from saving to the set field value method in bibentry? ok maybe this also doesnt work since then users cannot type anything with spaces at the end because they are immediately deleted damn another idea: preserve the caret position by hand as in https://stackoverflowcom/a/45334996/873661 (if they really differ only by trimmed whitespace the new caret position should be easy to calculate) || tested it from eclipse does not change anything caret still jumps to the beginning || system:jabref 51-pullrequest6528455--2020-05-26--0965648windows 10 100 amd64 java 1401if it can help with the problem (sorry if this is naive!):by directly typing into the multi-line tab ""{} biblatex source""  (with 1 field) the problem of jumping is not there maybe you could use the same code used there for the fields showing the problem?moreover i just discovered that typing into the multi-line fields as ""abstract"" and ""comment"" (those with the problem) you have you have a lag for which if you type fast you cannot see what you are typing: a problem you do not have when directly typing within ""{} biblatex source"" where typing is a much smoother (normal) experience || next round of testing: https://buildsjabreforg/pull/6528/merge/ :grin: thank you all for your patience this bug seems to be somewhat tricky to catch || expected behaviour should be now after 8bcc65b:while editing the contents of the editor field should always remain the same including whitespaces etc after changing the entry and saving the contents are trimmed@gianlucabaldassarre thanks for the note the source editor is using a different kind of entry editor called richtextfx (or to be exact codearea) this editor has higher demands on memory and processor time so we try to use this only when necessary || hm i tested your latest changes on this branch for me its still happening  || i really dont get it it worked for me maybe you something i dont see yetcan you please describe step by step what you are doing? || i recorded a gifi started jabref from eclipse with addtional command line parameter `--debug`![jabref_comment](https://user-imagesgithubusercontentcom/320228/83163650-91bcc080-a10b-11ea-80a1-c01013b0bf38gif) || @siedlerchr can you set a breakpoint in the binding code and see if its called (and if yes with which values of before/after) || okay debugging reveals:the binding code triggers for every entered charit seems there is some issue with line breaksi just typed a and a newline and another a in the next linenewvalue: `a\na\n`oldvalue: `a\r\na` || ahhhthe textarea always uses `\n` for line breaks (its hard-coded: https://githubcom/openjdk/jfx/blob/master/modules/javafxcontrols/src/main/java/javafx/scene/control/textareajava#l129) but jabref uses `osnewline` upon save  || oh no that raises more problemsso the basic solution should actually be right now its about how the textarea is compared to the newvalue should be enough to replace in the string every `osnewline` with `\n` || thinking about it it might also be the reason for some of the ""library has been modified by another application"" issues https://githubcom/jabref/jabref/issues/4877 maybe we should rethink the newline handling on save || should we always save in the os specific format and rework it on loading? i think this demands a more serious discussion || > moreover i just discovered that typing into the multi-line fields as ""abstract"" and ""comment"" (those with the problem) you have you have a lag for which if you type fast you cannot see what you are typing: a problem you do not have when directly typing within ""{} biblatex source"" where typing is a much smoother (normal) experiencethe reason for the lag could be the preview window could you please try to deactivate the preview window in preferences->preview restart jabref and try again? || yes i confirm that typing is smooth if i ""deactivate the preview window inpreferences->preview"" as you suggestedhowever having the preview on the right of each field-tab is quiteannoying (at least for me) for two reasons:1) it takes a lot of space from the field windows (and why should i need tocontinuously see the preview?)2) the preview flickers while you type anything your corner-eye sees itand this is highly annoying/distracting (indeed peripheral vision hasevolved to be strongly sensitive to changes! : )an observation/suggestion that maybe might be used to solve both theproblem of flickering and of the updating of the preview window creating ahorrible lag on typing: you could change the program so that the content ofthe preview is updated only when you change field (or when you do a similaroperation that means you have finished to update the field) rather thaneach time that you type something indeed updating the previouw iscomputationally complicated and causes the problems above and one does notactually need a preview that is always updatedi understand that the on-line update of the preview ""looks cool"" but if itimpairs the key functionality of being able to type the fields smoothly(!) and it prevents the use of the handy ""preview window"" functionalityit is surely not worth it!on thu 28 may 2020 at 20:59 carl christian snethlage <notifications@githubcom> wrote:> moreover i just discovered that typing into the multi-line fields as> ""abstract"" and ""comment"" (those with the problem) you have you have a lag> for which if you type fast you cannot see what you are typing: a problem> you do not have when directly typing within ""{} biblatex source"" where> typing is a much smoother (normal) experience>> the reason for the lag could be the preview window could you please try> to deactivate the preview window in preferences->preview restart jabref> and try again?>> —> you are receiving this because you were mentioned> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/6528#issuecomment-635535452> or> unsubscribe> <https://githubcom/notifications/unsubscribe-auth/adnlqd743e7744bik5ta7wtrt2ycrancnfsm4nktoarq>> > || @siedlerchr i think the build currently fails because of merging this pr (architecture violation) || "
787,6042,6554,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,fix group hit counter calculation preferences closes #6244 fixes #6042created this pr because i kinda messed up the git history in pr 6244- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository after short videocall with @koppor this should be safe to merge ||
788,6244,6554,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,fix group hit counter calculation preferences closes #6244 fixes #6042created this pr because i kinda messed up the git history in pr 6244- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository after short videocall with @koppor this should be safe to merge ||
789,6529,6558,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"use letters to acess recent libraries in menu <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6529 after fix the issue: (i typed 1 then 2 then 2)![k8xvnkfj8t](https://user-imagesgithubusercontentcom/55199983/83321605-57762f00-a283-11ea-8050-bbf5079d5ed4gif)it can open a database relative to typed key and i also checked that when typing a letter not a num(eg a) there will be nothing to happen and if type a num larger than the max index of history record nothing will happen as wellthe main idea to solve this issue is to add key event listener in `jabrefframejava` and design relative handle function `openfilebykey()`![image](https://user-imagesgithubusercontentcom/55199983/83321745-4f6abf00-a284-11ea-838f-a73e34e7672dpng)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
790,5815,6567,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix exception for unlinked files <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #5815 exception when importing certain unlinked local files1 for some certain files they have metadata but cannot find start or end tag so cause exception i added statements to check if can find start or end tag and if the position of start tag before end tag in metadata2 original `private list<path> getfilelistfromnode(checkboxtreeitem<filenodewrapper> node) ` method just can find children nodes so causes that files under subfolder cannot be found then cannot be imported i modified this method to iterate find all selected leaf nodes<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository just another wish it would be really cool if you could a test for the fix in the xmputilreader as well see  `xmputilreadertest` || ok ill try || done || done || thanks for the quick follow up! ||"
791,6577,6578,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix xmp exctrator not returning empty optional fixes #6577<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
792,6420,6586,1,0,0,1,0,1,1,0,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"validates the file path of a texgroup and fixes texgroups ""library has been modified by another program"" fixes #6420fixes #6585- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i dont know where to put `import orgapachelogginglog4jcoreutilfileutils` wherever i put it checkstyle fails || @systemoperator  we have our own fileutil class in model or logic beware of the import  || checkstyle is failing because of now unused import iofile || apparently this pr also fixes #6394 at least i could not reproduce it so far i will test it onwards || > just to make sure that i understand the changes correctly: the issue is fixed by parsing the groups last?yes because the groups access data which need to be defined beforehand depending on the sequence in the entry set this may work once but not every time || now without stream^^any suggestion how to test the case mentioned at https://githubcom/jabref/jabref/pull/6586#pullrequestreview-425395135? || the code looks good to me! for the test it should be similar to the following:https://githubcom/jabref/jabref/blob/7cc57474b7aa991ef6ea148d4030d4bb68ee69bf/src/test/java/org/jabref/logic/importer/fileformat/bibtexparsertestjava#l1369-l1389create the string by hand (with groups before the other setting that makes troubles) and then verify that the groups in the parsed metadata has the valid data || the test was a bit tricky (access real file relative user name hostname ) but it works now ||"
793,6585,6586,1,0,0,1,0,1,1,0,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"validates the file path of a texgroup and fixes texgroups ""library has been modified by another program"" fixes #6420fixes #6585- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i dont know where to put `import orgapachelogginglog4jcoreutilfileutils` wherever i put it checkstyle fails || @systemoperator  we have our own fileutil class in model or logic beware of the import  || checkstyle is failing because of now unused import iofile || apparently this pr also fixes #6394 at least i could not reproduce it so far i will test it onwards || > just to make sure that i understand the changes correctly: the issue is fixed by parsing the groups last?yes because the groups access data which need to be defined beforehand depending on the sequence in the entry set this may work once but not every time || now without stream^^any suggestion how to test the case mentioned at https://githubcom/jabref/jabref/pull/6586#pullrequestreview-425395135? || the code looks good to me! for the test it should be similar to the following:https://githubcom/jabref/jabref/blob/7cc57474b7aa991ef6ea148d4030d4bb68ee69bf/src/test/java/org/jabref/logic/importer/fileformat/bibtexparsertestjava#l1369-l1389create the string by hand (with groups before the other setting that makes troubles) and then verify that the groups in the parsed metadata has the valid data || the test was a bit tricky (access real file relative user name hostname ) but it works now ||"
794,6369,6587,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,"fix some fetcher tests refs #6369 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i think the inspire test can also be fixed seems like the bib item changed || the inspire test leaves me clueless the text is exactly the same maybe its about the line seperators? i was unable to debug the test myself can you maybe take a look at it @siedlerchr ? || for inspire change the line in the second entry to this:`        articlesetfield(standardfieldjournal ""nucl phys b"")`without the double back slashes || @siedlerchr and @tobiasdiez  could you do me a favor and take a look on the buildinfo stuff im not sure if i did that right and im unable to debug that according to the test log instead of the api key the ieee fetcher only recieves three asterisks from the build script is this normal? did i do something wrong? || the test log does not output the api keys it just outputs starts this is perfectly ok || this pr is done for now and should fix all the fetcher tests except ieee fetcher which depends most likely on a new api key || so we now only have mrdlib and ieee not working || strange mrdlib tests ran through an hour ago without complaining || "
795,6530,6590,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix ris doi import use doi parse and only add valid doisfollow up from #6557fixes #6530<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
796,6557,6590,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fix ris doi import use doi parse and only add valid doisfollow up from #6557fixes #6530<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
797,6591,6603,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fixed an issue where entry preview tab has no name in drop down list fixes #6591i didnt add ""preview"" to `jabref_enproperties` because already exists![image](https://user-imagesgithubusercontentcom/20928760/84149544-ea238480-aa60-11ea-8280-74fd45f974b1png)<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
798,6589,6608,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix downloaded files moved to citation key dir fixes #6589 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
799,6582,6635,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"change ""duplicates"" window to recall size/position the ""possible duplicate entries"" window now remembers its size and position throughout a session ([#6582](https://githubcom/jabref/jabref/issues/6582)) this was done by adding a dialogwindowstate class to the gui utils this class stores the size and position of the dialog window the statemanager class was modified to store this object it is retrieved whenever a new duplicateresolverdialog object is created to get the previous size and position and is updated whenever the user proceeds through the dialog options the dialogwindowstate class can be re-used if this feature is needed for other dialog windowsthis is my first ever pull request so please let me know what you think or whether i need to re-tool my approach to be more in line with the structure of the rest of the code! i did not include any screenshots as this felt like a sort of awkward fix to try and take screenshots of- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @gdstewart  thank you for your work i really like the ideaabout the implementation on first sight i would suggest two enhancements: could you inject the statemanager in duplicateresolverdialog in the constructor so we can do without using globals and secondly could you rework the dialogwindowstate class immutable?for other clean code principles we try to follow in jabref have a look at the excellent book java by comparison by two former developers of jabref https://javaby-comparisoncom/if you have questions dont hesitate to ask us in the gitter-chat https://gitterim/jabref/jabref || on first sight looks already pretty good besides some checkstyle issues got two ideas for improvements: instead of using magic strings (eg `""duplicate_resolver_dialog""` ) you could use the classname instead (`getclass()getsimplename()`) also if you are interested in implementing a tostring-method and a simple parser i believe this should be very simple to store in the preferencesthank you for your ongoing interest in jabref! || "
800,6073,6637,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,fixes issue where unix crashes when inotify is full previously the program was crashing for unix users when inotify had reached its max file limit since the only way to fix this seems to be to close applications or to edit privileged system files the proposed solution is to notify the user of the issue and give them the option of continuing usage of the application fixes #6073 since this is an important fix it should not be stalled @cttillman we hope that youll include other improvements in jabref so we want to share knowledge about the coding ideas in jabref the localization is a difficult thing here would you mind to fix the localization isse?![grafik](https://user-imagesgithubusercontentcom/1366654/86087605-e81f7500-baa4-11ea-97dc-df83dc89027dpng) ||
801,6602,6641,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,"medra doi fetcher implementation fixes #6602 i added the possibility to retrieve doi metadata from medra agency some dois return 500 code even if they are correctly registered at medra im waiting for the medra team to answer on that- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository in general looks already good! 👍 it would also be nice if you could add a/some tests for the new feature || looks good so far i only noticed one failing test you have to add the medra fetcher to the test array in orgjabreflogicimporterwebfetcherstest could you also please add one test case to the existing doi fetcher to check that it returns the correct value from medra? || ok i added a test case to doifetcher passedregarding the test array in orgjabreflogicimporterwebfetcherstest if ive correctly understood the logic i think i should remove medra fetcher in the below method instead of adding in this way tests are passed``` @test    void getsearchbasedfetchersreturnsallfetcherderivingfromsearchbasedfetcher() throws exception {        set<searchbasedfetcher> searchbasedfetchers  webfetchersgetsearchbasedfetchers(importformatpreferences)        try (scanresult scanresult  classgraphscan()) {            classinfolist controlclasses  scanresultgetclassesimplementing(searchbasedfetcherclassgetcanonicalname())            set<class<?>> expected  new hashset<>(controlclassesloadclasses())            expectedremove(searchbasedparserfetcherclass)            // remove acm because it doesnt work currently            expectedremove(acmportalfetcherclass)            // remove grobid because we dont want to show this to the user            expectedremove(grobidcitationfetcherclass)            // remove medra because it only works for id based search            expectedremove(medraclass)            assertequals(expected getclasses(searchbasedfetchers))        }    }```if you think this could be a proper approach i will commit || still checkstyle issues ill work on that || are you using intellij? then you can import the style and let the ide format your changes and organize the imports || nope eclipse || for the imports you can use ctr+ shift +o will organize the imports || i believe this has been a really great lesson for me since ive gone through several never encountered issues i hope this will be released at the end so i can move forward to another issuethanks a lot for your patience and guiding advices  || once your pr is merged in master it will be available in the next automatic build of development version https://buildsjabreforg/master/ || i think something went wrong with the merge of master into this branch need to investigate manually before merginggeneral remark: the discussion in this pr seems to be long?- are respective code comments added?- might it be necessary to add an [adr](https://adrgithubio/madr/)? || hi @koppor thanks for the feedbackone of the last commit was rejected with non-fast-forwarding error so i tried to pull the medra-fretcher branch back to local and then push back only the last changes could this have messed up something? and most important is there anything i should/could do for example creating new branch and work the implementation there?about comments i inserted a few lines in the code where i thought they could have help is this you are referring to?about adr probably i need some more instructions is it something i should do on my own?thanks again || live update: this commit is ok: https://githubcom/jabref/jabref/commit/81d5cc395b8704e17015659ec9d1b3065922ecc9 this one is not: https://githubcom/jabref/jabref/pull/6641/commits/85fc98f2305cb4c32074270bd3f1ef1d6adb216b have to think longer of how to solve itregarding the adr: the adr is something signifcat which cannot be put into a javadoc / comment alone i think your doi regsitry thing is something like that -- maybe its engough to have it in the javadoc / comment in this case - as its not such a significant thing such as selecting a build tool see https://githubcom/jabref/jabref/tree/master/docs/adr for adr examples || last commit https://githubcom/jabref/jabref/pull/6641/commits/a1089743739ddf9a1df58018028ab90e7267088b with some git magic i created 4f96aab which should revert all wrongly added changesnow im going to review || @mind000 why did you close this pr? did you delete the branch? i think it should only be necessary that you pull your branch hope i did not confuse you that i updated your branch! || i haven’t done anything  || i was just moving through the comment in the github app form mobile it’s strange i didn’t close it or i haven’t done it intentionally what should i do? should i reopen it? || just clicked on ""reopen pr"" and everything is back to normal - hopefully 🎉 with a ""git pull"" you should get the fixes in locally || i must thank you for the time you spent on this really i do sincerely appreciate your comments because that’s what i need and i understand  your point i will work on them  || thanks for your contribution @mind000 and the quick follow up! we hope you werent frightened by our reviews ) and we hope you will continue contributing!  || shit saw this only after merge:orgopentest4jassertionfailederror: the following classes are not allowed to depend on orgjabreflogic > expected: <[]> but was: <[src/main/java/org/jabref/model/entry/identifier/doijava]> || > shit saw this only after merge:> orgopentest4jassertionfailederror: the following classes are not allowed to depend on orgjabreflogic > expected: <[]> but was: <[src/main/java/org/jabref/model/entry/identifier/doijava]>anything i should do?this happened when i moved the `getagency` from `doifetcher` to `doi` || the idea behind our [high-level architcutre](https://devdocsjabreforg/getting-into-the-code/high-level-documentation) is to have the model as model package we are aware this leads to an [anemic domain model](https://wwwmartinfowlercom/bliki/anemicdomainmodelhtml)not sure whether downloading things should be part of a **model**think this is a devcall thing we should discuss whether we want to ""undo"" the seperation of model and logic what are our ""limits"" in model? @stefan-kolb  || as the build is broken now i would vote to simply change it back to the original eg move the agency fetching back to the fetcher || what should i do now?  || @mind000  just create a new pr where you move the doi agency getting back to the doifetcher class that is the simplest solution and this would not destroy our architecture constraints || so if i got it right i have to push the same files as the last commit i made changing only the getagency location  || as the code is already merged into masteryou fetch and pull the upstream master in your local masterthen you create a new branch and then you just move the getagency back todoifetcherthen you commit your changes and push your new branch and create a new pram mo 13 juli 2020 um 09:02 uhr schrieb giovanni caldarola <notifications@githubcom>:> so if i got it right i have to push the same files as the last commit i> made changing only the getagency location>> —> you are receiving this because you modified the open/close state> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/6641#issuecomment-657392947> or> unsubscribe> <https://githubcom/notifications/unsubscribe-auth/aacofzb6kfry2ywrd7kqbytr3kwrrancnfsm4ojdhzda>> > || for internal referencre: follow-up pr is https://githubcom/jabref/jabref/pull/6683thus everyhting should be fine now || "
802,6624,6642,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix for exception thrown if no delimiters were specified assigned default values for delimiters to fix the exception thrownfixes #6624 <!-- --><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i commited my update the required ""import"" is not added maybe someone can add it  otherwise ill try to find time on the weekend and go ahead with merging this is some kind of hotfix and should go in early || "
803,6638,6664,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,add collection of comp sci bibliographies fetcher fixes #6638- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your contribution! it would be nice if you could add some short documentation for the new formatters and the new fetcher to the help pages  || help page for formatters: https://githubcom/jabref/user-documentation/blob/master/en/finding-sorting-and-cleaning-entries/cleanupentriesmd --> https://githubcom/jabref/user-documentation/blob/master/en/advanced/saveactionsmdhelp page for fetchers: https://githubcom/jabref/user-documentation/tree/master/en/collect/import-using-online-bibliographic-database || yep ill add to the documentation! ||
804,6625,6682,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"rework search bar ![picturemessage_3ata4qts chg](https://user-imagesgithubusercontentcom/50491877/87246991-42c7b200-c451-11ea-9a4d-2f5e11be92e8png)fixes #6625 - [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > the changes look good to me the only concern that i have is that the search bar is now really small thus while editing a more complex query it is no longer possible to see the complete query (and ""scrolling"" in a text field is rather tedious) this was the main reason for the ""extend on focus"" mode im not particularly attached to the extend animation but it should be still possible to comfortably edit more complex queriesim not quite sure i understand what you mean about the small search bar i removed the previous restriction of the searchbar to expand to the right so now its always extended the empty space still showing between the searchbar and the toolbar buttons is left over from before and shows ""found x entries"" i did not yet had a good idea what to do with this message so i did not touch it (except adding 4 pixels distance to the searchbar)for comparison: this is how the master branch looks right now:![grafik](https://user-imagesgithubusercontentcom/50491877/87455322-8cf19480-c605-11ea-9fdf-9d01182a6a27png) || ah ok then i misread the code and the first screenshot - i thought thats now the size of the search bar  || maybe the stored value is corrupt and not parseable by value of || "
805,6692,6693,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fixed issue 6692 fixes #6692 renamed listbind to bindcontent where it was used  
806,3920,6706,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,"readability for citation key patterns <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #3920 the issue is that `authorlist#fixauthorforalphabetization` is used to create a `string` representation of authors names this can leave unbalanced brackets if a name piece starts with a latex command as it is not the intended use of the methodthe suggested fix is to resolve latex in the name of an author and then remove any illegal characters in the post-processing (which is dependent on if it is going to be used as a file path or citation key) as unicode characters are already allowed in the name of an author this change should not affect users too much it will however* have slower performance as all authors are being processed as if they contain latex* **in almost all cases that contain latex it will produce different output than the previous solution****as always these are only suggestions any comments and criticism are encouraged!**the ""intuition"" behind the suggestion is that latex in strings will always be hard to deal with and i think most users expect a pattern to resolve to something as similar as possible to what is shown in the main table**what remains**- [x] verify that the `citationkeygenerator` does not output unicode keys- [x] ~remove the `latex_to_unicode` modifier as it should not be used~- [x] change access modifiers for methods in `bracketedpattern` id suggest that most should be private or protected- [x] ~change how arguments are parsed for `auth/ed` patterns (readability)~- [x] add test cases for this issue- [x] test for character classes in regexp- [ ] fix parsing of bracketed patterns- [ ] fix the conversion of unicode to characters allowed in bibtex keys in `citationkeygenerator`<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository a test case for this particular issue (where starting brackets can cause a problem) will be added! it is just taking a bit of time since i havent been able to spend as much time on this as i would have wanted 🙁 id argue that it is motivated to make several methods in `bracketedpattern` private but then test cases in `citationkeygeneratortest` depends on them being public -> a lot of refactoring> for your discussion of the consequences maybe an [adr](https://adrgithubio/madr/) could be the proper formati should have written most of the pull request in adr format? || the issue of unbalanced brackets is adressed by converting all authors names to unicode however id benefit from a second (and/or third) opinion at this point several **cite key** patterns do not work as expected when names containing latex are converted to unicodeexample:`[auth2]` for ""gödel"" would result in ""goe"" `[authn]` should get the first n character of the authors last namei extended the workaround that already existed for `authn`https://githubcom/jabref/jabref/blob/156d22ef9d65392973a44c88c61ae42672d637fc/src/main/java/org/jabref/logic/citationkeypattern/bracketedpatternjava#l900-l902 to several other `auth`/`edt` patterns (and i will update those patterns in the documentation if this solution is acceptable)an alternative would be to extend the workaround from `authn` to all author/editor patterns which would give more consistent results (all authors names will contain replacements for unicode characters) for files directories and cite keysthe issue where `bracketedpattern` cant use unicode because of restrictions in `citationkeygenerator` can be avoided entirely by preprocessing the bibentries in citationkeygenerator but i dont feel i can adequately judge the advantages/disadvantages of the different solutions that would accomplish this so id rather leave it to someone else if there are future issues/complaints**so the alternatives are**1 leave the behaviour as is2 replace all unicode characters for patterns that requires the number of character to be known in advance3 replace all unicode characters in all patterns with authors names i d maybe 4th i can continue attempting to fix this ""properly"" (allow unicode in all patterns for `bracketedpattern` and disallow for `citationkeygenerator`) but it will result in even more work for a reviewer || (thank you for the longer explanation now i begin to understand what your are really adressing your pr was full of good code style improvements which ditracted me to focus on the underlying issue)context for others: the pr addresses the issue that the patterns are used for something diferent than the bibtex key generation (""label pattern"") documentation at https://docsjabreforg/setup/bibtexkeypatterns#key-patterns our patterns have ""magic"" built in such as shortening each element to `n` letters we dont offer a streaming approach as [crush](https://githubcom/liljencrantz/crush) does (just linking for presenting an idea not applicable as solution in this context)i would expect following behavior:- (i) when using in the bibtex key generator the non-ascii characters are converted to a ""good"" representation (as in your example: göd -> goe)- (ii) when using the pattern in other places the unicode represation is usedreason: unicode is working in the year 2020 the only exception are bibtex keys because the bibtex tooling is not fully utf8 (biblatex+biber is but not the more commonly used bibtex tool) thus we will have to add a separate handling herefor case (i) the author stated `:latex_to_unicode` as you pointed out the length restriction wont work thereto achieve the different handling you already stated the solution:>  entirely by preprocessing the bibentries in citationkeygeneratori like that! then the  ""he workaround that already existed for `authn`"" is obsolete---minor issue: is the example of https://githubcom/jabref/jabref/issues/3920 included in a test case here?i think this somehow refs https://githubcom/koppor/jabref/issues/392 || > i think this somehow refs [koppor#392](https://githubcom/koppor/jabref/issues/392)how? 😛 > minor issue: is the example of #3920 included in a test case here?the example relates to `bracketedpattern` it is my ""solution"" of that example that make the consequences for `citationkeygenerator` harder to ignore which is why my discussion is focused on that parthttps://githubcom/jabref/jabref/pull/6706/files#diff-2d88a18eec12a5bc7ee602a1bba56168r271-r277> > > entirely by preprocessing the bibentries in citationkeygenerator>  > i like that! then the ""he workaround that already existed for `authn`"" is obsoletethis is (based on my current understanding) non-trivial which is why i havent done it and why it would require more time from reviewers if i attempt to implement it ill get back with a write-up on why but itll be somewhat lengthy || hum ill give it a shot and if it is too annoying to review we can just revert it x) || >  i have some nitpick comments nitpicking is always welcome i am new enough at this that a ""nitpick"" is still a learning experience 😝 tell me if i should focus more on the actual issue since it was/is tagged as a high priority bug || id like som input on patterns such as `[auth[auth[auth` based on [the coding guidelines](https://devdocsjabreforg/getting-into-the-code/code-howtos#throwing-and-catching-exceptions) i believe they should throw an exception and generate a warning message is this correct?this is relevant as ""unifying"" the parsing of the patterns (id like it in one spot not three) will make it easier to ensure that the `unicode -> ascii` conversion use a valid string || is it possible to fix checkstyle? this does not look good:> /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/citationkeypattern/citationkeygeneratortestjava:9: error: package orgjabrefmodelbibtexkeypattern does not exist || > seeing the long list of changes i would suggest to merge this in - and then work on the two remaining open points - otherwise it will get harder and harder to reviewsorry about that i didnt really expect to go down this routeafter the merge ill open up a pr for issue #6892 dealing with parsing`<edit>`i realized this pr still closes issue #3920 the problem with converting unicode characters is not in the issue tracking system i can open up a pr for it after #6892 is fixed if that sounds reasonable?`</edit>` || >> seeing the long list of changes i would suggest to merge this in - and then work on the two remaining open points - otherwise it will get harder and harder to review > sorry about that i didnt really expect to go down this routeno need to be sorry i have to thank you that you  keep working on the pr even if much time is spend on the code quality> after the merge ill open up a pr for issue #6892 dealing with parsingyear thank you for that!> i realized this pr still closes issue #3920 the problem with converting unicode characters is not in the issue tracking system i can open up a pr for it after #6892 is fixed if that sounds reasonable?sure step by step || "
807,6588,6723,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"delete link after download fixes #6588<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository replaced `optional<integer>` by `int` as we directly operate on the list and do not use the full power of `optiona` || i dont really think that the new version is much more readable but ok || @koppor please test 1 pre-condition: entry with link (in the file field)2 right-click: download3 link should be replaced || tried it out locally works![grafik](https://user-imagesgithubusercontentcom/1366654/89350528-7f817480-d6b0-11ea-889a-7fe3532ebf21png) ||"
808,5790,6725,1,0,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,"add css customisation this pr continues the abandoned pr #6036as discussed in the devcall we are now aggressivly finishing those prs we would like to include in jabrefworks so far yet i still want to make some changes with the opticsintroduces also appearancepreferences(screenshots are out of date see below)fixes #5790- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository as you are working on that theme and preferences stuff maybe you can also check for this issue/pr?  #6429 || sure ill have a look || i dont really see the value in the export button instead i would focus more on a good documentation on how to create a custom theme linking the main and darkcss in our repo or do i miss something? || to be honest i dont see any advantage in the export button too but in the first step i just wanted to preserve the effort the students put in it and to address the raised issues in the predecessor pr now im thinking about how to improve it so ideas are welcomebtw we should really think of cleaning up our css-files and to distinguish between changeable stuff and unchangeable this is kind of messed up atm all through the codebase || ok then i would propose to remove the export dialog - also makes the implementation more streamlinednot sure what you mean with ""changeable"" vs ""non-changable"" in the css code i think themes can override everything || there are many specialized css files eg for the entry editor for the preferences dialog for the groups (i think i remember) partially because we do some detail styling in these specialized css files which are not customizable || i took some time to debug the issue in #6429 i tried to introduce a listener```easybindwrapnullable(dialogpaneproperty())subscribe(pane ->                globalsgetthemeloader()installcss(getdialogpane()getscene() globalsprefs))```in the basedialog constructor the problem seems to be that java only calls the subscriber when already this dialog was opened before so it works but only on the second attempt strange maybe @siedlerchr has a clue but since this issue is not directly connected to this pr i suggest we follow it in #6429 also i noticed we have to make the controls dependend on the selected font size since they wont be displayed properly if the font size is increasedtherefor this pr should be ready review![grafik](https://user-imagesgithubusercontentcom/50491877/90028431-f246ad00-dcb9-11ea-9387-a965f418509bpng) || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethinils streijffertqingshiqingliuwangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```nils streijffert``` || "
809,6036,6725,1,0,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,0,"add css customisation this pr continues the abandoned pr #6036as discussed in the devcall we are now aggressivly finishing those prs we would like to include in jabrefworks so far yet i still want to make some changes with the opticsintroduces also appearancepreferences(screenshots are out of date see below)fixes #5790- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository as you are working on that theme and preferences stuff maybe you can also check for this issue/pr?  #6429 || sure ill have a look || i dont really see the value in the export button instead i would focus more on a good documentation on how to create a custom theme linking the main and darkcss in our repo or do i miss something? || to be honest i dont see any advantage in the export button too but in the first step i just wanted to preserve the effort the students put in it and to address the raised issues in the predecessor pr now im thinking about how to improve it so ideas are welcomebtw we should really think of cleaning up our css-files and to distinguish between changeable stuff and unchangeable this is kind of messed up atm all through the codebase || ok then i would propose to remove the export dialog - also makes the implementation more streamlinednot sure what you mean with ""changeable"" vs ""non-changable"" in the css code i think themes can override everything || there are many specialized css files eg for the entry editor for the preferences dialog for the groups (i think i remember) partially because we do some detail styling in these specialized css files which are not customizable || i took some time to debug the issue in #6429 i tried to introduce a listener```easybindwrapnullable(dialogpaneproperty())subscribe(pane ->                globalsgetthemeloader()installcss(getdialogpane()getscene() globalsprefs))```in the basedialog constructor the problem seems to be that java only calls the subscriber when already this dialog was opened before so it works but only on the second attempt strange maybe @siedlerchr has a clue but since this issue is not directly connected to this pr i suggest we follow it in #6429 also i noticed we have to make the controls dependend on the selected font size since they wont be displayed properly if the font size is increasedtherefor this pr should be ready review![grafik](https://user-imagesgithubusercontentcom/50491877/90028431-f246ad00-dcb9-11ea-9387-a965f418509bpng) || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethinils streijffertqingshiqingliuwangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```nils streijffert``` || "
810,6293,6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix copy pasting and delete via menu or key add hack for osxcaveat: prevents pasting using cmd+v on an empty library menu pasting however worksfixes #6739 fixes #6738 fixes #6293 would be nice if someone could test this for windows/linux as well<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository this bug reoccurs for me on jabref 51--2020-08-22--dc55a76linux 5419-050419-generic amd64 java 1402i cant help but now under linux neither the cut/copy nor paste buttons seem to work anymore consistently im using as you can see a jabref just a couple of days old however using keyboard shortcuts works as usual ||"
811,6738,6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix copy pasting and delete via menu or key add hack for osxcaveat: prevents pasting using cmd+v on an empty library menu pasting however worksfixes #6739 fixes #6738 fixes #6293 would be nice if someone could test this for windows/linux as well<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository this bug reoccurs for me on jabref 51--2020-08-22--dc55a76linux 5419-050419-generic amd64 java 1402i cant help but now under linux neither the cut/copy nor paste buttons seem to work anymore consistently im using as you can see a jabref just a couple of days old however using keyboard shortcuts works as usual ||"
812,6739,6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix copy pasting and delete via menu or key add hack for osxcaveat: prevents pasting using cmd+v on an empty library menu pasting however worksfixes #6739 fixes #6738 fixes #6293 would be nice if someone could test this for windows/linux as well<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository this bug reoccurs for me on jabref 51--2020-08-22--dc55a76linux 5419-050419-generic amd64 java 1402i cant help but now under linux neither the cut/copy nor paste buttons seem to work anymore consistently im using as you can see a jabref just a couple of days old however using keyboard shortcuts works as usual ||"
813,6405,6746,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix entry gets deleted after aux import set changed flag on clone also for misc entry type because otherwise it equals the default entry type and no change is triggered which results in the entry not beeing written to the database on savefixes  #6405simplify gui code<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository @calixtus and me implemented all required changes || manually tested the changes again all good merge now ||"
814,6574,6747,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"[6574] added support for biblatex-software added change to changelogfixes #6574 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pr is in reference to #6574 added the new biblatex software entries under a new divider like the below image![biblatex-software](https://user-imagesgithubusercontentcom/13389954/89727491-13ea2f00-da43-11ea-8705-7773fc349a0dpng)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @koppor i have gone ahead and made a draft set of changes for #6747 - created a divider like in ieeetran for bibtex and added the software entries under iti am yet a little un-clear on the customized entry type flow  so i have not progressed on that  do give your thoughts || hi @hemantgs on first sight codewise your changes look good to methank you very much for your work on this featurei also was thinking about abstraction of this feature in the mid to far future maybe something to decide on jabcon2020 so dont think of it in this pr: one could activate native support for biblatex-software or ieee or for music or other biblatex drivers as an additional feature in the preferences || yep codewise looks already good! || @calixtus @siedlerchr cool 👍 would it make sense to add change to the documentation page also ? || yes i think that makes sense and to have a nice newer screenshot for here and the entry id manuallyhttps://docsjabreforg/collect/add-entry-manuallyand it would then be nice if you could add a hint that the new entry types dialogue content is dependent on the bibdatabase mode https://docsjabreforg/collect/add-entry-using-an-id || > thank you for working on it i have some refinemenets to the adrhi @koppor i have updated the adr per the review comments  please do have a look || thank you very much for your contribution and for creating an adr! || id id not the final check on the pr we missed two things now breaking master:## unit test related to this pr fail![grafik](https://user-imagesgithubusercontentcom/1366654/90988562-f022ff00-e593-11ea-8dc0-7d3d8849976dpng)## markdown-lintthis is an easy fix (linter ensure consistent formatting of all files)![grafik](https://user-imagesgithubusercontentcom/1366654/90988552-dda8c580-e593-11ea-871c-fffd4afdd1e6png) || markdown-lint is already fixed in master 🎉  || not sure why the other pr complained ther: https://githubcom/jabref/jabref/runs/1016112813?check_suite_focustrue || markdown was fixed i overlooked the unit test probably because of the failing architecture thingprobably need to add those b iblatex software somehow to the test can look into this tomorrow || fixed  by @calixtus  || test fixed at https://githubcom/jabref/jabref/pull/6780 || looks like i overlooked the unit test  apologies guys || we did so too no need to apologize :wink:  ||"
815,6753,6760,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,fix html chars formatter for percent sign fixes #6753 - [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your fix! the changes look good to me could you please add a change log entry and add a few tests to https://githubcom/jabref/jabref/blob/master/src/test/java/org/jabref/logic/layout/format/htmlcharstestjava@koppor the validate authors workflow is failing can you please have a look! || @tobiasdiez fixed in https://githubcom/jabref/jabref/commit/f2c8748712084b63ea1cc25a9ae9d69c35c885b2 reason was unescaped backtick and quotes in the message output refs https://githubcom/jabref/jabref/pull/6722 i did not test my review-updates properly ||
816,6175,6768,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,merge identical group color indicators fixes #6175 this pr finishes the prs of @wangaooa (see #6566 ) and does some cleanup in the maintablecolumnfactory: linkedidentifiercolumn filecolumn and specialfieldcolumn is now extracted in separate classes- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```wangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethiwangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethiqingshiqingliuwangaooa``` || checkstyle is happy again so i am merging ||
817,6566,6768,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,merge identical group color indicators fixes #6175 this pr finishes the prs of @wangaooa (see #6566 ) and does some cleanup in the maintablecolumnfactory: linkedidentifiercolumn filecolumn and specialfieldcolumn is now extracted in separate classes- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```wangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethiwangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethiqingshiqingliuwangaooa``` || checkstyle is happy again so i am merging ||
818,4461,6771,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"shared database synchronized by focuschangedevent this pr is related to #6663 and partly #4461shared database synchronization event in `dbmssynchronizer` is triggered by a `focuschangedevent` this is added similar to `fieldchangedevent` but has to be initiated from `entryeditor` (?)i have manually tested the new code - _and it does not work_ maybe we can discuss changes through this pull requestthank you for your help i tried firing the event via the `bibentry` method `setfocusedfield` again this method is called by `entryeditor` via `setfocustofield`but i dont know if this is generally possibleperhaps the second commit is a bit irritating it is only uncommenting something in `dbmssynchronizer` sorry for thatthe important commit is `87adec3b`  || its a bit complicated with all those listenesthe eventbus is a local object  in fact its similar to the classical eventlistener in gui an even its relayed to its parend until its handled the only difference is that we do this relaying here manuallywhen you add a new event in bibentry you have to relay that to the call chainhttps://githubcom/jabref/jabref/blob/37099243160e43b6658ec13d997da7468e426a67/src/main/java/org/jabref/model/database/bibdatabasecontextjava#l196-l202and the corasechangefilter register itself here:https://githubcom/jabref/jabref/blob/4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b/src/main/java/org/jabref/model/database/event/coarsechangefilterjava#l19-l23it registers itselt as a listener on bibdatabaseand bibdatabase finally register itself on each entry:https://githubcom/jabref/jabref/blob/9d17101626571966d8278bb7fbd02129eff78a71/src/main/java/org/jabref/model/database/bibdatabasejava#l198-l206so you need to listen for the focuschangedevent and relay that || thank you for your help finally i deleted all `focuseventchanged`-related stuff and concentrated on `coarsechangefilter`there i introduced a `delaytaskthrottler` for the `eventbuspost(event)` also i revised the conditionals while introducing three conditions:- `isnewedit`: editing right after loading shared database- `iseditonotherfield`: editing other field  changes on previous field should be synchronized- `ismajorchange`: some editing with much character inputi found out that a throttled task will not interrupt any input that means if a `fieldchangedevent` is posted with delay you can write further until database synchronization appears in the worst case you lose some information because all characters typed in after the event are not synchronized furthermore it appears that when the event is posted during delay jabref hangs upcan you reproduce this problems? in general it works as intendedanother idea: what about throttling _all_ `fieldchangeevent`s in order to not interrupt input process? then we would have to ensure that all pending synchronization events would be ready before closing the database we could add an indicator in the gui for this purpose or add something on closing-database event || side note: we have an internal discussion ongoing why not using javafx observables everywhere - instead of the event bus not fully checked all aspects until now will (hopefully) be done at [jabcon](https://jabconjabreforg/) do you have a ""feeling"" on that? || i have not much experience with javafx observables but it seems like they are directly bound to gui elementsthus events maybe could only be fired less in accordance to the gui on the other hand it would be an advantage to use gui events from everywhere with little efforti think the `coarsechangefilter` would become obsolete wouldnt it?so why not giving observables a try  || thanks a lot @m-mauersberger! ive fixed a few very minor things that i noticed and will merge now looking forward to your next pr || "
819,6663,6771,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"shared database synchronized by focuschangedevent this pr is related to #6663 and partly #4461shared database synchronization event in `dbmssynchronizer` is triggered by a `focuschangedevent` this is added similar to `fieldchangedevent` but has to be initiated from `entryeditor` (?)i have manually tested the new code - _and it does not work_ maybe we can discuss changes through this pull requestthank you for your help i tried firing the event via the `bibentry` method `setfocusedfield` again this method is called by `entryeditor` via `setfocustofield`but i dont know if this is generally possibleperhaps the second commit is a bit irritating it is only uncommenting something in `dbmssynchronizer` sorry for thatthe important commit is `87adec3b`  || its a bit complicated with all those listenesthe eventbus is a local object  in fact its similar to the classical eventlistener in gui an even its relayed to its parend until its handled the only difference is that we do this relaying here manuallywhen you add a new event in bibentry you have to relay that to the call chainhttps://githubcom/jabref/jabref/blob/37099243160e43b6658ec13d997da7468e426a67/src/main/java/org/jabref/model/database/bibdatabasecontextjava#l196-l202and the corasechangefilter register itself here:https://githubcom/jabref/jabref/blob/4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b/src/main/java/org/jabref/model/database/event/coarsechangefilterjava#l19-l23it registers itselt as a listener on bibdatabaseand bibdatabase finally register itself on each entry:https://githubcom/jabref/jabref/blob/9d17101626571966d8278bb7fbd02129eff78a71/src/main/java/org/jabref/model/database/bibdatabasejava#l198-l206so you need to listen for the focuschangedevent and relay that || thank you for your help finally i deleted all `focuseventchanged`-related stuff and concentrated on `coarsechangefilter`there i introduced a `delaytaskthrottler` for the `eventbuspost(event)` also i revised the conditionals while introducing three conditions:- `isnewedit`: editing right after loading shared database- `iseditonotherfield`: editing other field  changes on previous field should be synchronized- `ismajorchange`: some editing with much character inputi found out that a throttled task will not interrupt any input that means if a `fieldchangedevent` is posted with delay you can write further until database synchronization appears in the worst case you lose some information because all characters typed in after the event are not synchronized furthermore it appears that when the event is posted during delay jabref hangs upcan you reproduce this problems? in general it works as intendedanother idea: what about throttling _all_ `fieldchangeevent`s in order to not interrupt input process? then we would have to ensure that all pending synchronization events would be ready before closing the database we could add an indicator in the gui for this purpose or add something on closing-database event || side note: we have an internal discussion ongoing why not using javafx observables everywhere - instead of the event bus not fully checked all aspects until now will (hopefully) be done at [jabcon](https://jabconjabreforg/) do you have a ""feeling"" on that? || i have not much experience with javafx observables but it seems like they are directly bound to gui elementsthus events maybe could only be fired less in accordance to the gui on the other hand it would be an advantage to use gui events from everywhere with little efforti think the `coarsechangefilter` would become obsolete wouldnt it?so why not giving observables a try  || thanks a lot @m-mauersberger! ive fixed a few very minor things that i noticed and will merge now looking forward to your next pr || "
820,6787,6788,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fix cleanup field formatters not working when enabled fixes #6787the problem orginally comes from here:https://githubcom/jabref/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/gui/commonfxcontrols/fieldformattercleanupspaneljava#l109unfortuantely its not possible to add a not() there directlythe method bindbidirectional(property<boolean>) in the type booleanproperty is not applicable for the arguments (booleanbinding)<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository done ||"
821,6369,6790,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,fix more fetchers this pr fixes fetchers (refs #6369):- add cleanup for library of congress- springerlink now uses the springernature api key (same key can be used) - refs #6729- add url logger for ieee (and other fetchers)---- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
822,6293,6808,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"refactor edit action fixes #6293needs testing unter linux<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository doi pasting still works tested again ||"
823,6705,6809,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"fixes #6705  added icon for multiple identifiers added icon for multiple identifiersand modified behaviour to open eprint when clicked without opening menuissue 1 :  icon for linked identifiers does not change when more than one entry is linkedthe web material design glyphicon did not have a ""plural"" variant so thought will change to this for singular variant![screenshot from 2020-08-30 11-34-19](https://user-imagesgithubusercontentcom/13389954/91652449-1a554f00-eab5-11ea-910e-9ca7c7943b6epng)and for the plural variant used this :smile:  can change this to something else too ![screenshot from 2020-08-30 11-34-46](https://user-imagesgithubusercontentcom/13389954/91652464-4244b280-eab5-11ea-8b8e-aec0dd54c7c2png)issue 2 :made changes so that when only one entry is available the link is opened immediately without the menu- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @hemantgs  thanks for your work i will look at it the next days || > thanks a lot for your contribution!> @tobiasdiez  :+1: glad to help > the code looks good to me and ive only a few very minor remarks concerning the icon im also not sure what to choose there doesnt seem to be a good icon for multiple links the database icon is already used in a few places (groups and shared database) so im a bit hesitant to use it here as well what about using the `link` and `link-variant`? other solution would be to keep the current `www` and use `earth` for multiple links?yeah my initial thoughts too  database icon is common this is `link`![screenshot from 2020-08-31 21-55-10](https://user-imagesgithubusercontentcom/13389954/91743118-f4bf6700-ebd4-11ea-967c-5a9b9190144dpng)and this is `link-variant `![screenshot from 2020-08-31 21-55-32](https://user-imagesgithubusercontentcom/13389954/91743168-06087380-ebd5-11ea-8b8f-1802296cf668png)and `earth` below does not look like indicating multiple entries  i feel![screenshot from 2020-08-31 22-02-15](https://user-imagesgithubusercontentcom/13389954/91743585-aa8ab580-ebd5-11ea-8362-c19a18b531afpng) || > greetings from the jabcon2020!was wondering what this was :smile:  google was not helpful || thanks for your work @hemantgs  we took the liberty to fix some small merge errors ||"
824,6293,6820,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"follow up fix for copy paste fixes #6293also enable paste menu/action for empty libraries with no entries yet<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
825,6697,6825,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"architecture fix by re-sorting the classes <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->to be merged after jabcon fixes #6697<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```m-mauersberger``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```chenyuheng``` ||"
826,6532,6833,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,fix/use format conversion for all imports this pr adds conversion of entries into the desired format for all importsfixes #6532 - [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository please fix the l10n errors:```this\ query\ uses\ an\ unsupported\ syntaxthis\ search\ contains\ entries\ that\ match\ all\ specified\ terms1 check if the key is really not used anymore2 remove these from the english language file > expected: <[]> but was: <[this\ query\ uses\ an\ unsupported\ syntax this\ search\ contains\ entries\ that\ match\ all\ specified\ terms]> orgopentest4jassertionfailederrororgopentest4jassertionfailederror: obsolete keys found in language properties file: this\ query\ uses\ an\ unsupported\ syntaxthis\ search\ contains\ entries\ that\ match\ all\ specified\ terms``` ||
827,6834,6858,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,fix icon issue fixes #6834changed the link used when we have only one entry to a single chain- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository![image](https://user-imagesgithubusercontentcom/34105280/92061703-cd3eda80-ed4b-11ea-9a6c-da306cf58bd3png) thanks for your contribution!i think that the icon that is currently used for entries with multiple dois should be used for entries with one doi and entries with multiple dois should use a new dedicated iconpropose:![image](https://user-imagesgithubusercontentcom/43381984/92096852-ac23cb80-edd7-11ea-8f24-2d844b5296acpng) || problem: we only use fontawesomeicons/materialdesign icons implementation of custom icons is a bit more effortmy suggestion: merge this as a quick fix to distinguish better between both types and see if we can find a better icon soon ||
828,5835,6871,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed copy key and link copy key and link from right-click menu creates a string that is not a url it includes the url but it also includes the keysethtmlcontent() was not appropriatefixes  #5835https://githubcom/jabref/jabref/issues/5835- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository codewise looks good plase fix the remaining checkstyle errors just click on the details of the failing tests to see them ||
829,6878,6879,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,"fix pasting in codearea under mac codearea does not implement textinputcontrolfixes #6878it would be if someone could test this under linux and windows1 copy bibtex entry2 paste in source code editor in entry editor3 pasting works and no duplicates on the maintable<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```mlep``` || seems to work in linux and windows ||"
830,6707,6897,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,doi matching in duplicate check fixes #6707 follow up from #6756<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```andrewandrew kuncevich``` || @ku drew your problems probably came from the fact that your repos master branch is behind the naster branch of jabref1 on the commandlne check that git remote -v has listed sth like `upstream git@githubcom:jabref/jabrefgit` (can also the https link)if not then do:` git remote add upstream git@githubcom:jabref/jabrefgit `(if you use ssh otherwise use the https link)2 git checkout master3 git merge upstream/masterthen you master branch should be even with jabrefs upstream branch so creating a new branch and creating a pr wont poroduce any conflicts ||
831,6756,6897,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,doi matching in duplicate check fixes #6707 follow up from #6756<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```andrewandrew kuncevich``` || @ku drew your problems probably came from the fact that your repos master branch is behind the naster branch of jabref1 on the commandlne check that git remote -v has listed sth like `upstream git@githubcom:jabref/jabrefgit` (can also the https link)if not then do:` git remote add upstream git@githubcom:jabref/jabrefgit `(if you use ssh otherwise use the https link)2 git checkout master3 git merge upstream/masterthen you master branch should be even with jabrefs upstream branch so creating a new branch and creating a pr wont poroduce any conflicts ||
832,6880,6920,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"improve parsing of short dois fixes #6880no more erroneous interpretation as short doi of urls/notes like:- ""http://wwwcsutexasedu/users/kaufmann/itp-trusted-extensions-aug-2010/summary/summarypdf""- ""abccom/20/10/something/whatever""still correct detection of short dois hidden in urls as long as _doi_ is part of subdomain eg:- ""wwwdoixyzcom/10/abc123""correct detection of short dois like:- ""doiorg/ab123""- ""https://doiorg/ab123""added respective testsadded entry to changelog - [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository please fix the checkstyle issues you can install the extension in intellij directly:https://githubcom/jabref/jabref/tree/master/config```> task :classes[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:53:13: + is not followed by whitespace [whitespacearound]> task :checkstylemain[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:92:96:  is preceded with whitespace [nowhitespacebefore][ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:139:37: + is not followed by whitespace [whitespacearound][ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:139:37: + is not preceded with whitespace [whitespacearound]``` || > please fix the checkstyle issues you can install the extension in intellij directly:> https://githubcom/jabref/jabref/tree/master/config> > ```> > task :classes> [ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:53:13: + is not followed by whitespace [whitespacearound]> > > task :checkstylemain> [ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:92:96:  is preceded with whitespace [nowhitespacebefore]> [ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:139:37: + is not followed by whitespace [whitespacearound]> [ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/doijava:139:37: + is not preceded with whitespace [whitespacearound]> ```hi siedlerchrwhenever i try to add the checkstyle file to the checkstyle plugin i get the following error:```compuppycrawltoolscheckstyleapicheckstyleexception: cannot initialize module treewalker - unable to instantiate invalidjavadocposition class it is also not possible to instantiate it as invalidjavadocposition invalidjavadocpositioncheck invalidjavadocpositioncheck please recheck that class name is specified as canonical name or read how to configure short name usage https://checkstyleorg/confightml#packages please also recheck that provided classloader to checker is configured correctly	at compuppycrawltoolscheckstylecheckersetupchild(checkerjava:463)	at compuppycrawltoolscheckstyleapiautomaticbeanconfigure(automaticbeanjava:198)	at orginfernusideacheckstyleservicecmdopcreatecheckerexecute(opcreatecheckerjava:61)	at orginfernusideacheckstyleservicecmdopcreatecheckerexecute(opcreatecheckerjava:26)	at orginfernusideacheckstyleservicecheckstyleactionsimplexecutecommand(checkstyleactionsimpljava:130)	at orginfernusideacheckstyleservicecheckstyleactionsimplcreatechecker(checkstyleactionsimpljava:60)	at orginfernusideacheckstyleservicecheckstyleactionsimplcreatechecker(checkstyleactionsimpljava:51)	at orginfernusideacheckstylecheckercheckerfactoryworkerrun(checkerfactoryworkerjava:46)caused by: compuppycrawltoolscheckstyleapicheckstyleexception: unable to instantiate invalidjavadocposition class it is also not possible to instantiate it as invalidjavadocposition invalidjavadocpositioncheck invalidjavadocpositioncheck please recheck that class name is specified as canonical name or read how to configure short name usage https://checkstyleorg/confightml#packages please also recheck that provided classloader to checker is configured correctly	at compuppycrawltoolscheckstylepackageobjectfactorycreatemodule(packageobjectfactoryjava:210)	at compuppycrawltoolscheckstyletreewalkersetupchild(treewalkerjava:152)	at compuppycrawltoolscheckstyleapiautomaticbeanconfigure(automaticbeanjava:198)	at compuppycrawltoolscheckstylecheckersetupchild(checkerjava:458)	 7 more```what am i doing wrong?choosing the `intellij idea code style xml` as style file works but that alone doesnt have any discernible effect on anything sorry i am quite new to java and very new to intellij idea || no idea whats wrong with the plugin but you can always execute /gradlew checkstyle on the comandline ||"
833,6863,6928,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,"changed default value of ""search and store files relative to bibtex file"" to true fixes #6863~i think the problem was: if isbiblocationasprimary is not set the bib file dir has not been added to the list of searcheable directories at all if set it should be the first one to look up if not the last~see https://githubcom/jabref/jabref/pull/6928#issuecomment-697410826- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```nikolaus koopmann``` || there was a recent pr about this but i cannot find it i think it was by design to not add it to the list of search paths || mh a possible problem could be a design issue in basepaneljava (like marked here: https://githubcom/jabref/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3 )need to investigate this a bit further || maybe setting the default for this preference option to true is already enough? || the preferences option says: ""search and store files relative to library file location""ill change the misleading antique variable names to some more meaningful names and make them default onmaybe we need to set a note somewhere in the docs? || couldnt resist to make some heavy cleanups || "
834,6906,6933,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix remove actions for entry types in the editor fixes #6906* created separate view models for standard and custom entry types adding remove icon only for the custom ones* updated changelogmdits working solution but please take a look whether the implementation is good i will modify the user doc if its accepted<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository ive created request with user doc update: https://githubcom/jabref/user-documentation/pull/310 ||"
835,6583,6938,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fix for some unicode characters in citation keys <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6583  some unicode characters can be encoded in multiple ways and the mapping that `stringutil#replacespecialcharacters` relies on does not contain all cases the proposed solution uses [nfc](https://docsoraclecom/en/java/javase/14/docs/api/javabase/java/text/normalizerformhtml#nfc) to re-encode the characters so that these characters can be foundthere exists more information on [unicode normalization in the java api](https://docsoraclecom/en/java/javase/14/docs/api/javabase/java/text/normalizerformhtml#nfc)my subjective opinion is that most people expect unicode to work similar to nfc ie if characters looks the same it is likely that they are equivalent hence if someone debugs issues in the `unicode_char_map` they will expect nfca more holistic approach should likely start with the [compatibility equivalence](http://unicodeorg/reports/tr15/#compatibility_equivalence_figure) which will require larger changes and there does not seem to be any bugs/issues that requires these larger changes<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] ~change in changelogmd described (if applicable)~- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository @siedlerchr in my opinion it is a mess best avoided if possible x)i believe nfc is how most people expect unicode to work (which is why i am using it here) ill add some more details to the top part of the pr in case someone needs to patch this patch later ||"
836,6934,6941,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,fix: in entry types editor selected field is not removed after first click fixes #6934the issue is happening because cells with delete icon are set editable (because the whole table is set editable)https://githubcom/jabref/jabref/blob/129c36e24bbd3332832728124ebf27d2462a0300/src/main/java/org/jabref/gui/customentrytypes/customizeentrytypedialogviewjava#l111-l112<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for spotting and fixing this erro! i have adjusted the changelog a bit  ||
837,6369,6945,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix a fetcher test for the shortdoiservice <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this addresses one of the errors in the fetcher tests as run by the ci (see #6369) here is and [example of a test failure](https://githubcom/jabref/jabref/runs/1035408706?check_suite_focustrue#step:6:253) <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
838,6867,6960,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"corrected shortcut fixes #6867 a new shortcut combination added for ""pull changes from shared database"" because current ctrl+shift+r is already assigned for ""create tech report"" command- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i would remove all the standard keybindings for https://githubcom/jabref/jabref/pull/6960/files#diff-920a3cf78140f82ffcd3ba5b495cf73fl49-l54 then you can leave the pull changes keybinding at ""ctrl + shift + r"" what do you think? || im against removing the shortcuts at least article should be kept lets say what the other @jabref/developers say about this || yes article book new entry and new entry from plaintext should be kept but masterthesis phdthesis etc are not that important to have a default keybinding (i dont suggest to completely remove these bindings just their default value so that users can still activate them if they want) || @tobiasdiez so the following ""new"" shortcuts will be removed (see gray color):<img width""1131"" alt""screenshot 2020-10-05 at 10 51 53"" src""https://user-imagesgithubusercontentcom/20572030/95053323-ef37ce00-06f8-11eb-91ea-e5c933d5d0d6png"">correct? || i wouldnt remove them at all but their default valueso the user is still able to bind keys to the shortcuts if he likes || yes just provide an empty string as the third argument of these enum values and include new_techreport as well || empty string doesnt works )) when i try to open the menu it shows an error ill try to find the problemjavalangstringindexoutofboundsexception: begin 0 end 1 length 0	at javabase/javalangstringcheckboundsbeginend(stringjava:3756)	at javabase/javalangstringsubstring(stringjava:1902)	at javafxgraphics/javafxsceneinputkeycombinationnormalizetoken(keycombinationjava:630)	at javafxgraphics/javafxsceneinputkeycombinationvalueof(keycombinationjava:409)	at orgjabref@10000/orgjabrefguikeyboardkeybindingrepositorygetkeycombination(keybindingrepositoryjava:129)	at orgjabref@10000/orgjabrefguikeyboardkeybindingrepositorycheckkeycombinationequality(keybindingrepositoryjava:140)	at orgjabref@10000/orgjabrefguikeyboardkeybindingrepositorymaptokeybinding(keybindingrepositoryjava:116)	at orgjabref@10000/orgjabrefguijabrefframelambda$initkeybindings$5(jabrefframejava:236)	at javafxbase/comsunjavafxeventcompositeeventhandler$normaleventfilterrecordhandlecapturingevent(compositeeventhandlerjava:321)	at javafxbase/comsunjavafxeventcompositeeventhandlerdispatchcapturingevent(compositeeventhandlerjava:98)	at javafxbase/comsunjavafxeventeventhandlermanagerdispatchcapturingevent(eventhandlermanagerjava:221)	at javafxbase/comsunjavafxeventeventhandlermanagerdispatchcapturingevent(eventhandlermanagerjava:180)	at javafxbase/comsunjavafxeventcompositeeventdispatcherdispatchcapturingevent(compositeeventdispatcherjava:43)	at javafxbase/comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:52)	at javafxbase/comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114)	at javafxbase/comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56)	at javafxbase/comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114)	at javafxbase/comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56)	at javafxbase/comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114)	at javafxbase/comsunjavafxeventeventutilfireeventimpl(eventutiljava:74)	at javafxbase/comsunjavafxeventeventutilfireevent(eventutiljava:54)	at javafxbase/javafxeventeventfireevent(eventjava:198)	at javafxgraphics/javafxscenescene$keyhandlerprocess(scenejava:4098)	at javafxgraphics/javafxscenesceneprocesskeyevent(scenejava:2157)	at javafxgraphics/javafxscenescene$scenepeerlistenerkeyevent(scenejava:2625)	at javafxgraphics/comsunjavafxtkquantumglassvieweventhandler$keyeventnotificationrun(glassvieweventhandlerjava:217)	at javafxgraphics/comsunjavafxtkquantumglassvieweventhandler$keyeventnotificationrun(glassvieweventhandlerjava:149)	at javabase/javasecurityaccesscontrollerdoprivileged(accesscontrollerjava:391)	at javafxgraphics/comsunjavafxtkquantumglassvieweventhandlerlambda$handlekeyevent$1(glassvieweventhandlerjava:248)	at javafxgraphics/comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock(quantumtoolkitjava:412)	at javafxgraphics/comsunjavafxtkquantumglassvieweventhandlerhandlekeyevent(glassvieweventhandlerjava:247)	at javafxgraphics/comsunglassuiviewhandlekeyevent(viewjava:547)	at javafxgraphics/comsunglassuiviewnotifykey(viewjava:971) || @gena928 you pasated a png instead of using a link into the code (offered by the github ui) (or maybe additoinally)the affected keys are at `orgjabrefguikeyboardkeybinding#new_mastersthesis`cant we just add `alt+` at them to a) provide a shortcut (seems to be required according to the comment) and b) having a default short cut surely not conflicting?@gena928 while you are on it could you please add a shortcot for `new inproceedings`? in computer science we use that type in 80% of our cases and that would make jabref more comfortable to use || @koppor im very sorry for delay with this issue ill try to fix it today including shortcut for `new inprocessing` || @gena928 you should be able to fix this error by adding a few additional if-statements if the keybinding string is empty || @tobiasdiez  @koppor please review changes1) i solved the problem with empty `defaultkeybinding` string by adding an `if` statement in `keybindingrepositoryjava`2) key combinations for new_inbooknew_techreport changed from `ctrl+` to `alt+`3) i think now we can keep `ctrl+shift+r` for pull_changes_from_shared_databaseas it was initially what do you think?4) i also created new_inproceedings keybindingbut i cantt find this menu item in `createmenu()` method of `jabrefframe` class ))) sorry need help do we have such menu item? where? ))) || > @tobiasdiez  @koppor please review changescould you please resolve the conflicts please merge `upstream/master`>     1 i solved the problem with empty `defaultkeybinding` string by adding an `if` statement in `keybindingrepositoryjava`lgtm>     2 key combinations for new_inbooknew_techreport changed from `ctrl+` to `alt+`it was on purpose to **add** an additional modifier and not to change the modifier i was thinking that an additoinal moddifier is easer to remember instead of another modifierhowever having our discussion in mind we should just leave these shortcuts empty a user seldomly will use these shortcuts >     3 i think now we can keep `ctrl+shift+r` for pull_changes_from_shared_database>        as it was initially what do you think?thats good please revert your change to change the modifier to `alt+shift+d`>     4 i also created new_inproceedings keybindinglooks good>        but i cantt find this menu item in `createmenu()` method of `jabrefframe` class ))) sorry need help do we have such menu item? where? )))i dont quite get what you are referring to with ""this menu item"" in the normal entry creation menu it is already there: https://docsjabreforg/collect/add-entry-manually  i think your current code enoughi think it should also be added to `orgjabrefguifieldeditorstypeeditorviewmodel#typeeditorviewmodel` || @koppor done sorry for ""menu item"" i thought you can attach key bindings only to menu items but now i know about keys for  [https://docsjabreforg/collect/add-entry-manually](https://docsjabreforg/collect/add-entry-manually) new inproceedings works via shortcut `alt+shift+c`please review `orgjabrefguifieldeditorstypeeditorviewmodel` i added new line there but i still cant understand where and how its used ))) can you give a small comment? || @gena928 please try to merge upstream/master to resolve the merge conflicts || @koppor  @tobiasdiez please review changes sorry for delay - im trying to learn java with mentor and become valuable contributor )) so thank you for your comments here they really helpi changed `getkeycombination` method of `keybindingrepository` class and all its dependenciesalso please give your comments for typeeditorviewmodel class - this [comment from @tobiasdiez](https://githubcom/jabref/jabref/pull/6960#discussion_r504478716)  || @calixtus thanks for comments please review changes || @calixtus thanks again correctedlooks like my ""checkstyle"" was disabled maybe because of intellij update? || also ok for me still have to update changelogmd because keyboard shortcuts were removed in this pr || "
839,6369,6968,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"remove ""online"" prefix in the expected file urls to fix springer fetcher tests this addresses two of the errors in the fetcher tests as run by the ci (see #6369) examples for the failures are [here](https://githubcom/jabref/jabref/runs/1185667289?check_suite_focustrue#step:6:87) and [here](https://githubcom/jabref/jabref/runs/1185667289?check_suite_focustrue#step:6:118)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
840,6936,6976,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix ""irregularly losing ability to edit data in biblatex source tab"" fixes #6936 is about the source tab (bibtex source) losing the ability to be editable (https://githubcom/jabref/jabref/issues/6936#issuecomment-703110024) this happens because `codearea` can be disabled but there is no code path that re-enables itthis patch re-enables `codearea` as editable if the bibtex entrys source code is correct although the source tab cannot be used by the user to fix any syntax error in bibtex fields (source tab will be disabled if there are syntactic errors introduced by editing the fields in the other tabs) such error can be fixed by editing the field which will trigger `sourcetab`s listener and call the `updatecodearea()` method which will enable codearea if the source of the bibtex entry is syntactically correct<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
841,6369,6977,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,adapt the short doi regex it now accepts dois with only three characters this fixes an error in the shortendoiformattertest as run by the ci (see #6369) for example [here](https://githubcom/jabref/jabref/runs/1185667289?check_suite_focustrue#step:6:426)  
842,6796,6982,1,0,0,1,0,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,0,1,0,"fixed incorrect color of identity column header fixes #6796 added style for identity column header see column with ""#"" previously it had different colour <img width""561"" alt""screenshot 2020-10-05 at 09 16 04"" src""https://user-imagesgithubusercontentcom/20572030/95049286-1b038580-06f2-11eb-88a2-3f453d475d37png""><img width""561"" alt""screenshot 2020-10-05 at 09 21 34"" src""https://user-imagesgithubusercontentcom/20572030/95049299-1fc83980-06f2-11eb-90dd-a4e81ad412afpng"">- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
843,6892,6989,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"merge parsing of bracketed patterns <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6892character classes (regex expressions in brackets eg `[a-za-z]`) should be usable with the regex modifier but it currently isnt for citation keysbracketed patterns are parsed using several different methods in `citationkeygeneratorjava` `bracketedpatternjava` and `abstractcitationkeypattern` this pr aims to merge all parsing code into `bracketedpatternjava` to make it easier to modify bracketed patterns without breaking the citation key generatorcurrently bracketedpatterns parser can parse expressions containing the regex modifier using character classes**todo**- [x] ~what are `abstractcitationkeypattern` and `globalcitationkeypattern` used for and should they be removed?~- [x] ~why are both `globalcitationkeypattern` and `citationkeypatternpreferences`  needed to create a `citationkeygenerator`?~<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->**checklist**- [x] ~change in changelogmd described (if applicable)~- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] ~[checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository~ i think i need an opinion on the cleaning of ""unwanted characters""in #4770 the argument were that citation patterns containing special characters (`[auth]-[year]`) should not remove the ""-"" between the two bracketed expressions/field markers as it is a wanted special characterid argue based on recent changes #6300 this should no longer be the case as it is a preference that the user can set themselvesin particular i believe this test casehttps://githubcom/jabref/jabref/blob/4b1b7b467aed83fa9fe935d2e481883a38df70be/src/test/java/org/jabref/logic/citationkeypattern/citationkeygeneratortestjava#l1067-l1074should fail using the default unwanted charactershttps://githubcom/jabref/jabref/blob/4b1b7b467aed83fa9fe935d2e481883a38df70be/src/main/java/org/jabref/logic/citationkeypattern/citationkeygeneratorjava#l28is this reasonable? should i open a separate pr with more information on this issue? (the answer dictates where the `cleankey` method call goes and should only change 1-4 lines of code) || regarding the unwanted characters you are right the generator should respect the user defined unwanted chars (and of course the illegal ones) || @siedlerchr ill change it and add some test cases || i think looking more into `abstractcitationkeypattern` and `globalcitationkeypattern` will end up being out of scope of this pr i have left them unchanged || "
844,6974,7007,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"support for exporting to yaml format - support for exporting to yaml  fixes #6974 - fixed deleteblanklines parameter in templateexporter not working- enabled deleteblanklines for the ris exporter which used to have that enabled- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i see the unit tests failing:```  test exportcorrectcontent(path) failed  orgopentest4jassertionfailederror: expected: <[--- references: - id: test   author:   - literal: ""test author""   title: ""test title""   issued: 2020   url: http://examplecom ---]> but was: <[--- references: - id: test  author:  - literal: ""test author""  title: ""test title""  issued: 2020  url: http://examplecom---]>      at orgjabreflogicexporteryamlexportertestexportcorrectcontent(yamlexportertestjava:77)```could you please check whats going wrong there? || > > > i see the unit tests failing:> > ```>   test exportcorrectcontent(path) failed> >   orgopentest4jassertionfailederror: expected: <[--- references: - id: test   author:   - literal: ""test author""   title: ""test title""   issued: 2020   url: http://examplecom ---]> but was: <[--- references: - id: test  author:  - literal: ""test author""  title: ""test title""  issued: 2020  url: http://examplecom---]>>       at orgjabreflogicexporteryamlexportertestexportcorrectcontent(yamlexportertestjava:77)> ```> > could you please check whats going wrong there?i already fixed that issue in my local branch currently testing the blank line deletion || thank you for the patience @joethei  || "
845,6991,7009,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,removed menu entry for manage external file types fixes #6991 removed the menu entry to only have one way to access manage external file types in the preferences dialog- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository![screenshot-6991](https://user-imagesgithubusercontentcom/68321970/95766022-f8094080-0cb2-11eb-9ddc-3b51295cb79fpng) > welcome to jabref development and welcome to #hacktoberfest> > small nitpicks then it is good to go from my side@koppor thank you very much for the nice welcome and your review  sorry i completely missed the unused import i think i resolved now everything you mentioned   ||
846,6691,7014,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,"add selection of all entries group on start-up <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6691<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your contribution lgtm || lgtm thanks! ||"
847,7019,7025,1,0,0,1,0,1,1,0,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,"add cleanup for copying over physcial review article id as the page n… fixes #7019 added a cleanup to copy over the article id as the page number for aps journals this only happens if the page number doesnt exist already<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > > > thanks a lot for you pr your idea seems to work nicely and the code looks good as well ive only one remark about the location of the code and a bit of fine tuning please also add a test and have a look at the fetcher tests that are currently failing (because the fetcher now returns also page information)thanks for the review @siedlerchr @tobiasdiez i think i am almost finished but some of the fetcher tests are still failing sometimes i dont think it has anything to do with my code though (?) as its just a connection failure here is the exception:`caused by: javaioioexception: server returned http response code: 504 for url: https://datacrossreforg/101109%2ficws200759`i am guessing its an issue with the crossref website || thanks looks good to me now! dont forget to add a changelog entry for the new feature || thanks! i hope you enjoyed the process although may have been a bit confusing at times sorry for that looking forward to your next prand now merge 🚀  ||"
848,6891,7026,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,"improve error handling on grobid server connection issues hithis pr relates to issues #6517 and #6891its more improvement than an actual fix because the root cause is: the server is not available (which i cant fix)motivation:when i read #6517 and #6891 i realized that these were reported by power usersmeans people who eg understand how to activate debug logging when i tried to reproduce the issues i realized that for the end-users the issue is not transparent additionally on my osx the java 14 runtime has an infinite connect timeout set so i never got a visual response on my action (refers to ""new entry from plain text"" button)what i changed:* add a property connecttimeout to urldownloader   * this avoids the situation where eg on similar setups than mine (java 1402 on osx) theres an infinite default connecttimeout and i never saw any error in ui nor log   * set the default connecttimeout to 30 seconds which is eg the same order of magnitude as in many other tools and thus should have no side effects to other usages of this class   * set the connecttimeout for grobid server to 5 seconds because this should be sufficient as i expect this is a cloud-based service - please comment if this assumption is wrong* refactored the grobidservce so that ioexceptions are percolating higher in the call-stack and then can be handled in the ui* in case of error i add a notification to the user with an explicit message so users have a chance to know whats going on imho thats more correct and easier to understand for users over the current behavior where just a message ""0 entries parsed"" occurs (screenshot below in the comments)* added en and de translation for the new messagei hope with this new behavior users will better understand why this feature does not work as expected - [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositoryany feedback welcome heres a screenshot how the error message looks like (the red arrow is just for demonstration purpose)<img width""1680"" alt""screenshot 2020-10-18 at 13 11 25"" src""https://user-imagesgithubusercontentcom/1189394/96369048-fda1d300-1157-11eb-8cfd-99042c1012e2png""> || all reviews incorporatedmay i ask for another review please?/cc @tobiasdiez  || > thanks a lot for the quick follow-up! from my side this is now good to go we have the convention that at least two core developers have to approve a pr so please have a bit of patience until the second review arrives> > @koppor the author check fails againshould we disable it again?thank you very much @tobiasdiez im participating in the hacktoberfestmay i ask to label this pr as ""hacktoberfest-accepted"" to signal that i did follow the rules please? || the pr wil count towards hacktoberfest because we applied the hacktoberfest label on the repo || thanks for your contribution! looking foward seeing more from you ) || "
849,6579,7039,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,add short date formatter add formatter that can format the month field to use the shorthand abbreviation fixes #6579- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
850,6862,7040,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,"fix shared database tests fix fieldchangeevent delta computationthe coarsechangefilter only reports delta >0 as major changethe problem is that when you codewise set new field content with the same exact length as before but not the same content it still has a delta of 0 and therefore no db sync is triggered a more detailed explanation is https://githubcom/jabref/jabref/issues/6862#issuecomment-716028639fixes #6862 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
851,7032,7043,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"add online-link detection to filefieldparser <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7032 the filefieldparser did not detect an url and created a linkedfile object with the url as a local file path which caused an error when running ""check integrity""im not sure if the unit test is in the right classif this change requires a changelog entry im happy to add one<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for the contribution! lgtm! || nice contribution! lgtm! ||"
852,6777,7073,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fixes exception in preview using regexp search and regexp search without specified field <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6777  the issue originates in how the javascript regexp is created in `previewviewer#highlightsearchpattern`1 fixes the use of regexp while searching for one term (eg `liu*`)2 fixes exception in the preview when forward slash is used in the regexp<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] ~change in changelogmd described (if applicable)~- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository is there a good spot to put test cases for this issue? || this pr can be made better by some larger reformatting but there might not be a point to doing it given that the code should be completely replaced by lucene || i think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use/convert to lucence and thanks for finding the issue with the grammar based search + the regex!  || as you are at the search code and as you also worked on the unicode normalization can you maybe check that issue here as well? https://githubcom/jabref/jabref/issues/6815 || > as you are at the search code and as you also worked on the unicode normalization can you maybe check that issue here as well? #6815sure will do ! || > i think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use/convert to lucencei agree and i havent really looked into this in enough detail to contribute there are definitively still going to be other issues after this pr it just aims to address the most obvious cases of the `/` exception> and thanks for finding the issue with the grammar based search + the regex!thank you for the sanity check and help it is both appreciated and saves me time ^^ || > may i ask whether its possible to add a test case for the fixed functionality?ill look into it tomorrow i dont have any experience writing tests for this type of code but there should be some ""template"" i can use elsewhere || regarding tests you are lucky as there is already one: https://githubcom/jabref/jabref/blob/master/src/test/java/org/jabref/model/search/rules/containbasedsearchruletestjava(please also refactor the bibentry to ""withfield"" ) || i keep running into the same issue with creating a `previewviewertest````javabibdatabasecontext databasecontext  new bibdatabasecontext()statemanager statemanager  new statemanager()statemanagersetsearchquery(new searchquery(""test"" false false))previewviewer pw  new previewviewer(databasecontext null statemanager)```as soon as i call the constructor i get a javalangexceptionininitializererror (ie before it enters the constructor) || if you want to test something on the javafx thread you need to use the testfx extensions and declare it as gui test:see as an example the sourcetabtest under guientryeditorbut that is complicated i would rather merge this one as it is now feel free to create another pr with a gui test || @siedlerchr @koppor thank you both for your reviews! they are very appreciated!---> if you want to test something on the javafx thread you need to use the testfx extensions and declare it as gui test:> see as an example the sourcetabtest under guientryeditor> but that is complicated i would rather merge this one as it is now feel free to create another pr with a gui testgreat! in that case ill put adding a test case for this issue on my todo-list for laterthank you for linking sourcetabtest now i know where to start digging 😃 i suspect ill have opportunities to practice writing gui tests soon x) || "
853,6447,7077,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix preview settings not saved due to l10n introduce internal name for finding layoutfixes #6447the problem was that the getname method returned a l10n name for custom preview layout<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
854,369,7082,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,0,0,0,1,0,feature/enable paginated fetchers this pr adds complex search query support for paginated fetchersit additionally implements the corresponding interfaces for a couple of fetchers (arxiv scholar ieee xplore springer link)refs #6236 #5507 [koppor#369](https://githubcom/koppor/jabref/issues/369) [koppor#347](https://githubcom/koppor/jabref/issues/347)- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
855,7053,7095,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixed setting title of saved new library follow up to #6129 fixes #7053 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
856,6431,7097,1,0,0,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,0,0,0,1,0,"update antlr task + gradle fixes #6431 fixes koppor/jabref#440i finally found the solutionget rid of our antlrplugin and follow the idea from here:https://stackoverflowcom/a/56029522/3450689update to gradle 66 and newer is not yet possible due to https://githubcom/openjfx/javafx-gradle-plugin/issues/89make @koppor happy :)<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository except for the unnecessary tab at the eol (i like reviewdog) and the many additional linebreaks (😁) it looks good to me - although i did not work much with groovy yet || i see that there is mac failing will investigate that ||"
857,7114,7115,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,fixes npe on opening grouppanel fixes #7114 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository tests are failing mhhh ||
858,6622,7116,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix saving in codearea without leaving the field refactor  globalsfixes #6622<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
859,6417,7119,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,improve library loading ux when jabref opens a library it opens a file runs the database parser and after everything is done creates a new tab in the frame with the contents of the open databasean improvement would be to first create a tab in the frame display a loading animation and after the parser has finished display all entries (or display every entry as soon as it is parsed)there is a bug that i couldnt fix even after data is loaded the group pane will keep showing 0 entry you need to navigate away from the tab and back to get the real number of entriesabout applying the improvement on startup i think having a splash screen will look better something like a blocking dialog that displays a progressindicatorcloses #6417![im1](https://imgurcom/faymduxjpg)![im2](https://imgurcom/fvdhiwmjpg)![im3](https://imgurcom/7juc16xjpg)![im4](https://imgurcom/8nlha2qjpg)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository wohoo! thanks for your work i just tested it with a huge library its really cool and looks really nice!codewise lgtm as well || ill take a look into it the next days im just a bit busy this week i hope you dont mindabout the bug: maybe there is some var that should be a property ill check thatthank you for this huge work i guess it wasnt just a good first issue but a big improvement! || > ill take a look into it the next days im just a bit busy this week i hope you dont minddont worry im not in a hurry take your time || i will fix some line breaks and merge tonight sorry for delay || thanks again for your contribution! ||
860,6791,7131,1,0,0,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,0,0,0,1,0,"fixing glyph icon colors in search bar in dark mode  ##<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #6791 ""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6791 this pull request is on behalf of team isd14-lnmiitcase sensitive![dark_case_sensitive](https://user-imagesgithubusercontentcom/39790333/100469139-bcf48c80-30fb-11eb-876f-2d389c5ef16bpng)case insensitive![dark_case_insensitive](https://user-imagesgithubusercontentcom/39790333/100469173-c7af2180-30fb-11eb-99de-61fde6193eaepng)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
861,7108,7132,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix document viewer not showing first page turned out it was an off by one error<img width""746"" alt""bildschirmfoto 2020-11-27 um 20 43 23"" src""https://user-imagesgithubusercontentcom/320228/100480364-4ce10900-30f1-11eb-8061-65fbd688e9f7png"">fixes #7108 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository failing unit test is not related ||"
862,6869,7154,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fix remembering password for sql db fixes #6869a binding was missing 🤦 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
863,6394,7173,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"updates to colored group indicator for cited entries <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6394an entry can belong to a specific group depending on1 field or type in the `bibentry`2 the settings of the specific grouphence ~any changes in a field or type in the `bibentry` or~ any change in the groups should reevaluation wether or not the entry is still in any given groupi am not very comfortable with the javafx/mvvc structure yet so i have attempted an approach with as few structural changes as possible<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] keep the count ""badge"" is up-to-date- [x] refresh the selected groups  - [x] deal with `concurrentmodificationexception`  - [x] ~fix performance bottleneck~    - [x] ~occurs when switching library and the group is selected~- [x] check for potential memory leaks  - [x] caused by extending `observable` in `texgroupjava` (how should the listeners be stored?)  - [x] dependence on deprecated method `grouptreenode#setgroup(abstractgroup newgroup)`  - [x] use of `eventbus` without unregistering listener    - [x] make a weakinvalidationlistener adapter?- [x] jabref believes the bib file has changed when the aux file changes  - [x] check if the `isfilteredout` attribute of `bibdatabasecontextchangedevent` is used to prevent saving    - [x] add javadoc- [x] ~how does the current `groupinvalidationevent` affect the hierarchical group structure? (should it be fired from elsewhere so that only partial recalculations of group colors are necessary)~- [x] replace unnecessary adapter class---- [x] change in changelogmd described (if applicable)- [x] ~tests created for changes (if applicable)~- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository would any of the following be more/less valid approaches? 1 make `texgroup` implement `observable`2 make `texgroupkeysusedinaux` an `observableset` (id argue this seem similar to how `bibentry#getobservables` operates) || i added a minimum working example of implementing the `observable` interface  any comments/suggestions are welcome (including scratch this approach x) ) || thanks for tackling this! it would be interesting to see how it performs with many group (can provide you a test file via mail or so cause its confidential) || i cant observe impactful slowdowns/memory leaks but there shouldnt be many changes that affects the large database most potential memory leaks will only occur when an `aux` file is linkedi have update the description with what i think is left and commented on a change that can mostly be reverted if performance is an issue sorry about the slow going javafx is somewhat new to me || hey there!thank you for your contributionseeing that your last commit was pushed 5 days agoi want to ask whether you are finished with your work?is this pr ready for review :)? || hey @dominikvoigt  i am sorry but no i thought i would make a 30 min fix in #7210 but unfortunately it didnt turn out that way ooi dont think this is worth reviewing yet the `jabref believes the bib file has changed when the aux file changes` bullet item most likely means i am going to have to change/extend the metadata updates which might/might not be ok from jabrefs point-of-view || @k3kaw8pnf7mkmdsmphz27  the bib file is changed can be also #5967  || thank you for the link!  it might be both ooi should have time to continue on this later today *knock on wood*on december 21 2020 at 14:36:12 christoph (notifications@githubcom(mailto:notifications@githubcom)) wrote:>  > @k3kaw8pnf7mkmdsmphz27(https://githubcom/k3kaw8pnf7mkmdsmphz27) the bib file is changed can be also #5967(https://githubcom/jabref/jabref/pull/5967)>  >  > —> you are receiving this because you were mentioned> reply to this email directly view it on github(https://githubcom/jabref/jabref/pull/7173#issuecomment-749159174) or unsubscribe(https://githubcom/notifications/unsubscribe-auth/aat2nz45k4zhusshhojce4dsv6pszancnfsm4usf5pmq)>  >  >   || as a first workaround try disabling autosave  || @siedlerchr at least for now it happens independently of autosavethe reason why jabref believes that the database has changed is that i wanted to use `groupupdatedevent` to notify any listener that a group has changed `groupupdatedevent` extends `bibdatabasecontextchangedevent` which i guess triggershttps://githubcom/jabref/jabref/blob/08e824f506a997e9f3f2e87f70fa256d1ba40620/src/main/java/org/jabref/gui/librarytabjava#l356-l359among others (i wanted to view it as a change to the `metadata`)the issue with `texgroup` is that it1 requires an update without any interaction from the user (it updates on changes in an external file) and2 these updates does not need to be savedi think it is the only group with these characteristics hence i dont see it motivated to extend the `groupupdatedevent` since it seems well established that `bibdatabasecontextchangedevent` implies a change that requires savingill figure something out but i am temporarily a bit stuck 😱  || hum `texgroup` has a reference to the `metadata` is it ok if i its `eventbus` to post updates instead? || barring changing quite a large part of the code to use observables (i saw some discussion regarding this in other issues but i am not aware of if there is a consensus?) this is my attempt at addressing this issue sorry about the delay and rather large changes || doh i just realised a mistake ill have to fix tomorrow /  || it might make sense to make `texgroup` observable or to use its `fileupdatemonitor` directly in the `groupnodeviewmodel` || hey @k3kaw8pnf7mkmdsmphz27  you didnt change anything on this pr for 5 days is this pr ready for review? || sorry yes it is ready for reviewon january 8 2021 at 20:26:53 carl christian snethlage (notifications@githubcom(mailto:notifications@githubcom)) wrote:>  > hey @k3kaw8pnf7mkmdsmphz27(https://githubcom/k3kaw8pnf7mkmdsmphz27)  you didnt change anything on this pr for 5 days is this pr ready for review?>  >  > —> you are receiving this because you were mentioned> reply to this email directly view it on github(https://githubcom/jabref/jabref/pull/7173#issuecomment-757072180) or unsubscribe(https://githubcom/notifications/unsubscribe-auth/aat2nz3msnh2xhriyuklintsy6wf3ancnfsm4usf5pmq)>  >  >   || i have just tried this fix with the current master build on ubuntu 1604 unfortunately it seems neither the colored group indicator nor the badge icon are updated automatically in my situation:- step 1: build tex file with additional reference observations:    - **counter in badge icon for cited entries is not incremented**    - **badge icon for cited entries is not highlighted when the bib entry is selected**    - **colored group indicator for cited entries is not shown for the newly added reference**- step 2: update group of cited entries: just edit the group of cited entries and save it again when a dialogue appears choose to assign the original groups entries again to this group observations:    - counter in badge icon for cited entries is now incremented properly    - badge icon for cited entries is now highlighted properly when the bib entry is selected    - **colored group indicator for cited entries is still not shown for the newly added reference**- step 3: close and reopen the bib-file observations:    - everything is shown as expected || sorry about that i am using texpad with mac os x and the group gets updated of the aux file as id expect on jabref 53--2021-01-26--034cf8ccould you give me more details on ""step 1"" (which application you are using etc) and ill try to get a virtual box with ubuntu up and going in the coming days? || i have used a test `tex` file with biblatex (see first example in https://wwwoverleafcom/learn/latex/bibliography_management_with_biblatex) the library was configured for biblatex in jabref as well i have used texstudio but i think its independent of this because i have even simply opened the `aux` file with some editor and i have directly removed or added entries like `\abx@aux@cite{xxx2008}` it seems that the file monitor does not get triggered properly on a file change thus `keysusedinaux` will not be cleared and the current group bindings are not invalidated || > directly removed or added entries like `\abx@aux@cite{xxx2008}` it seems that the file monitor does not get triggered properly on a file change thus `keysusedinaux` will not be cleared and the current group bindings are not invalidatedyup adding/removing entries in that fashion works for me in os x ill look into it i dont really have a hypothesis for why it doesnt work in ubuntu (yet) || you are using a local drive? (not remote)is it possible your editor is generating [a ""create event"" instead of a ""modify event""](https://stackoverflowcom/questions/43447654/ubuntu-java-watchservice-is-broken)? (this doesnt have to be the same issue as with texstudio) || yes on a local drive you are right: i have created a small java test program of your provided link- creating the file ""testfiletxt"" triggers:`entry_create:testfiletxt`- editing the file with the simple text editor pluma triggers:`entry_create:testfiletxt`if this file is already opened in texstudio (and it has been modified within it before) it detects the change and it asks whether the file should be reloaded- editing the file with texstudio triggers:```entry_create:testfiletxtg29838entry_modify:testfiletxtg29838entry_modify:testfiletxtg29838entry_delete:testfiletxtg29838entry_create:testfiletxt```apparently other programs also observe re-ceating files since i have never had such problems elsewhere before- editing the file with vs code triggers:```entry_modify:testfiletxtentry_modify:testfiletxt```but when building the `pdf` file from a `tex` file with texstudio 30 modification events are triggered with this java program for the `aux` file:```entry_modify:mainaux// 28 modification entries omittedentry_modify:mainaux```but still no event gets triggered in jabrefthe same applies when editing the `aux` file with vs code which also triggers a modification event with the java test program but not within jabref || @tobiasdiez @k3kaw8pnf7mkmdsmphz27 do you think that it would make sense to also observe the `entry_create` event to make the detection of file-modifications more reliable since two out of three of my tested editors trigger the `entry_create` event and other programs apparently also check on this event? || yes i guess its a good idea to also listen for entry_create at least i cannot think of a negative sideeffect || "
864,5777,7174,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fixed context menu of linked files not updated fixes #5777 this should hopefully fix the bug about the context menucan someone please test it with a file download i just now dont have a proper file link at hand![grafik](https://user-imagesgithubusercontentcom/50491877/101564948-53faf780-39cc-11eb-8267-e0ed6670f779png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository works fine for testing you can add the following to the bibtex source:`  file          {:https\://wwww3org/wai/er/tests/xhtml/testfiles/resources/pdf/dummypdf:url}`i noticed that it is impossible to add an online file link manually ||
865,6944,7178,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fix newly added entry not synced to db fixes #7176 should also fix #6944 newly added entries have empty fields dont update the field table to prevent sql exceptionfix shared entry not found by iduse left outer join for this<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i dont know why the documentation test fails ||"
866,7176,7178,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fix newly added entry not synced to db fixes #7176 should also fix #6944 newly added entries have empty fields dont update the field table to prevent sql exceptionfix shared entry not found by iduse left outer join for this<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i dont know why the documentation test fails ||"
867,7168,7179,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,disable slr in ui until #7126 is merged this pr addresses the issue of integrating the slr feature in the planned release version without #7126 by disabling itrefs #7168 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
868,7127,7191,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,fix short doi error fixes #7127 in issue #6920 the detection of exact short dois was improved this was relevant where short dois were misplaced under the wrong field of an entry this did not affect the method `public static optional<doi> findintext(string text)` which looks for dois _within_ text (not exact matches) with this commit i have carried the improvements over to the _within-text_ detection i had to make the detection more stringent to avoid mis-detections for cases like _bla bla 10:30 bla bla_ or _bli blubb 10/12/2020 blibb blabb_ etc short dois within text will now only be detected if there is any _doi_ or _urn_ within the substring eg any of the following will be detected:- doi:10/12ab- /urn:doi:10/12ab- doiorg/10/1234- doiorg/ab123 (shortcut doi)- etci also introduced the concept of _shortcut dois_ to the in-text detection (eg _doiorg/xyz123_)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository were just having a (light) mob programming session and will take over 😅  || github shows too much changed files maybe due to database errors at github - see https://githubcom/jabref/jabref/compare/masterpremkolar:shortdoiexceptionsfix_issue7127 || when opening the diff:![grafik](https://user-imagesgithubusercontentcom/1366654/102138930-6a3a0500-3e5d-11eb-8e45-2a31de873456png)wrong github output:![grafik](https://user-imagesgithubusercontentcom/1366654/102138995-876ed380-3e5d-11eb-9f01-1a98edb700fcpng) || oh wow :) thank you for doing all the hard work!! :) || @premkolar  we have to thank you for impoving and fixing the regex we just moved the tests to paramterized ones || thank you all 👍  || @premkolar  as you recently adapted the doi find in text i just stumbled upon an issue which results in an error when the method finds a doi with a dot at the end:this results in a not found error from doiorg **doi:101007/s10549-018-4743-9**it would be cool if you could add a replacement at the endthe following text is coming from the pdf content importer it extracts the text content of the first page and then calls `doifindintext(firstpagecontents)````hhs public accessauthor manuscriptbreast cancer res treat author manuscript available in pmc 2019 july 01published in final edited form as:breast cancer res treat 2018 july  170(1): 77–87 doi:101007/s10549-018-4743-9acupuncture for breast cancer-related lymphedema: a randomized controlled trial``` || hi yes i would love to look into it im not sure its the `` but we will seemaybe the 25th ill find the time 🙂 || thanks in advance! no hurry happy holidays! || > > > @premkolar as you recently adapted the doi find in text i just stumbled upon an issue which results in an error when the method finds a doi with a dot at the end:> this results in a not found error from doiorg> > **doi:101007/s10549-018-4743-9**> it would be cool if you could add a replacement at the end> > the following text is coming from the pdf content importer it extracts the text content of the first page and then calls> `doifindintext(firstpagecontents)`> > ```> hhs public access> author manuscript> breast cancer res treat author manuscript available in pmc 2019 july 01> > published in final edited form as:> breast cancer res treat 2018 july  170(1): 77–87 doi:101007/s10549-018-4743-9> > acupuncture for breast cancer-related lymphedema: a > randomized controlled trial> ```i was going to report the same error but i wanted to check whether dois could syntactically (validly) end in periods before i did so ||
869,6942,7210,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"updates to institution citation keys <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6942 fixes #7199#### tldrauthors only having a last name are abbreviated #6942 is miss-abbreviated because name parts containing `uni` are assumed to be universities eg `united airlines` #7199 is triggers the abbreviation method because from bibtex´s point-of-view the author only has a last name the name is later removed because java does not classify the first character as an uppercase letter hence the heuristic assumes it is an insignificant word eg `{ebay}` gets removed `{jabref}` doesnt#### backgroundauthors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion the abbreviations are generated inhttps://githubcom/jabref/jabref/blob/6718c08cf5ace13365da2ce4c1509e4817eb34bc/src/main/java/org/jabref/logic/citationkeypattern/bracketedpatternjava#l1243which is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific authorissue #6942 is due to a regexp being overly broad when determining if an author is a universityissue #7199 was created from #6706 where i changed how a company/institute is identified in previous versions of jabref an author is an institute if it is enclosed in curly brackets (eg `{jabref}`) and i changed it to also include authors who only have a last name (eg `jabref`) which means that the author in issue #7199 is treated as an institutionthis would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation think of the ""and"" in ""national aeronautics and space administration"") since the authors name only consist of one ""word"" it is removed (this is why the workaround @tobiasdiez mentioned does not work even if it should)#### changes for#69421 identifying universities in the authors names is arbitrary the new regexp matches `^uni(v|b|$)*` instead of `^uni` there are other suggestions in #6706 that can be implemented instead2 the inline institute abbreviation should now work again (eg `{jabref ({jb})}` should produce `jb`)3 i am ignoring the `shortauthor` field because i find it unclear how and when to use the field (eg for multiple authors)#7199 1 ill change how institutes are identified so that the `author` must only have a last name and that last name must contain a space this should only happen if the `author` originally were enclosed in brackets in all other cases id argue it is acceptable to not abbreviate the author since the name is only one word    1 drawbacks to this approach is that i am using the latextounicodeadapter to remove braces and it doesnt like unbalanced ones<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->#### todo- [x] log a warning for unbalanced brackets in `author`s- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository except for logging when latextounicodeadapter fails (otherwise names such as ""{link{\""{o}}ping university}**}**"" will generate only `uni` due to the unbalanced brackets and no warning i dont intend any more code changesthere will be some updates to the documentation change log etc || wait i cant check for failed parsing?https://githubcom/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/latex2unicodescala#l139-l146 || i guess you can use `parse` directly? is this ready for review? || @tobiasdiez except for javadoc and changelog yes it is ready for reviewwhich `parse`? || @tobiasdiez sorry i missed to push 1 local commit || https://githubcom/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/latex2unicodescala#l126this one? || oothat would indeed work should i put this pr back in draft then? ~i am not sure how to go about this one should i create a `latextounicodeparseadapter` that throws an exception so that the rest of the code in `latextounicodeadapter` is not repeated?~ **edit** i were thinking about the formatter classes which `latextounicodeadapter` is not || i have to admit i had not yet looked at your pr it was just in response to your question what do you want to do? || @tobiasdiez good then :)in my opinion it is better if the generation warns if there is incorrect latex but i am not sure how to do it in practice i dont have experience with scala <-> java but if i am not misreading the `latex2unicode#parse` i am going to have to check if the result is `instanceof fastparsesuccess` in which case we need to add fastparse as a dependency? || i dont know the drawbacks/advantages of that approach but if this is the only part of the jabref code that needs this perhaps it is better to leave the code as-is? || we already have farstparse as a dependency so thats not a problem i agree it would be nice to check for parsing errors so i support you here (sadly only morally since i dont have any scala experience too) || ~fastparse is an indirect dependency from latex2unicode?the issue i am having is that `latex2unicode#parse` returns a `fastparsecoreparsed` instance unless i am missing something it means i must be able to import `fastparsecore` which i cannot right nowshould i add `fastparse` to `module-infojava`?~i am missing something in the jabref building process ill see if i can figure out || yes in principle importing it should work however there could be problems since fastparse is not yet modularized and we have a workaround in place: https://githubcom/jabref/jabref/blob/fd60d8394352f2cbfc9de2e70e3525d8bac1780e/buildgradle#l49-l50so dont spend too much time trying to make it work || @tobiasdiez you were right for some reason my first attempt did not work || i need to check one more thing (`{european union {\""{a}}viation safety agency}` -> `euaesa`) but i cant right now so i am putting this back in draft thank you for your help @tobiasdiez ! ❤️  || i removed one test case because i believe is out of scope for this pr how to deal with restricting the number of characters between the bracketedpattern/citationkey is a different issue (eg a bracketed pattern that should only have one character ö can by accident turn into two characters oe in the citation key generation) || i’ll be looking at it shortly (dinner)on december 22 2020 at 17:29:07 christoph (notifications@githubcom(mailto:notifications@githubcom)) wrote:>  > @siedlerchr commented on this pull request>  >  > in src/main/java/org/jabref/model/strings/latextounicodeadapterjava(https://githubcom/jabref/jabref/pull/7210#discussion_r547537724):>  > > + * @return a string with latex resolved into unicode + * @throws illegalargumentexception if the latex could not be parsed + */ + public static optional<string> parse(string infield) throws illegalargumentexception { + objectsrequirenonnull(infield) + string toformat  underscore_matchermatcher(infield)replaceall(replacement_char) + try { + var parsingresult  latex2unicodeparse(toformat) + if (parsingresult instanceof parsedsuccess) { + string text  parsingresultget()value() + toformat  normalizernormalize(text normalizerformnfc) + return optionalof(underscore_placeholder_matchermatcher(toformat)replaceall(""_"")) + } else { + return optionalempty() + } + } catch (throwable throwable) {  >  > the try and catch can now be removed>  >  > —> you are receiving this because you authored the thread> reply to this email directly view it on github(https://githubcom/jabref/jabref/pull/7210#pullrequestreview-557403186) or unsubscribe(https://githubcom/notifications/unsubscribe-auth/aat2nz3t6f3igy5gr7tbesdswemthancnfsm4vdlj7nq)>  >  >   || is this ready for review? (i think it looks good) || > is this ready for review? (i think it looks good)yup it is ready || @tobiasdiez good catch apparently i did not examine my assumptions enough my concerns regarding including it is#### 1based on https://githubcom/jabref/jabref/pull/6706#issuecomment-682179624 and others> (i) when using in the bibtex key generator the non-ascii characters are converted to a ""good"" representation (as in your example: göd -> goe)> >  because the bibtex tooling is not fully utf8 (biblatex+biber is but not the more commonly used bibtex tool)my thoughts were that to the largest extent possible bibtex citation keys should be ascii/ansi only in which case #7199 should not be added as a test case if `{ebay}` is successful it is likely that #7199 will be as well (from bibtex/java´s point-of-view both contain only a last name that starts with a lowercase letter and it was the institute abbreviation method that removed 杨秀群)#### 2i am not convinced that the currently generated citation key is correct but you seem to know more about this particular issue than i so feel free to correct me 😛 i based my decision on @xiaodongcenturys comment > ""杨 秀群"" but not ""杨秀群"" the former has a space between last name and first name of a chinese namein my opinion the ""correct"" citation key should be either 杨 or 秀群 (ie based on the documentation the citation key shoul be the last name) with `ebay` i know the citation key is correct---however all of that being said (and my apologies about the rather lengthy reading) if this is how jabref is used perhaps the test case should be added anyway? || as we have quite a lot of chinese users it would be good to support this as far as possible thus if the user enters chinese authors then i would say we should generate a key with chinese characters in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for thisfor now i would say we simply add `杨秀群` as a test (with whatever result it currently produces) || > for now i would say we simply add `杨秀群` as a test (with whatever result it currently produces)sure!> in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for this[pinyin4j](http://pinyin4jsourceforgenet/) seem to be the most popular java alternative however given that there isnt a need of high performance (clean up operation?) [there are more popular javascript libraries](https://githubcom/hotoo/pinyin/blob/master/readme-us_enmd) i dont know if there is an interest for this? || thanks also for the research concerning pinyin libraries lets see if users report this as a feature request || @siedlerchr @tobiasdiez thank you both for your time reviews and suggestions they are appreciated! || thank you all!the jabref 53--2020-12-28--78b08b5 works perfectly with chinese namesthanks again || "
870,7199,7210,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"updates to institution citation keys <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6942 fixes #7199#### tldrauthors only having a last name are abbreviated #6942 is miss-abbreviated because name parts containing `uni` are assumed to be universities eg `united airlines` #7199 is triggers the abbreviation method because from bibtex´s point-of-view the author only has a last name the name is later removed because java does not classify the first character as an uppercase letter hence the heuristic assumes it is an insignificant word eg `{ebay}` gets removed `{jabref}` doesnt#### backgroundauthors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion the abbreviations are generated inhttps://githubcom/jabref/jabref/blob/6718c08cf5ace13365da2ce4c1509e4817eb34bc/src/main/java/org/jabref/logic/citationkeypattern/bracketedpatternjava#l1243which is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific authorissue #6942 is due to a regexp being overly broad when determining if an author is a universityissue #7199 was created from #6706 where i changed how a company/institute is identified in previous versions of jabref an author is an institute if it is enclosed in curly brackets (eg `{jabref}`) and i changed it to also include authors who only have a last name (eg `jabref`) which means that the author in issue #7199 is treated as an institutionthis would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation think of the ""and"" in ""national aeronautics and space administration"") since the authors name only consist of one ""word"" it is removed (this is why the workaround @tobiasdiez mentioned does not work even if it should)#### changes for#69421 identifying universities in the authors names is arbitrary the new regexp matches `^uni(v|b|$)*` instead of `^uni` there are other suggestions in #6706 that can be implemented instead2 the inline institute abbreviation should now work again (eg `{jabref ({jb})}` should produce `jb`)3 i am ignoring the `shortauthor` field because i find it unclear how and when to use the field (eg for multiple authors)#7199 1 ill change how institutes are identified so that the `author` must only have a last name and that last name must contain a space this should only happen if the `author` originally were enclosed in brackets in all other cases id argue it is acceptable to not abbreviate the author since the name is only one word    1 drawbacks to this approach is that i am using the latextounicodeadapter to remove braces and it doesnt like unbalanced ones<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->#### todo- [x] log a warning for unbalanced brackets in `author`s- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository except for logging when latextounicodeadapter fails (otherwise names such as ""{link{\""{o}}ping university}**}**"" will generate only `uni` due to the unbalanced brackets and no warning i dont intend any more code changesthere will be some updates to the documentation change log etc || wait i cant check for failed parsing?https://githubcom/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/latex2unicodescala#l139-l146 || i guess you can use `parse` directly? is this ready for review? || @tobiasdiez except for javadoc and changelog yes it is ready for reviewwhich `parse`? || @tobiasdiez sorry i missed to push 1 local commit || https://githubcom/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/latex2unicodescala#l126this one? || oothat would indeed work should i put this pr back in draft then? ~i am not sure how to go about this one should i create a `latextounicodeparseadapter` that throws an exception so that the rest of the code in `latextounicodeadapter` is not repeated?~ **edit** i were thinking about the formatter classes which `latextounicodeadapter` is not || i have to admit i had not yet looked at your pr it was just in response to your question what do you want to do? || @tobiasdiez good then :)in my opinion it is better if the generation warns if there is incorrect latex but i am not sure how to do it in practice i dont have experience with scala <-> java but if i am not misreading the `latex2unicode#parse` i am going to have to check if the result is `instanceof fastparsesuccess` in which case we need to add fastparse as a dependency? || i dont know the drawbacks/advantages of that approach but if this is the only part of the jabref code that needs this perhaps it is better to leave the code as-is? || we already have farstparse as a dependency so thats not a problem i agree it would be nice to check for parsing errors so i support you here (sadly only morally since i dont have any scala experience too) || ~fastparse is an indirect dependency from latex2unicode?the issue i am having is that `latex2unicode#parse` returns a `fastparsecoreparsed` instance unless i am missing something it means i must be able to import `fastparsecore` which i cannot right nowshould i add `fastparse` to `module-infojava`?~i am missing something in the jabref building process ill see if i can figure out || yes in principle importing it should work however there could be problems since fastparse is not yet modularized and we have a workaround in place: https://githubcom/jabref/jabref/blob/fd60d8394352f2cbfc9de2e70e3525d8bac1780e/buildgradle#l49-l50so dont spend too much time trying to make it work || @tobiasdiez you were right for some reason my first attempt did not work || i need to check one more thing (`{european union {\""{a}}viation safety agency}` -> `euaesa`) but i cant right now so i am putting this back in draft thank you for your help @tobiasdiez ! ❤️  || i removed one test case because i believe is out of scope for this pr how to deal with restricting the number of characters between the bracketedpattern/citationkey is a different issue (eg a bracketed pattern that should only have one character ö can by accident turn into two characters oe in the citation key generation) || i’ll be looking at it shortly (dinner)on december 22 2020 at 17:29:07 christoph (notifications@githubcom(mailto:notifications@githubcom)) wrote:>  > @siedlerchr commented on this pull request>  >  > in src/main/java/org/jabref/model/strings/latextounicodeadapterjava(https://githubcom/jabref/jabref/pull/7210#discussion_r547537724):>  > > + * @return a string with latex resolved into unicode + * @throws illegalargumentexception if the latex could not be parsed + */ + public static optional<string> parse(string infield) throws illegalargumentexception { + objectsrequirenonnull(infield) + string toformat  underscore_matchermatcher(infield)replaceall(replacement_char) + try { + var parsingresult  latex2unicodeparse(toformat) + if (parsingresult instanceof parsedsuccess) { + string text  parsingresultget()value() + toformat  normalizernormalize(text normalizerformnfc) + return optionalof(underscore_placeholder_matchermatcher(toformat)replaceall(""_"")) + } else { + return optionalempty() + } + } catch (throwable throwable) {  >  > the try and catch can now be removed>  >  > —> you are receiving this because you authored the thread> reply to this email directly view it on github(https://githubcom/jabref/jabref/pull/7210#pullrequestreview-557403186) or unsubscribe(https://githubcom/notifications/unsubscribe-auth/aat2nz3t6f3igy5gr7tbesdswemthancnfsm4vdlj7nq)>  >  >   || is this ready for review? (i think it looks good) || > is this ready for review? (i think it looks good)yup it is ready || @tobiasdiez good catch apparently i did not examine my assumptions enough my concerns regarding including it is#### 1based on https://githubcom/jabref/jabref/pull/6706#issuecomment-682179624 and others> (i) when using in the bibtex key generator the non-ascii characters are converted to a ""good"" representation (as in your example: göd -> goe)> >  because the bibtex tooling is not fully utf8 (biblatex+biber is but not the more commonly used bibtex tool)my thoughts were that to the largest extent possible bibtex citation keys should be ascii/ansi only in which case #7199 should not be added as a test case if `{ebay}` is successful it is likely that #7199 will be as well (from bibtex/java´s point-of-view both contain only a last name that starts with a lowercase letter and it was the institute abbreviation method that removed 杨秀群)#### 2i am not convinced that the currently generated citation key is correct but you seem to know more about this particular issue than i so feel free to correct me 😛 i based my decision on @xiaodongcenturys comment > ""杨 秀群"" but not ""杨秀群"" the former has a space between last name and first name of a chinese namein my opinion the ""correct"" citation key should be either 杨 or 秀群 (ie based on the documentation the citation key shoul be the last name) with `ebay` i know the citation key is correct---however all of that being said (and my apologies about the rather lengthy reading) if this is how jabref is used perhaps the test case should be added anyway? || as we have quite a lot of chinese users it would be good to support this as far as possible thus if the user enters chinese authors then i would say we should generate a key with chinese characters in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for thisfor now i would say we simply add `杨秀群` as a test (with whatever result it currently produces) || > for now i would say we simply add `杨秀群` as a test (with whatever result it currently produces)sure!> in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for this[pinyin4j](http://pinyin4jsourceforgenet/) seem to be the most popular java alternative however given that there isnt a need of high performance (clean up operation?) [there are more popular javascript libraries](https://githubcom/hotoo/pinyin/blob/master/readme-us_enmd) i dont know if there is an interest for this? || thanks also for the research concerning pinyin libraries lets see if users report this as a feature request || @siedlerchr @tobiasdiez thank you both for your time reviews and suggestions they are appreciated! || thank you all!the jabref 53--2020-12-28--78b08b5 works perfectly with chinese namesthanks again || "
871,7200,7224,1,0,1,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,fix clipboardmanager <-> prefs ordering fixes #7200- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
872,6369,7225,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,"fix some fetcher test this pr fixes some of the failing fetcher tests specified in #6369namely:* [x]  jstor: result differs* [x]  citeseer: result differs* [x]  titlefetcher: change format* [x]  disable compositefetchertest on ci- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/importer/fetcher/compositesearchbasedfetchertestjava:32: error: cannot find symbol@disabledonciserver(""produces to many requests on ci"") ^  symbol: class disabledonciserver || fixed! 😄  || "
873,5804,7229,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,disable acm google scholar jstor we cannot get the acm fetcher working (#5804) nor the google scholar (#7075) jstor has a traffic limit thus we disabled them- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository is the jstor fetcher working in principle and only hits the quota limit after a certain amount of usages? how many per day? || not on my machine not at dominiks please execute the web search foryourself for a triple check 😅✌️tobias diez <notifications@githubcom> schrieb am mi 23 dez 2020 15:43:> is the jstor fetcher working in principle and only hits the quota limit> after a certain amount of usages? how many per day?>> —> you are receiving this because you authored the thread> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/7229#issuecomment-750330256> or> unsubscribe> <https://githubcom/notifications/unsubscribe-auth/aaknu7t2x2gzm2kvx3iwwc3swh6ytancnfsm4vggoj3q>> > || i remember that it worked a while ago maybe they require some cookies or whatever to be presentedit// they now also use recaptcha i tried some access with curl :(curl https://wwwjstororg/open/search/?queryau%3a%22haman%22au%3a%22medlin%22 ||
874,7197,7232,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"add a more descriptive path when directory cannot be found <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->**issue problem:** when you try to download a pdf (lookup -> search full documents online ) and you dont have a file directory set an alert tells you that you should follow a path to set your file directory: preference -> file but that path is not correct because to set the file directory you need to follow this path: options -> preference -> linked files -> main file directory**suggested changes:** change the message to: **_main file directory not set! check the preferences (linked files) or the library properties_**screenshots:<img width""517"" alt""screen shot 2020-12-23 at 7 55 15 pm"" src""https://user-imagesgithubusercontentcom/33851952/103056159-6b53ec00-4559-11eb-9f94-194f162a4d47png"">fixes #7197<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository please see https://docsjabreforg/setup/databaseproperties#override-default-file-directoriesyou can define relative directories in the library properties and thus the main  file directory can be empty in addition theres a checkbox to always use the bib file location which will override all other settings ### suggestionchange the message to no file directory set or check the preferences (linked files) or the library properties  || thanks for the review! i added some changes 😀  || huh i think we totally forgot your pr when thinking about the issue with #7279 but since your pr is now independent of this issue i dont see any cause not to merge since every other remark is implementedsorry for the delay and thanks for your work! ||"
875,7237,7240,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"add traditional chinese fixes #7237https://wwworaclecom/java/technologies/javase/jdk8-jre8-suported-localeshtmlneed to look into crowdin how to map it<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
876,7239,7243,1,0,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,0,0,1,0,"fix normalize pages formatter not replacing dashes fixes #7239<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository for devcall: ```i would suggest we weaken the regex to follow the biblatex def: (221)    a range is something optionally followed by one or more dashes optionally followed by some non-dash (eg5--7)``` || as a follow-up to https://githubcom/jabref/jabref/pull/1013 i added `unprotecttermsformatter` i was not sure about the naming because it is not an opposite one (https://githubcom/jabref/jabref/issues/920#issuecomment-195779352) `unfreezeallwords` was the old proposalthe discussion continued at https://githubcom/jabref/jabref/issues/920#issuecomment-196747008 || regarding the case `pages 1-50` i was unsure i opted to also to reformat them ||"
877,7257,7260,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,improved detection of long dois within text fixes a checkstyle issue of #7257- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
878,7194,7269,1,0,0,1,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"only disable  move to file dir when path equals fix equals in path methodfixes #7194the dialog is now only disable when the file is already in the file directory<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
879,7287,7290,1,0,0,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,"fix for issue 7287 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fix issue where the about dialog doesnt open a second timefix for issue #7273 #7287<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thank you for the quick action taken @faeludire  ||"
880,7177,7292,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fixed exception about missing custom css file fixes #7177 ""java exception when trying to open the preferences with missing custom theme""after some testing i found that there two main paths that could result in the same failure: the css file being missing before application start and changing the name of the css file while the application is running to resolve the latter i think the best approach is to check the custom css file existsthis is already done for the theme as used for most of the application however the preview viewer has its own css url logicrather than add file checking logic to the preview viewer i have refactored and moved the theme logic of preview viewer into theme so that all css url logic is encapsulated in that class i have also put the logic that checks that the url is valid and filters it to an optionalempty() into one new method additionalcsstoload() in place of the field of the same name this ensure that the file existence check is performed in all cases rather than just at construction of the theme objecti have kept the optional<url> field so there should be no overhead to this approach for the built in themes and only the minor and necessary overhead of file existence checking for the custom themefor manual testing i checked:- previews and overall appearance for default theme are correct after restart- previews and overall appearance for dark theme are correct after restart- previews and overall appearance with a custom theme with a valid name are correct after restart- live changes to the custom theme still work in general and for preview- rename custom theme so that the configured theme is no longer correct **before application start** the preview is no longer themed but there is no error- the preview theme is restored when the filename is restored to the configured value without restarting the application- restart rename custom theme so that the configured theme is no longer correct **while application is running** the preview remains themed (typically sized css themes are data url embedded and so survive file removal)these tests were run both with the gradle run task and on the built binary (rationale: gradle presents the dark theme as a file while the binary has it built in on a jrt: url so the results could be different)pr tasks:- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~~screenshots added in pr description (for ui changes)~~ (n/a)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > thanks for the work and also thanks for adding a test is this ready now?ive justed add some test coverage for theme live reloading the change to it was minor but this should cover all the changes now all being well from ci pipeline i will remove the draft status 👍  || i get an npe with the file watching themetest in the github ci pipeline that i dont get when running the test locally and the only thing i can see on the line with npe that could do that is closing the watchservice which functionally looks correct but perhaps is open to memory consistency issues so ive added volatile to the watchservice and i take a local copy to null check before closing in commit 9d77318184c30f934343b0f9a6760817b0e53976 || ive put a condition on that last test ive added so it only runs on windows ill try to figure out why it is behaving differently in the pipeline without holding up this pr as it is very likely a test artifact -- its quite complicated with needing to run up the file watching service and mock the javafx sceneive given a final quick manual test after the last commitfetcher tests fail with 429 too many requests probably just because im hammering the ci and this is usual i guess the failing of the authors is usual for a first contribution so nothing to worry aboutonly thing that i am unsure of is why the mac osx create installer task fails consistently if thats something i need to fix let me knowfrom my perspective happy for this to be given a final review and merge 👍  || @docrjp  the mac os will always fail because it requires some keys/secrets however githubaction does not pass these to forks linux and file watching/locking is a complex issue linux file system works completely different from windows eg there is no kind of lock for a filefetcher test are another non-related issue only relevant if you worked on them || i agree with @tobiasdiez  we should merge this one now as this is an improvement already bug has been fixed and especially extracting theme logic out of foreign classes is very good even though the theme architecture is not perfect but this goes beyond this pr codewise looks good also to me tests have passed so ill merge this || thank you for your work here and for accepting our commnts about it i hope you liked working on jabref we would be happy if you decide to continue to contribute || > thank you for your work here and for accepting our commnts about it i hope you liked working on jabref we would be happy if you decide to continue to contributeabsolutely!thank you all @siedlerchr @calixtus @tobiasdiez for your valuable feedback and support all of it was very much appreciated its a great community here!i will definitely keep contributing jabref caught my eye on codetriage because i used over 10 years ago as a postgraduate in private industry since and now wanting to give back it couldnt be more perfect! 😄 ||"
881,7291,7296,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"fix typo in conversion for small pi <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7291 there is a typo in the unicode <-> latex <-> html conversion<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] ~change in changelogmd described (if applicable)~- [x] ~tests created for changes (if applicable)~- [x] manually tested changed features in running jabref (always required)    - [x] enter ""$\pi$ in abstract field    - [x] convert -> ""unicode to latex"" in context menu- [x] ~screenshots added in pr description (for ui changes)~- [x] ~[checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository~  "
882,7264,7302,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"added keyboard shortcuts (clear/set read status) <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--> added keyboard shortcuts with defaults for  - clear read status (alt+c) - set read status to read (alt+r) - set read status to skimmed (alt+s)fixes #7264<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository ups thought i had to close the pull request but i think i have to wait until you merge it || if everybody is happy ill think i merge thanks! 😄  ||"
883,4342,7338,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,"fix expansion of bracketed expressions in regexpbasedfilefinder <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->#### fixes #4342#4342 contains two issues1 the bracketed pattern `[title]` does not refer to the standardfield title but a ""special"" pattern intended to give nicer output (this is why dashes dont work see https://githubcom/jabref/jabref/issues/4342#issuecomment-742722875) it is intended and can be **avoided** by using `[title]`2 an expanded bracketed pattern is interpreted as a regexp (which it should not) this is why parenthesizes doesnt work a pattern that expands into `(abc)` will match `abc` but not `(abc)` if the expanded bracketed pattern contains characters that have a special meaning in regexp (such as a parenthesis and brackets) it becomes a probleman entry with the title `regexp from [a-z]` and the bracketed expression `[title]` would match a file titled `regexp from b` but not a file named `regexp from [a-z]`#### the goal of this prmatch files whose expanded bracketed pattern includes symbols that can be miss-interpreted1 **regex**: all expanded brackets will match literally  using `patternquote` i dont see a reasonable use-case for allowing a bracket to expand into an actual regex2 **cleaned filenames** _in addition_ to matching the regularly expanded brackets they will also match cleaned file names (it will find files containing both `acm/ieee-cs` and `acm_ieee-cs`)**note**: regex can still be used outside of the bracketed patterns (except for character classes since they will be interpreted as a bracketed pattern)#### issues neither addressed in this pr nor the current master1 files that get truncated due to length2 character classes in the regexpbasedfilefinder in the following pattern `**/*[title][a-z]+*\\[extension]` `[a-z]` is treated as if it is a bracketed pattern3 bracketedexpressions are only expanded in the file name **not in the directory name**#### checklist- [x] ~check if parts can be replaced by a glob (<a href""https://docsoraclecom/en/java/javase/14/docs/api/javabase/java/nio/file/filesystemhtml#getpathmatcher(javalangstring)"">getpathmatcher</a>)~- [x] improve finding and parsing bracketed expressions?- [x] fix this particular use case using regexp literals (\q\e in the regexp)    - [x] ~add type-safety to the expanded bracket (return a compiled pattern when it is supposed to be a regularexpression)~- [x] check that the expanded bracketed expression result in a correct filename and/or convert it into one (avoid issues finding jabref generated filenames 😱 )    - [x] ~add test case for an expression that would result in a jabref corrected filename (""acm/ieee-cs information technology curriculum"" -> ""acm_ieee_cs information technology curriculum"")~ i dont think this can be done reliably within the scope of this pr    - [x] ~make sure a warning appears in the debug log if a filename/dirname is expected to be too long~    - [x] ~refactor `fileutilcreatefilenamefrompattern` so the same code is used~ i dont think this can be done reliably within the scope of this pr- [x] add javadoc improve variable names and comments <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required) **the manual test was only performed with the example given in https://githubcom/jabref/jabref/issues/4342#issuecomment-686606696**- [x] ~screenshots added in pr description (for ui changes)~- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository this needs deeper thinking at review at first gut feeling `[author] text` should be expaned this is not possible any more in this pr (see remove tests) not sure whether we really want that we need to really read the pr description and the linked issue for a proper feedback || > this needs deeper thinking at review at first gut feeling `[author] text` should be expaned this is not possible any more in this pr (see remove tests)this is possible in this pr ill review my pr description and see if i can clarify || @koppor @siedlerchr sorry about that sometimes it is a bit too easy to tunnel-vision and assume something is ""obvious"" while forgetting all the assumptions needed to make it obvious the pr description is updated and hopefully more readable || "
884,7344,7352,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fixes regex (again) in previewviewer <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7344apparently i did not pay enough attention while copy-pasting in intellij or checking the method again afterward see https://githubcom/jabref/jabref/pull/7073#pullrequestreview-526937823 for the original regex note that to reproduce it in the current jabref you need to have the preview pane open while searchingsorry about this one <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
885,4508,7355,1,0,0,1,1,1,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0,1,0,"fix harvard exporter by changing authorsformatter the layout files were still using the old formatter chaining for authors and therefore were responsible for removing braces also fix extensionfixes #4508 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository for other layout files i have created a follow up issue https://githubcom/jabref/jabref/issues/7356 || @k3kaw8pnf7mkmdsmphz27  i simply had to replace the old formatters totally forgot that we changed the format implementation so sorry for bothering you || we dont have any tests for this exporter? || we dont have any tests for the templateexporter (the layout file based) but i guess it would make sense to add some refs #7356  ||"
886,7354,7357,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"export urldate to msoffice fixes #7354 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
887,7354,7358,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"export full month name instead of number in ms office follow up fix from #7354<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
888,6840,7368,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,add migration to special field this pr migrates all occurrences of special field values in the keywords into their respective special fieldsfixes #6840- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
889,6994,7379,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix ""alt + keyboard shortcuts do not work"" <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->user can use checkmenuitem shortcut only when they click the tab that is because the event will not be created until user click the menu in original version such that i create the event when we intial the gui in this case the issue is fixed fixes #6994<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > hi @fu188  i tried to fix the remaining issue i mentioned quickly by myself but it seems that you did not grant write access to your pr branch so please fix the remaining issue then we can merge> also changelogmd needs some conflict resolutioni have fix the remaining issue thanks for your merge! || now you have introduced a lot of indentation changes in jabrefframe (https://githubcom/jabref/jabref/pull/7379/files) please undo them || > now you have introduced a lot of indentation changes in jabrefframe (https://githubcom/jabref/jabref/pull/7379/files) please undo themi have undo them and its ok now ||"
890,7414,7417,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"added keyboard shortcut for merging entries fixes #7414 user submitted a patch<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
891,6962,7421,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,add selection copy to preview window fixes #6962 added a feature that allows users to copy highlighted text in the preview windowscreenshot:![100c67ff4e73c1cb3ea8e4385da41cdd](https://user-imagesgithubusercontentcom/47194464/106947983-7179e280-672b-11eb-8a7c-4eef008ab992png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
892,7415,7438,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"fixes the issue ""non valid number as font size results in an uncaught exception"" <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes  #7415<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository please fix the checkstyle issues otherwise lgtm! || @calixtus  the problem is that the onlyintegerformatter returns null for no value and this will throw an exception in the spinner integerconverter (was my first attempt either) || just to comment on that @siedlerchr the `textformatter<integer>` also returns null on no input at least when i did a manual test || isnt it possible to pass a default value as an argument to the constructor? || @calixtus  are you referring to the `onlyintegerformatter` or the null reference exception? in either case a default value is passed to the `textformatter` but a null reference exception can still happen || the database tests fail can someone elaborate on this || the database test sometimes fail for no reason not related to you changes || > @calixtus are you referring to the `onlyintegerformatter` or the null reference exception? in either case a default value is passed to the `textformatter` but a null reference exception can still happeni was referring to the onlyintegerformatter but i am satisfied thank you for your work here || @calixtus you are welcome || @calixtus i think you need to approve before we can merge since you requested changes ||"
893,7437,7440,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,zbmath fetcher add zbmath to the public databases which can be chosen when updating an entry with bibliographic information from the web see fixes #7437![screenshot (3)](https://user-imagesgithubusercontentcom/68125288/107381280-fb8cc700-6aee-11eb-9098-7fed664ccad9png)![screenshot (4)](https://user-imagesgithubusercontentcom/68125288/107381331-05aec580-6aef-11eb-9715-94142f03c825png)- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository in the fetcher tests  src/test/java/org/jabref/logic/importer/fetcher/zbmathtestjava did not fail but some tests for other fetchers i think this failures are not due to my changes || thank you for the help with the authorlist classi added the requested changes three fetcher tests from other fetchers failed but not from the zbmath fetcher  || i work for them -) i wrote this sometime ago on gitterbut you might not follow all messages there ||
894,7420,7443,1,0,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"fix citation keys unintentionally being overwritten on import fixes #7420 hello jabref-team ive attempted to create a fix for issue 7420 im not sure if its done as expected though please let me know if i need to change/update anythingthe fixed version behaves like this:if preferences > citation key patterns > overwrite existing keys is unchecked `generatekey()` in `citationkeygenerator`: * overwrites the default `citationkey` with an newly generated one only if it is blank* the default `citationkey` is not overwritten anymore (and therefore stays the same) if it is not blankbehaviour remains unchanged if overwrite existing keys is checked(let me know if i misunderstood how this feature was supposed to work in general and ill adapt the behaviour accordingly)fixes #7420- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks a lot for your pri think using the setting citation key patterns > overwrite existing keys might be confusing this is used to warn/prevent users if they try to generate a key using the ""generate key"" button in the entry editor although the entry already has a key the use case is that after generating a new key old latex documents stop compiling and some users would like to prevent this as you see this has nothing to do with the importmaybe its better to add a checkbox in the import dialog another idea would be to let the users specify a cleanup preset in the preferences that is applied after an import the latter would then also resolve #1018 @lucasf-42 @jabref/developers what do you prefer? || oh ive completely missed the mark then sorry about thatthe way i understood the description/discussion within the issue i presumed the overwrite existing keys- option was the one that governs whether the default `citationkey` of an imported entry is overwritten by a generated key based on user preferences or not (and wasnt working as intended) my badjust for my understanding in general: if the bibtex-source-string: ```@article{igor:2013eha  author         {igor kulikov}  title          {a new gpu-accelerated hydrodynamical code for numerical simulation of interacting galaxies}  year           {2013}  month          {11}  archiveprefix  {arxiv}  eprint         {13110861}  primaryclass   {astro-phim}}```` is being imported after a web search default behaviour would be to overwrite the `citationkey` of the `bibentry`-object with a generated key based on the pattern specified in `citationkeypattern`-preferences (eg `igor2013` in case of a default pattern of `[auth][year]`) if a user were to choose not to overwrite keys the `bibentry` would continue using `igor:2013eha` as its `citationkey`would that then be considered intended behaviour for an import?im afraid im not able to fully comprehend the ""cleanup preferences""-solution youve mentioned so im definitely not fit to voice an opinion here ive just got a first very localised look at jabref while attempting to fix the mentioned issuenot sure about the protocol - would you like me to close this pr and await your decision on this topic? || > another idea would be to let the users specify a cleanup preset in the preferences that is applied after an importi like this option! i think it would address a lot of the confusion regarding when the citation key generator is used and what behavior it hashowever i dont think it replaces this pr i think there is a need for a ""default""/global citation key generation behavior which in my opinion should be set in the `citation key patterns` preferences i consider the ""unwanted"" characters another example of when a ""default"" option is necessary and should be applied wherever/whenever the citation key generator is used> oh ive completely missed the mark then sorry about that> the way i understood the description/discussion within the issuei dont think there is such a thing as missing the mark when it comes to jabref when something leads to an improvement i think everything is up for discussion and on the mark 😛> overwrite existing keys- option was the one that governs whether the default `citationkey` of an imported entry is overwritten by a generated key based on user preferencesid argue that this is the case> ""cleanup preferences""-solution youve mentioned so im definitely not fit to voice an opinion herei interpret it as essentially running a ""cleanup action"" on the imported entries perhaps using different preferences but otherwise same as the<img width""681"" alt""skärmavbild 2021-02-15 kl  08 32 47"" src""https://user-imagesgithubusercontentcom/2598631/107960245-65372600-6f72-11eb-8626-58c9c1bea0b0png""> || from my point of view as i proposed in https://githubcom/jabref/jabref/issues/7420#issuecomment-774228070 it needs to the check needs to be  added to the import handler before the key generator is called || > from my point of view as i proposed in [#7420 (comment)](https://githubcom/jabref/jabref/issues/7420#issuecomment-774228070) it needs to the check needs to be added to the import handler before the key generator is calledam i reading too much into your comment in that you are aligned with the ""add a checkbox in the import dialog"" option?in my mind the logic is that a citation key generator object is created based on preferences (`citationkeypatternpreferences`) if the importer wants to override these settings it should create a new instance of this object then it is up to the `citationkeygenerator` to adhere to these preferences admittedly this doesnt work well with `shouldwarnbeforeoverwritecitekey` perhaps i am just overcomplicating things and thinking about this in the wrong way || indeed there is no such thing as missing the mark in our cosy jabref worldthere are two things here that we shouldnt confuse:- use clicks ""generate citation key"" button controlled by the citation keys > overwrite existing keys preference- automatically generate keys upon import / web search instead of using the one provided by the fetcher (which most of the times is some cryptic key)although from a code point of view they are the same for a user they are quite different and one could easily imagine that a user might want to prevent overwriting manually set keys but still would like to have automatically generated keys upon importi think the best way forward would be to introduce a new preference setting ""generate (new?) key on import""  that could go in the ""general"" tab below the other import-related preferences (entry owner + time stamp) or if you feel comfortable enough with the code create a new preference tab ""import"" where you put all of these 3 preferences options maybe @calixtus has more input about the structure of the preferences || thank you all for the explanations/comments i feel like ive got a better idea about the subject id have to take a closer look at the project again to see whether i feel like id be able to implement the ""create a new import tab in preferences""-solutioni was wondering though wouldnt the option to decide whether or not to generate a key for a given import in the import dialogue be advantageous as well (on top of the new entry in preferences)? this way a user wouldnt have to change their preferences when importing an entry for which theyd like to go against said preference (as long as im not confusing things again) || i agree that such an option in the import dialog might be handy from time to time however this also makes the import dialog more complicated so im not sure if its a good idea to add it there maybe first try the solution via the preferences and then see if the users would like to have an option during the import as well? || @lucasf-42  it would be really nice if you could go with the simple solution first  that would be a huge benefit already for many users! we can always add an option in the import dialog later || it seems im unable to accomplish even that im afraidive managed to add an ""import settings"" tab as well as a checkbox for toggling the option (by attempting to copy how other tabs are implemented so nothing to write home about at all)![image](https://user-imagesgithubusercontentcom/54138417/109562336-87868300-7ade-11eb-977e-b2ef892fffb3png)the feature as such seems to be working as well but its messing with something (or more like: breaking something) and i have been unable to understand what exactly it is![image](https://user-imagesgithubusercontentcom/54138417/109562536-cddbe200-7ade-11eb-9fce-5d9b3b27ca47png)these exceptions are raised once you have toggled the checkbox in the ""import settings"" at least once in a session as soon as you delete the last remaining entry within a libraryif the setting has not been changed in a session no matter if the option is enabled or not these exceptions are not raised when deleting the last entry in the libraryhowever the more often you toggle the option the more exceptions are thrownexample after having toggled the setting three times:![image](https://user-imagesgithubusercontentcom/54138417/109563051-886be480-7adf-11eb-8005-5b58764e64afpng)didnt want to push the branch in its current (broken) state || thanks for your continued work on this looks already pretty good concerning the error message could you copy & paste the complete stacktrace moreover it would be good to have the code with your changes at hand could you maybe push them to a different branch? || [heres](https://githubcom/lucasf-42/jabref/tree/fix-for-issue-7443-attempt2) a link to the new branch containing the code on my jabref fork (hope thats how you wanted me to do that)and this is the stacktrace thats being displayed on the console when the exception is thrown:<details><summary>stack trace details</summary><p>```javautilnosuchelementexception: javalangindexoutofboundsexception	at javautilabstractlist$itrnext(abstractlistjava:377) ~[?:?]	at javautiliteratorforeachremaining(iteratorjava:133) ~[?:?]	at javautilspliterators$iteratorspliteratorforeachremaining(spliteratorsjava:1801) ~[?:?]	at javautilstreamabstractpipelinecopyinto(abstractpipelinejava:484) ~[?:?]	at javautilstreamabstractpipelinewrapandcopyinto(abstractpipelinejava:474) ~[?:?]	at javautilstreamreduceops$reduceopevaluatesequential(reduceopsjava:913) ~[?:?]	at javautilstreamabstractpipelineevaluate(abstractpipelinejava:234) ~[?:?]	at javautilstreamreferencepipelinecollect(referencepipelinejava:578) ~[?:?]	at orgjabrefguimaintablemaintablegetselectedentries(maintablejava:402) ~[jabref-10000jar:?]	at orgjabrefguilibrarytablambda$createmaintable$13(librarytabjava:488) ~[jabref-10000jar:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistlambda$new$0(selecteditemsreadonlyobservablelistjava:89) ~[javafxcontrols:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at comsunjavafxscenecontrolreadonlyunbackedobservablelist_endchange(readonlyunbackedobservablelistjava:64) ~[javafxcontrols:?]	at javafxscenecontrolmultipleselectionmodelbase$selectedindiceslist_endchange(multipleselectionmodelbasejava:896) ~[javafxcontrols:?]	at javafxscenecontrolcontrolutilsupdateselectedindices(controlutilsjava:202) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodelfirecustomselectedcellslistchangeevent(tableviewjava:3023) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodelclearselection(tableviewjava:2799) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodelupdatedefaultselection(tableviewjava:2988) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodellambda$new$2(tableviewjava:2178) ~[javafxcontrols:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at javafxcollectionstransformationsortedlistsourcechanged(sortedlistjava:111) ~[javafxbase:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at javafxcollectionstransformationfilteredlistsourcechanged(filteredlistjava:147) ~[javafxbase:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at comtobiasdiezeasybindmappedbackedlistsourcechanged(mappedbackedlistjava:69) ~[easybind-210jar:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at orgjabrefguiutiluithreadlistsourcechanged(uithreadlistjava:23) ~[jabref-10000jar:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionsfxcollections$unmodifiableobservablelistimpllambda$new$0(fxcollectionsjava:963) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsfxcollections$synchronizedobservablelistlambda$new$0(fxcollectionsjava:1217) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at javafxcollectionsmodifiableobservablelistbaseremove(modifiableobservablelistbasejava:189) ~[javafxbase:?]	at javautilabstractlist$itrremove(abstractlistjava:387) ~[?:?]	at javautilcollectionremoveif(collectionjava:577) ~[?:?]	at orgjabrefmodeldatabasebibdatabaseremoveentries(bibdatabasejava:242) ~[jabref-10000jar:?]	at orgjabrefmodeldatabasebibdatabaseremoveentries(bibdatabasejava:225) ~[jabref-10000jar:?]	at orgjabrefguilibrarytabdelete(librarytabjava:405) ~[jabref-10000jar:?]	at orgjabrefguilibrarytabdelete(librarytabjava:387) ~[jabref-10000jar:?]	at orgjabrefguiediteditactionlambda$execute$0(editactionjava:70) ~[jabref-10000jar:?]	at javautiloptionalifpresent(optionaljava:176) ~[?:?]	at orgjabrefguiediteditactionexecute(editactionjava:46) ~[jabref-10000jar:?]	at orgjabrefguiactionsjabrefactionlambda$new$3(jabrefactionjava:41) ~[jabref-10000jar:?]	at orgcontrolsfxcontrolactionactionhandle(actionjava:419) ~[controlsfx-1103jar:?]	at orgcontrolsfxcontrolactionactionhandle(actionjava:64) ~[controlsfx-1103jar:?]	at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(compositeeventhandlerjava:86) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:234) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:191) ~[javafxbase:?]	at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(compositeeventdispatcherjava:59) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:58) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventeventutilfireeventimpl(eventutiljava:74) ~[javafxbase:?]	at comsunjavafxeventeventutilfireevent(eventutiljava:49) ~[javafxbase:?]	at javafxeventeventfireevent(eventjava:198) ~[javafxbase:?]	at javafxscenenodefireevent(nodejava:8889) ~[javafxgraphics:?]	at javafxscenecontrolbuttonfire(buttonjava:203) ~[javafxcontrols:?]	at comsunjavafxscenecontrolbehaviorbuttonbehaviormousereleased(buttonbehaviorjava:208) ~[javafxcontrols:?]	at comsunjavafxscenecontrolinputmapinputmaphandle(inputmapjava:274) ~[javafxcontrols:?]	at comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent(compositeeventhandlerjava:247) ~[javafxbase:?]	at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(compositeeventhandlerjava:80) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:234) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:191) ~[javafxbase:?]	at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(compositeeventdispatcherjava:59) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:58) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventeventutilfireeventimpl(eventutiljava:74) ~[javafxbase:?]	at comsunjavafxeventeventutilfireevent(eventutiljava:54) ~[javafxbase:?]	at javafxeventeventfireevent(eventjava:198) ~[javafxbase:?]	at javafxscenescene$mousehandlerprocess(scenejava:3856) ~[javafxgraphics:?]	at javafxscenesceneprocessmouseevent(scenejava:1851) ~[javafxgraphics:?]	at javafxscenescene$scenepeerlistenermouseevent(scenejava:2584) ~[javafxgraphics:?]	at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(glassvieweventhandlerjava:409) ~[javafxgraphics:?]	at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(glassvieweventhandlerjava:299) ~[javafxgraphics:?]	at javasecurityaccesscontrollerdoprivileged(accesscontrollerjava:391) ~[?:?]	at comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$2(glassvieweventhandlerjava:447) ~[javafxgraphics:?]	at comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock(quantumtoolkitjava:412) ~[javafxgraphics:?]	at comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent(glassvieweventhandlerjava:446) ~[javafxgraphics:?]	at comsunglassuiviewhandlemouseevent(viewjava:556) ~[javafxgraphics:?]	at comsunglassuiviewnotifymouse(viewjava:942) ~[javafxgraphics:?]	at comsunglassuigtkgtkapplication_runloop(native method) ~[javafxgraphics:?]	at comsunglassuigtkgtkapplicationlambda$runloop$11(gtkapplicationjava:277) ~[javafxgraphics:?]	at javalangthreadrun(threadjava:832) [?:?]caused by: javalangindexoutofboundsexception	at javafxcollectionstransformationsortedlistget(sortedlistjava:168) ~[javafxbase:?]	at javafxscenecontroltableview$tableviewselectionmodelgetmodelitem(tableviewjava:2030) ~[javafxcontrols:?]	at javafxscenecontrolmultipleselectionmodelbase$1getmodelitem(multipleselectionmodelbasejava:74) ~[javafxcontrols:?]	at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistget(selecteditemsreadonlyobservablelistjava:98) ~[javafxcontrols:?]	at javautilabstractlist$itrnext(abstractlistjava:371) ~[?:?]	 144 morecaused by: javalangindexoutofboundsexception14:44:44697 [javafx application thread] error orgjabrefguifallbackexceptionhandler - uncaught exception occurred in thread[javafx application thread5main]javautilnosuchelementexception: javalangindexoutofboundsexception	at javautilabstractlist$itrnext(abstractlistjava:377) ~[?:?]	at javautiliteratorforeachremaining(iteratorjava:133) ~[?:?]	at javautilspliterators$iteratorspliteratorforeachremaining(spliteratorsjava:1801) ~[?:?]	at javautilstreamabstractpipelinecopyinto(abstractpipelinejava:484) ~[?:?]	at javautilstreamabstractpipelinewrapandcopyinto(abstractpipelinejava:474) ~[?:?]	at javautilstreamreduceops$reduceopevaluatesequential(reduceopsjava:913) ~[?:?]	at javautilstreamabstractpipelineevaluate(abstractpipelinejava:234) ~[?:?]	at javautilstreamreferencepipelinecollect(referencepipelinejava:578) ~[?:?]	at orgjabrefguimaintablemaintablegetselectedentries(maintablejava:402) ~[jabref-10000jar:?]	at orgjabrefguilibrarytablambda$createmaintable$14(librarytabjava:491) ~[jabref-10000jar:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistlambda$new$0(selecteditemsreadonlyobservablelistjava:89) ~[javafxcontrols:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at comsunjavafxscenecontrolreadonlyunbackedobservablelist_endchange(readonlyunbackedobservablelistjava:64) ~[javafxcontrols:?]	at javafxscenecontrolmultipleselectionmodelbase$selectedindiceslist_endchange(multipleselectionmodelbasejava:896) ~[javafxcontrols:?]	at javafxscenecontrolcontrolutilsupdateselectedindices(controlutilsjava:202) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodelfirecustomselectedcellslistchangeevent(tableviewjava:3023) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodelclearselection(tableviewjava:2799) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodelupdatedefaultselection(tableviewjava:2988) ~[javafxcontrols:?]	at javafxscenecontroltableview$tableviewarraylistselectionmodellambda$new$2(tableviewjava:2178) ~[javafxcontrols:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at javafxcollectionstransformationsortedlistsourcechanged(sortedlistjava:111) ~[javafxbase:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at javafxcollectionstransformationfilteredlistsourcechanged(filteredlistjava:147) ~[javafxbase:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at comtobiasdiezeasybindmappedbackedlistsourcechanged(mappedbackedlistjava:69) ~[easybind-210jar:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at orgjabrefguiutiluithreadlistsourcechanged(uithreadlistjava:23) ~[jabref-10000jar:?]	at javafxcollectionstransformationtransformationlistlambda$getlistener$0(transformationlistjava:106) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionsfxcollections$unmodifiableobservablelistimpllambda$new$0(fxcollectionsjava:963) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent(listlistenerhelperjava:329) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsfxcollections$synchronizedobservablelistlambda$new$0(fxcollectionsjava:1217) ~[javafxbase:?]	at javafxcollectionsweaklistchangelisteneronchanged(weaklistchangelistenerjava:88) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent(listlistenerhelperjava:164) ~[javafxbase:?]	at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent(listlistenerhelperjava:73) ~[javafxbase:?]	at javafxcollectionsobservablelistbasefirechange(observablelistbasejava:239) ~[javafxbase:?]	at javafxcollectionslistchangebuildercommit(listchangebuilderjava:482) ~[javafxbase:?]	at javafxcollectionslistchangebuilderendchange(listchangebuilderjava:541) ~[javafxbase:?]	at javafxcollectionsobservablelistbaseendchange(observablelistbasejava:211) ~[javafxbase:?]	at javafxcollectionsmodifiableobservablelistbaseremove(modifiableobservablelistbasejava:189) ~[javafxbase:?]	at javautilabstractlist$itrremove(abstractlistjava:387) ~[?:?]	at javautilcollectionremoveif(collectionjava:577) ~[?:?]	at orgjabrefmodeldatabasebibdatabaseremoveentries(bibdatabasejava:242) ~[jabref-10000jar:?]	at orgjabrefmodeldatabasebibdatabaseremoveentries(bibdatabasejava:225) ~[jabref-10000jar:?]	at orgjabrefguilibrarytabdelete(librarytabjava:405) ~[jabref-10000jar:?]	at orgjabrefguilibrarytabdelete(librarytabjava:387) ~[jabref-10000jar:?]	at orgjabrefguiediteditactionlambda$execute$0(editactionjava:70) ~[jabref-10000jar:?]	at javautiloptionalifpresent(optionaljava:176) ~[?:?]	at orgjabrefguiediteditactionexecute(editactionjava:46) ~[jabref-10000jar:?]	at orgjabrefguiactionsjabrefactionlambda$new$3(jabrefactionjava:41) ~[jabref-10000jar:?]	at orgcontrolsfxcontrolactionactionhandle(actionjava:419) ~[controlsfx-1103jar:?]	at orgcontrolsfxcontrolactionactionhandle(actionjava:64) ~[controlsfx-1103jar:?]	at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(compositeeventhandlerjava:86) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:234) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:191) ~[javafxbase:?]	at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(compositeeventdispatcherjava:59) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:58) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventeventutilfireeventimpl(eventutiljava:74) ~[javafxbase:?]	at comsunjavafxeventeventutilfireevent(eventutiljava:49) ~[javafxbase:?]	at javafxeventeventfireevent(eventjava:198) ~[javafxbase:?]	at javafxscenenodefireevent(nodejava:8889) ~[javafxgraphics:?]	at javafxscenecontrolbuttonfire(buttonjava:203) ~[javafxcontrols:?]	at comsunjavafxscenecontrolbehaviorbuttonbehaviormousereleased(buttonbehaviorjava:208) ~[javafxcontrols:?]	at comsunjavafxscenecontrolinputmapinputmaphandle(inputmapjava:274) ~[javafxcontrols:?]	at comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent(compositeeventhandlerjava:247) ~[javafxbase:?]	at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent(compositeeventhandlerjava:80) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:234) ~[javafxbase:?]	at comsunjavafxeventeventhandlermanagerdispatchbubblingevent(eventhandlermanagerjava:191) ~[javafxbase:?]	at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent(compositeeventdispatcherjava:59) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:58) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventbasiceventdispatcherdispatchevent(basiceventdispatcherjava:56) ~[javafxbase:?]	at comsunjavafxeventeventdispatchchainimpldispatchevent(eventdispatchchainimpljava:114) ~[javafxbase:?]	at comsunjavafxeventeventutilfireeventimpl(eventutiljava:74) ~[javafxbase:?]	at comsunjavafxeventeventutilfireevent(eventutiljava:54) ~[javafxbase:?]	at javafxeventeventfireevent(eventjava:198) ~[javafxbase:?]	at javafxscenescene$mousehandlerprocess(scenejava:3856) ~[javafxgraphics:?]	at javafxscenesceneprocessmouseevent(scenejava:1851) ~[javafxgraphics:?]	at javafxscenescene$scenepeerlistenermouseevent(scenejava:2584) ~[javafxgraphics:?]	at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(glassvieweventhandlerjava:409) ~[javafxgraphics:?]	at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun(glassvieweventhandlerjava:299) ~[javafxgraphics:?]	at javasecurityaccesscontrollerdoprivileged(accesscontrollerjava:391) ~[?:?]	at comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$2(glassvieweventhandlerjava:447) ~[javafxgraphics:?]	at comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock(quantumtoolkitjava:412) ~[javafxgraphics:?]	at comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent(glassvieweventhandlerjava:446) ~[javafxgraphics:?]	at comsunglassuiviewhandlemouseevent(viewjava:556) ~[javafxgraphics:?]	at comsunglassuiviewnotifymouse(viewjava:942) ~[javafxgraphics:?]	at comsunglassuigtkgtkapplication_runloop(native method) ~[javafxgraphics:?]	at comsunglassuigtkgtkapplicationlambda$runloop$11(gtkapplicationjava:277) ~[javafxgraphics:?]	at javalangthreadrun(threadjava:832) [?:?]caused by: javalangindexoutofboundsexception	at javafxcollectionstransformationsortedlistget(sortedlistjava:168) ~[javafxbase:?]	at javafxscenecontroltableview$tableviewselectionmodelgetmodelitem(tableviewjava:2030) ~[javafxcontrols:?]	at javafxscenecontrolmultipleselectionmodelbase$1getmodelitem(multipleselectionmodelbasejava:74) ~[javafxcontrols:?]	at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistget(selecteditemsreadonlyobservablelistjava:98) ~[javafxcontrols:?]	at javautilabstractlist$itrnext(abstractlistjava:371) ~[?:?]	 144 more```</p></details> || thanks! after looking at your code i think the issue is not coming from your changes it looks like there is an issue somewhere in the entry list code and you just found a way to trigger them in fact such issues have been reported before we just didnt had a way to reproduce themso i would propose you push your changes to this pr we merge and then have a look at the exception later || i kinda forgot about merging/pushing sorry about that if further changes/improvements are required/preferred let me know || looks very good although i maybe make some little rewordings before merging this to fit to the name conventions of jabref! thank you!maybe well reorganize the preferences soon there is already another pr in waiting with a preferences option that would fit in this tab || "
895,7454,7455,1,0,0,1,1,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"unmerge lo citations implemented ""unmerge citations"" in the openoffice/libreofficeintegration panel fixes #7454(https://githubcom/jabref/jabref/issues/7454)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)      no tests were not created  do you have gui tests?      there is a known problem: ""merge citations"" does not save the information needed      to find the optional extra info (like page reference) stored in document properties      when reestablishing the individual references in uncombinecitemarkers      getuniquereferencemarkname() may or may not return the original name      when it does not the extra info may be lost or even taken from another entry      a solution could be to encode the number making the originals unique      in the merged name: in stead of  ""jr_cite_1_xx2000ayy2010"" it would be eg      ""jr_cite_1_xx2000a1_yy2010"" apart from construction and parsing       probably marking (or calulating) the originals as ""in use"" for getuniquereferencemarkname()       would be needed       another problem: combinecitemarkers orders the merged entries by year  (i am not sure why)       the original order is lost       in summary the presented solution although improves the situation does not cover       all aspects- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)![jabref-unmerge-citations](https://user-imagesgithubusercontentcom/15824666/108429997-fc390200-7240-11eb-9d4c-2766b8342997png)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositoryhttps://docsjabreforg/cite/openofficeintegration does not mention the ""merge citations"" buttonthe most appropriate addition would probably go under the ""known issues"" sectiondescribing the two problems above (or the original if the proposed changes are not applied) thanks for your contribution  codewise looks good to me so fari think it would make sense to change the cite generation to encode the unique thing when combining but then the parse ref names needs to be adjusted as well and many other cases as well || > i think it would make sense to change the cite generation to encode the unique thing when combining but then the parse ref names needs to be adjusted as well and many other cases as welli started a new branch to reorganize oobibbasejava at https://githubcom/antalk2/jabref/tree/improve-reversibilityso far it should contain no changes to user-visible functionalitymainly reorganization of the code parsing of ref marks is now only in parserefmarknameand isjabrefreferencemarknameon the other hand reorganizing means lots of changesmany of which may seem or turn out to be superfluoussince i am editing while trying to understand what is going oni am worried that with so many changes i end up withsomething that will not be merged due to the amount of changesplease let me know what to expect and what to watch out for || probably the best would be to merge this one and you keep working on your branch but try to focus on one issue change per commit so we can understand what you changed commit by commit you can also label your pr as wip and draft growing as you work on it and we check regularly in and have a look at your changesyou can even comment on your own code in the files changed tab so you can discuss your changes in that pr with usdont worry working on jabref together should be fun we dont bite 😄 || > probably the best would be to merge this one and you keep working on your branch but try to focus on one issue change per commit so we can understand what you changed commit by commit you can also label your pr as wip and draft growing as you work on it and we check regularly in and have a look at your changes> you can even comment on your own code in the files changed tab so you can discuss your changes in that pr with us> > dont worry working on jabref together should be fun we dont bite smile || @antalk2 what do you think about merging this one first and then having the further refactoring an a second pr? || > @antalk2 what do you think about merging this one first and then having the further refactoring an a second pr?yes i think this is better as a separate mergedo i need to do something for that?i am doing the refactoring in a separate branch || ok ive reopened this pr then if you could address the small comments by @calixtus and me then we can merge thanks! || > ok ive reopened this pr then if you could address the small comments by @calixtus and me then we can merge thanks!i believe i did that let me know if i left out something || style checks (reviewdog) often ask me to make the code less readableshall i ignore it or follow its suggestions anyway? || the style check is important to have consistency across the repository and to prevent merge conflicts of unrelated changes eg whitespaces or line breaks you can import jabrefs code style in intellij and do a kind of  https://devdocsjabreforg/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-ide || > the style check is important to have consistency across the repository and to prevent merge conflicts of unrelated changes eg whitespaces or line breaksthis sounds like ""follow its suggestions anyway"" ok i will try that || well we configured reviewdog to automate the suggestions otherwise we would make what suggestions in particular do you think makes the code less readable? || > well we configured review dog to automate the suggestions  otherwise we would make what suggestions in particular do you think  makes the code less readable?1 no whitespace in sin(x) sounds ok but```   longvariablenamelongmethodname(anotherlong(something))```   is harder to read than```   longvariablenamelongmethodname( anotherlong(something) )```[style checker](https://checkstyleorg/apidocs/com/puppycrawl/tools/checkstyle/checks/whitespace/abstractparenpadcheckhtml) documentation says:> abstract class for checking the padding of parentheses that is> whether a space is required after a left parenthesis and before a> right parenthesis or such spaces are forbiddenapparently they support both `required` and `forbidden` (and implicitly `nocheck`)2 avoid nested blocks> [rationale](https://checkstyleorg/apidocs/com/puppycrawl/tools/checkstyle/checks/blocks/avoidnestedblockscheckhtml):> nested blocks are often leftovers from the debugging process they> confuse the reader   inner blocks are useful in restricting scope of local variables   assuring the reader they are not referred to later   current style checks disallow this```   void f(x) {              string[][] bibtexkeys       {           some localvar  // used to calculate initial value for bibtexkeys                      bibtexkeys         }        more code here: does it use localvar?   }```style checker seems to prefer this:```   void f(x) {              string[][] bibtexkeys       some localvar  // used to calculate initial value for bibtexkeys                  bibtexkeys          more code here: does it use localvar?   }```3 line up for example assignments variable declatarions (style checker insists on single space)```assert anotherlength  fieldlengthassert anevenlongername  fieldlengththisfield  fieldthisanother  anotherthisanevenlongername  anevenlongername```or```assert anotherlength    fieldlengthassert anevenlongername  fieldlengththisfield             fieldthisanother           anotherthisanevenlongername  anevenlongername```i know when `thisanevenlongernamethesecond` arrives we either loosethe line up or change unrelated lines leading to potential mergeproblems google is more permissive [here](https://googlegithubio/styleguide/javaguidehtml#s463-horizontal-alignment) thanthe style checker in jabref4 where should the brace go?   easy   ```   void f(x) {  //<- brace here ok      body here   }   ```   with a longer head brace on next line could improve visual separation of head and body   ```   void f(x          y          z)         throws xexception                yexception                zexception {  //<- brace here according to style      body here   }   ```   ```   void f(x          y          z)         throws xexception                yexception                zexception   {      body here   }   ``` || thanks for your answer i think we (@jabref/developers) maybe talk about these considerations in the next devcall || > > well we configured review dog to automate the suggestions> > otherwise we would make what suggestions in particular do you think> > makes the code less readable?> > 1 no whitespace in sin(x) sounds ok but> > ```>    longvariablenamelongmethodname(anotherlong(something))> ```> > is harder to read than> > ```>    longvariablenamelongmethodname( anotherlong(something) )> ```> > [style checker](https://checkstyleorg/apidocs/com/puppycrawl/tools/checkstyle/checks/whitespace/abstractparenpadcheckhtml) documentation says:> > > abstract class for checking the padding of parentheses that is> > whether a space is required after a left parenthesis and before a> > right parenthesis or such spaces are forbidden> > apparently they support both `required` and `forbidden` (and implicitly `nocheck`)> > 1 avoid nested blocks> > > [rationale](https://checkstyleorg/apidocs/com/puppycrawl/tools/checkstyle/checks/blocks/avoidnestedblockscheckhtml):> > nested blocks are often leftovers from the debugging process they> > confuse the reader> > inner blocks are useful in restricting scope of local variables> assuring the reader they are not referred to later> current style checks disallow this> > ```>    void f(x) {>        >        string[][] bibtexkeys>        {>            some localvar  // used to calculate initial value for bibtexkeys>            >            bibtexkeys  >        }>         more code here: does it use localvar?>    }> ```> > style checker seems to prefer this:> > ```>    void f(x) {>        >        string[][] bibtexkeys>        some localvar  // used to calculate initial value for bibtexkeys>            >        bibtexkeys  >         more code here: does it use localvar?>    }> ```> > 1 line up for example assignments variable declatarions (style checker insists on single space)> > ```> assert anotherlength  fieldlength> assert anevenlongername  fieldlength> thisfield  field> thisanother  another> thisanevenlongername  anevenlongername> ```> > or> > ```> assert anotherlength    fieldlength> assert anevenlongername  fieldlength> thisfield             field> thisanother           another> thisanevenlongername  anevenlongername> ```> > i know when `thisanevenlongernamethesecond` arrives we either loose> the line up or change unrelated lines leading to potential merge> problems google is more permissive [here](https://googlegithubio/styleguide/javaguidehtml#s463-horizontal-alignment) than> the style checker in jabref> > 1 where should the brace go?>    easy>    ```>    void f(x) {  //<- brace here ok>       body here>    }>    ```>    >    >    with a longer head brace on next line could improve visual separation of head and body>    ```>    void f(x>           y>           z)>          throws xexception>                 yexception>                 zexception {  //<- brace here according to style>       body here>    }>    ```>    >    >    ```>    void f(x>           y>           z)>          throws xexception>                 yexception>                 zexception>    {>       body here>    }>    ```im sorry but i disagree with all of your suggestions and prefer the current jabref code style @jabref/developers 1 it is better to keep params short so you could also extract the long param to a var2 totally agree with the given rationale why inner braces should not be used your case to restrict use of vars should be a rare exception and youre better of to extract that into a function then3 might look nice but leads to a lot of refactorings when you add a new assignment we wanted to kep the number of ""unrelated"" line changes in diffs low to make it easier to review prs4 of course only a preference but we stick with the standard java code style here to add the brace in the same line might be too restrictive in oyur example but also here we tried to keep the number of rules low and simple without exceptions || > im sorry but i disagree with all of your suggestions and prefer the current jabref code style @jabref/developersit is ok i do not expect or suggest to change jabref code style just shared my preferences1 i accept the rules even if i do not always think they are optimal2 i am not a maintainer (here or elsewhere) thus probably underestimate the probability and burden of merging conflicts i am aware of this so i do not intend to shape your code style to my preferences || > you can import jabrefs code style in intellij and thank you for this suggestion installing idea helped a lot to find a styleaccepted by the checker || thanks again for your contribution i tested your feature with both an author year and the numerical style and it works || checks are good two approvals @siedlerchr confirmed its working thanks for your great contribution! || "
896,702,7471,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fixed validation before typing in new entry dialog #7020 do not show an error message if there is no errorfixes #7020 for me this doesnt make any change because you still have the init of the visualizer in line 178  (at the bottom of initialize)  || @siedlerchr fixed || thanks for your contribution! ||
897,7020,7471,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fixed validation before typing in new entry dialog #7020 do not show an error message if there is no errorfixes #7020 for me this doesnt make any change because you still have the init of the visualizer in line 178  (at the bottom of initialize)  || @siedlerchr fixed || thanks for your contribution! ||
898,3607,7484,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"improve user friendliness of automatically linked files <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->we have implemented a new textfield for files that are automatically detected by jabref and listed as files in the general tab of the entry editor we also changed the icon for automatically linked files from a briefcase_check to link_plus since we found it more intuitive this fixes #3607<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositorywe thought that creating an issue would be redundant if our changes werent accepted so we have not completed the documentation task the [documentation](https://docsjabreforg/finding-sorting-and-cleaning-entries/filelinks#auto-linking-files) refers to the icon as a ""suitcase"" which would not be accurate were these changes to be accepted instead it should be referred to as a link with a plus sign## screenshots### before changes#### file not linked![before changes file not added](https://user-imagesgithubusercontentcom/64270456/109797452-cb31d780-7c19-11eb-9143-c0ab53921b53png)#### file linked![before changes file added](https://user-imagesgithubusercontentcom/64270456/109797517-e0a70180-7c19-11eb-8c1e-bcdf35ceca05png)### after changes#### file not linked![after changes file not added](https://user-imagesgithubusercontentcom/64270456/109797681-0f24dc80-7c1a-11eb-8197-2f3c91235bb6png)#### file linked![after changes file added](https://user-imagesgithubusercontentcom/64270456/109797708-18ae4480-7c1a-11eb-9fc7-ae7138b2cba7png) hi folks thanks for your contribution at very first sight i like this ideaabout the icon: this seems ok just a few days ago we switched our iconset to iconli the previous iconset was very limited so the briefcase icon was just a workaround the new icon seem reasonableabout the label: im not really sure if we should display an icon or a label maybe the other @jabref/developers have a preference but if we use a label it needs to be localized (see https://devdocsjabreforg/getting-into-the-code/code-howtos#using-localization-correctly ) || hello @calixtus @tobiasdiez recommended an implementation with a description that says (auto) in issue #3607 we agreed that it would make the display clearer and chose to implement it as a separate text field in the hbox as the description is currently bound to the linked files description property we estimated that too much refactoring would be required to initially set the description to (auto) and then change it to be bound to the files description property if the user chooses to link the file we also thought that it made more sense to display the text prior to the file name well await feedback from another dev about the icon vs text dilemma || thank you for your quick response i did not see the discussion with tobias diez earlier sorry but if thats what you both agreed on than its perfectly fine || well try out a few solutions and update the thread with screenshots of the different results then you can give feedback and well go with whatever looks best to you guys || ## after pressing button![screenshot from 2021-03-05 10-48-46](https://user-imagesgithubusercontentcom/17311691/110101167-89cd3380-7da3-11eb-900c-3c6e651f6da2png)## button to the left![screenshot from 2021-03-05 10-49-15](https://user-imagesgithubusercontentcom/17311691/110101175-8c2f8d80-7da3-11eb-9a05-f55702dd25d9png)## button where (auto) was![screenshot from 2021-03-05 10-55-34](https://user-imagesgithubusercontentcom/17311691/110101177-8d60ba80-7da3-11eb-80c6-4603668e862cpng)## with opacity![screenshot from 2021-03-05 11-10-53](https://user-imagesgithubusercontentcom/17311691/110101181-8e91e780-7da3-11eb-8a67-4b960557754bpng)@calixtus @tobiasdiez here are some examples of the possible implementations that you suggested earliertell us what you think we can of course make further changes if you want || thanks a lot! i like the ""button to the left"" solution the most and would say it should be sufficiently clear that this is not a normally-linked file so if there is a short description as a tooltip for the link button i would say this is fine @jabref/developers what do you think? || the tooltip is unchanged since the earlier button as we thought it was well formulated and descriptive || im really not sure what would be the best solution on one hand it shows now symbols to the left and to the right and its hard to guess what means what on the other hand it really should stand out if there is an autolinked file guess there is no right solutionwhat if there are more than one linked files listed? || @calixtus different entries are handled separately we simply make use of the isautomaticallyfound property to make changes## several automatically found![screenshot from 2021-03-08 09-11-12](https://user-imagesgithubusercontentcom/17311691/110293356-c17beb80-7fee-11eb-91e4-a5138a1059e9png)## one added![screenshot from 2021-03-08 09-11-28](https://user-imagesgithubusercontentcom/17311691/110293384-ca6cbd00-7fee-11eb-8165-863db571fc96png) || > @calixtus different entries are handled separatelyof course its just about the look and feel if several different list entries are shown thanks for testing out i personally like the variant ""icon on the very left"" || do we use opacity and what percentage would you like? currently we use 70% for automatically found files and 100% for files that have been added || its just fine as it is if you use opacity please also check out if it shows up right in the dark theme || it works for dark mode ill push the latest changes![screenshot from 2021-03-08 09-58-35](https://user-imagesgithubusercontentcom/17311691/110298522-f8550000-7ff4-11eb-8338-ca6ffa682eabpng) || i realized that opacity was set way too low and that the correct images should be:![screenshot from 2021-03-08 10-43-58](https://user-imagesgithubusercontentcom/17311691/110304580-0e19f380-7ffc-11eb-94be-1bcd41f89996png)![screenshot from 2021-03-08 10-44-14](https://user-imagesgithubusercontentcom/17311691/110304592-1114e400-7ffc-11eb-9e3c-1eb140270e60png)this is how it looked in the first set of images with opacity || we will write some tests for this as well || if you like one more more idea on this: the ""königsweg"" would be to assign a css pseudostate so the opacity would be addressable in the stylesheet and be customizable || see for example importentriesdialog::initialize() (lines 105 and 145)this way you could subscribe in the view (easybind) changes of isautomaticallyfoundproperty() to the pseudo class and remove the opacityproperty which is some kind of a rule breaker of the mvvm design pattern || kings trail has a different meaning in sweden: https://enwikipediaorg/wiki/kungsleden (highly recommended hike!) 😃  otherwise i agree! || wouldnt say so both the kungsleden and using psuedo classes for opacity are distinguished by special beauty 🙈 😆  || we did not manage to figure out how to use easybind but the program now makes use of css to change the opacity when the text is generated and when the button is pressed || @calixtus @tobiasdiez thank you for your time and engagement we appreciate all the help and advice you have given us  || i have just tested it: nice!thank you! || "
899,6730,7494,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"simplify biblatex entry type form fixes #6730 related pr: #7485 this is a follow-up pr that simplifies the select entry type form in biblatex modescreenshots:![entryformnonexpand](https://user-imagesgithubusercontentcom/47194464/110112312-dc155100-7db1-11eb-9d94-2e4d1f9fff2epng)expanded:![entryformexpand](https://user-imagesgithubusercontentcom/47194464/110112332-e46d8c00-7db1-11eb-8d98-179114e1ec1fpng)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository dont forget the changelog || > dont forget the changelogsince this is a follow-up i guess the line included in the changelog is enough (""we simplified the select entry type form by splitting it into two parts (""recommended"" and ""others"") based on internal usage data #6730"") || thanks for the quick follow up! || "
900,6818,7507,1,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,"fixed columns shrink in width when enlarging the jabref window <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->in method resize in order to make sure that we are staying under the total table width the program used to reduce the newsize by two for every column cause the method will be call for many times that will occur the problem which shown in the video in issue 6818 i do a little bit modify for this implement of controlling width which is reduce the width only if the current width exceed the total width and only reduce for the surplus partfixes #6818 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositorybefore:https://user-imagesgithubusercontentcom/60515999/110437190-12273d80-80f0-11eb-966c-4797901d20a9mp4after:https://user-imagesgithubusercontentcom/60515999/110437211-19e6e200-80f0-11eb-830e-922142c4a7f3mp4 @tobiasdiez thanks for your acknowledgment || @tobiasdiez no it does not make it obsolete even though i am for +1 for this quick fix ||"
901,7517,7518,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"change export to save <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fix for 7517 change export to savefixes #7517 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository this is one of the fastest issue --> pr i have seen!looking at your changes i think the section title ""export sort order"" needs to be modified too (and maybe twice: once for the preferences window and once for the library window) || okay i changed it too || you probably need to adjust the localization in the l10n properties file https://devdocsjabreforg/getting-into-the-code/code-howtos#using-localization-correctly || only delete the unused part of l10n is enough am i right? || please check your github configuration the checks all stall and without checks its way harder for us to test changes made to the codebase! || please keep the distinction of ""export"" and ""save"" please change to ""neutral"" wording to enable use of a common fx control:![grafik](https://user-imagesgithubusercontentcom/1366654/112886589-6cedfc80-90d2-11eb-9376-4c9c45e3064bpng)(see also https://githubcom/jabref/jabref/issues/7517#issuecomment-809633110) || @yinpeiqi it would be really nice if you could implement the changes as outlined in the screenshots || is this change ok? || okay i remove it || there is still a unused import breaking a check style rule || well this time i remove it || you are welcome || thanks again for your contribution! || "
902,6207,7542,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,add simple unit tests i have added some simple unit tests that will increase code coverage / branch coverage they contribute to issue #6207 - [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hey @davfon  great to see someone takes a look at our test suite!at first glance the tests themselves look good but i think you could also convert these tests to parameterized tests (there are some examples in our test suite) if you like its pretty easy you could also use the builder pattern for the creation of bibentries for testing (`new bibentry()withfield()`) || hi there @calixtus !thanks for the quick feedback! i willl look into it and will try to convert them to parameterized tests wherever possible ||
903,6207,7543,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,add simple unit tests i have added some simple unit tests that will increase code coverage / branch coveragethey contribute to issue #6207- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository will adjust and fix checkstyle this evening/tomorrow  || i think your course is over @elliemayvelasquez thus no more activity here? || > i think your course is over @elliemayvelasquez thus no more activity here?thanks a lot for all the feedback @koppor ! - i will resolve all of these issues within this month hopefully just havent gotten around to it yet due to lots of parallel coursework atm :) || @nasdas-dev may i ask which month you meant? 😇  ||
904,6207,7544,1,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,add simple unit tests i have added some simple unit tests that will increase code coverage / branch coveragethey contribute to issue #6207- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @kopporthanks for reviewing!ive addressed your comments in commit 9492146 and 51b7d8d ||
905,6207,7545,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,add simple unit tests i have added some simple unit tests that will increase code coverage / branch coveragethey contribute to issue #6207<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
906,7525,7548,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,fixed missing trigger for linked file operations fixes #7525- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i was also looking at this and got confused why there is a binding to the executable state in the first place the context menu is created when the user right clicks the file and then the state doesnt change until the user chooses a an option from the menu moreover the linked file view model should be recreated as soon as the content of the file field changes - so no binding needed since the linkedfile is constant for all practical purposes what i am missing? || i have no idea but it works 😅 but seriously: the contextaction command was introduced in the first place to prepare this for a later to be added undo functionality i tried it also with `bindingshelperconstantof()` and directly with `setexecutable()` but this did not show a consistent behaviour my guess is that something is still cachedin this state i think it works but some more investigation surely wouldnt hurt || yeah im also afraid that it is actually a cache error and it still shows the context menu for the previous version of the linked file hopefully that doesnt lead to more problems eg when the action is performed with respect to the previous version instead of the current one ||
907,2292,7549,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add ability to insert arxivid #2292  pasted `arxivid` creates new bibentry <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks again for your contribution! thats very useful! ||
908,6487,7551,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"fix for issue 6487: opening bibtex file (doubleclick) from folder with spaces not working fixes #6487- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositoryvideo:https://user-imagesgithubusercontentcom/57553691/111628111-ce88ae00-882a-11eb-9dee-9dfe3087437fmp4use `d:\test\test whitespacebib` as an exampledouble-click it and i got errors in console as the following:```error opening file d:\test\test: could not find a suitable import formaterror opening file whitespacebib: could not find a suitable import format21:41:53032 [jabref - remote listener server on port 6050] error orgjabreflogicimporteropendatabase - error: file not found```therefore the path was regarded as two files: `d:\test\test` and `whitespacebib`start from `orgjabreflogicimporteropendatabase` to backtrack the dataflow:|         class          |            method            |      variable      || :--------------------: | :--------------------------: | :----------------: ||     `opendatabase`     |        `loaddatabase`        |    `filetoopen`    ||  `argumentprocessor`   |     `importandopenfiles`     |    `aleftover`     ||      `jabrefcli`       |         constructor          |       `args`       ||  `argumentprocessor`   |         constructor          |       `args`       || `jabrefmessagehandler` | `handlecommandlinearguments` |     `message`      || `remotelistenerserver` |       `handlemessage`        |     `argument`     || `remotelistenerserver` |            `run`             | `inputgetvalue()` ||       `protocol`       |       `receivemessage`       |     `argument`     |use logger to print the variable `argument`:```javaif (argument instanceof string[]) {    loggerinfo(arraystostring((string[]) argument))}```and i got:```21:41:53024 [jabref - remote listener server on port 6050] info  orgjabreflogicremotesharedprotocol - [d:\test\test whitespacebib]```so i think the problem is that when passing the argument `d:\test\test whitespacebib` it will be considered as two arguments because there is a whitespace that serves as a delimiteri noticed that @zongxian said that a path containing chinese characters would cause the same error so the problem is not just related to delimiter probably about text encodingtherefore i encoded the arguments in `remoteclientsendcommandlinearguments` and decoded them in `protocolreceivemessage`then i created a binary and tested now it works well on my computer (windows 10 1909) thanks for your acknowledgement!i moved it to `protocolsendmessage` and added some commentsbesides i created a new test case in `remotecommunicationtest`---as @rickvandoorne mentioned:> * if i double click on a bib file while jabref is not running then jabref opens (it no longer gives me the error message) however it does not open the file which i double clicked> * if i double click on a bib file while jabref is running it opens a new library called ""untitled"" but not the file i double clicked> * if i open jabref first and then open a file using ""file"" → ""open library"" it works finei tested these three ways to open a `bib` file got no errordouble click while jabref not running:https://user-imagesgithubusercontentcom/57553691/111728161-47c5e680-88a7-11eb-81d2-ddd56253b3damp4double click while jabref running:video above""open library"":https://user-imagesgithubusercontentcom/57553691/111728322-983d4400-88a7-11eb-983d-74ee3d45354cmp4 || "
909,4129,7552,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"ui: fix for group icon <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #4129replaced the default group play icon by small circle<img width""640"" alt""screenshot 2021-03-20 at 4 13 02 pm"" src""https://user-imagesgithubusercontentcom/62339705/111866991-30662680-8997-11eb-8e94-15405cb0459bpng"">i think this also fixes #7550<img width""640"" alt""screenshot 2021-03-20 at 4 59 33 pm"" src""https://user-imagesgithubusercontentcom/62339705/111868243-d5383200-899e-11eb-8350-d05285ed782bpng""><img width""640"" alt""screenshot 2021-03-20 at 5 07 50 pm"" src""https://user-imagesgithubusercontentcom/62339705/111868277-044ea380-899f-11eb-8b1f-71685c6da22epng""><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your pr the problem with the default circle is that it is rather big and thus dominates the interface too much (its pretty hard to read the group label because your eyes are constantly focusing the big colorfull blob in front of it) it would be thus nice if this circle could be scaled down (without scaling other icons because they get too small otherwise)  || can you check if the color thing fixes #7550 as well?  || @tobiasdiez thanks for the suggestion i think the icon library has been updated and different sizes of circles are already present in the librarylet me know which one do you prefer1 circle_medium<img width""726"" alt""screenshot 2021-03-20 at 6 37 23 pm"" src""https://user-imagesgithubusercontentcom/62339705/111873214-47b40c80-89b5-11eb-9e44-8c5f6f84b19epng"">2 record<img width""726"" alt""screenshot 2021-03-20 at 6 56 09 pm"" src""https://user-imagesgithubusercontentcom/62339705/111873230-58fd1900-89b5-11eb-8f87-f5bc2cc222capng""> || > can you check if the color thing fixes #7550 as well?i checked it and also updated the screenshots in https://githubcom/jabref/jabref/pull/7552#issue-597260059it fixes all issues mentioned in #7550 || cool! for me record looks appropriate || thats awesome i agree record looks the best || thanks again! || "
910,7550,7552,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"ui: fix for group icon <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #4129replaced the default group play icon by small circle<img width""640"" alt""screenshot 2021-03-20 at 4 13 02 pm"" src""https://user-imagesgithubusercontentcom/62339705/111866991-30662680-8997-11eb-8e94-15405cb0459bpng"">i think this also fixes #7550<img width""640"" alt""screenshot 2021-03-20 at 4 59 33 pm"" src""https://user-imagesgithubusercontentcom/62339705/111868243-d5383200-899e-11eb-8350-d05285ed782bpng""><img width""640"" alt""screenshot 2021-03-20 at 5 07 50 pm"" src""https://user-imagesgithubusercontentcom/62339705/111868277-044ea380-899f-11eb-8b1f-71685c6da22epng""><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your pr the problem with the default circle is that it is rather big and thus dominates the interface too much (its pretty hard to read the group label because your eyes are constantly focusing the big colorfull blob in front of it) it would be thus nice if this circle could be scaled down (without scaling other icons because they get too small otherwise)  || can you check if the color thing fixes #7550 as well?  || @tobiasdiez thanks for the suggestion i think the icon library has been updated and different sizes of circles are already present in the librarylet me know which one do you prefer1 circle_medium<img width""726"" alt""screenshot 2021-03-20 at 6 37 23 pm"" src""https://user-imagesgithubusercontentcom/62339705/111873214-47b40c80-89b5-11eb-9e44-8c5f6f84b19epng"">2 record<img width""726"" alt""screenshot 2021-03-20 at 6 56 09 pm"" src""https://user-imagesgithubusercontentcom/62339705/111873230-58fd1900-89b5-11eb-8f87-f5bc2cc222capng""> || > can you check if the color thing fixes #7550 as well?i checked it and also updated the screenshots in https://githubcom/jabref/jabref/pull/7552#issue-597260059it fixes all issues mentioned in #7550 || cool! for me record looks appropriate || thats awesome i agree record looks the best || thanks again! || "
911,7554,7558,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,"allow identical group names <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->allow creation of groups with names that already exist somewhere in the group hierarchythis in the essence fixes #7554 by making repeated group names ""first class citizens"" in jabref allowing to create them in the gui (with a warning of course) it seems suitable for many users (as judged by group interface discussions) and does not bring any undesired consequences (i played for a while with it everything works as expected assuming you are fine with the fact that two groups with the same names contain always the same entries for me this seems ok)i offer this pr since the fix was *very* simple (seh  sunday evening hack ) ) and brings a lot of useful functionality imho the alternative name suggestions are possible but will need considerably more effort<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->![screenshot at 2021-03-21 17-56-22](https://user-imagesgithubusercontentcom/10668420/111911840-c0779f00-8a6f-11eb-92e8-cc51efb63d5epng)- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable – not yet but will do later -- sg)- [ ] tests created for changes (if applicable – seems not all tests pass sg)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository (sg -- not yet but will do later) thanks for your prjust a few questions i had while thinking about this:- what should happen if the user renames one of the groups? if the other group is not renamed as well then it contains no items- i think its already possible to have to groups with the same entries: group a is an ""assign entries manually"" group and group b is a keyword-based group for the field ""groups"" and value the name of group a the only constraint is currently that group a and group b have to have different names but something as ""group a (dup)"" as a workaround doesnt seem to bad does this work? is it already sufficient? || > what should happen if the user renames one of the groups? if the other group is not renamed as well then it contains no itemsa decent and easy strategy would be to detect this case and leave the old group name as well as the new group name in all entries of the original group then both the new (renamed) group and the old group will contain the same entries and from the point of renaming they start their independent life so to say :)amending the rename code should be easy i can do thata more elaborate solution would be to ask if a user wants to reassign the entries to the new group to the old group(s) or to all of them similar to the question that is asked when changing group hierarchical content but this is more work so the first try would be to leave entries in both old and new group as by default || >  i think its already possible to have to groups with the same entries: group a is an ""assign entries manually"" group and group b is a keyword-based group for the field ""groups"" and value the name of group a> the only constraint is currently that group a and group b have to have different names this is exactly what i am trying to avoid! i mean i try to remove this constraint and allow users to create groups with identical names if they wish so> but something as ""group a (dup)"" as a workaround doesnt seem to bad does this work? is it already sufficient?well for my purposes of using jabref no it is not sufficientthe primary need is to allow identical group names in different parts of the hierarchy without this i just can not use the groups of example i can not migrate automatically my bibliographies from zotero where i do have identical group names in different parts of the tree and migrating our old jabref 3x group assignment is also not possiblethe fact that two groups with the same name always get the same entries is for me an u ticipated feature which can be put to good use once you understand it actually think about groups not as tree leaves but as _sets_ in a mathematical sense a set (group) is defined by its members and the same set can be a member of any other sets (eg branches of a tree)if i need to define a special group of a different kind then ill probably find it too complicated to maintain and will not do it think what happens when i rename your primary group (group a)? all my symlink keyword based groups (group b and friends) will become invalid unless jabref fixes them automatically and how does it know when to fix keyword groups and when not? most often when i change a keyword in an entry this means that it must appear in a different keyword group not that the original keyword group is retargetted to a new keyword || > what should happen if the user renames one of the groups? if the other group is not renamed as well then it contains no itemsalso removing a group should leave entries assigned to the group if other instances of the same group exist i can take care of this as well || im a bit undecided on the one hand i agree that allowing duplicate names would be natural and useful in some cases on the other hand it feels like opening a (small) box of pandora since there are so many things you have to think about: renaming groups deleting moving in the tree manually editing of the groups tree in the bib file also it makes it harder to migrate to other solutions (say id-based or full-path-of-group) since the name is no longer unique another point is that we were thinking about adding a nice user interface for the groups and for this a ""group name > group in tree"" map would be needed in summary allowing duplicate names definitely increases the burden for future mainte ce im tending to keep the error advanced users such as yourself can then still add groups with the same name by editing the groups tree manually in the bib file @jabref/developers what do you think? || > im a bit undecided on the one hand i agree that allowing duplicate names would be natural and useful in some casesvery much so!> on the other hand it feels like opening a (small) box of pandora since there are so many things you have to think about: renaming groups deleting moving in the tree manually editing of the groups tree in the bib file it seems to be not that bad actually less dangerous than having full paths in group namesthe mentioned actions seem to make a ""closed complete set of functions"" (crud?):1 renaming a group is pretty much as it is now extension will be: if another group with the same name exists leave the old group name in all entries and add the new group name if the group was unique: remove old group name from entries add new group name to these entries very natural no information is lost the action is actually reversible! the user can later rename the new group again move it in the tree or ""weed out"" some entries (without affecting the original group)2 deleting the group is very similar to renaming: if another group with the same name exists no entries need to be changed otherwise group name is removed from all entriesim now experimenting with this functionality in my branch and will add modifications for 1) and 2) to the pr3 moving in the tree: trivial as it is now: just change the position in the list and the indentation number can be done both in gui and by editing/sed-editing the bibtex file4 manually editing of the groups tree: trivial – just delete one row and insert it in another position if yo want it elsewhere this is how i produced the test cases with identical groups before the patch of this pr was implemented tree editing is independent from entry editing unless you want to rename the group manually *and* retain all entries in it5 editing groups in entries: exactly as it is now just add a group name you want and you have added the entry to that named group it will appear in all places of the tree where this group is mentioned the entry editing is independent from the treeno dangers seem to be lurking so far> also it makes it harder to migrate to other solutions (say id-based or full-path-of-group) since the name is no longer unique another point is that we were thinking about adding a nice user interface for the groups and for this a ""group name > group in tree"" map would be needed in summary allowing duplicate names definitely increases the burden for future mainte cethe most painful migration was from groups 3x to groups 4 where a lot of people (including me :( ) lost their group assignment data well my day was saved by a subversion repo where all my databases reside and a bunch of unix scripts that restored the group assignments others might have been less luckyi see the group assignment by people to be a *very* valuable information – a lot of manual work went into assigning and classifying entries and people rely on them when finding information they need quicklyso an information-preserving migration strategy will be needed anywaya possible migration would be:1 when migrating from the current pr #7558 to a tree where groups in different tree branches are different:    -- if the new format supports  the ""linked"" groups ie groups that all get the same entries when an entry is added to one of them convert synonymous groups to such entries   -- if the new format does *not* support such functionality just retain groups with identical names and identical sets of entries and warn the user that the behaviour of jabref has changed2 when migrating from the old group format (3x) to the new one as in this pr:    -- if all groups have unique names nothing needs to be changed    -- if some groups in different places of the tree have the same name make only those groups unique by either appending a group parent names (as in treatment (medicine > asthma) and treatment (biocompatibility > surfaces) or by appending just a serial number and warn the user about renaming the user can then adjust group names if they wish but must importantly their precious division of entries into groups is not lost> im tending to keep the error advanced users such as yourself can then still add groups with the same name by editing the groups tree manually in the bib filewell even if i go for this i (and my colleagues) need some reassurance that jabref will keep the present functionality in the future so that our work of adding these groups and assigning entries to them does not go down the drain and keeping such functionality in sight is probably as much work for the jabref team as keeping it with the suggested changes added :)also if i need to use external scripts/editors for managing my bibtex file well its doable but i lose some integration and the nice jabref features like auto-fetch of bibliographies and oa papers would be a pity also it does not seem like a good advertisement for a gui program to say ""well you of course can have this feature but you need to save data open a text editor edit groups by hand (watch out the syntax!) restart/reread the data into jabref""> @jabref/developers what do you think?keen to hear the answers! || update in commits leading to 6f5b119 : when a group with duplicated name is deleted its name is removed from the entries only when there is no other group with the same name left works for ""delete group and subgroups"" command || hi folksim trying to run jabref under debugger for this i installed ideac (intellij) and imported the jabref gradle project (which ide recognised)but when i try to run or debug the project i get an error from the ide:caused by: javalangruntimeexception: test specified more than once to --patch-modulethats not always reproducible but essentially one can not work with the ide reliably goolged around and did not find any hints maybe someone has a quick idea what cold be wrong?osname: linuxmint-193 java: java 1502 2021-01-19 ideaic20203tiasaulius || i dont use intellij but did you configure it as stated here? https://devdocsjabreforg/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-ide || > i dont use intellij but did you configure it as stated here? https://devdocsjabreforg/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-idethanks for the link i had it running some time ago but many things probably changed since then ill have a lookwhich ide are you using? i tried eclipse but it generates a lot of exceptions under debugger || >  but did you configure it as stated here? https://devdocsjabreforg/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-idethank you very much the hint helped a lot now im running ok sorry ive overlooked this doc || as discussed in #7551:> i have just noticed that when i rename one of the dupliactes its entries are reassigned to the new group and vanish from all old group duplicates this is not what i (and probably most other users) would expect the fix should be easy – if the group(s) with the original name exist somewhere in the tree the old group name should be retained in the entries the entries will thus belong to two groups if one of the duplicates is renamed only of the group name vanishes from the tree it should be removed from the entries as well> ill amend the pr to fix thisthe latest commit fixes this issue now entries are not removed from the remaining synonymous groups if one of them is renamed in that case entries become assigned to both groups the new and the old seems like a very natural behaviour to mehow do you find it? || the more i think about this the more im convinced that it was a bad idea on my side to use the group name as the identifier i propose we drop the requirement that the ""groups"" field should be human-readable and instead use a unique identifier for each group the ""groups"" field in the entry editor would then use a chips view to give a nice ui to manage group memberships @jabref/developers input very much appreciated! || as a side note: the proposed pr seems to also fix the #7556 :) || > the more i think about this the more im convinced that it was a bad idea on my side to use the group name as the identifier i propose we drop the requirement that the ""groups"" field should be human-readable and instead use a unique identifier for each group the ""groups"" field in the entry editor would then use a chips view to give a nice ui to manage group membershipsif i may chime in:sure if you want to have *unique* keys identifying your internal objects it is a bad idea to rely on external namesthat said i would not say that your idea to use user-provided names as identifiers is so bad it depends on what you want to do if you take users provided group names at their face value as names that users want to use to *identify* their groups then you current implementation logically follows and also a behaviour suggested in pr #7558 logically followsafter a bit of testing and playing around i think i now see the full rationale of placing group names into entries and the emerging behaviour is quite useful – provided that you frankly admit that users *can* create groups with identical names (and gui checks will not stop them ) )note that when we have intermediate groups such as language in computer/language/sql and data/language/sql  or human/language/esperanto the language group if it is a union group and has no entries of its own behaves exactly as it used to behave in the old systemmoreover if you have some entries in the language group it makes perfect sense to make a subgroup language/others where others will contain all ""unassigned"" languages and move all these entries there then the language union group will continue to display *all* entries as it used before and all other language groups elsewhere in the tree would continue to show the entries in their subgroups a user is free to include groups others into those language groups or not to my taste this is perfectly usable quite transparent and rather useful || we discussed this at our dev call we are not sure about the possibly overlooked consequences since we are software engineers we like empirical software engineering ^^ we do the shortcut and started a survey on twitter - hopefully many persons will answer it: https://twittercom/jabref_org/status/1376602527832158215 || > we discussed this at our dev call we are not sure about the possibly overlooked consequences since we are software engineers we like empirical software engineering ^^ we do the shortcut and started a survey on twitter - hopefully many persons will answer it: https://twittercom/jabref_org/status/1376602527832158215good idea general user feedback is very important and users should know what to expect || > we are not sure about the possibly overlooked consequences since we are software engineers we like empirical software engineering ^^why not running the https://githubcom/sauliusg/jabref/tree/saulius-allow-identical-group-names branch in a sandbox and see how it behaves? bugs and usability issues will surface (empirically) after some time of playing around :) || @tobiasdiez @koppor  any more thoughts on group implementation(s)?should i go on to implemented dashboard-like info as suggested by @aegit in #7554? || note to myself for the devcall tomorrow: i think i agree with https://githubcom/jabref/jabref/issues/7554#issuecomment-813022194 || > note to myself for the devcall tomorrow: i think i agree with [#7554 (comment)](https://githubcom/jabref/jabref/issues/7554#issuecomment-813022194)thanks for the reply waiting for the devcall outcome || devcall: we accept the risk of some unforseen side effects with the benefit having identical groups working || > devcall: we accept the risk of some unforseen side effects with the benefit having identical groups workingthank you very much for accepting this change! you save my year  – i start to migrate my groups immediately and will offer the javref dev version to my co-workes as soon as the stability issues are resolvedin case there are unforeseen problems for sure i feel obliged to invest my effort to help resolving them as much as i can || "
912,7337,7569,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,custom doi base address fix as mentioned in fixes #7337 the option to choose custom doi base address did not propagate to `librarytab` and this pr aims to solve exactly that in the process i refactored `linkedidentifiercolumn` so that it uses `openurlaction` as well- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
913,6207,7571,1,0,0,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,0,"refactor simple unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->i have refactored some simple unit tests to make them easier to understand more readable more maintainable and less likely for human error some identified [test smells](https://testsmellsorg/pages/testsmellshtml#generalfixture) (like general fixture and test code duplication) have been fixed it addresses #6207 although it is mainly a refactoring <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository its nice that you are interested in contributing to jabref however it would be nice if you not only focused on simple technical issues but on issues that affect the users || > some small comments then it should be good to gothanks for the comments and suggested changes i addressed them in the last commits ||"
914,7524,7573,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix column sort order gets overwritten fixes #7524the problem was that maintablegetsortorder is only filled when there is a change however updatecolumnpreferences was also called when just the width changed and then getsortorder was empty and was always overwritten <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository may i eventually push on your branch? id prefer immutable preferences objects || fix itself looks right but there are some code style things i would like to change || @calixtus  sure but i think the root cause was the immutable columnpreferences the sort order was always overwritten even if it did not change note that it is also not possible to check for empty because when you clear the sort order the list is empty and you could not reset the sort order || i think its fine i just made the columnpreferences immutable again but kept the distinction in the methods between updates of the sortorder and the columns so nothing should be overwritten it just pulls the old opposite unchanged value directly from the preferences the logic should be exactly the same but without altering the existing columnpreferences but creating new ones with the kept value from the preferencescan you please check it to be sure it works for you?i just believe this looks a bit cleaner || ah i see will test tomorrow || works but i found another bug in the saveorderconfigsortcriterion uses booleanparseboolean() and it was passed the enum values ""ascending"" or ""descending"" which obviously will always return false when you have that input for booleanparse  || devcall: merge as hotfix later: nice preferences (string should be enum) || "
915,6207,7579,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,add unit tests for orgjabrefgui classes test coverage for orgjabrefgui package is rather low (8%) this pull request adds unit tests to 3 classes under the gui package increasing their respective line coverage from 0% to 100% they contribute to issue #6207tests added:1 appendpersonnamesstrategytest2 personnamestringconvertertest3 replacestringviewmodeltest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository two approvals  mergablethanks for the tests! ||
916,6207,7581,1,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,refactoring and addition of unit tests this pull request includes new unit tests for three classes which increases their line/statement coverage they contribute to issue #6207further i have also refactored existing unit tests to make them more readable understandable and maintanable  in this sense i focused more on test smells described in the paper _refactoring test code (van deursen et al)_  and also on the code howtos (test cases) in the development documentation<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @koppor thanks for reviewing!i finally adjusted the code accoring to your comments and suggestions :) ||
917,7590,7600,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"fix numberformatexception in bracketedpattern <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7590 the error occurs because the size of the integer is too large to be contained in an `int` the suggested changes use `biginteger` and `stream` instead of `int` and for-loopsthis is mostly an excuse to verify my setup after the `master` -> `main` branch name change<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] ~[checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository~  "
918,7366,7602,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"adds progress count to possible duplicates dialog resolves #7366when processing duplicate entriespossible duplicates dialog gave no indication as to progressto address this lack of feedbacka progress counter was added to the title barthe title property now contains two updatable properties:1) a total count of all duplicates2) a count of how many duplicates have already been addressedthey are updated with listeners and bindings toprovide real time feedback--- note: because of the use of different threads the total-count could not be directly bound so an extra variable and listener are required also line 88 was removed and `duplicatecountgetandincrement()` was changed from `getandincrement()` to `incrementandget()` so returned value could be used--- <img width""675"" alt""screen shot 2021-03-30 at 4 16 45 pm"" src""https://user-imagesgithubusercontentcom/56512349/113058351-a32f8880-9173-11eb-826d-760170b39a67png"">- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the background tasks have already a progessvalue and progresstext property you can bind to have a look at the umportfilesinbackground here https://githubcom/jabref/jabref/blob/2948e6d78c7e1e7a16348e2fdb993a0b65a9dde0/src/main/java/org/jabref/gui/externalfiles/importhandlerjava#l68-l88and the binding in unlinkedfilesdialog || @siedlerchr i think this is a different kind of progress here the user is clicking and thus changing the ""progress"" while for your solution something is happening in the background || @siedlerchr the progress count is indeed a user paced progress which changes as the user clicks options for resolving duplicates and in a few cases increments automatically without presenting a user a dialog window but still only as a response to a previous dialog click this value i didnt think would be appropriate to use the background taskthe other value the total is only a count of total pairs found while it may be possible to take advantage of the background progress monitoring its really not a true progress count that is needed for this value i would have liked to simply request the value from the atomicinteger duplicatecount (like the notify at the end) but i wasnt able to use this directly because the dialog pops up before many of the pairs have been made often giving an artificially low count of 1/1this ends up being a progress count of a user working through the end result of the of the find-possible-pairs task || ah thanks for the explanation || @siedlerchr would you like to see revisions? || @tp-1000 thanks for your contribution! and sorry for the delay! || "
919,6207,7636,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add more unit tests to three gui classes this pull request replaces #7635 (closed/not merged) and it contributes to issue #6207 which is to add more unit tests to the project  in this case specifically in the gui package using test doublestests added:newentryactiontestcopymoreactiontestexporttoclipboardactiontestin order to add the exporttoclipboardactiontest and to migrate to using preferencesservice code refactoring has been done as suggested by @siedlerchr the purpose of the refactoring is to add preferencesservice as a parameter in the constructors of exporttoclipboardaction to replace the globals variable refactored classes are as follows:exporttoclipboardactionjava jabrefframejava rightclickmenujava jabrefpreferencesjava preferencesservicejava - [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository @calixtus  can you take a look at the globalsprefs extraction?  || @ningxie1991  would be nice if you could address the hints related to the test you can use  mockitos any method        without specifying the exact localization content etc `verify(dialogservice times(1))notify(any())`  ||
920,7635,7636,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,add more unit tests to three gui classes this pull request replaces #7635 (closed/not merged) and it contributes to issue #6207 which is to add more unit tests to the project  in this case specifically in the gui package using test doublestests added:newentryactiontestcopymoreactiontestexporttoclipboardactiontestin order to add the exporttoclipboardactiontest and to migrate to using preferencesservice code refactoring has been done as suggested by @siedlerchr the purpose of the refactoring is to add preferencesservice as a parameter in the constructors of exporttoclipboardaction to replace the globals variable refactored classes are as follows:exporttoclipboardactionjava jabrefframejava rightclickmenujava jabrefpreferencesjava preferencesservicejava - [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository @calixtus  can you take a look at the globalsprefs extraction?  || @ningxie1991  would be nice if you could address the hints related to the test you can use  mockitos any method        without specifying the exact localization content etc `verify(dialogservice times(1))notify(any())`  ||
921,6207,7638,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,"add more unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests to the project the tests make use of mocks (stubbing) to simulate the behavior of some classestests added:importerviewmodeltestbibstringdifftestpreambledifftest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository it would be really nice if you would finish this pr asap! @davfon  || > it would be really nice if you would finish this pr asap! @davfonthanks for the feedback and sorry for the late response i will try to do the changes by tomorrow evening || should be all good now had to override the equals method (and add hashcode() for checkstyle) thanks again for the good inputs || thanks for the follow up fixes and as you can see you discovered an error in the equals implementation for the bibtexstrings ||"
922,5850,7639,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,"fix for issue 5850: journal abbreviations in utf-8 not recognized fixes #5850- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository### reproduce the issue:1 new library2 new article3 bibetx source adds the following:   ```   @article{杨芙清2005软件工程技术发展思索     title{软件工程技术发展思索}     author{杨芙清}     journal{软件学报}     volume{16}     number{1}     year{2005}     publisher{citeseer}   }   ```4 click ""check integrity"" the main reason for this bug is the check-tools `check integrity` only accept the charset ascii it works well in english citations but  **jabref** has users across the world and they have different charsets ### the screenshot:1 before:![before](https://user-imagesgithubusercontentcom/71220965/115108177-93040f80-9fa1-11eb-99c3-6754a5e82120jpg)2 after![intigrity-check](https://user-imagesgithubusercontentcom/71220965/115108181-9ac3b400-9fa1-11eb-8dc1-dbad6a5a82e8jpg)### the way to fix:1 first i find the bug related to the class `asciicharactercheckerjava`2 in this class ```boolean asciionly  charmatcherascii()matchesallof(fieldgetvalue())```any non-ascii encoded characters will be warned3 then i remove the steps in `integritycheck` and still i want to give a warning about non-utf8 encoded characters1 i get the default encoding from the system (since we need to give a warning when the field cannot be decoded in utf-8 and this may happen when users default encoding charset is non-utf-8)2 check whether the value of fields(string) can be decoded in utf-83 if not just give a warning about ""non-utf-8 encoded found""to check this we need first set out the default charset(for example gbk) in the whole environment then we can get the following warning when using integrity check:![image](https://user-imagesgithubusercontentcom/71220965/115108584-e11a1280-9fa3-11eb-843f-b3f3a65857e6png) i might be not up-to-date but i always thought utf8 characters are only allowed in biblatex and that bibtex only handles asci characters did this change? || > i might be not up-to-date but i always thought utf8 characters are only allowed in biblatex and that bibtex only handles asci characters did this change?yeah  some journals and papers use non-ascii characters as their names etc(just as the bib in bibtex i added before) and maybe it is difficult to do with it in jabref the details are shown in the issue so i think maybe it is better to trade them equally || i dont really have experience with say chinese names (as authors or journals) with bibtex but the only evidence i could find was always suggesting biblatex since bibtex doesnt support utf8 see eg https://texstackexchangecom/questions/100092/how-to-include-a-chinese-paper-in-reference-via-bibtexso does it make more sense to keep the asci check for bibtex and add the new utf8 check for biblatex? || i agree with @tobiasdiez  we need the utf8 check for biblatex and the ascii checker for bibtex then || > i dont really have experience with say chinese names (as authors or journals) with bibtex but the only evidence i could find was always suggesting biblatex since bibtex doesnt support utf8 see eg https://texstackexchangecom/questions/100092/how-to-include-a-chinese-paper-in-reference-via-bibtex> > so does it make more sense to keep the asci check for bibtex and add the new utf8 check for biblatex?> i agree with @tobiasdiez we need the utf8 check for biblatex and the ascii checker for bibtex thengood idea！i will refactor my code to meet this need! (after searching more information about bibtex and biblatex i agree with you~ )and the check of utf8 for biblatex maybe its not a bug but an enhancement? (laugh) i will focus on it! || hi reviewers! i have added the utf-8 check for biblatex and recovery the ascii check for bibtex! is there anything i should do to give a better submission?  || so far looks good you only need to add the new localization string the l10 files see here for more details https://devdocsjabreforg/getting-into-the-code/code-howtos#using-localization-correctly || hi reviewers！i added this statement to all language packs but i rely on google translate for most of my translations so please double check it for errors~ || you only need to add it to the english file all otherttranslations are managed by crowdin || > you only need to add it to the english file all otherttranslations are managed by crowdinemmm so i need to subtract all the files except the english file right? || i have changed that hope everything goes well || i added the javadoc for utfchecker and fix a little problem in my junit test  || hi reviewers! i have added 2 junit test for utf8checker and 2 for integritycheck im not quite sure if these test cases are redundant and standardized so please give me some advice if problems exist! || thanks a lot for your contribution! ||"
923,7633,7652,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fix for issue 7633: unable to download arxiv pdfs if title contains curly brackets fix [#7633](https://githubcom/jabref/jabref/issues/7633)<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository## reproduce the issue:1 open library select the bib file as below```@article{zhang_machine_2021v2  author   {zhang ruohan and guo sihang and liu bo and zhu yifeng and hayhoe mary and ballard dana and stone peter}  journal  {arxiv:201015942v2 [cs]}  title    {machine versus {human} {attention} in {deep} {reinforcement} {learning} {tasks}}  year     {2021}  month    feb  url      {http://arxivorg/abs/201015942v2}}```2 double click the entry and then click the **get fulltext** on the right of **general | file ** it will give a message of ""no full text document found""3 and if we erase the curly brackets in the title with other keep the same it will download the pdf file successfully  the new title is given below```machine versus human attention in deep reinforcement learning tasks```after reading the source code i thought that it is the case that doi is not present and we need to use the author and title to query the url of the pdf file  however the title with curly brackets may fail to search a arxiv entry or the search is success but the title fails to match the  arxiv title## process to fix the issue:1 the arxiv-related work is in the **arxivjava** 2 then i found the url of pdf  is defined in the function **findfulltext** and it further invoke function **searchforentries**3 i defined a method called **ignorecurlybracket** in **stringutiljava** to erase the curly brackets in the title if the title is not blank 4 in the function **searchforentries** i invoke **ignorecurlybracket** to fix the title before it serve as a parameter to search arxiv entry and before the comparison with arxiv title## screenshots of  the result:### before![image-20210419154425138](https://user-imagesgithubusercontentcom/73102892/115348021-af43be80-a1e4-11eb-9989-d3e2fe1635d1png)### afterdownload successfully![image-20210419205905217](https://user-imagesgithubusercontentcom/73102892/115348190-e4501100-a1e4-11eb-8285-19b6cdc19b82png)![image-20210419210151694](https://user-imagesgithubusercontentcom/73102892/115348221-f0d46980-a1e4-11eb-8721-d02246ea0463png) theres also an architecture violation as stringutil is increased in size || so is it not allowed to add anything in stringutil? shall i simply move the function from stringutil to arxiv? || as for the checkstyle i just fix a part of it  the only warning message remains is ""  { is not preceded with whitespace“ but it may cause some problems if i add a white space before { as my sentence is:  replace(""{"" """")     || @pikayue11  the checkstyle is referring to the method definition (look at the changes tab reviewdog makrs the line) || im sorry now the checkstyle should be correct || the unit tests failing are relevant to the help something got wrong there || "
924,7195,7655,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,1,0,1,0,0,1,0,"fix#7195 partly opacity of disabled icon-buttons fixes #7195 opacity of disabled icon-buttons<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->add the disabled icon style in `basecss`- no tabs opened:![i1](https://user-imagesgithubusercontentcom/48386227/115385506-cc8b8380-a20a-11eb-9cd6-bb2b9adbf331png)- open a tab and do not select any entry:![i2](https://user-imagesgithubusercontentcom/48386227/115385596-e3ca7100-a20a-11eb-9e88-391a824a0e80png)- select an entry in the opened tab:![i3](https://user-imagesgithubusercontentcom/48386227/115385630-edec6f80-a20a-11eb-95b5-a15a8deeddd6png)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
925,7016,7656,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,1,0,1,0,0,1,0,"fixes #7016 toggle of special fields does not work for sorted entries fixes #7016 make a copy of selected entries and change field in the copy so that the sort strategy will not influence the result<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->the original version used for-each on the selected entry list but concurrentmodificationexception happened then i tried to replace it with normal for loop but the toggle problem still exist though the exception did not occur any more by checking the list in each loop i found that the order of the items in this list was changed during the for loop not exactly knowing how the sorting strategy is performed i make a copy of the list and do field change on the copied list finally the toggle action performs correctly<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
926,7616,7657,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,"fix sslhandshake exception by using bypass fixes #7616 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositoryfile download path: https://wwwserbski-institutde/os/dnlarchiv/kleine_reihe_27_web2217pdf<br>a valid authentication path cannot be found from the site where the downloaded file is located prompting the user with the option of whether to continue the download![warning](https://user-imagesgithubusercontentcom/47767371/115521609-e4700f80-a2bd-11eb-81e1-847244f177a6png)<br>the user chooses to cancel the download![canceled_tip](https://user-imagesgithubusercontentcom/47767371/115521968-416bc580-a2be-11eb-98ba-f2669356065epng)<br>the user chooses to download anyway![download](https://user-imagesgithubusercontentcom/47767371/115522090-652f0b80-a2be-11eb-9dc0-49157e482c6dpng) you can ignore the fetcher and the mac test but please have a look at the checkstyle test either click on details at the failing  or you can go to the files changes tab to see the reviewdog comments || the user chooses to cancel the download use `notify` instead of `informationdialog` to prompt the user![canceled_tip2](https://user-imagesgithubusercontentcom/47767371/115549091-d381c700-a2da-11eb-90f6-d8ad5049f97epng) || just a minor improvement for the variable naming otherwise lgtm! || @siedlerchr  @tobiasdiez  thank you so much for your suggestions and help! || we have to thiank you for your contribution @ryyyc ! ||"
927,7660,7663,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,"fixes jabref#7660 unable to download some arxiv links if the ""eprint"" field is missing fixes #7660## brief summary1 run eprintcleanup on a copy of the entry the arxiv fetcher is fetching before getting arxiv id from the eprint field2 add two test method one finds full text with title containing colon and journal while another finds full text with title containing colon and url## problemwhen finding full text this bibtex reference works:```@article{booth_bayes-trex_2020  author         {serena booth and yilun zhou and ankit shah and julie shah}  journal        {arxiv:200210248v4 [cs]}  title          {bayes-trex: a bayesian sampling approach to model transparency by example}  year           {2020}  month          dec  archiveprefix  {arxiv}  eprint         {200210248}  url            {http://arxivorg/abs/200210248v4}}```![#7660-0](https://user-imagesgithubusercontentcom/48386227/115873907-13c97c80-a476-11eb-821f-24598bd1a8a9png)but when `eprint` field is missing no full text will be found:```@article{booth_bayes-trex_2020  author         {serena booth and yilun zhou and ankit shah and julie shah}  journal        {arxiv:200210248v4 [cs]}  title          {bayes-trex: a bayesian sampling approach to model transparency by example}  year           {2020}  month          dec  archiveprefix  {arxiv}  url            {http://arxivorg/abs/200210248v4}}```![#7660-1](https://user-imagesgithubusercontentcom/48386227/115873922-188e3080-a476-11eb-80e7-222c58ee4e09png)## solutionsince the title contains colon and arxiv uses colon to represent key and value the title may be recognized mistakenly so use other fields to get the eprint field to avoid this problem thanks to the advice from @tobiasdiez ## screenshotsafter fix:![#7660-2](https://user-imagesgithubusercontentcom/48386227/115873880-0f04c880-a476-11eb-9291-82e011f87ab3png)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > wow that was quick 🚀  code looks good to me! thanks for your contributionit is your advice that makes me efficient!  at the beginning i try to ignore colons in title to solve this problem but it seems not so good  ||"
928,7641,7664,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix for issue 7641: wrong path to texstudio <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes [#7641](https://githubcom/jabref/jabref/issues/7641)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository<h3>bug:</h3>no matter where the extended applications are the default path of them (taken texstudio as example) would be set as `c:\program files (x86)\texstudio\texstudioexe` <h3>the way to fix: </h3>i verify the existence of extended applications under related default path if there is no `texstudioexe` under `c:\program files (x86)\texstudio\` and `c:\program files\texstudio\` the function *detectprogrampath()* will return string value """" namely the default path will remain unset just some minor code changes but otherwise lgtm! ||"
929,6199,7667,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,1,0,1,0,0,1,0,"fix for issue 6199: endnote xml import to jabref: pdf links are not imported corrected <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->fixes #6199  - [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository## summary of issue 6199when users import endnote type xml to jabref it always assumes that urls are warped inside a style tag however  some urls may not be wrapped in a style tag and as a result  jabref cannot parses them## way to fixin the xsd file i change the the complextypes attribute to `mix""true""` so that it can accept both vanilla text and subelements then i will check whether a style tag exists: if it does use the text inside it otherwise use vanilla text instead > just a minor code improvement but otherwise looks good to me!> that will benefit a lot of users!i kind of messed up the previous commits so i have incorporated your suggestion in the latest commit b1c3f75ac122c23161437e89df4fbde6fd90657f please check || @aloofwisdom  please have a look at the checkstyle test you can also see the comments from reviewdog when you look at the files changed tab || > @aloofwisdom please have a look at the checkstyle test you can also see the comments from reviewdog when you look at the files changed tabi could pass the checkstyle locally now please check again || thanks a lot for your contribution! ||"
930,7351,7671,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"migration of timestamp this pr moves the migration of the timestamp field from a postopenmigration to mutually exclusive cleanup actionsas this cleanup action migrates the timestamp field to the creationdate or modificationdate fields the modificationdate of a bibentry is not updated when this cleanup is conductedif the original timestamp field could not be parsed the cleanup does not modify the bibentry in any way to not lose datafixes #7351modified cleanup dialog:![image](https://user-imagesgithubusercontentcom/43381984/116080557-82d2eb00-a699-11eb-9285-4d7b64e5a9b8png)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository on a first look this looks good to me a few observations though:- the ui is a bit too complicated for my taste and i think the ""do not convert timestamp"" option is not really required instead i would propose to only have to checkboxes (convert to creation date / modification date) and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)- now running cleanup ops doesnt change the modification date anymore right? maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?- can you maybe explore a bit on why you choose a cleanup op over a migration? thanks || > on a first look this looks good to me a few observations though:> > * the ui is a bit too complicated for my taste and i think the ""do not convert timestamp"" option is not really required instead i would propose to only have to checkboxes (convert to creation date / modification date) and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)i addressed the first point by adding checkboxes for the corresponding cleanup actions> * now running cleanup ops doesnt change the modification date anymore right? maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?this is only true for the timestamp migrations and is implemented exactly that way ^^> * can you maybe explore a bit on why you choose a cleanup op over a migration? thanksas an adr or just as a comment here?it boils down to the discussion lead here: #7351 || > > > > on a first look this looks good to me a few observations though:> > > > * the ui is a bit too complicated for my taste and i think the ""do not convert timestamp"" option is not really required instead i would propose to only have to checkboxes (convert to creation date / modification date) and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)> > i addressed the first point by adding checkboxes for the corresponding cleanup actions> thanks that looks good to me!> > * now running cleanup ops doesnt change the modification date anymore right? maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?> > this is only true for the timestamp migrations and is implemented exactly that way ^^ohh you are right sorry i misread the code > > > * can you maybe explore a bit on why you choose a cleanup op over a migration? thanks> > as an adr or just as a comment here?> it boils down to the discussion lead here: #7351as a comment is more than enough for me (maybe directly in the pr description though) as far as i see it the advantage of cleanup ops is that they are only run once and thus dont make the db load process slower on the other hand the migration had the advantage that users dont need to run something manually || the reason for making it a cleanup is that some users use the timestamp field in other waysadditionally this makes the database load process fastermigrating the timestamp field this way leads to negative ux see #7351 || ok thanks!i dont have the time for a through-out review but scrolling over the code i couldnt find anything so from my side this is good to go  || "
931,1018,7672,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix threading cleanup in performsearch fixes #7606fixes #1018 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
932,7606,7672,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix threading cleanup in performsearch fixes #7606fixes #1018 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
933,7305,7674,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"fixes jabref#7305: the rfc fetcher is not compatible with the draftfix for issue 7305 fixes #7305<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositorywe can first determine whether the rfc id contains the prefix ""draft "" if it is we will not add the prefix ""rfc""now rfc fetcher can work welltry process drafts id `draft-ietf-sidrops-aspa-verification`![ready](https://user-imagesgithubusercontentcom/47767371/116380328-7213a800-a846-11eb-842a-eb839df9019epng)before fixing the bug:![befor-fix](https://user-imagesgithubusercontentcom/47767371/116380361-7b9d1000-a846-11eb-94ca-194de7a2377apng)after fixing the bug:![after-fixed](https://user-imagesgithubusercontentcom/47767371/116380441-8c4d8600-a846-11eb-8923-747f8f129fedpng) please have a look at the checkstyle || haha i made this mistake again it has been fixed now and i wont make this mistake next time ||"
934,6267,7675,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix cleanup run on wrong entry when fetching from doi fixes #6267cleanup did use the wrong entry<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
935,6207,7685,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,"add and extend unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests to the projecttests added:validcitationkeycheckertesttests extended (added boundary cases):addbracesformattertestnormalizepagesformattertest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
936,6207,7687,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,"refactoring existing unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests or improve existing onestests refactored:minifynamelistformatterteststringlengthcomparatortestcapitalizeformattertestauthorstestremovebracketsaddcommatestsdoichecktestfilelinktestfirstpagetestremovetildetest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > nice to see work on using paramterized tests> > please do that everywhere> > general comment: it would be nice to have one pull request per test class otherwise reviewing gets hard because there are soooo many lines changed> > (i also updated #6207 i hope not to annoy people when always wringint things not to do)hi @koppori understand that it might become tedious to review all the changes but would it also help if for example there is one commit for every class that is changed? in this case youd also have a better overview over the changed code in a class im asking this question since ive already started working on a new branch (similar to this one but with fewer classes involved)nevertheless i will start applying this comment for each new upcoming branch || > but would it also help if for example there is one commit for every class that is changed? in this case youd also have a better overview over the changed code in a classlooking at our mass of pull requests i decided to have ""global"" reviewing strategy/workflow for our core developers deciding on a case-bases makes it difficult to handle the mass of open pull requestsfurthermore if at class a there is a comment but class b can go as is the changes of class b wont go into `main` because it is stalled by the unrelated class `a`> im asking this question since ive already started working on a new branch (similar to this one but with fewer classes involved)you could use the `git cherry-pick` magic maybe also the `git checkout master && git checkout -b new-branch && git checkout your-working-branch && git reset new-branch` magic and then commiting line-wise with `git gui`> nevertheless i will start applying this comment for each new upcoming branch || i will merge and wait for parameterized authorstest in a follow-up pr || "
937,6207,7693,1,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,"refactoring existing unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests or improve existing onesi therefore have refactored three classes (converted to parameterized tests) and extended one by adding a boundary casetests refactored:lastpagetestnospacebetweenabbreviationswrapcontenttest extendedunprotecttermsformatter (added empty string boundary case)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
938,6207,7694,1,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,"add and extend unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests to the projecttests added:- citationkeydeviationcheckertest- citationkeyduplicationcheckertesttests extended (added boundary/edge cases):- removebracesformattertest- bracescorrectortest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thank you for these test twice approved and once merged ||"
939,6207,7696,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,"add simple unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests or improve existing onesi added the trivial but important test case that the output should remain unmodified in case the input was already validtests extended:- cleanupurlformattertest- removehyphenatednewlinesformattertest- removenewlinesformattertest- lowercaseformattertest- removebracketstest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i addressed the requested changes in the last commit should be all good now ||"
940,6207,7697,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,refactor nobibtexfieldcheckertest to increase mutation coverage this pull request contributes to issue #6207 which is to add more unit tests or improve existing ones i used pitest to compute the mutation coverage and found that some conditions were not covered in the unit test and some conditions tested were redundant because they would not be reached  following are the changes:1 switched to using parametrized test2 covers missing conditions: standardfielddoi standardfieldurl3 redundant conditions (still remains in source code and tests): standardfieldabstract standardfieldcomment (they are not included in the fields of neither bibtexentrytypedefinitionsall nor biblatexentrytypedefinitionsall)before:![image](https://user-imagesgithubusercontentcom/3387698/116923603-205c8a80-ac57-11eb-964b-2ee0e829f41fpng)![image](https://user-imagesgithubusercontentcom/3387698/116923712-3ec28600-ac57-11eb-8447-986d04b9a179png)after:![image](https://user-imagesgithubusercontentcom/3387698/116924716-8a296400-ac58-11eb-9b02-5d8e32b198cbpng)![image](https://user-imagesgithubusercontentcom/3387698/116924826-a927f600-ac58-11eb-9f30-e3131147712cpng)- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
941,6207,7698,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,added doiduplicationcheckertest to increase coverage this pull request contributes to issue #6207 which is to add more unit tests or improve existing ones i used pitest to compute the line and mutation coverage since doiduplicationchecker did not have its unit test (its method was being tested in other test classes) i added the test to increase both coverages before:                                                                            ![image](https://user-imagesgithubusercontentcom/3387698/116928883-f064b580-ac5d-11eb-9f8d-c7fa80a31c90png)after:![image](https://user-imagesgithubusercontentcom/3387698/116928941-ffe3fe80-ac5d-11eb-819b-7663ad6043a1png)- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
942,6207,7700,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,refactoring existing unit tests into parametrized tests this pull request contributes to issue #6207 which is to add more unit tests or improve existing onestests refactored:doistriptestdefaulttest (paramlayoutformatter)touppercasetestifpluraltesthtmlparagraphstestentrytypeformattertestauthororgscitestauthornatbibtestauthorfirstlastcommastest- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your contribution we took the liberty to finish it ourselves ||
943,6197,7702,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,"fix for issue 6197: do not store downloaded file if it is already attached <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->fix [#6197](https://githubcom/jabref/jabref/issues/6197)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository## reproduce this issue:1 choose an entry click **search full text document online** in **lookup**2 if it is the first time you download it it works well but if it is not it will download a duplicate file with the same content the bib file will has two duplicate files as below```file     {:banerjee2020a - a survey on influence maximization in a social network (2)pdf:pdf:banerjee2020a - a survey on influence maximization in a social network (1)pdf:pdf:banerjee2020a - a survey on influence maximization in a social networkpdf:pdf}```in this issue we want to keep the new file with different contents but delete the same one thus after download a new file we need to first judge whether the file name is the duplicate form like ""xxx (1)"" compare to the other files in the target directory if yes then compare the content of these files sharing the  ""similar"" name if the new file has the same content as one of them then delete it and do not add it to the linked file## process to fix the issue:1 the related code is in **linkedfileviewmodeljava** inside the function **download()** because we suppose that the file has already been download the code should be inside **downloadtaskonsuccess**2 we define a boolean function **isduplicatedfile** in **filenameuniquenessjava** to judge whether the file is a duplicated one in content if yes the newly downloaded file will be deleted and it will not be added to the linked file3 in **filenameuniquenessjava** we also define function named **eraseduplicatemarks** to change the file name like ""xxx (1)"" to ""xxx"" and return the same string if it is not in the form of duplicate file name4 in the boolean function **isduplicatedfile** it will first judge whether there are other files have ""similar"" name with its if  do not have return false indicating not duplicate if have compare (use **comgooglecommoniofilesequal**) the content of the newly downloaded file with all the files has ""similar"" file name if the content is different from all of them return false if one of them has the same content with the new files content delete the new file  display warning message and return true to indicate duplication happens## **screenshot of the result**#### use the following bib file for test```@article{banerjee2020a	title""a survey on influence maximization in a social network""	author""suman {banerjee} and mamata {jenamani} and dilip kumar {pratihar}""	journal""knowledge and information systems""	volume""62""	number""9""	pages""3417--3455""	notes""sourced from microsoft academic - https://academicmicrosoftcom/paper/3013137889""	year""2020""}```### **before**after **search full text document online** for three times![test4_files](https://user-imagesgithubusercontentcom/73102892/117033348-da75f400-ad34-11eb-9c12-4e73fca2f671png)```file     {:banerjee2020a - a survey on influence maximization in a social network (2)pdf:pdf:banerjee2020a - a survey on influence maximization in a social network (1)pdf:pdf:banerjee2020a - a survey on influence maximization in a social networkpdf:pdf}```### after### test1after **search full text document online** for three times![test5_files](https://user-imagesgithubusercontentcom/73102892/117033557-101add00-ad35-11eb-8af0-5c03871ff447png)![delete_message](https://user-imagesgithubusercontentcom/73102892/117033667-2c1e7e80-ad35-11eb-8ae5-02d6c8899679png)```file     {:banerjee2020a - a survey on influence maximization in a social networkpdf:pdf}```### test2after test1 in order to test whether it will compare the content of the file we **replace** the downloaded pdf file ""banerjee2020a - a survey on influence maximization in a social networkpdf""  with a new pdf file but keep a same name in the same folder and then  **search full text document online** ### the new file:![replace_file](https://user-imagesgithubusercontentcom/73102892/117034097-8ddee880-ad35-11eb-93c7-33d1d8c2e0bdpng)### the outcome:![replace_message](https://user-imagesgithubusercontentcom/73102892/117033863-5ff9a400-ad35-11eb-9d91-99835515109fpng)![replace_download](https://user-imagesgithubusercontentcom/73102892/117034161-9afbd780-ad35-11eb-9120-a0dcbb7defe2png)```file     {:banerjee2020a - a survey on influence maximization in a social network (1)pdf:pdf:banerjee2020a - a survey on influence maximization in a social networkpdf:pdf}``` thanks for your feedback! i am a little busy today but i will improve my code as soon as possible || i modify my code and manually test it in running jabref again it works but i delete the test cases because the method ""eraseduplicatemarks"" in  ""filenameuniquenessjava"" is now private || i think my latest commit has solved all the problems in the recommendations i am not very familiar with the pull request operate in github and i just clicked all the ""resolve conversation"" buttons is that matter? besides is there any other recommendations for my current pr? any feedback will be appreiated @siedlerchr  || thanks for the reply! i will fix my codes as soon as possible || i add an overload function getbasename in fileutil imitating the code style of the function getfileextension in fileutil to pass the path variable as parameter || please have a look at the failing unit test you need to add the missing language keys https://devdocsjabreforg/getting-into-the-code/code-howtos#using-localization-correctly || i just add  the missing language keys into `jabref_enproperties`  is there anything else to modify? || ok i fixed it || @koppor any other comments to improve my pr? any feedback is appreciated || thank you for keep working on this puts a smile on my face and a nice present for me at my free time hobby project jabref || "
944,7346,7705,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,added preset for new entry keybindings and reintroduced defaults added preset for new entry keybindings on public demandfixes #7346fixes #7439- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository open / close is new:![grafik](https://user-imagesgithubusercontentcom/1366654/117208984-11f8a500-adf6-11eb-9b92-3357c3c25228png)new preset:![grafik](https://user-imagesgithubusercontentcom/1366654/117209041-22a91b00-adf6-11eb-8232-5676f0edd9a6png) || opening editor works on mac with cmd + e now but closing not || checkstyle failes:![image](https://user-imagesgithubusercontentcom/50491877/117374619-cc0f1000-aecd-11eb-8a9b-7e360f81e30dpng) || seem like someone was too fast with merging unit tests  i think tobi fixed them a few minutes ago || > seem like someone was too fast with merging unit tests  i think tobi fixed them a few minutes agomerged `main` hope checkstyle will be fine 😇  || before merging we should get to a conclusion about which shortcuts to keepdoes ctrl in uppercase work now or should i change them now? || also i dont really understand why on macos we need two different shortcuts one for opening the entry editor and one for closing it this needs to be fixed || > before merging we should get to a conclusion about which shortcuts to keep> does ctrl in uppercase work now or should i change them now?should be lowercase https://githubcom/jabref/jabref/blob/bb011c9313367a28990ae213b3920fe6cd10d1dc/src/main/java/org/jabref/gui/keyboard/keybindingrepositoryjava#l127-l129 regarding the ctrl + e (which maps to cmd + e on mac) i think i found the issue and i remember its a bug in javafx the event is fired twice for some reason thats why after closing it immediately goes into the openentryeditor again and reopens the entry editoredit// yep: https://bugsopenjdkjavanet/browse/jdk-8205915this already was an issue with copy paste happening twice  ||
945,7439,7705,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,added preset for new entry keybindings and reintroduced defaults added preset for new entry keybindings on public demandfixes #7346fixes #7439- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository open / close is new:![grafik](https://user-imagesgithubusercontentcom/1366654/117208984-11f8a500-adf6-11eb-9b92-3357c3c25228png)new preset:![grafik](https://user-imagesgithubusercontentcom/1366654/117209041-22a91b00-adf6-11eb-8232-5676f0edd9a6png) || opening editor works on mac with cmd + e now but closing not || checkstyle failes:![image](https://user-imagesgithubusercontentcom/50491877/117374619-cc0f1000-aecd-11eb-8a9b-7e360f81e30dpng) || seem like someone was too fast with merging unit tests  i think tobi fixed them a few minutes ago || > seem like someone was too fast with merging unit tests  i think tobi fixed them a few minutes agomerged `main` hope checkstyle will be fine 😇  || before merging we should get to a conclusion about which shortcuts to keepdoes ctrl in uppercase work now or should i change them now? || also i dont really understand why on macos we need two different shortcuts one for opening the entry editor and one for closing it this needs to be fixed || > before merging we should get to a conclusion about which shortcuts to keep> does ctrl in uppercase work now or should i change them now?should be lowercase https://githubcom/jabref/jabref/blob/bb011c9313367a28990ae213b3920fe6cd10d1dc/src/main/java/org/jabref/gui/keyboard/keybindingrepositoryjava#l127-l129 regarding the ctrl + e (which maps to cmd + e on mac) i think i found the issue and i remember its a bug in javafx the event is fired twice for some reason thats why after closing it immediately goes into the openentryeditor again and reopens the entry editoredit// yep: https://bugsopenjdkjavanet/browse/jdk-8205915this already was an issue with copy paste happening twice  ||
946,7395,7708,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"select the entry which has smaller dictonary order when merge <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->changed the selected entry when merge two entries:if two entrys citation key are empty the above one will be selectedif only one entry has citation key then it will be selectedif two entries both have citation key the one who has smaller dictionary order will be selectedfixes #7395 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->the screenshot shows that the ""2021a"" is selected although it is below ""2021b""![test-for-7395](https://user-imagesgithubusercontentcom/54058357/117312265-7d567b80-aeb7-11eb-8a45-ea8edaa23cc8png)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository see checkstyle ore reviewdog and please give your pr a better title || thank you for your suggestions i have used entrycomparator and added two test cases to test the behavior of entrycomparator || i like the idea of having a default order when merging but isnt this a problem when one citation key is empty (`""""` not null) and the other one is not? can that happen and is it worth worrying about? || yes i think the real problem may be how to define a valid citation key for example ""  "" should not be a valid one || an empty citation key is totally valid  i would expect to have the empty one as ""lower"" on the left in the dialogminimum valid bibtex: ```@article{}``` || yes that make sense too it seems some checks were not successful so what should i do?  || you should merge in the latest main from upstream jabref then most tests should be working againcheckstyle + unit tests must be green  || > i like the idea of having a default order when merging but isnt this a problem when one citation key is empty (`""""` not null) and the other one is not? can that happen and is it worth worrying about?this should be handled by the `entrycomparator` too test cases should cover this  @suxichangzhen please add this test case to `entrycomparatortest` || > yes i think the real problem may be how to define a valid citation key for example "" "" should not be a valid onesince `bib` is a text file where users can input (nearly) arbitrary things we have to be relaxed in as many places as possiblewe have the `orgjabreflogicintegritycitationkeychecker` which checks for the empty key || i am not that up to date with the merging and i might have sown some accidental confusion sorry 😜 based on how jabref generates duplicate keys some cases are ""easier"" to deal withif the generated citation key is `2021` duplicated citation keys will be `2021a` `2021b` etc and it is indeed correct that `2021a` should be preferred over `2021b` just as `2021` should be preferred over `2021a` (this might be a good test-case as well)but if you are merging ` ` and `2021` ` ` should in my opinion not be sorted above `2021`as i said this might very well not be worth worrying about || > but if you are merging ` ` and `2021` ` ` should in my opinion not be sorted above `2021`fair! i did not ""see"" that casethen this is a call for `citationkeycomparator` in the package `orgjabreflogicbibtexcomparator` this comparator works as initially implemented by @suxichangzhen  and handles this case tooi would re-use comparison code of `entrycomparator` but not call `entrycomparator` because the empty string handling is different || ok nvm ignore me and my apologies for the confusion ill have to read up a bit more about merging || it seems that jabref will not produce a citation key like """" since if the citation key is """" then key_field does not exist but key_field does allow something like "" ""(one blank) should i consider this case? || i notice that in the `bibentry` the method `getcitationkey` indicates what is a valid ciatation key so i use it in the `entrycomparator` now the blanked citation key will be replaced when merge two entries || thank you for your suggestion i have used orelse || "
947,6966,7709,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix for issue 6966: open all files of multiple entries fixes #6966 - [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositoryadded a new function to ""open file"" option in the right-click menunow we can open all linked files of the selected entriestest videos:**single entry selected: the behavior remains unchanged**  https://user-imagesgithubusercontentcom/57553691/117459616-2b2c5d80-af7e-11eb-8539-a4a7006711bfmp4**multiple entries selected*** all of them have linked files: open them all    https://user-imagesgithubusercontentcom/57553691/117459658-3a131000-af7e-11eb-8596-4f956ca09648mp4* some have and some not: ~~pop out a dialog to ask the user whether to continue if yes~~ only open the former and skip the latter    https://user-imagesgithubusercontentcom/57553691/117459682-426b4b00-af7e-11eb-825e-de25510069a6mp4* none of them have any linked file: option will be disabled    https://user-imagesgithubusercontentcom/57553691/117459705-48612c00-af7e-11eb-8d47-99d72ed75a38mp4to implement these functions i modified `openexternalfileaction` and added a new method `haspresentfileforselectedentries` to check if at least one of the selected entries has linked files in `actionhelper` idea for usabilty:   as a user i expect to open the file using ""open all files"" also when i select one entry  so if i only select one entry > same beahviour as now  || in line with @siedlerchr comment above what do you think about adding the functionality to the existing ""open file"" action? so if a user has only a single entry selected then the linked file of this entry is opened but if multiple files are selected then all linked files are opened || i agree when one entry selected if ""open all files"" has the same behavior as ""open file"" as @siedlerchr suggested which means the function of the new added option totally covers the original one then why not merge them as one option just as you proposedso should i delete `openallexternalfileaction` class and add its function to `openexternalfileaction`? || yes please! || donei will update detailed description later || may i ask why these tests are failing?all these failures have the exactly same error:```/home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/editioncheckertestjava:59: error: cannot find symbol        assertequals(optionalempty() checkercheckvalue(""""))                                       ^  symbol:   variable checker  location: class editioncheckertest/home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/editioncheckertestjava:64: error: cannot find symbol        assertequals(optionalempty() checkercheckvalue(null))                                       ^  symbol:   variable checker  location: class editioncheckertest/home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/editioncheckertestjava:69: error: cannot find symbol        var editionchecker  new editionchecker(bibtex false)                                                ^  symbol:   variable bibtex  location: class editioncheckertest/home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/editioncheckertestjava:75: error: cannot find symbol        var editionchecker  new editionchecker(bibtex false)                                                ^  symbol:   variable bibtex  location: class editioncheckertest```but i didnt change anything in `editionchecker`same as https://githubcom/jabref/jabref/pull/7705#issuecomment-833924369 || i noticed that the tests are fixedso is there still anything more i need to change in my code? || you need to push the commit after merging as well because the tests are still failing || doneremoved dialog and resolved a conflict in `changelogmd` || ok i will fix it || two changes:1 open all linked files of an entry2 modify boolean bindingunder discussion: how to handle opening a large number of files? || > yep thats a good idea ""you are about to open more than 10 files"" continue?> i would simply create a constant with 10 i think thats appropriate> > * continue /  canceldoneps online links are includedtest video:https://user-imagesgithubusercontentcom/57553691/118133561-915c2900-b433-11eb-91b7-5d6561d50014mp4 || "
948,7710,7711,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,"fix: make fields sorted by lexicographical order <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7710 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->we fix that some fields are in random order (issue #7710) we use `treemap` which is ordered to replace `linkedhashmap` and added a comparison function to the treemap to ensure that fields are ordered by lexicographical order- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository normally this would be a suitable way however this is a special case as you can reorder the fields in the custom entry types dialog refs #6152the treeset will now kill any individual order what we only need is a sorting in the dropdown box so you need to add a sorting in the gui/viewmodel || thanks for guidance i found they both use `src/main/java/org/jabref/gui/commonfxcontrols/fieldformattercleanupspanelviewmodeljava` so i change it in the cleanupspanel ||"
949,7716,7717,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,"fix: make more fields fomatters ids and languages sorted by alphabetical order <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7716we fix that more fields fomatters ids and languages sorted by alphabetical order solving them by either adding sort to relative property or using a `sortedlist` to wrapper the observablelist<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for the quick follow up lgtm to me now for external contributors a second developer needs to review and approve || i merged too early forgot the check for `changelogmd` fixed in https://githubcom/jabref/jabref/commit/428239437882ed9d0cc8dc497e1851abc7dcaec4@dateri please remember the changelogmd for your next pr 🎉  || @koppor  i wanted to check on this but in https://buildsjabreforg/main/ the files are dating back to may 8 a problem with the automatic build process? || happens from time to time most often the mac build fails due to notarization somehow not working at apples side you can then downlod the artifact from the runhttps://githubcom/jabref/jabref/actions/runs/829332567  ||"
950,5804,7733,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix for issue 5804: rewrite acm fetcher <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #5804 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository<br>from issue #5804 acm fetcher needs to be rewritten because of acm website changesone solution is to get the doi from the html results of the search page then use the export interface to get the json format data and finally parse themsearch api: https://dlacmorg/action/dosearch?allfield<query_string\>export api: https://dlacmorg/action/exportciteproccitation?targetfilecustom-bibtex&formatbibtex&dois<doi\><doi\>what did i do:1 rewrited acmportalfetcher added acmportalparser2 added modified acmportalfetchertest and acmportalparsertestsuccessfully get data from amc fetcher:![acm-portal](https://user-imagesgithubusercontentcom/47767371/117985875-ad949300-b36b-11eb-9f90-d0da10ade6eapng)![acm-portal-3-imported](https://user-imagesgithubusercontentcom/47767371/117985880-af5e5680-b36b-11eb-938d-4b259eed7a1cpng) @siedlerchr  @koppor thank you very much for your help and suggestionsthe above problem has been fixed and i also updated some codes || thank you for working on it! this brings jabref a step forward! ||"
951,7111,7734,1,0,1,1,0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,"support fall back fields in citation key generation <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->to support pattern like [field:[fall back field]] i first change `contentbetweenbrackets` because it did not support nested brackets and in the `applymodifiers` before it used `substring` to get the content inside parentheses now i use `expandbrackets` to parse it so theoretically it can support many nested brackets something like [author:([title:(year:)])] i also add the test case to test the fall back fieldfixes #7111 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository sorry did not see the last suggestion i have added 6 test cases: fall back to string(original) two fall back field unbalanced brackets fall back to field and string and fall back to special string || i update the javadoc remove the null parameter and add a test case for citation key generator can you explain more about paramterized tests? thank you @koppor  || parameterized tests allow you to re-use test methods with different data say one method for testing `expandbracketswithfallback` you can find a few different examples in the jabref source code eg https://githubcom/jabref/jabref/blob/65a672adc15ef7142555f4ac128be806942a5b96/src/test/java/org/jabref/logic/bibtex/comparator/fieldcomparatortestjava#l204-l225there is also more information on what options/uses exist in the [junit 5 documentation](https://junitorg/junit5/docs/current/user-guide/#writing-tests-parameterized-tests) || thank you for all your suggestions i have changed the method and used parameterizedtest ||"
952,7737,7775,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix ris importer follow up <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->follow up from #7755 fixes #7737 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
953,7755,7775,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,"fix ris importer follow up <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->follow up from #7755 fixes #7737 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
954,7267,7797,1,0,0,0,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,"added auto-key-generation task to task-progress auto-key-generation tasks are now shown in the list of background taskstogether with a progress representing entries done / entriesfixes #7267<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository![screenshot from 2021-06-05 11-20-37](https://user-imagesgithubusercontentcom/10479048/120887475-69578400-c5f3-11eb-9e6d-9650fdae16a2png) from my point of view this looks now good || dont forge the l10n (see failing unit test) %0\ entries%0 entries ||"
955,7768,7808,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"implemented a select all button for the library import function (issue #7786) fixes #7768![selectallscreenshot](https://user-imagesgithubusercontentcom/55059816/121120358-3d462980-c7d2-11eb-9120-eebf3d5125c8png)we implemented a select all button for the library import function that fixes issue #7786 added a new function selectallentires() to importentriesdialog and a button to importentriesdialogfxmlnew localization string ""select all entries"" also added to jabref_enproperties<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
956,7786,7808,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,"implemented a select all button for the library import function (issue #7786) fixes #7768![selectallscreenshot](https://user-imagesgithubusercontentcom/55059816/121120358-3d462980-c7d2-11eb-9120-eebf3d5125c8png)we implemented a select all button for the library import function that fixes issue #7786 added a new function selectallentires() to importentriesdialog and a button to importentriesdialogfxmlnew localization string ""select all entries"" also added to jabref_enproperties<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
