prNumber,Util,Network,DB,Interpreter,i18n,Logic,Test,IO,UI,Security,App,corpus
3117,1,0,0,1,0,0,0,1,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix tostring of nonserializablememoizingsupplierfixes #31079185822ee16cdd641657c0f8e7ead755c9e9a564-------<p> use splitter instead of stringsplit in internetdomainnamee56f1aa3d21b04eed8f5481d4103c05af5c51ec7-------<p> use splitter for ipv6 too this eliminates usage of javautilregex from this file (which is used via stringsplit otherwise)65a2a7de4ef4eea913f769a5cbbce6e35e1fccce-------<p> use diamond27eb336c2a2d9068878edbf49edcca493cd69cd8-------<p> automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174eit looks like the original change can cause an infinite loop in localcacheloadingvaluereferenceget()c2266a6ff8c6f298673688d6779b8b7368fe9147-------<p> dont enable use of unsafegetlong() on aarch64 devicesandroid devices may report to run aarch64 while running in 32-bit mode and thencrash when loading 64-bit values at unaligned addresses263bbcf6cf0cfae6768ddf9e9f3d749da555e422 we found a contributor license agreement for you (the sender of this pull request) but were unable to find agreements for all the commit author(s) or co-authors  if you authored these maybe you used a different email address in the git commits than was used to sign the cla ([login here](https://cladevelopersgooglecom/) to double check)?  if these were authored by someone else then they will need to sign a cla as well and confirm that theyre okay with these being contributed to googlein order to pass this check please resolve this problem and have the pull request author add another comment and the bot will run again if the bot doesnt comment it means it doesnt think anything has changed<!-- need_author_cla --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> || cla verified in #3107 ||
3117,1,0,0,1,1,1,1,1,1,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix tostring of nonserializablememoizingsupplierfixes #31079185822ee16cdd641657c0f8e7ead755c9e9a564-------<p> use splitter instead of stringsplit in internetdomainnamee56f1aa3d21b04eed8f5481d4103c05af5c51ec7-------<p> use splitter for ipv6 too this eliminates usage of javautilregex from this file (which is used via stringsplit otherwise)65a2a7de4ef4eea913f769a5cbbce6e35e1fccce-------<p> use diamond27eb336c2a2d9068878edbf49edcca493cd69cd8-------<p> automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174eit looks like the original change can cause an infinite loop in localcacheloadingvaluereferenceget()c2266a6ff8c6f298673688d6779b8b7368fe9147-------<p> dont enable use of unsafegetlong() on aarch64 devicesandroid devices may report to run aarch64 while running in 32-bit mode and thencrash when loading 64-bit values at unaligned addresses263bbcf6cf0cfae6768ddf9e9f3d749da555e422 we found a contributor license agreement for you (the sender of this pull request) but were unable to find agreements for all the commit author(s) or co-authors  if you authored these maybe you used a different email address in the git commits than was used to sign the cla ([login here](https://cladevelopersgooglecom/) to double check)?  if these were authored by someone else then they will need to sign a cla as well and confirm that theyre okay with these being contributed to googlein order to pass this check please resolve this problem and have the pull request author add another comment and the bot will run again if the bot doesnt comment it means it doesnt think anything has changed<!-- need_author_cla --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> || cla verified in #3107 ||
3117,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix tostring of nonserializablememoizingsupplierfixes #31079185822ee16cdd641657c0f8e7ead755c9e9a564-------<p> use splitter instead of stringsplit in internetdomainnamee56f1aa3d21b04eed8f5481d4103c05af5c51ec7-------<p> use splitter for ipv6 too this eliminates usage of javautilregex from this file (which is used via stringsplit otherwise)65a2a7de4ef4eea913f769a5cbbce6e35e1fccce-------<p> use diamond27eb336c2a2d9068878edbf49edcca493cd69cd8-------<p> automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174eit looks like the original change can cause an infinite loop in localcacheloadingvaluereferenceget()c2266a6ff8c6f298673688d6779b8b7368fe9147-------<p> dont enable use of unsafegetlong() on aarch64 devicesandroid devices may report to run aarch64 while running in 32-bit mode and thencrash when loading 64-bit values at unaligned addresses263bbcf6cf0cfae6768ddf9e9f3d749da555e422 we found a contributor license agreement for you (the sender of this pull request) but were unable to find agreements for all the commit author(s) or co-authors  if you authored these maybe you used a different email address in the git commits than was used to sign the cla ([login here](https://cladevelopersgooglecom/) to double check)?  if these were authored by someone else then they will need to sign a cla as well and confirm that theyre okay with these being contributed to googlein order to pass this check please resolve this problem and have the pull request author add another comment and the bot will run again if the bot doesnt comment it means it doesnt think anything has changed<!-- need_author_cla --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> || cla verified in #3107 ||
3146,1,1,1,1,1,1,0,1,0,1,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> move type annotations immediately before the type they applytofixes #3145relnotesn/a4270efbda891a947c1bfdb3e5707741a63b40551 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || the cla for 4270efbda891a947c1bfdb3e5707741a63b40551 was signed in #3145 ||
3146,1,0,0,0,1,0,1,0,0,0,1,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> move type annotations immediately before the type they applytofixes #3145relnotesn/a4270efbda891a947c1bfdb3e5707741a63b40551 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || the cla for 4270efbda891a947c1bfdb3e5707741a63b40551 was signed in #3145 ||
3146,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> move type annotations immediately before the type they applytofixes #3145relnotesn/a4270efbda891a947c1bfdb3e5707741a63b40551 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || the cla for 4270efbda891a947c1bfdb3e5707741a63b40551 was signed in #3145 ||
3170,1,0,1,0,1,1,1,1,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix a grammar mistakefixes #3161d60f7f352c7ce8ae031c916b045eb30a6f1a8ab8-------<p> in open-source guava completely skip trying to discover pluggable patterncompiler implementationsits never been possible to create such implementations externally anyway and users are now seeing problems running the useless discovery code under the module systemfixes https://githubcom/google/guava/issues/3147relnotes`base`: fixed the `serviceconfigurationerror` that some users encountered when using guava as a jpms module0954b82dc4e3fe400550fcba78ae2878a8604c3b-------<p> suppress exceptions raised from arguments tostring methods during lenient formatting - take 260c6e22c0ba9c7b305c787bd72e0fd4f1f005afc-------<p> create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and icu4je0eae79a5ba94850ca447116cd033447240d489e-------<p> fix b/80241237 to correctly *not* change segment weight nor report an eviction when a compute() call does not change the present valuerelnotesfix a bug where cacheasmapcompute* methods could cause nonsensical weights to be stored breaking cache eviction21b52f64ceda0119daec68f6be2712bee55f02af so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> ||
3170,1,0,0,1,1,1,1,1,1,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix a grammar mistakefixes #3161d60f7f352c7ce8ae031c916b045eb30a6f1a8ab8-------<p> in open-source guava completely skip trying to discover pluggable patterncompiler implementationsits never been possible to create such implementations externally anyway and users are now seeing problems running the useless discovery code under the module systemfixes https://githubcom/google/guava/issues/3147relnotes`base`: fixed the `serviceconfigurationerror` that some users encountered when using guava as a jpms module0954b82dc4e3fe400550fcba78ae2878a8604c3b-------<p> suppress exceptions raised from arguments tostring methods during lenient formatting - take 260c6e22c0ba9c7b305c787bd72e0fd4f1f005afc-------<p> create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and icu4je0eae79a5ba94850ca447116cd033447240d489e-------<p> fix b/80241237 to correctly *not* change segment weight nor report an eviction when a compute() call does not change the present valuerelnotesfix a bug where cacheasmapcompute* methods could cause nonsensical weights to be stored breaking cache eviction21b52f64ceda0119daec68f6be2712bee55f02af so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> ||
3170,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix a grammar mistakefixes #3161d60f7f352c7ce8ae031c916b045eb30a6f1a8ab8-------<p> in open-source guava completely skip trying to discover pluggable patterncompiler implementationsits never been possible to create such implementations externally anyway and users are now seeing problems running the useless discovery code under the module systemfixes https://githubcom/google/guava/issues/3147relnotes`base`: fixed the `serviceconfigurationerror` that some users encountered when using guava as a jpms module0954b82dc4e3fe400550fcba78ae2878a8604c3b-------<p> suppress exceptions raised from arguments tostring methods during lenient formatting - take 260c6e22c0ba9c7b305c787bd72e0fd4f1f005afc-------<p> create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and icu4je0eae79a5ba94850ca447116cd033447240d489e-------<p> fix b/80241237 to correctly *not* change segment weight nor report an eviction when a compute() call does not change the present valuerelnotesfix a bug where cacheasmapcompute* methods could cause nonsensical weights to be stored breaking cache eviction21b52f64ceda0119daec68f6be2712bee55f02af so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> ||
3393,1,0,1,1,1,1,0,1,0,1,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that "its pretty weird for checknotnull() to return a @nullable value in the minds of some tools" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || 
3393,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that "its pretty weird for checknotnull() to return a @nullable value in the minds of some tools" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || 
3393,1,0,1,1,1,1,0,1,0,1,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that "its pretty weird for checknotnull() to return a @nullable value in the minds of some tools" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || 
3393,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that "its pretty weird for checknotnull() to return a @nullable value in the minds of some tools" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || 
3393,1,0,1,1,1,1,0,1,0,1,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that "its pretty weird for checknotnull() to return a @nullable value in the minds of some tools" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || 
3393,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that "its pretty weird for checknotnull() to return a @nullable value in the minds of some tools" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || 
3455,1,0,0,0,0,1,1,1,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fixed some linksthe comparisons to the android hash* classes havent been accurate since at least cl 81367572 so ive removed them entirelyfixes #33981dc514b56a0fa213baa242acf9e58163638abef8-------<p> migrate from assertthat(foo)named("foo") to assertwithmessage("foo")that(foo)(the exact change is slightly different in some cases like when using custom subjects or check() but its always a migration from named() to [assert]withmessage())named() is being removedthis cl may slightly modify the failure messages produced but all the old information will still be presente70a2f9e53583c1c508a0f7b16bdcad8c3f2f740-------<p> migrate from is(not)sameas to is(not)sameinstanceasthey behave identically and the old names are being removedopen-source note: the new methods are available in truth as of version 044c19256717b493127a355fabf1eeb827fd0c64973-------<p> a few more doc tweaks caught by @jbduncan in f2591b5c2a414084c20aeb4b74fb85eab5cf0a787d76234939-------<p> remove checkedfuture from guavarelnotesremoved deprecated `checkedfuture` and related utilitiescae1b9190e4bad3b6c01afbb08d9b0a366813c99-------<p> migrate from assertthat(foo)named("foo") to assertwithmessage("foo")that(foo)(the exact change is slightly different in some cases like when using custom subjects or check() but its always a migration from named() to [assert]withmessage())named() is being removedthis cl may slightly modify the failure messages produced but all the old information will still be present1f5c4780e522c32f9412e29cd2880124c81275e7 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3455) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3455) for more info**<!-- cla_yes --> ||
3455,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fixed some linksthe comparisons to the android hash* classes havent been accurate since at least cl 81367572 so ive removed them entirelyfixes #33981dc514b56a0fa213baa242acf9e58163638abef8-------<p> migrate from assertthat(foo)named("foo") to assertwithmessage("foo")that(foo)(the exact change is slightly different in some cases like when using custom subjects or check() but its always a migration from named() to [assert]withmessage())named() is being removedthis cl may slightly modify the failure messages produced but all the old information will still be presente70a2f9e53583c1c508a0f7b16bdcad8c3f2f740-------<p> migrate from is(not)sameas to is(not)sameinstanceasthey behave identically and the old names are being removedopen-source note: the new methods are available in truth as of version 044c19256717b493127a355fabf1eeb827fd0c64973-------<p> a few more doc tweaks caught by @jbduncan in f2591b5c2a414084c20aeb4b74fb85eab5cf0a787d76234939-------<p> remove checkedfuture from guavarelnotesremoved deprecated `checkedfuture` and related utilitiescae1b9190e4bad3b6c01afbb08d9b0a366813c99-------<p> migrate from assertthat(foo)named("foo") to assertwithmessage("foo")that(foo)(the exact change is slightly different in some cases like when using custom subjects or check() but its always a migration from named() to [assert]withmessage())named() is being removedthis cl may slightly modify the failure messages produced but all the old information will still be present1f5c4780e522c32f9412e29cd2880124c81275e7 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3455) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3455) for more info**<!-- cla_yes --> ||
3495,1,0,0,1,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `setfuture`relnotesremoved `@beta` from `setfuture`2c717c0092ad5abbbe6a34d426e084623c651354-------<p> upgrade maven-gpg-plugin to 16fixes githubcom/google/guava/pull/3490c10a1647ffa968a96273d0961a6f9e0181a4fe70-------<p> clarify behavior of `immutablelist#copyof` for null argumentfixes #34856f655fb940809499719ba7679a425961e39a8feb-------<p> make the incidentedges() documentation a little bit more clearb0a05097900ab2decf17681d3dcd9154f225d91f-------<p> simplify implementation of graphsreachablenodes()b917492c31401a2e6092c8f3f6bc60040c1dcebe-------<p> make the adjacentnodes() documentation a little bit more clear7a5a43b66a4f0a22077918404fa95a165ede2811-------<p> delete deprecated callwithtimeout()fa13235f2c8edff9cd6c434f8a164250decf0249 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3495) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3495) for more info**<!-- cla_yes --> ||
3495,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `setfuture`relnotesremoved `@beta` from `setfuture`2c717c0092ad5abbbe6a34d426e084623c651354-------<p> upgrade maven-gpg-plugin to 16fixes githubcom/google/guava/pull/3490c10a1647ffa968a96273d0961a6f9e0181a4fe70-------<p> clarify behavior of `immutablelist#copyof` for null argumentfixes #34856f655fb940809499719ba7679a425961e39a8feb-------<p> make the incidentedges() documentation a little bit more clearb0a05097900ab2decf17681d3dcd9154f225d91f-------<p> simplify implementation of graphsreachablenodes()b917492c31401a2e6092c8f3f6bc60040c1dcebe-------<p> make the adjacentnodes() documentation a little bit more clear7a5a43b66a4f0a22077918404fa95a165ede2811-------<p> delete deprecated callwithtimeout()fa13235f2c8edff9cd6c434f8a164250decf0249 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3495) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3495) for more info**<!-- cla_yes --> ||
3560,1,0,0,0,0,0,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix an issue where the inputstream returned by baseencodingdecodingstream(reader) could fail to throw decodingexception while decoding an invalid stringthis was caused by the default behavior of inputstreamread(byte[] int int) which swallows any ioexception thrown by any call to the single-byte read() method other than the first to fix it just override that method with an implementation that does not swallow any exceptionsfixes https://githubcom/google/guava/issues/35424e6478d4bec284f047a686b8a16dc2b32628639a-------<p> add more clarification on what "access" means in expireafteraccess()previous comment doesnt mention "containskey()"copied from https://githubcom/google/guava/wiki/cachesexplained#asmaprelnotescomment changef2bd7744e575393f065253c8f1bc2a512d452b63-------<p> document that hashbimapcontainsvalue() tends to run in faster-than-linear time (overriding the default documentation from abstractmapcontainsvalue())fixes #19737d57c233c9922ca9adbbef552b5f8f66bd7856f0-------<p> add note about {@code bytesourcewrap}s use of the given byte arrayfixes https://githubcom/google/guava/issues/26039276a79f6e9b012935b791a3e6d0b7f3d00b715b-------<p> fix https://githubcom/google/guava/issues/3156 by implementing a proper `collectspliteratorsflatmapto{intlongdouble}`also modify the existing `collectspliteratorsflatmap` to accept `null` from its `function` by treating it as an empty `stream` like `streamflatmap` does add tests for this behaviorto test that the new methods also accept `null` through both their `{intlongdouble}consumer` apis and their `consumer` apis add `of{intlongdouble}` methods to `spliteratortester` they test the given `spliteratorof{intlongdouble}` through both apis0763099e769963bd0d93f865a4e7c3a5b320085a-------<p> temporarily update public_suffix to include webappwithout this developers are not able to set up google oauth clients with urls in firebase hosting webapp domain41b8aeaeb71cab1a151d4359a409bfd54bb81262  
3560,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix an issue where the inputstream returned by baseencodingdecodingstream(reader) could fail to throw decodingexception while decoding an invalid stringthis was caused by the default behavior of inputstreamread(byte[] int int) which swallows any ioexception thrown by any call to the single-byte read() method other than the first to fix it just override that method with an implementation that does not swallow any exceptionsfixes https://githubcom/google/guava/issues/35424e6478d4bec284f047a686b8a16dc2b32628639a-------<p> add more clarification on what "access" means in expireafteraccess()previous comment doesnt mention "containskey()"copied from https://githubcom/google/guava/wiki/cachesexplained#asmaprelnotescomment changef2bd7744e575393f065253c8f1bc2a512d452b63-------<p> document that hashbimapcontainsvalue() tends to run in faster-than-linear time (overriding the default documentation from abstractmapcontainsvalue())fixes #19737d57c233c9922ca9adbbef552b5f8f66bd7856f0-------<p> add note about {@code bytesourcewrap}s use of the given byte arrayfixes https://githubcom/google/guava/issues/26039276a79f6e9b012935b791a3e6d0b7f3d00b715b-------<p> fix https://githubcom/google/guava/issues/3156 by implementing a proper `collectspliteratorsflatmapto{intlongdouble}`also modify the existing `collectspliteratorsflatmap` to accept `null` from its `function` by treating it as an empty `stream` like `streamflatmap` does add tests for this behaviorto test that the new methods also accept `null` through both their `{intlongdouble}consumer` apis and their `consumer` apis add `of{intlongdouble}` methods to `spliteratortester` they test the given `spliteratorof{intlongdouble}` through both apis0763099e769963bd0d93f865a4e7c3a5b320085a-------<p> temporarily update public_suffix to include webappwithout this developers are not able to set up google oauth clients with urls in firebase hosting webapp domain41b8aeaeb71cab1a151d4359a409bfd54bb81262  
3579,1,0,0,1,1,1,1,1,1,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix "bug" link that was actually a cl4c5e8a226a1c4a963d6041f7ee6aa32076fa2ac8-------<p> simplify while+break into do-whilefixes #357739aadb3531f7d73ed634780abe2679c9e42bcb17-------<p> release resources of whenallsucceed/whenallcomplete once input futures are completerelnotesfixes potential memory leak in futureswhenallsucceed/whenallcompletea840d5bec35b56a6a6e195477e35a1b0e92d3681-------<p> prepare for removing gwt-rpc support for guava types by adding a system property that disables itwhen the time comes well flip the default value and users who didnt see our earlier warnings can use a system property to restore support until they can stop serializing our types[]967010aa4d5ecf35fd3861913c3f17c10c4f6d40 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3579) for more info**<!-- need_author_consent --> || permission granted in #3579 || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3579) for more info**<!-- cla_yes --> ||
3579,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix "bug" link that was actually a cl4c5e8a226a1c4a963d6041f7ee6aa32076fa2ac8-------<p> simplify while+break into do-whilefixes #357739aadb3531f7d73ed634780abe2679c9e42bcb17-------<p> release resources of whenallsucceed/whenallcomplete once input futures are completerelnotesfixes potential memory leak in futureswhenallsucceed/whenallcompletea840d5bec35b56a6a6e195477e35a1b0e92d3681-------<p> prepare for removing gwt-rpc support for guava types by adding a system property that disables itwhen the time comes well flip the default value and users who didnt see our earlier warnings can use a system property to restore support until they can stop serializing our types[]967010aa4d5ecf35fd3861913c3f17c10c4f6d40 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3579) for more info**<!-- need_author_consent --> || permission granted in #3579 || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3579) for more info**<!-- cla_yes --> ||
3618,1,0,0,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> export new atomiclongmapbashertest to open-source repohttps://githubcom/google/guava/pull/3605#discussion_r324303026704c08989c9c2c21b4e2cb0ab285a7d84ee0fc3f-------<p> add @lazyinit and @retainedwith annotations to the lazily calculated "entries" field of immutablesetmultimapthis field is lazily evaluated by entries() without holding a lock but multiple concurrent calls to entries() will produce idempotent results at the cost of some performance996369d89362e0ec93f7dd6e9a6860aa08858c80-------<p> let listenablefuture implement thenable via a default interface method in j2clthis is a second attempt after problems in e0bac74571b81756c4acf767e3ad186b7473a4f8 were fixed44909d9d5fc5b394c710a6b8b0d6c3786c765af5-------<p> add test for behavior described in #19007329a66694d59bb22e2589eb9a2f620c98a881f9-------<p> undo test cl 9a50815df26be7416be0fac489e29feee7a3c220it produces a tiny diff between the commonbase and commoncollect copies of abstractiteratorc82f7916879a46539a1e53ac98dda90e9c5537b8-------<p> add splittersplittostream()6c984121f74d5cea97ac1ffabfe98938bc7c96c4-------<p> add comment explaining table and multiplier in charmatcherwhitespacefixes #16615430b140cae37b078fd4dda9b1a57a025664cfe1-------<p> rollback of adding splittersplittostream()*** reason for rollback ***my guess is that this change somehow upsets an allowed list ofone-definition violations3f49efe9f00a2ed9dd3bd1cde1d5d596833b7391-------<p> rollback of change to let listenablefuture implement thenable via a default interface method in j2cl38c9a029e6cc538bcc46b9ad23fe03a62739d433-------<p> clean up leftovers from mapmakermakecomputingmap:- remove makecomputingmap from the gwt emulation- deprecate computationexception0b93365c2440981c04a94f6e5596d3f723549ea3 i see `splittersplittostream()` was added and removed again are there plans to open-source it in the future? :slightly_smiling_face:  || > i see `splittersplittostream()` was added and removed again are there plans to open-source it in the future? :slightly_smiling_face: it is being reintroduced in #3623 nice :) ||
3618,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> export new atomiclongmapbashertest to open-source repohttps://githubcom/google/guava/pull/3605#discussion_r324303026704c08989c9c2c21b4e2cb0ab285a7d84ee0fc3f-------<p> add @lazyinit and @retainedwith annotations to the lazily calculated "entries" field of immutablesetmultimapthis field is lazily evaluated by entries() without holding a lock but multiple concurrent calls to entries() will produce idempotent results at the cost of some performance996369d89362e0ec93f7dd6e9a6860aa08858c80-------<p> let listenablefuture implement thenable via a default interface method in j2clthis is a second attempt after problems in e0bac74571b81756c4acf767e3ad186b7473a4f8 were fixed44909d9d5fc5b394c710a6b8b0d6c3786c765af5-------<p> add test for behavior described in #19007329a66694d59bb22e2589eb9a2f620c98a881f9-------<p> undo test cl 9a50815df26be7416be0fac489e29feee7a3c220it produces a tiny diff between the commonbase and commoncollect copies of abstractiteratorc82f7916879a46539a1e53ac98dda90e9c5537b8-------<p> add splittersplittostream()6c984121f74d5cea97ac1ffabfe98938bc7c96c4-------<p> add comment explaining table and multiplier in charmatcherwhitespacefixes #16615430b140cae37b078fd4dda9b1a57a025664cfe1-------<p> rollback of adding splittersplittostream()*** reason for rollback ***my guess is that this change somehow upsets an allowed list ofone-definition violations3f49efe9f00a2ed9dd3bd1cde1d5d596833b7391-------<p> rollback of change to let listenablefuture implement thenable via a default interface method in j2cl38c9a029e6cc538bcc46b9ad23fe03a62739d433-------<p> clean up leftovers from mapmakermakecomputingmap:- remove makecomputingmap from the gwt emulation- deprecate computationexception0b93365c2440981c04a94f6e5596d3f723549ea3 i see `splittersplittostream()` was added and removed again are there plans to open-source it in the future? :slightly_smiling_face:  || > i see `splittersplittostream()` was added and removed again are there plans to open-source it in the future? :slightly_smiling_face: it is being reintroduced in #3623 nice :) ||
3635,1,0,0,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3635,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
3636,1,0,0,0,1,1,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add testlib readmefixes #34533b0f1e580b4e0bde8fd4806c832389d0aade4063-------<p> change quantiles compute() methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes()fixes https://githubcom/google/guava/pull/2989relnotes`math`: `quantiles` `compute()` methods which return a `map` now return a map with entries in the same order in which the indexes were provided6a2d070ac268c138d6ad039605de54f535d5f5f3 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3636) for more info**<!-- need_author_consent --> ||
3636,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add testlib readmefixes #34533b0f1e580b4e0bde8fd4806c832389d0aade4063-------<p> change quantiles compute() methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes()fixes https://githubcom/google/guava/pull/2989relnotes`math`: `quantiles` `compute()` methods which return a `map` now return a map with entries in the same order in which the indexes were provided6a2d070ac268c138d6ad039605de54f535d5f5f3 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3636) for more info**<!-- need_author_consent --> ||
3637,1,0,0,1,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> bump version which went out of date since the previous cl was created90f4a1c88941d1d68ec2fc68397a5e11fefa7355-------<p> use if statement instead of for statement for a single itemfixes #3633020621e474e228b4b9c12dbd24badd9590b0af8e-------<p> upgrade maven source plugin from 212 to 310fixes https://githubcom/google/guava/pull/3466e87b8807798808d5a526a6fd2f49b484bb4a846a-------<p> document the jdk 9+ alternative to `moreobjects#firstnonnull`fixes https://githubcom/google/guava/pull/3383145da12d85b536d6f2a527e1ccf2430147fa6b83 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3637) for more info**<!-- need_author_consent --> ||
3637,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> bump version which went out of date since the previous cl was created90f4a1c88941d1d68ec2fc68397a5e11fefa7355-------<p> use if statement instead of for statement for a single itemfixes #3633020621e474e228b4b9c12dbd24badd9590b0af8e-------<p> upgrade maven source plugin from 212 to 310fixes https://githubcom/google/guava/pull/3466e87b8807798808d5a526a6fd2f49b484bb4a846a-------<p> document the jdk 9+ alternative to `moreobjects#firstnonnull`fixes https://githubcom/google/guava/pull/3383145da12d85b536d6f2a527e1ccf2430147fa6b83 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3637) for more info**<!-- need_author_consent --> ||
3654,1,0,1,0,1,1,0,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> switch to an internal annotation for ignoring jrerequirementsfixes #3652relnotesremoved dependency on `animal-sniffer-annotations`3324ce6af9d672b4a1e4431ebaf84b0e22d7ca86-------<p> rename package-private duration apis:  saturatedto os() -> to ossaturated()  saturatedtomillis() -> tomillissaturated()#goodtimef3a053ea12ae808ddd52094d36fcd88fe95881f2-------<p> suppress more goodtime errors9e885c85265c3686aa876acebe6bb6bda18de1f3  
3654,1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> switch to an internal annotation for ignoring jrerequirementsfixes #3652relnotesremoved dependency on `animal-sniffer-annotations`3324ce6af9d672b4a1e4431ebaf84b0e22d7ca86-------<p> rename package-private duration apis:  saturatedto os() -> to ossaturated()  saturatedtomillis() -> tomillissaturated()#goodtimef3a053ea12ae808ddd52094d36fcd88fe95881f2-------<p> suppress more goodtime errors9e885c85265c3686aa876acebe6bb6bda18de1f3  
3677,1,0,0,1,0,1,0,1,0,0,0,moe sync 2019-10-31 this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix tostring exception handling change from 957c37116fb2cc52b2f8b405871b65a84917f2cathis is not an ideal code fix but it restores the previous functionality and adds a test that verifies the exception handling logic82b7589dfbfc5f2b6f68d6a6a1bb34e4633f4f3c-------<p> handle stackoverflowerror from both pendingtostring and appenduserobjectadds a bunch of tests to validate error handling in tostring code- verify that a future completing during the tostring call results in a done formatted string- verify that an exception thrown by pendingtostring doesnt cause tostring to fail- verify that cycles dont cause tostring to fail- verify that deep chains of setfuture dont cause tostring to failrelnotescatch stackoverflowerror in abstractfuturetostring to prevent long chains of futures from failing tostring calls29981d416d6b4214e65360ad3d932ba0881a4c8f-------<p> update documentationfixes #35078a0d6bb345341fc0ba91781070da5b522d4b714b all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3677) for more info**<!-- need_author_consent --> || adding cla label because 8a0d6bb345341fc0ba91781070da5b522d4b714b came from @gokacos pr #3507 || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3677) for more info**<!-- cla_yes --> ||
3677,1,0,0,0,1,0,1,0,0,0,0,moe sync 2019-10-31 this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix tostring exception handling change from 957c37116fb2cc52b2f8b405871b65a84917f2cathis is not an ideal code fix but it restores the previous functionality and adds a test that verifies the exception handling logic82b7589dfbfc5f2b6f68d6a6a1bb34e4633f4f3c-------<p> handle stackoverflowerror from both pendingtostring and appenduserobjectadds a bunch of tests to validate error handling in tostring code- verify that a future completing during the tostring call results in a done formatted string- verify that an exception thrown by pendingtostring doesnt cause tostring to fail- verify that cycles dont cause tostring to fail- verify that deep chains of setfuture dont cause tostring to failrelnotescatch stackoverflowerror in abstractfuturetostring to prevent long chains of futures from failing tostring calls29981d416d6b4214e65360ad3d932ba0881a4c8f-------<p> update documentationfixes #35078a0d6bb345341fc0ba91781070da5b522d4b714b all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3677) for more info**<!-- need_author_consent --> || adding cla label because 8a0d6bb345341fc0ba91781070da5b522d4b714b came from @gokacos pr #3507 || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3677) for more info**<!-- cla_yes --> ||
3684,1,0,0,0,1,0,1,0,0,0,1,moe sync 2019-11-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add @suppresswarnings("donotmock") to mocked comgooglecommon types@donotmock will be added to these types this change suppresses warnings for current cases where these types are mocked13ed6d3846bb3765b19ec06819a215ae93644b6c-------<p> add graphbuilderincidentedgeorder()2c1db61cfae457a58554f4390c3907f18f406b6a-------<p> remove usages of deprecated charmatcher functionsfixes #3565213ec90d8647412c4d25870fbc1c8bb3a44798ff-------<p> have immutablegraphbuilder set incidentedgeorder to stable()c43a2bf57ccc089bb64f2704321e175a611cdc4b-------<p> migrate orgmockitomatchers#any* to orgmockitoargumentmatchersthe former is deprecated and replaced by the latter in mockito 2 however there is afunctional difference: argumentmatchers will reject `null` and check the typeif the matcher specified a type (eg `any(class)` or `anyint()`) `any()` willremain to accept anythingall remaining `any(class)` references are migrated to `nulllable(class)` to maintain the functionality of mockito 1all remaining `anystring()` references are migrated to `nullable(stringclass)` to maintain the functionality of mockito 13e96e06575ea0bb1e8be61ce2edd57ac9427c71d all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3684) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3684) for more info**<!-- cla_yes --> ||
3684,1,0,0,0,1,0,1,0,0,0,0,moe sync 2019-11-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add @suppresswarnings("donotmock") to mocked comgooglecommon types@donotmock will be added to these types this change suppresses warnings for current cases where these types are mocked13ed6d3846bb3765b19ec06819a215ae93644b6c-------<p> add graphbuilderincidentedgeorder()2c1db61cfae457a58554f4390c3907f18f406b6a-------<p> remove usages of deprecated charmatcher functionsfixes #3565213ec90d8647412c4d25870fbc1c8bb3a44798ff-------<p> have immutablegraphbuilder set incidentedgeorder to stable()c43a2bf57ccc089bb64f2704321e175a611cdc4b-------<p> migrate orgmockitomatchers#any* to orgmockitoargumentmatchersthe former is deprecated and replaced by the latter in mockito 2 however there is afunctional difference: argumentmatchers will reject `null` and check the typeif the matcher specified a type (eg `any(class)` or `anyint()`) `any()` willremain to accept anythingall remaining `any(class)` references are migrated to `nulllable(class)` to maintain the functionality of mockito 1all remaining `anystring()` references are migrated to `nullable(stringclass)` to maintain the functionality of mockito 13e96e06575ea0bb1e8be61ce2edd57ac9427c71d all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3684) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3684) for more info**<!-- cla_yes --> ||
3726,1,0,1,0,0,1,0,0,0,0,0,moe sync 2019-12-01 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make incidentedges() return edges in insertion orderdf2c5527d5fe4a50135239f0b6b516058a37c5fa-------<p> abstractnetwork: fix bug in abstractnetworkhasedgeconnecting() causing it to throw if either endpoint was not in the graphrelnotesfix bug in abstractnetworkhasedgeconnecting() causing it to throw if either endpoint was not in the graph  originally reported as github issue #37218e0f821430acaa5b77c5c2c05380e3d29f18e410-------<p> refactor abstractgraphtest to allow for tests with immutablegraphreason: immutablegraph implementations are undertested compared to mutablegraph implementations the current tests didnt catch a bug i deliberately introduced in [] also it would be nice to be able to share the incident edge order testsnote about design: i started out by making an abstractgraphtest subclass for mutable graphs however that would lead to a duplication of all 7 subclasses and most of their tests the issue is that directed/undirected and mutable/immutable are orthogonal and we also want to test allowselfloopstrue/false and incidentedgeorderunordered/stable the proposed solution is somewhat unconventional but at least allows us to share much more code between the testsa6d0db50f6d678839f17c82a76341bb0d3d60b29-------<p> merge abstractxgraphtest and configurablesimplexgraphtest thus removing one layer from the abstractgraphtest treereason: nobody in [] is using these abstract test classes (even though they are designed for general purpose graphs) however even though they arent used these classes add a layer of complexity to an already complex class tree that is going to become more complex with the addition of immutablegraph tests and stable incident edge order testsce50502b9bd6fbd909abed1afd1de2976246eef9-------<p> make the abstractgraphtest tree more sane with only leaf nodes non-abstract and merge the tests for with and without self-loopsf5ac328e048606d0b40c7e0b1b55bccd6ff177eb-------<p> merge standardmutabledirectedgraphtest and its variant with stable orderthis is in preparation for adding an immutable version that also needs tests for the stable ordera0ebd7b6d2789a168df5e3e0a224513dfe1257ee-------<p> add standardimmutabledirectedgraphtest033535490cf36040b4c2aba6a94e9b0f3e59564e-------<p> annotate benign race in abstracttable so as to avoid tsan issuesa4c3bcd7d1c8438d02d368a18c46c1b39f27e80d great work on improving the graph tests @nymanjens! looking forward to seeing it merged in 👏 || > great work on improving the graph tests @nymanjens! looking forward to seeing it merged inthanks! ||
3726,1,0,0,0,1,0,1,0,0,0,0,moe sync 2019-12-01 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make incidentedges() return edges in insertion orderdf2c5527d5fe4a50135239f0b6b516058a37c5fa-------<p> abstractnetwork: fix bug in abstractnetworkhasedgeconnecting() causing it to throw if either endpoint was not in the graphrelnotesfix bug in abstractnetworkhasedgeconnecting() causing it to throw if either endpoint was not in the graph  originally reported as github issue #37218e0f821430acaa5b77c5c2c05380e3d29f18e410-------<p> refactor abstractgraphtest to allow for tests with immutablegraphreason: immutablegraph implementations are undertested compared to mutablegraph implementations the current tests didnt catch a bug i deliberately introduced in [] also it would be nice to be able to share the incident edge order testsnote about design: i started out by making an abstractgraphtest subclass for mutable graphs however that would lead to a duplication of all 7 subclasses and most of their tests the issue is that directed/undirected and mutable/immutable are orthogonal and we also want to test allowselfloopstrue/false and incidentedgeorderunordered/stable the proposed solution is somewhat unconventional but at least allows us to share much more code between the testsa6d0db50f6d678839f17c82a76341bb0d3d60b29-------<p> merge abstractxgraphtest and configurablesimplexgraphtest thus removing one layer from the abstractgraphtest treereason: nobody in [] is using these abstract test classes (even though they are designed for general purpose graphs) however even though they arent used these classes add a layer of complexity to an already complex class tree that is going to become more complex with the addition of immutablegraph tests and stable incident edge order testsce50502b9bd6fbd909abed1afd1de2976246eef9-------<p> make the abstractgraphtest tree more sane with only leaf nodes non-abstract and merge the tests for with and without self-loopsf5ac328e048606d0b40c7e0b1b55bccd6ff177eb-------<p> merge standardmutabledirectedgraphtest and its variant with stable orderthis is in preparation for adding an immutable version that also needs tests for the stable ordera0ebd7b6d2789a168df5e3e0a224513dfe1257ee-------<p> add standardimmutabledirectedgraphtest033535490cf36040b4c2aba6a94e9b0f3e59564e-------<p> annotate benign race in abstracttable so as to avoid tsan issuesa4c3bcd7d1c8438d02d368a18c46c1b39f27e80d great work on improving the graph tests @nymanjens! looking forward to seeing it merged in 👏 || > great work on improving the graph tests @nymanjens! looking forward to seeing it merged inthanks! ||
3748,1,0,1,0,0,1,0,1,0,0,0,moe sync 2019-12-23 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor: lambda can be replaced method referencefixes #37451d8ab4f96855dcb9a7cd3990a671f4e5696faa4e all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3748) for more info**<!-- need_author_consent --> ||
3748,1,0,0,0,1,0,1,0,0,0,0,moe sync 2019-12-23 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor: lambda can be replaced method referencefixes #37451d8ab4f96855dcb9a7cd3990a671f4e5696faa4e all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3748) for more info**<!-- need_author_consent --> ||
3765,1,0,0,1,1,1,1,1,1,0,0,moe sync 2020-01-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add test case stable incidentedgeorder with a self loop to abstractstandard[un]directedgraphtestaee54682770a3166c231bbfecced91f31c55d32a-------<p> add test for stable incidentedgeorder support for mutable undirected valuegraphs in valuegraphtest0aba85dd247e254e10fcd84e7b2940fa0383e14e-------<p> fix off-by-one error in asciidigitsasciidigits initializationfixes #37612b27d9f906e18ae1105766d41e0940122ce686a0-------<p> disable gwt-rpc by default in the open-source releaserelnotes[guava types can no longer be sent over gwt-rpc](https://groupsgooglecom/d/msg/guava-announce/zhztfg7yf3o/rqnnwdheewaj) to _temporarily_ reenable support set the `guavagwtemergency_reenable_rpc` system property to `true`ff0cd947f82d24611e39fb3d86e3d19da4af801f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- cla_yes --> || adding cla:yes label because 2b27d9f906e18ae1105766d41e0940122ce686a0 comes from @perceptron8s pr #3761 ||
3765,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-01-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add test case stable incidentedgeorder with a self loop to abstractstandard[un]directedgraphtestaee54682770a3166c231bbfecced91f31c55d32a-------<p> add test for stable incidentedgeorder support for mutable undirected valuegraphs in valuegraphtest0aba85dd247e254e10fcd84e7b2940fa0383e14e-------<p> fix off-by-one error in asciidigitsasciidigits initializationfixes #37612b27d9f906e18ae1105766d41e0940122ce686a0-------<p> disable gwt-rpc by default in the open-source releaserelnotes[guava types can no longer be sent over gwt-rpc](https://groupsgooglecom/d/msg/guava-announce/zhztfg7yf3o/rqnnwdheewaj) to _temporarily_ reenable support set the `guavagwtemergency_reenable_rpc` system property to `true`ff0cd947f82d24611e39fb3d86e3d19da4af801f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- cla_yes --> || adding cla:yes label because 2b27d9f906e18ae1105766d41e0940122ce686a0 comes from @perceptron8s pr #3761 ||
3796,1,1,1,1,1,1,1,0,0,1,0,moe sync 2020-02-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make abstractfuture compatible with forkjoinpool by catching exceptions from property retrievalfixes #3788 #3784relnotesmade it safe to load the `abstractfuture` class from a `forkjoinpool` thread under a security managere589b5c884a5996f7040ae38bdf02709f9e300da all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3796) for more info**<!-- need_author_consent --> || shut down computer - silence ||
3796,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-02-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make abstractfuture compatible with forkjoinpool by catching exceptions from property retrievalfixes #3788 #3784relnotesmade it safe to load the `abstractfuture` class from a `forkjoinpool` thread under a security managere589b5c884a5996f7040ae38bdf02709f9e300da all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3796) for more info**<!-- need_author_consent --> || shut down computer - silence ||
3796,1,1,1,1,1,1,1,0,0,1,0,moe sync 2020-02-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make abstractfuture compatible with forkjoinpool by catching exceptions from property retrievalfixes #3788 #3784relnotesmade it safe to load the `abstractfuture` class from a `forkjoinpool` thread under a security managere589b5c884a5996f7040ae38bdf02709f9e300da all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3796) for more info**<!-- need_author_consent --> || shut down computer - silence ||
3796,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-02-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make abstractfuture compatible with forkjoinpool by catching exceptions from property retrievalfixes #3788 #3784relnotesmade it safe to load the `abstractfuture` class from a `forkjoinpool` thread under a security managere589b5c884a5996f7040ae38bdf02709f9e300da all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3796) for more info**<!-- need_author_consent --> || shut down computer - silence ||
3805,1,0,0,0,1,0,1,1,0,0,0,moe sync 2020-02-23 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> simplify redundant `collectionaddall()` callsfixes #3800ae564a1d7c39704e800f04cef427f4c8abd6f010 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3805) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3805) for more info**<!-- cla_yes --> ||
3805,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-02-23 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> simplify redundant `collectionaddall()` callsfixes #3800ae564a1d7c39704e800f04cef427f4c8abd6f010 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3805) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3805) for more info**<!-- cla_yes --> ||
3830,1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-03-19 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fixed double slicing bytesource (#3501)fixes #38296fb7746b8bc39d4d547a1b2bb47549c6b8314af4 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- need_author_consent --> || @googlebot i consent || clas look good thanks!ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- ok --> ||
3830,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-03-19 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fixed double slicing bytesource (#3501)fixes #38296fb7746b8bc39d4d547a1b2bb47549c6b8314af4 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- need_author_consent --> || @googlebot i consent || clas look good thanks!ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- ok --> ||
3830,1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-03-19 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fixed double slicing bytesource (#3501)fixes #38296fb7746b8bc39d4d547a1b2bb47549c6b8314af4 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- need_author_consent --> || @googlebot i consent || clas look good thanks!ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- ok --> ||
3830,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-03-19 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fixed double slicing bytesource (#3501)fixes #38296fb7746b8bc39d4d547a1b2bb47549c6b8314af4 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- need_author_consent --> || @googlebot i consent || clas look good thanks!ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3830) for more info**<!-- ok --> ||
3831,1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-03-20 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add some unit tests for base64url() in baseencodingfixes #3816e1c08a80e340efb4477dd601d6073936cc67617f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3831) for more info**<!-- need_author_consent --> ||
3831,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-03-20 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add some unit tests for base64url() in baseencodingfixes #3816e1c08a80e340efb4477dd601d6073936cc67617f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3831) for more info**<!-- need_author_consent --> ||
3856,1,0,1,1,1,1,0,0,0,0,0,moe sync 2020-04-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `service` and `servicemanager`this leaves `abstractlisteningexecutorservice` as `@beta`fixes #3806 #3418relevant to #2966(i have tweaked jesses initial pr to leave `abstractexecutionthreadservicetriggershutdown` and `abstractservicedocancelstart` as `@beta` since we arent sure we like the locking behavior of the former and weve realized that `listenerstopping` _might_ be a reasonable substitute for both)relnotes`utilconcurrent`: removed `@beta` from `service` and related classes33574d771b099991822ed78a726df0eea4646eea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3856) for more info**<!-- need_author_consent --> ||
3856,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-04-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `service` and `servicemanager`this leaves `abstractlisteningexecutorservice` as `@beta`fixes #3806 #3418relevant to #2966(i have tweaked jesses initial pr to leave `abstractexecutionthreadservicetriggershutdown` and `abstractservicedocancelstart` as `@beta` since we arent sure we like the locking behavior of the former and weve realized that `listenerstopping` _might_ be a reasonable substitute for both)relnotes`utilconcurrent`: removed `@beta` from `service` and related classes33574d771b099991822ed78a726df0eea4646eea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3856) for more info**<!-- need_author_consent --> ||
3856,1,0,1,1,1,1,0,0,0,0,0,moe sync 2020-04-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `service` and `servicemanager`this leaves `abstractlisteningexecutorservice` as `@beta`fixes #3806 #3418relevant to #2966(i have tweaked jesses initial pr to leave `abstractexecutionthreadservicetriggershutdown` and `abstractservicedocancelstart` as `@beta` since we arent sure we like the locking behavior of the former and weve realized that `listenerstopping` _might_ be a reasonable substitute for both)relnotes`utilconcurrent`: removed `@beta` from `service` and related classes33574d771b099991822ed78a726df0eea4646eea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3856) for more info**<!-- need_author_consent --> ||
3856,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-04-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `service` and `servicemanager`this leaves `abstractlisteningexecutorservice` as `@beta`fixes #3806 #3418relevant to #2966(i have tweaked jesses initial pr to leave `abstractexecutionthreadservicetriggershutdown` and `abstractservicedocancelstart` as `@beta` since we arent sure we like the locking behavior of the former and weve realized that `listenerstopping` _might_ be a reasonable substitute for both)relnotes`utilconcurrent`: removed `@beta` from `service` and related classes33574d771b099991822ed78a726df0eea4646eea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3856) for more info**<!-- need_author_consent --> ||
3876,1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-04-24 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix github #3873 by reimplementing cartesian{setlist}containsrelnotesfixed #387327506700d2ce3a3a24840aa0ba932dba4a275663  
3876,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-04-24 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix github #3873 by reimplementing cartesian{setlist}containsrelnotesfixed #387327506700d2ce3a3a24840aa0ba932dba4a275663  
3885,1,0,0,0,0,1,0,0,0,0,0,moe sync 2020-04-28 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> move comment to a more appropriate locationthe comment was added along with putcoalescing in cl 143507326fixes #38838a704a86f565065a7573a13bb95d919a6c5bcbeb all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3885) for more info**<!-- need_author_consent --> ||
3885,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-04-28 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> move comment to a more appropriate locationthe comment was added along with putcoalescing in cl 143507326fixes #38838a704a86f565065a7573a13bb95d919a6c5bcbeb all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3885) for more info**<!-- need_author_consent --> ||
3887,1,0,0,0,0,1,1,0,0,0,0,moe sync 2020-04-28 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fixed treerangemapsubrangemapputcoalescingthe short circuiting on an attempt to put an empty range caused the contract of putcoalescing to be violatedfixes #38866e0e978abc6d3de458ed7e2b9cb0533c735d36a2 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3887) for more info**<!-- need_author_consent --> ||
3887,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-04-28 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fixed treerangemapsubrangemapputcoalescingthe short circuiting on an attempt to put an empty range caused the contract of putcoalescing to be violatedfixes #38866e0e978abc6d3de458ed7e2b9cb0533c735d36a2 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3887) for more info**<!-- need_author_consent --> ||
3892,1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-05-04 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix powersetequals() when comparing to another powerset whose items are the same but in a different iteration orderrelnotes:  fix issue where powersetequals(powerset) would erroneously return  false if the powersets underlying sets were equal but in a different  iteration orderfixes #3891 #3890befd5ced9edc93a65c75201eb0698a571398005f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- need_author_consent --> || cla:yes from #3891s acceptance || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- cla_yes --> ||
3892,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-05-04 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix powersetequals() when comparing to another powerset whose items are the same but in a different iteration orderrelnotes:  fix issue where powersetequals(powerset) would erroneously return  false if the powersets underlying sets were equal but in a different  iteration orderfixes #3891 #3890befd5ced9edc93a65c75201eb0698a571398005f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- need_author_consent --> || cla:yes from #3891s acceptance || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- cla_yes --> ||
3892,1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-05-04 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix powersetequals() when comparing to another powerset whose items are the same but in a different iteration orderrelnotes:  fix issue where powersetequals(powerset) would erroneously return  false if the powersets underlying sets were equal but in a different  iteration orderfixes #3891 #3890befd5ced9edc93a65c75201eb0698a571398005f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- need_author_consent --> || cla:yes from #3891s acceptance || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- cla_yes --> ||
3892,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-05-04 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix powersetequals() when comparing to another powerset whose items are the same but in a different iteration orderrelnotes:  fix issue where powersetequals(powerset) would erroneously return  false if the powersets underlying sets were equal but in a different  iteration orderfixes #3891 #3890befd5ced9edc93a65c75201eb0698a571398005f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- need_author_consent --> || cla:yes from #3891s acceptance || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- cla_yes --> ||
3893,1,0,0,0,0,1,1,0,0,0,0,moe sync 2020-05-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> adds constants for `cross-origin-embedder-policy(-report-only)?` headers ([w3](https://wicggithubio/cross-origin-embedder-policy/#coep))relnotesadds constants for `cross-origin-embedder-policy(-report-only)?` headersa061f7e066ad470b47b749c0514ac581cf2397e2-------<p> implement trylockuninterruptiblyfixes #3880c9278360493d074ecc88c9d42adbcde2ad90f035 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3893) for more info**<!-- need_author_consent --> || cla-yes from #3880 || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3893) for more info**<!-- cla_yes --> ||
3893,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-05-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> adds constants for `cross-origin-embedder-policy(-report-only)?` headers ([w3](https://wicggithubio/cross-origin-embedder-policy/#coep))relnotesadds constants for `cross-origin-embedder-policy(-report-only)?` headersa061f7e066ad470b47b749c0514ac581cf2397e2-------<p> implement trylockuninterruptiblyfixes #3880c9278360493d074ecc88c9d42adbcde2ad90f035 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3893) for more info**<!-- need_author_consent --> || cla-yes from #3880 || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3893) for more info**<!-- cla_yes --> ||
3899,1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-05-13 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> in immutableintarray use arrayscopyof when expanding the internal array909bdb290675c41238a194ad32e6686cda58f6dc-------<p> implemented lastindexof in cartesianlistfixes #387813da6dd1e8446bc2e5e6a5ac6e87e82ce0b7743f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3899) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3899) for more info**<!-- cla_yes --> ||
3899,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-05-13 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> in immutableintarray use arrayscopyof when expanding the internal array909bdb290675c41238a194ad32e6686cda58f6dc-------<p> implemented lastindexof in cartesianlistfixes #387813da6dd1e8446bc2e5e6a5ac6e87e82ce0b7743f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3899) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3899) for more info**<!-- cla_yes --> ||
3922,1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-06-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read-only operationfixes #3911fixes #391298a616453df021b0792beb71c81b94d73e0cb69b-------<p> add comparatorsmin/maxrelnotes`collect`: added two-element min and max methods to comparatorsfc7433e647e82057ccc040885bf38dc503465d54-------<p> discourage orderingmin(e e) and max(e e) in favor of comparatorsmin(e e comparator) and max(e e comparator)relnotesdiscourage the use of orderingmin(e e) and max(e e)8bf31e175d0f103ade07a351ed6135496f635991 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- cla_yes --> ||
3922,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-06-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read-only operationfixes #3911fixes #391298a616453df021b0792beb71c81b94d73e0cb69b-------<p> add comparatorsmin/maxrelnotes`collect`: added two-element min and max methods to comparatorsfc7433e647e82057ccc040885bf38dc503465d54-------<p> discourage orderingmin(e e) and max(e e) in favor of comparatorsmin(e e comparator) and max(e e comparator)relnotesdiscourage the use of orderingmin(e e) and max(e e)8bf31e175d0f103ade07a351ed6135496f635991 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- cla_yes --> ||
3922,1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-06-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read-only operationfixes #3911fixes #391298a616453df021b0792beb71c81b94d73e0cb69b-------<p> add comparatorsmin/maxrelnotes`collect`: added two-element min and max methods to comparatorsfc7433e647e82057ccc040885bf38dc503465d54-------<p> discourage orderingmin(e e) and max(e e) in favor of comparatorsmin(e e comparator) and max(e e comparator)relnotesdiscourage the use of orderingmin(e e) and max(e e)8bf31e175d0f103ade07a351ed6135496f635991 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- cla_yes --> ||
3922,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-06-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read-only operationfixes #3911fixes #391298a616453df021b0792beb71c81b94d73e0cb69b-------<p> add comparatorsmin/maxrelnotes`collect`: added two-element min and max methods to comparatorsfc7433e647e82057ccc040885bf38dc503465d54-------<p> discourage orderingmin(e e) and max(e e) in favor of comparatorsmin(e e comparator) and max(e e comparator)relnotesdiscourage the use of orderingmin(e e) and max(e e)8bf31e175d0f103ade07a351ed6135496f635991 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- cla_yes --> ||
3971,1,0,0,0,0,1,1,0,0,0,0,moe sync 2020-07-22 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add awaitterminationuninterruptiblyfixes #3908fixes #1315somewhat relevant to https://githubcom/google/guava/issues/3655vaguely relevant to https://githubcom/google/error-prone/issues/1490 since it creates a `@checkreturnvalue` variant of a `javautilconcurrent` method that returns `false` to indicate timeoutrelnotes`utilconcurrent`: added `awaitterminationuninterruptibly`1ec90b045a45b4603ea5bd1c296f284ec1c438db  
3971,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-07-22 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add awaitterminationuninterruptiblyfixes #3908fixes #1315somewhat relevant to https://githubcom/google/guava/issues/3655vaguely relevant to https://githubcom/google/error-prone/issues/1490 since it creates a `@checkreturnvalue` variant of a `javautilconcurrent` method that returns `false` to indicate timeoutrelnotes`utilconcurrent`: added `awaitterminationuninterruptibly`1ec90b045a45b4603ea5bd1c296f284ec1c438db  
3971,1,0,0,0,0,1,1,0,0,0,0,moe sync 2020-07-22 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add awaitterminationuninterruptiblyfixes #3908fixes #1315somewhat relevant to https://githubcom/google/guava/issues/3655vaguely relevant to https://githubcom/google/error-prone/issues/1490 since it creates a `@checkreturnvalue` variant of a `javautilconcurrent` method that returns `false` to indicate timeoutrelnotes`utilconcurrent`: added `awaitterminationuninterruptibly`1ec90b045a45b4603ea5bd1c296f284ec1c438db  
3971,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-07-22 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add awaitterminationuninterruptiblyfixes #3908fixes #1315somewhat relevant to https://githubcom/google/guava/issues/3655vaguely relevant to https://githubcom/google/error-prone/issues/1490 since it creates a `@checkreturnvalue` variant of a `javautilconcurrent` method that returns `false` to indicate timeoutrelnotes`utilconcurrent`: added `awaitterminationuninterruptibly`1ec90b045a45b4603ea5bd1c296f284ec1c438db  
4020,1,0,1,0,0,1,0,1,0,0,0,moe sync 2020-09-15 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make closingfuture available in open-source guava (@beta)relnotes`utilconcurrent`: add `closingfuture`48851566428571694e62dee9f277d9833e78f17a-------<p> fix typos and remove unnecessary wordsfixes #401212c9012b0bde00a99cd454f1af6d90b1e5e11508-------<p> bump checker-qual from 2111 to 350for unfortunate reasons involving internal legacy infrastructure this is easier than merging #4018 but at least it gets us on the newest major version that makes it easier to see that its safe to resolve a conflict between say 350 and 361 by just using the newer onea2ad1ee1fa9fcc591edc79f5e7c160ddd19b851d-------<p> remove spurious annotation to fix travis buildf106608d0c58c2c67dcd56e638ace73472768f65 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4020) for more info**<!-- need_author_consent --> || cla:yes per #4012 ||
4020,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-15 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make closingfuture available in open-source guava (@beta)relnotes`utilconcurrent`: add `closingfuture`48851566428571694e62dee9f277d9833e78f17a-------<p> fix typos and remove unnecessary wordsfixes #401212c9012b0bde00a99cd454f1af6d90b1e5e11508-------<p> bump checker-qual from 2111 to 350for unfortunate reasons involving internal legacy infrastructure this is easier than merging #4018 but at least it gets us on the newest major version that makes it easier to see that its safe to resolve a conflict between say 350 and 361 by just using the newer onea2ad1ee1fa9fcc591edc79f5e7c160ddd19b851d-------<p> remove spurious annotation to fix travis buildf106608d0c58c2c67dcd56e638ace73472768f65 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4020) for more info**<!-- need_author_consent --> || cla:yes per #4012 ||
4020,1,0,1,0,0,1,0,1,0,0,0,moe sync 2020-09-15 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make closingfuture available in open-source guava (@beta)relnotes`utilconcurrent`: add `closingfuture`48851566428571694e62dee9f277d9833e78f17a-------<p> fix typos and remove unnecessary wordsfixes #401212c9012b0bde00a99cd454f1af6d90b1e5e11508-------<p> bump checker-qual from 2111 to 350for unfortunate reasons involving internal legacy infrastructure this is easier than merging #4018 but at least it gets us on the newest major version that makes it easier to see that its safe to resolve a conflict between say 350 and 361 by just using the newer onea2ad1ee1fa9fcc591edc79f5e7c160ddd19b851d-------<p> remove spurious annotation to fix travis buildf106608d0c58c2c67dcd56e638ace73472768f65 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4020) for more info**<!-- need_author_consent --> || cla:yes per #4012 ||
4020,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-15 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make closingfuture available in open-source guava (@beta)relnotes`utilconcurrent`: add `closingfuture`48851566428571694e62dee9f277d9833e78f17a-------<p> fix typos and remove unnecessary wordsfixes #401212c9012b0bde00a99cd454f1af6d90b1e5e11508-------<p> bump checker-qual from 2111 to 350for unfortunate reasons involving internal legacy infrastructure this is easier than merging #4018 but at least it gets us on the newest major version that makes it easier to see that its safe to resolve a conflict between say 350 and 361 by just using the newer onea2ad1ee1fa9fcc591edc79f5e7c160ddd19b851d-------<p> remove spurious annotation to fix travis buildf106608d0c58c2c67dcd56e638ace73472768f65 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4020) for more info**<!-- need_author_consent --> || cla:yes per #4012 ||
4029,1,0,1,0,0,1,0,1,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
4029,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
4029,1,0,1,0,0,1,0,1,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
4029,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
4029,1,0,1,0,0,1,0,1,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
4029,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
4030,1,0,0,0,0,1,0,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
4030,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
4030,1,0,0,0,0,1,0,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
4030,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
5252,1,1,0,1,0,0,1,1,0,1,0,moe sync 2020-09-29 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> internal changes to classpath643423a88d854deb863fa08f550a6e41d2823df5-------<p> internal changes to classpathb7e83b114f95f5b776ed60f5932420e5c5fc24ad-------<p> remove unnecessary parensfixes #403630c69a1ff047f8dad3abef2c315c305e052da0b2-------<p> also print android test failures0644480db466a331b7bd9fa7a8690f37d05ddda2-------<p> fix classpathtest on android jdk 11037e10c0da8159c06fa471142ae923dceb03e4ea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5252) for more info**<!-- need_author_consent --> || setting `cla: yes` because the commit by another author is derived directly from pr #4036 from that author ||
5252,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-29 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> internal changes to classpath643423a88d854deb863fa08f550a6e41d2823df5-------<p> internal changes to classpathb7e83b114f95f5b776ed60f5932420e5c5fc24ad-------<p> remove unnecessary parensfixes #403630c69a1ff047f8dad3abef2c315c305e052da0b2-------<p> also print android test failures0644480db466a331b7bd9fa7a8690f37d05ddda2-------<p> fix classpathtest on android jdk 11037e10c0da8159c06fa471142ae923dceb03e4ea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5252) for more info**<!-- need_author_consent --> || setting `cla: yes` because the commit by another author is derived directly from pr #4036 from that author ||
5268,1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
5268,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
5268,1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
5268,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
5268,1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
5268,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
5275,1,0,0,1,0,1,0,0,0,0,0,moe sync 2020-10-13 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify how to use `iteratortester`when using `iteratortester` intellij idea automatically imports`abstractiteratortesterknownorder` however `abstractiteratortester`is private and it is not obvious that one was meant to import`iteratortesterknownorder` instead therefore this commit updates thejavadoc to give an example of how to use the api properlyfixes #5272c3172e1a55041b118a984bc5863082fda32d8243-------<p> add a bunch of warnings to executionsequencersee discussion on cl 3350466400b7dfb6ebeff542ac6d013f0a5690ccfce7a1eac all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5275) for more info**<!-- need_author_consent --> ||
5275,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-13 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify how to use `iteratortester`when using `iteratortester` intellij idea automatically imports`abstractiteratortesterknownorder` however `abstractiteratortester`is private and it is not obvious that one was meant to import`iteratortesterknownorder` instead therefore this commit updates thejavadoc to give an example of how to use the api properlyfixes #5272c3172e1a55041b118a984bc5863082fda32d8243-------<p> add a bunch of warnings to executionsequencersee discussion on cl 3350466400b7dfb6ebeff542ac6d013f0a5690ccfce7a1eac all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5275) for more info**<!-- need_author_consent --> ||
5277,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-13 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> dont call tostring() on the results of successful futuresrelnotesabstractfuturetostring() no longer includes the tostring() of the result771629df701dfe565024db1cabfe19d7a5b2abfc-------<p> fix example in documentation for `iteratortester`i made a mistake and accidentally included an example that does notcompile specifically importing `knownorder` as-is does not compileinstead one needs to import `iteratortesterknownorder` see #5254 formore informationi also changed the example to use `collections#unmodifiablelist`rather than `arraylist` because `arraylist#iterator` does not satisfyall the requirements of `iteratorfeature#modifiable`fixes #5276448afdbd4fc53f8d8f636516e54bfcbad9d6b3c0 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5277) for more info**<!-- need_author_consent --> ||
5277,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-13 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> dont call tostring() on the results of successful futuresrelnotesabstractfuturetostring() no longer includes the tostring() of the result771629df701dfe565024db1cabfe19d7a5b2abfc-------<p> fix example in documentation for `iteratortester`i made a mistake and accidentally included an example that does notcompile specifically importing `knownorder` as-is does not compileinstead one needs to import `iteratortesterknownorder` see #5254 formore informationi also changed the example to use `collections#unmodifiablelist`rather than `arraylist` because `arraylist#iterator` does not satisfyall the requirements of `iteratorfeature#modifiable`fixes #5276448afdbd4fc53f8d8f636516e54bfcbad9d6b3c0 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5277) for more info**<!-- need_author_consent --> ||
5278,1,0,0,0,0,1,0,0,0,0,0,moe sync 2020-10-14 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify that interner should be preferred instead of stringintern() the existing language implies its intended _only_ for other typessee also https://githubcom/google/guava/issues/399#issuecomment-613077541034a2ee444ad03ec869638efa53b3ae880c7f4d-------<p> document what happens when futurecallback throws exceptionfixes #5250 #20583d573ac2514c53d678c3855b28d9223fea9c7e8f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5278) for more info**<!-- need_author_consent --> ||
5278,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-14 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify that interner should be preferred instead of stringintern() the existing language implies its intended _only_ for other typessee also https://githubcom/google/guava/issues/399#issuecomment-613077541034a2ee444ad03ec869638efa53b3ae880c7f4d-------<p> document what happens when futurecallback throws exceptionfixes #5250 #20583d573ac2514c53d678c3855b28d9223fea9c7e8f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5278) for more info**<!-- need_author_consent --> ||
5286,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-16 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> prepare for release 30006c1d37ea914125b88bc27d0a570df84fe900a4f-------<p> remove deprecated 1-arg servicemanageraddlistener[]relnotes`utilconcurrent`: removed the deprecated 1-arg `servicemanageraddlistener(listener)` use the 2-arg `addlistener(listener executor)` overload setting the executor to `directexecutor()` for equivalent behaviord13ebb04258a0caecea56d908a391e7e694004b2-------<p> update iteratortester example with a greater "steps" valuethis allows iteratortester to check the edge case that when an iterator has been exhausted (that is "next" has been called repeatedly until "hasnext" returns false) then calling "next" on the iterator again exhibits the same behavior as the users chosen "known good" reference implementationfixes #5281b094a4b3f43645298a7c9bce9b5d72184d7ff4cf all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5286) for more info**<!-- need_author_consent --> ||
5286,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-16 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> prepare for release 30006c1d37ea914125b88bc27d0a570df84fe900a4f-------<p> remove deprecated 1-arg servicemanageraddlistener[]relnotes`utilconcurrent`: removed the deprecated 1-arg `servicemanageraddlistener(listener)` use the 2-arg `addlistener(listener executor)` overload setting the executor to `directexecutor()` for equivalent behaviord13ebb04258a0caecea56d908a391e7e694004b2-------<p> update iteratortester example with a greater "steps" valuethis allows iteratortester to check the edge case that when an iterator has been exhausted (that is "next" has been called repeatedly until "hasnext" returns false) then calling "next" on the iterator again exhibits the same behavior as the users chosen "known good" reference implementationfixes #5281b094a4b3f43645298a7c9bce9b5d72184d7ff4cf all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5286) for more info**<!-- need_author_consent --> ||
5307,1,1,0,0,0,0,1,1,0,1,0,moe sync 2020-11-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor classpath: replace scanner with location class75c2c543c6ac64943037630cfa40945feff10f42-------<p> fix documentation for hashcodetostring() that incorrectly claimed it returned in big-endian orderthe implementation of tostring() goes through the bytes in the same order that asbytes() returns so if the order of the underlying bytes is little-endian (as is the case for longhashcode) then the string will also be little-endian contradicting what the documentation says841129afbd77f8c78bb469de2ece758b418d322b-------<p> optimize hashingcrc32c() by eliminating two xors for every byte of inputbenchmarks suggest a modest speedup around 8%b685bf7068044cfef0c73163408a0ccebacef203-------<p> add constant for origin isolation headerspec: https://githubcom/wicg/origin-isolationrelnotesadds constant for the origin-isolation headerf3d79119d1e1f9937f332a8c73ed1690dfbb8ffb-------<p> remove outdated reference in docs3ac6e42a8622be4b122dfd4b9eef989148141148-------<p> add additional test for `crc32chashfunction`4f7e925397e6ca2b17ce3d563ba1968e94959bd1-------<p> verify maximumweight before settingthe maximumweight builder method is the only method that does the argument verification before the assignmentit looks like a typo and does not affect anyone in practice but it is still better to have the implementation uniformfixes #5298f1d40c3dd5243c5a29fe683fb42f7ff61b2a3068-------<p> do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available6d9e9e33c6a784f86b51c3fac785532351374271-------<p> rollback*** original change description ***do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available***916807371db167b99bb8b591a22c9ec07fe2bac2-------<p> backport `combine` to java7 for `immutablelist` & `immutableset`this is so that java8 code relying on the java7 branch of guava can still efficiently collect guava collectionsa275458c2601c33bfb5ba6ec54e2458feeeff06a-------<p> fix `loadingcache` minor documentation typofixes #550359a9556d82fc233acf8c0a3ad00de14e02384f75-------<p> added submitasync to closingfuturerelnotes"added `submitasync(asyncclosingcallable)` to `closingfuture`"187db6d240a896be6efb6fc98f014b9d4690fe30-------<p> add `x-request-id` to `httpheaders`fixes #5306relnotesadd `x-request-id` to `httpheaders`0f5a31bbc213f61404189d777b2039842210cab5-------<p> fix android test failure in classpathtestreproduced the error and verified that this change fixes itc1f6ac185f0e72998ed30ae72a0983804c5a4f5a all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5307) for more info**<!-- need_author_consent --> || setting `cla: yes` since all commits with different authors come directly from prs by those authors ||
5307,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-11-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor classpath: replace scanner with location class75c2c543c6ac64943037630cfa40945feff10f42-------<p> fix documentation for hashcodetostring() that incorrectly claimed it returned in big-endian orderthe implementation of tostring() goes through the bytes in the same order that asbytes() returns so if the order of the underlying bytes is little-endian (as is the case for longhashcode) then the string will also be little-endian contradicting what the documentation says841129afbd77f8c78bb469de2ece758b418d322b-------<p> optimize hashingcrc32c() by eliminating two xors for every byte of inputbenchmarks suggest a modest speedup around 8%b685bf7068044cfef0c73163408a0ccebacef203-------<p> add constant for origin isolation headerspec: https://githubcom/wicg/origin-isolationrelnotesadds constant for the origin-isolation headerf3d79119d1e1f9937f332a8c73ed1690dfbb8ffb-------<p> remove outdated reference in docs3ac6e42a8622be4b122dfd4b9eef989148141148-------<p> add additional test for `crc32chashfunction`4f7e925397e6ca2b17ce3d563ba1968e94959bd1-------<p> verify maximumweight before settingthe maximumweight builder method is the only method that does the argument verification before the assignmentit looks like a typo and does not affect anyone in practice but it is still better to have the implementation uniformfixes #5298f1d40c3dd5243c5a29fe683fb42f7ff61b2a3068-------<p> do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available6d9e9e33c6a784f86b51c3fac785532351374271-------<p> rollback*** original change description ***do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available***916807371db167b99bb8b591a22c9ec07fe2bac2-------<p> backport `combine` to java7 for `immutablelist` & `immutableset`this is so that java8 code relying on the java7 branch of guava can still efficiently collect guava collectionsa275458c2601c33bfb5ba6ec54e2458feeeff06a-------<p> fix `loadingcache` minor documentation typofixes #550359a9556d82fc233acf8c0a3ad00de14e02384f75-------<p> added submitasync to closingfuturerelnotes"added `submitasync(asyncclosingcallable)` to `closingfuture`"187db6d240a896be6efb6fc98f014b9d4690fe30-------<p> add `x-request-id` to `httpheaders`fixes #5306relnotesadd `x-request-id` to `httpheaders`0f5a31bbc213f61404189d777b2039842210cab5-------<p> fix android test failure in classpathtestreproduced the error and verified that this change fixes itc1f6ac185f0e72998ed30ae72a0983804c5a4f5a all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5307) for more info**<!-- need_author_consent --> || setting `cla: yes` since all commits with different authors come directly from prs by those authors ||
5307,1,1,0,0,0,0,1,1,0,1,0,moe sync 2020-11-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor classpath: replace scanner with location class75c2c543c6ac64943037630cfa40945feff10f42-------<p> fix documentation for hashcodetostring() that incorrectly claimed it returned in big-endian orderthe implementation of tostring() goes through the bytes in the same order that asbytes() returns so if the order of the underlying bytes is little-endian (as is the case for longhashcode) then the string will also be little-endian contradicting what the documentation says841129afbd77f8c78bb469de2ece758b418d322b-------<p> optimize hashingcrc32c() by eliminating two xors for every byte of inputbenchmarks suggest a modest speedup around 8%b685bf7068044cfef0c73163408a0ccebacef203-------<p> add constant for origin isolation headerspec: https://githubcom/wicg/origin-isolationrelnotesadds constant for the origin-isolation headerf3d79119d1e1f9937f332a8c73ed1690dfbb8ffb-------<p> remove outdated reference in docs3ac6e42a8622be4b122dfd4b9eef989148141148-------<p> add additional test for `crc32chashfunction`4f7e925397e6ca2b17ce3d563ba1968e94959bd1-------<p> verify maximumweight before settingthe maximumweight builder method is the only method that does the argument verification before the assignmentit looks like a typo and does not affect anyone in practice but it is still better to have the implementation uniformfixes #5298f1d40c3dd5243c5a29fe683fb42f7ff61b2a3068-------<p> do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available6d9e9e33c6a784f86b51c3fac785532351374271-------<p> rollback*** original change description ***do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available***916807371db167b99bb8b591a22c9ec07fe2bac2-------<p> backport `combine` to java7 for `immutablelist` & `immutableset`this is so that java8 code relying on the java7 branch of guava can still efficiently collect guava collectionsa275458c2601c33bfb5ba6ec54e2458feeeff06a-------<p> fix `loadingcache` minor documentation typofixes #550359a9556d82fc233acf8c0a3ad00de14e02384f75-------<p> added submitasync to closingfuturerelnotes"added `submitasync(asyncclosingcallable)` to `closingfuture`"187db6d240a896be6efb6fc98f014b9d4690fe30-------<p> add `x-request-id` to `httpheaders`fixes #5306relnotesadd `x-request-id` to `httpheaders`0f5a31bbc213f61404189d777b2039842210cab5-------<p> fix android test failure in classpathtestreproduced the error and verified that this change fixes itc1f6ac185f0e72998ed30ae72a0983804c5a4f5a all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5307) for more info**<!-- need_author_consent --> || setting `cla: yes` since all commits with different authors come directly from prs by those authors ||
5307,1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-11-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor classpath: replace scanner with location class75c2c543c6ac64943037630cfa40945feff10f42-------<p> fix documentation for hashcodetostring() that incorrectly claimed it returned in big-endian orderthe implementation of tostring() goes through the bytes in the same order that asbytes() returns so if the order of the underlying bytes is little-endian (as is the case for longhashcode) then the string will also be little-endian contradicting what the documentation says841129afbd77f8c78bb469de2ece758b418d322b-------<p> optimize hashingcrc32c() by eliminating two xors for every byte of inputbenchmarks suggest a modest speedup around 8%b685bf7068044cfef0c73163408a0ccebacef203-------<p> add constant for origin isolation headerspec: https://githubcom/wicg/origin-isolationrelnotesadds constant for the origin-isolation headerf3d79119d1e1f9937f332a8c73ed1690dfbb8ffb-------<p> remove outdated reference in docs3ac6e42a8622be4b122dfd4b9eef989148141148-------<p> add additional test for `crc32chashfunction`4f7e925397e6ca2b17ce3d563ba1968e94959bd1-------<p> verify maximumweight before settingthe maximumweight builder method is the only method that does the argument verification before the assignmentit looks like a typo and does not affect anyone in practice but it is still better to have the implementation uniformfixes #5298f1d40c3dd5243c5a29fe683fb42f7ff61b2a3068-------<p> do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available6d9e9e33c6a784f86b51c3fac785532351374271-------<p> rollback*** original change description ***do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available***916807371db167b99bb8b591a22c9ec07fe2bac2-------<p> backport `combine` to java7 for `immutablelist` & `immutableset`this is so that java8 code relying on the java7 branch of guava can still efficiently collect guava collectionsa275458c2601c33bfb5ba6ec54e2458feeeff06a-------<p> fix `loadingcache` minor documentation typofixes #550359a9556d82fc233acf8c0a3ad00de14e02384f75-------<p> added submitasync to closingfuturerelnotes"added `submitasync(asyncclosingcallable)` to `closingfuture`"187db6d240a896be6efb6fc98f014b9d4690fe30-------<p> add `x-request-id` to `httpheaders`fixes #5306relnotesadd `x-request-id` to `httpheaders`0f5a31bbc213f61404189d777b2039842210cab5-------<p> fix android test failure in classpathtestreproduced the error and verified that this change fixes itc1f6ac185f0e72998ed30ae72a0983804c5a4f5a all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5307) for more info**<!-- need_author_consent --> || setting `cla: yes` since all commits with different authors come directly from prs by those authors ||
5415,1,0,1,1,0,1,0,1,0,0,0,remove redundant `else` blocks remove redundant `else` blocksfixes #3974relnotesn/a  
5415,1,0,0,0,1,0,1,0,0,0,0,remove redundant `else` blocks remove redundant `else` blocksfixes #3974relnotesn/a  
