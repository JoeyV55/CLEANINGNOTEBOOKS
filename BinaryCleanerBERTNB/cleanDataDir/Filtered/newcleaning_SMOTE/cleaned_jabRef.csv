prNumber,Util,NLP,APM,Network,DB,Interpreter,Logging,DataStructure,i18n,DevOps,Logic,Microservices,Test,Search,IO,UI,Parser,Security,App,corpus
3632,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,export translator field to msoffice xml upcoming issue from while testing this i noticed that the import was broken due to the recent export filetype extension changes that toodirectly use bookauthors and translator for import from xmladd test change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate as the feedback was okay i merge this in
3642,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,extend ris import with multiple fields meeting time is programming time this addresses the import related things described in i basically went through the lists linked by dsifford in the first issue tried to adapt our import if possible and added custom fields when not our importer tests are still running change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez thanks a lot i didnt have biblatex in mind when setting the fields your comments are all integrated is the risimportertestfiles class not executed during the travis build because those tests were actually partly broken anyway i adapted them to the new import structure which changes a few fields and i added the ris code from as a new test case regarding the test seems to be a general problem with the parameterized tests and the new junit äi noticed the same with the office xml tests ok then this is something that really needs fixing ill open an issue for it otherwise this pr is ready to merge from my point of view in the spirit of getting things done and because all reviewer comments have been addressed ill merge this now
3642,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,extend ris import with multiple fields meeting time is programming time this addresses the import related things described in i basically went through the lists linked by dsifford in the first issue tried to adapt our import if possible and added custom fields when not our importer tests are still running change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez thanks a lot i didnt have biblatex in mind when setting the fields your comments are all integrated is the risimportertestfiles class not executed during the travis build because those tests were actually partly broken anyway i adapted them to the new import structure which changes a few fields and i added the ris code from as a new test case regarding the test seems to be a general problem with the parameterized tests and the new junit äi noticed the same with the office xml tests ok then this is something that really needs fixing ill open an issue for it otherwise this pr is ready to merge from my point of view in the spirit of getting things done and because all reviewer comments have been addressed ill merge this now
3661,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,export no empty lines in ris format this fixes the remaining part of i had a closer look at the export layout logic and wow this is arcane the code is more than years old and almost as bad as the bibtex parser used to bethis pr is based on two decisions i do not want to change the old layouting code if i do i am almost guaranteed to break it in many ways i do not know if the removal of empty lines in exported text is really desirable in all cases maybe users wrote their custom formatters to explicitly include empty lines i cannot tellwe now have one case ris export where empty lines are not desired so i implemented a solution that only changes the behavior of the ris export but leaves all others untouched nonetheless it is very easy single constructor parameter to let other formats use empty line elimination as well the empty line elimination is done using a hardly understandable but fully functional regex change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3665,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,migrate importer tests to junit in the course of we realized that our current junit parameterized tests are not executed on the junit travis build this is tracked here i think this is a huge problem because we are missing out on a lot of validation here this pr is a migration of the paramterized ris tests from junit to junit id like to put this forward to discussion so that we can agree on how our parameterized junit tests are to look like when we have agreed we can migrate all tests so please look at the code and write if you are happy with this note that parameters cannot be resolved for lifecycle methods beforeeach in junit hence the structure in the pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez thanks a lot for the feedback regarding test arguments i dont really see the point in splitting the single argument into two we have used the convention that the bib and importerformat files have the same name and why not keep leveraging that also i find it better to do the path conversion in one place only but if we want to pass a stream of paths we always have to do that beforehand regarding unification of importer tests i have refactored around a little and arrived at a solution that should work for all importers i quite like how that condenses the risimportertestfiles classfun fact i may have used junit paramterization but so far the assertions were still junit ill change that in the following the importer tests where running for each file but that seems to have been ignored in the migration process by the junit compi looked at this too but didnt find a way to get it to work again yes indeed ill gradually go through all parameterized importer tests and try to get them working in junit syntax again as part of this pr turns out quite a lot of tests for different importers bibtexml medline tested so far actually fail and this is down to the implementations of the importers seems like these tests have never been executed beforei am not sure what to do about this here the point of this pr was a refactoring of the testing code not a repair of broken importers i would merge this if all tests are at least executed or better you merge this in a new branch where we will fix the importer then i converted and some fetcher tests in another pr i found that the gvk test would also be a goo candidate for using the same schema as here i have now migrated the complete importer tests to junit syntaxsadly they are in a dire state a lot of them are actually failing and seemed to have never been executed anyway and even except from the refactorings that i have already done there as a lot of things that can still be improvedi think its best if we take the current failing state and try to repair each importer and its tests here in the pr this might be some work but the importer tests cannot really continue as broken as they are now help on this is very much appreciated and should be possible without conflicts you can ignore the failing fetcher test this is already fixed but i wonder why there is now an npe with the method source i should have more meetings so that i get more programming done i think i have repair all importers and their tests now ill see what travis says and ill also do one more round of refactoring on the code not now when i am done this can hopefully be lgtm if you merge master in your branch you will get the fetcher test fixed as well ok this can be merged from my point of viewalthough this is already a huge refactoring of the existing tests theres certainly more that can be improved i have a few things in mind but i would rather keep them out of this already big pr ill tackle them later when this is merged that looks weird indeed looking at the first one the importdatabase method is recorded as not covered but when i execute the tests in intellij there are twenty test files for that method alone the key seems to be that the missing methods are the ones that use junit parameterized tests it seems that codecov does not record the coverage of these tests but they are the core tests of the whole packagebut maybe the problem is still travis how do i see from our travis output that the tests are really executed i can push a failing test deliberately but there surely is a better way since the travis log contains statement like main warn orgjabreflogicmsbibmsbibdatabase could not parse documenti suppose the tests are correctly invoked in fact the travis log exploded even more probably there is a problem with the gradle task jacocojunit testreport but there is no need to fix this in this pr i would merge this in and i think tthere might be a solution for the reports
3670,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,chained modifiers work again the problem was that resultinglabel formatterget format label always used the original input and not the result of the previous modifier change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3690,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,file link deletion dialog improvements this pull request fixes the following issues when a file link in a bibliography entry is deleted by the user a dialog is displayed previously the default first dialog option deleted the linked file from disk the default behaviour has been changed to just removing the file link from the entry this is a fix to issue when clicking the cancel button in the file link deletion dialog the file was being deleted from the list this behaviour has been by changing the return value of the delete method when the cancel button is chosen example screenshot _ x _scrot checklist change in changelogmd described manually tested changed features in running jabref helpjabreforg am unsure whether the remaining checklist items are applicable to this pull requesti would be willing to provide tests for the delete method however the dialogservice member cannot be stubbed in mocked as it is as it is marked final and therefore i cant control the returned chosen option from inside the unit testi would appreciate any pointers and suggestions thanks for your contribution i have tested the changes locally and it works as expecteda little step for you a great step for humanity jabref users just add the suggestions by tobiasdiez and we can merge it in ps if you include the word xxxx then the corresponding issue will be closed automatically when the pr is merged thank you for your pointers i have locally added buttondatayes and now i will attempt to prepare a test suite for the remove method at least and push everything out when its ready okay i pushed out the changes adding the button data restored the original button order at least on linux but the remove button is now clearly the default and as far as i can tell from javafx docs this is the desired behaviourthe test code im not too proud of theres some weird hacking going on there to get the tests running and i had to balance between not making them brittle and not worsening the implementations readability just for tests sake if you have ideas for improvements id be happy to go back and fix the ugliness well if im this close might as well try and make this pr as good as possibleive added the suggested changes however i did leave some of the parentheses as they were near those long mock setup calls to be precise because i couldnt make them look decent otherwise nice thanks again for your contributions we are looking forward to see more prs from you 😄
3694,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,differentiate inbooks with different chapters this is my simple solution for issue ive added statement that checks authors titles and chapters of two inbooks what do you thinki have several questions im not sure about using comparesinglefield function for comparing chapters because sometimes they are very similar but different for instance chapter and chapter any idea my is to remove chapter word from strings and then make the comparison should i also add test for incollections what about pages as i noticed they can be a replacement for chapters should i consider them in the code can i add another commits with some cleanup and refactor for the files ive touched i mean adding some finals to make code less error prone etc thanks for your contributionregarding your questions i can only answer some of them i currently are on my mobile so i cant dig into that much but sounds like an idea you could look what the biblatex manual says about the possibile contents of the field thats our reference when in doubt about a field maybe also a good idea could make sense if the same sure code improvement is always good if its within the scope of the implementation regarding of finals you can omit them in parametersregarding test you could migrate them to junit if not already done for examples you can look at the fetcher tests just a bit different syntax ok so i added some more tests and pages field checks nevertheless i dont know how to upgrade tests to junit i mean that there is something more to to than import beforeeach instead of before and i have no idea what it is any tips tobiasdiez in that case comparesinglefield would return for example empty_in_one constant where my if statement require not_equal so there is no problem anyway ive added test to cover that casealso ive made some cleanup and refactor i know a lot of finals but imo it prevents silly mistakes like reassigning values to function parameters especially error prone in constructors and ive merge master into my branchso how about now edit codacy pr quality review yells that there is something wrong but when i click details there is website with request error missing parameter prid message thank you for your contribution 😄
3708,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,try to change color of magnifier icon i am trying to change the color of the magnifier icon as requested here however the icon refuses a color change it even opts out of the color scheme of jabref since it is black instead of purple despite the fact that the icon is configured as purple in the code tobiasdiez how can i change the color of this icon any change will do really for reasons unknown to me the icon straight out refuses the change change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues screenshot is a space between the other icons until the cool solution from is implemented i am in favor of using this approach reason this makes the jabref feature explicit papers search well if koppor really wants this im fine with it although i bet that more users get confused by a cyan highlighted icon than they are getting enlighted by it
3709,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,group separator escaping
3710,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,dublin core only supporting dublin core jabref namespace for xmp xmlns bibtex removed some unused methods in gui importer entryfrompdfcreatorjava discussed with koppor and stefan kolb deleted tests for xmputil new ones are in progress change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues this pull request is ready for the final review and for merging into master for my general understanding and my newbie state public static void writexmp path path collection bibtexentries bibdatabase database boolean writepdfinfo xmppreferences xmppreferences throws ioexception transformerexception { collection resolvedentries if database null { resolvedentries bibtexentries } else { resolvedentries databaseresolveforstrings bibtexentries false } try pddocument document pddocumentload pathtofile { if documentisencrypted { throw new encryptedpdfsnotsupportedexception } if writepdfinfo && resolvedentriessize { xmputilwriterwritedocumentinformation document resolvedentries iterator next null xmppreferences xmputilwriterwritedublincore document resolvedentries null xmppreferences } pddocumentcatalog catalog documentgetdocumentcatalog pdmetadata metaraw cataloggetmetadata for me it makes no sense to write more than one bibentry to the metadata of a pdf file currently the implementation in xmputilwriter is also limited to a single element but implemented as a list see line and can i drop the list siedlerchr koppor tobiasdiez i have no real idea concerning your question about the list i would say you could safely remove it but im not sure what happens if multiple entries have the same file linked and write their metadata into it eg the pdf is a book and i have a bunch of bookchapters as separate entries xmputilwriter line before new metadata is written to the pdf all dublincoreschemas are removed so i think that there is currently no option to write more than one metaschemain your case i would assume that the last written data is visible others lost well does the dublin core schema specify multiple entries specifications are available at the abstract model is there case i interpret that correctly one record contains one description which may contain multiple record setsthis is the edge case where one wants to write xmp to a proceedingsexample one chapter full proceedings i considered all comments to the source code and refactored my code the last commit alters the behavior of the xmp import the previous implementation only imports the first entry and drops the others the current implementation imports all metadata entries my thoughts are as follows it is easier to import additional entries and delete not needed ones compared to importing single entries by hand if the needed entry is not the first one
3718,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,add cleanup operation for replacing ligatures i have used the mapping listed here note that german users might be surprised by how this replaces the letter ß change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ok ive taken out the conversion of ß and documented this in the code if there are no other characters that we want to exclude then this pr should be good to go
3734,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,add parser for german months changed the month parse that it can also parse german months now this should solve issue have i missed something for pe name johannes preßmar change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues please merge jabrefs branch master should be available at upstream master to resolve conflicts in changelogmd the tests are still failing from looking at the code i think that mär is not parsed correctly could you please investigate thisonce all tests are passing on travis i think we can merge this ill merge into wip finish the pr and merge it into master i the issues at the java files had the wrong encoding utf was not used the implementation for mär and märz was missing
3751,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add the menubar to the titlebar in macos titlebar https user imagesentcom bf ba e e d d d dc png note that the screenshot shows java on the top left because i run from intellij if you install jabref from a dmg it should show jabref nice
3766,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,update architecture tests to catch static imports fixes a part of updates the architecture tests to junit and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3767,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,extend toolbar with more icons and add tool tips i know this is a controversial topic in the maintable beta right now but to get the discussion going a little more and taking inspiration from i took the liberty to extend the toolbar with more buttons herethis is really not meant as a final say it just moves the code in place for some buttons that seem of some value for me they can be removed again resorted and the layout is probably also not perfectheres a screenshot toolbar change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues for the mysql fans i really need the two buttons for the shared database if a connection to a mysql is established in the current database 😇 not for postgresql and oracle database koppor i find two actions in the code standardactionsconnect_to_shared_db and standardactionspull_changes_from_shared_db so if a connection to mysql database is established you want both of these buttons to show and otherwise just the pull push button oh only the second that is needed for mysql only the former one is not needed at all currently no clue what it is useful for decision in devcall separate social network buttons from the rest add tracking for user actions and evaluate in the future which buttons should be displayed lenhard an fyi from me and please dont feel pressured you might have seen that i want to make a consistent layout for all panels toolbars etc issue here im going to wait with this until your pr here is pushed then i will merge the maintable beta again into my local branch and incorporate all changes i really would like to have more icons on the toolbar to get a better feeling for the look i grabbed the template from the material design icons and started to convert some of the icons we dont have in this style as an example emacs texstudio and vim emacs texstudio vim it be of interest if i pursue this further if yes does someone know if we can include them as a vector font so that we have those icons scalable to whatever resolution we need im worrying about retina displays or other k devices where x let alone x icons look not good halirutan i would suggest you contribute that upstream read more at are also the academic icons however there is none for tools but some for dois pubmed koppor i might be wrong but the readme there reads in its final paragraph please note that at this time the only brand icons we accept requests for are popular social media sites apps and widely used products software thanks for understandingin fact i have searched for vim and emacs on the site first and was stunned that such widely used apps cannot be found it doesnt matter i have successfully searched for a way to create our own ttf font for the icons in this way we can stay consistent with our design and we can adjust the icons as we like halirutan i would agree that emacs and vim are widely used in case there is no pr yet why not creating a pr i have to admit that other software is not that popularmaybe we should start another font project maybe we fit into the academic icons at least i would try 😇 thus also the latex users would benefit from your work why not forking academic icons and proposing our latex related to them edit regading vim and emacs you might find them here they also provide a font patcher i think there is no real need to use a font based icon svg images can be included more easily in javafx than font based icons like this only exception is if the font can be accessedfontawesomefx tobiasdiez i havent looked at this to be honest what about scaling for some icons we set the size by giving the font size like in the entryeditorcss tool bar glyph icon { glyph size px fx font size em} can we achieve consistent sizes when we use partly svg icons i mean i see that we used px here but will this be the same when not used as a font good point the file based icons are shown using does provide some scale mechanisms but these are probably not accessible via css in general i agree that a font based solution is desirable my comment should just serve as a warning that it might be not so easy to include an arbitrary font as icon sources and it may be easier to include the svg directly hi all thanks for the comments i am currently in the process of relocating myself and my family to another country as you can imagine i dont have any free time on my hands so please dont expect action here soon if this blocks progress somewhere else i have no problem if someone else takes over and rounds this off of course no problem lenhard since the only thing missing in this pr is the additional push to shared icon i merge now im looking forward to see more prs incoming as soon as your pc is relocated
3800,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,change open last edited dialgo to javafx halirutan have a look if this works for you because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3820,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,pretend that we have every translation for every key change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i think you should base that on master so that we can see it working and then we can cherry pick the commit into maintable beta cherry picked in master
3821,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix copy linked files dialog showing npe when no linked files because github does not support autolinking there ignore the branch name i thought it was a different error the part in the copytask should also be copied to the maintable beta branch the rest is already there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues travis fails for some timeout reason not related
3824,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,provides download option in context menu and because github does not support autolinking there inspired by the discussion in i added a download file option in the context menu of a linked file if it is an online link moreover the bug is this pr was brought to you with the support of coffee from the jabref cup change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues if you fix checkstyle we can merge i generated a structure diff below from pulling df on jabref downloadlinks into fb on jabref master structure diff
3824,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,provides download option in context menu and because github does not support autolinking there inspired by the discussion in i added a download file option in the context menu of a linked file if it is an online link moreover the bug is this pr was brought to you with the support of coffee from the jabref cup change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues if you fix checkstyle we can merge i generated a structure diff below from pulling df on jabref downloadlinks into fb on jabref master structure diff
3826,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,show dialog when copy files did not found file follow up from because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3865,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,do no longer log invalidfieldvalueexceptions during autosave invalidfieldvalueexceptions are no longer printed into the log when they occur during autosave fields in the entry editor still have the warning sign next to themthe normal save operation ctrl s still triggers a warning dialog saying that the file could not be saved change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3871,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,switch colors of search icon for the two search modes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues grammar based search is the advanced search so the magnifier should be cyan when following search string is active authorkolb and authorkopptaking examples from the documentation of these are advanced but they are not recognized as such titlekeywords image processing author miller or titlekeywords image processing and not author brownfollowing is normal mode progress “marine aquaculture”progress “marine aquaculture”this is now with cyan this is wrongfollowing is normal mode progresscorrectly recognized displayed as normal mode with this patch if so the whole detection is wrong only the beginning of the detection is somehow wrong for complex terms it is right but for single words it is wrong see the examples above maybe we changed something when going from jabref to or maybe the detection never was entirely correct if i have a lot of time on my hands i might have a look at the detection algorithm otherwise we can close this pr and or remove the coloring of the the search icon again after all what is the point of changing its color if the circumstances are incorrect lenhard if you indeed have time to look at the search algorithm please replace it completely it worked in and no one noticed that it broke at so the point isto keep the idea and to fix it the idea in other words make users awareof the feature and that the search might not work if the grammar basedsearch was intended but not matched typo in query am schrieb jörg lenhard or maybe the detection never was entirely correct if i have a lot of timeon my hands i might have a look at the detection algorithm otherwise wecan close this pr and or remove the coloring of the the search iconagain after all what is the point of changing its color if thecircumstances are incorrect—you are receiving this because you commentedreply to this email directly view it on github or mutethe thread actually there should be tests for it then as this is not a ui feature but the detection is logic based did we update the antlr stuff after v because the query progress actually is a valid grammar based query that compiles with our antlr code thats the reason for the wrong coloring i have now added code that checks if a query consists only of word whitespace characters and or digits and uses a normal contains based query for that thus grammar based searches are only executed when special symbols are used although our grammar is more powerfull than that the terms mentioned by koppor above are now colored as expected koppor i hope this limitation is what is wanted please do some testing to see if this matches your expectations in general good minor issues not sure whether they should be separately j ok not ok grafik issue when i clear the field using ctrl a and then delete after an advanced search the marker is still advanced grafik lgtm thanks for the comments koppor i fixed all the glitches you described and this pr should now be ready
3887,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,improvements around external file types because github does not support autolinking there i tried to implement but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after is mergedthus only some relative minor code improvements fixes refactor external file type classes and extract a common externalfiletype interface extract all built in file types to separate enum implementing externalfiletype fix display of external file type editor dialog which is not shown in the current maintable beta version change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues since this pr is now ready for review over a month ill merge it despite not having any feedback so far
3909,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,add required mock to linkedfileviewmodeltest while working on test were failing in other settings this is a quick fix to get the tests running i think for this build its okay in maintable beta we already have it refactored siedlerchr i hope there wont be conflicts for the maintable beta branch then 😇
3927,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,prevent accidentaly deleting a second file when pressing del key the key listener was triggered twice on pressed released resulting in the selection of the second file because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues as this is not even a one liner and i tested the changes i merged them directly in
3931,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,correct fetcher messages siedlerchr we do
3944,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,0,0,0,1,replace all ieee urls with ieee tests are broken but they were before needs to be you should add a changelog entry i need to work on the tests first before we can merge this
3954,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add button icon for union intersection in the groups side panel fix display of state for union intersection in preferencesas we currently unfortunately dont have icons for set intersection union set center and set all in the material design font i used the www and the twitter icon to demonstrate the purpose halirutan will then try to integrate the correoct icons in jabref because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez is this now okay then you could merge it with co authors tobiasdiez the issues you m entionend i fixed the remaining issues and i am going to merge this one now
3965,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,url column this url column now shows url or doi correctly and opens on click change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues hi florian beetz since you have been involved in the maintable migrations do you want to join tomorrows devcall at am drop me a note by mail linus lynyusde cheers linus okay merging this in order to move on i have created another issue to track the tooltips florian beetz wants to continue with that as the next pr
3967,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fix ebookde refs unfortunately not a very clean fix but it is fine againusing the normal inputstream does not return anything probably as it is detected as automated crawlerthe interface with inputstream is just not really fitting here the isbn fetcher tries ebookde first and if no result is found it switches to the chimbori amazon fetcher is this still valid yes
3968,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,fix ieee fetcher by enabling cookie support apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3970,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,fixieee followup from my previous prnow document links in the format are supported tooand i also tested the paper linked in the issue from university network that works fine too because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3979,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,add text file export for find unlinked files this is to add the feature which allows exporting of the list of files found in find unlinked files to a text filecloses issue im not sure if it is exactly what you are looking for but i thought i would give it a shot hopefully you will be kind though i welcome constructive feedback of course im not sure it really even needs the progress bar for the exporting because it is so fast but i left it in for now since the importing has one one change i didnt make is changing the list of files to path type from file type i left a note about that above let me know what you think jssander please pull before you continue to work on it i merged master to fix conflicts due to our release today how do i pull correctly in idea when i go to pull i think im pulling from my forked master i made some changes but there is a conflict now in the changelog im not sure how to resolve it jssander just keep both lines i did it for you using the github web ui just pull and you are fine at your side too great thank you so much
3983,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix ieee preview does not display month on maintable beta branchon month change from combobox on optionalfieldstab month was not appear on ieee stylethe issue get because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues please have a look at the travis output regarding the checkstyle there is still some error thank you its nice to work with all of you i learn a lot
3988,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,add rfc entry generator id type option because github does not support autolinking there ui image of entry type in dropdown an additional id based entry generator id type has been added in order to fetch more complete bibtex data compared to doi fetches of rfc typefollowing the diva id type classes as template an rfc fetcher class and fetcher test has been addedi added rfc to the id based entry generator list within webfetchers so it is an option in the dialogs dropdowncurrently the rfc fetcher class accepts search requests with or without the rfc prefix is this an okay featureadditionally help in finding the best rfc bibtex api i am using the api referenced in this is my first ever contribution to open source so thanks for your patience 😄 change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ive merged your help file change and restarted the travis build so the help pages related error should be gone nowthanks again for your contribution 🥇 all set thanks for all of your help ive learned a lot about the process and hopefully wont be as needy next time thank you for your contribution hope to see more from you in the future
3996,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,duplicate unmodifiable list for sorting runcommand error nulljavalangunsupportedoperationexception at javautilcollections$unmodifiablelistsort unknown source at orgjabrefguiexporterexporttoclipboardactionrun exporttoclipboardactionjava at sunreflectnativemethodaccessorimplinvoke native method at sunreflectnativemethodaccessorimplinvoke unknown source at sunreflectdelegatingmethodaccessorimplinvoke unknown source at javalangreflectmethodinvoke unknown source at spininvocationevaluate invocationjava at spinoffspinoffevaluator$ run spinoffevaluatorjava at javalangthreadrun unknown source
4002,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&f fixes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i merge this now and i will create a pr to remove that l&f stuff completely in maintable beta
4002,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&f fixes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i merge this now and i will create a pr to remove that l&f stuff completely in maintable beta
4011,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,reimplement tooltips for file and identifier columns this reimplements tooltips for file url doi and eprint column in the maintable beta change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks again for your contribution
4015,1,0,0,1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,1,fix custom exporter not displayed in file chooser several issues with the custom exporter filename check for layout files was wrong commandline name for custom exports was the filename and not the name opposed to what our help says custom exports could not be added due to our hardcoded enum expanded the enum with mixins describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the core problem is not the gui but that each exporter has a file type and this file type was also added for the custom exporter these file type used the parse method to find a file type based on the extension the file type class is used for the file filter chooser and an exporter is matched on the file type description but as this is an enum it did not work for custom export as always one of the enum values was used eg the default html export the core changes are in the enum which now implemented an interface in fact its just a rename of the old enum and a simple interface which has the name of the old oneto avoid code duplicates in the anonymous class and the enum i moved them to private static methods ok thanks for the explanation i thought a bit more about this problem and came to the conclusion that the cleanest solution is probably to split the description from the file type if the later is only a list of extensions xml bib txt and the importer exporter itself contains the description then you can easily create a extensionfilter for an importer exporter and dont need to pay special attention to custom exporters what do you think this would only work if the custom export follows the standard file types if i want my exporter to have filetype xyz then this would not be possiblewhat i did is to provide a set of standard file types and their descriptions which can be extended to support custom one the standard file types are also used for the importeranother thing which just came to my mind was that we with this approach could also resuse the functionality for the externalfiletype stuff than we could get rid of that completely ok good point do you want to improve the code around externalfiletype as part of this pr or is this a follow upi would still separate the file extension from the description text i would rather do this in a follow up on the maintable directly tobiasdiez i now removed the exporter stuff from the filetypes so currently its only used for the importers the key problem with the importers is that we have an all available import formats plus all the extensions in this case i see no way to filter the importer without having a description in the extension format a shot in the blue instead of private static filechooserextensionfilter convertimporter importer importer { return toextensionfilter importergetdisplayname collectionssingletonlist importergetfiletype } and at the same time change public static optional getimporter filechooserextensionfilter extensionfilter collection importers { return importersstream filter importer importergetdisplayname equals extensionfiltergetdescription findfirst } if getimporter returns an empty optional you know that there is no specific importer ie the user selected any file or any import format tobiasdiez i noticed that it was already possible i just needed to create the map with description name and filetype like i did for export it is now analogous to export i removed the not needed filetypeshowever there are still some import formats left which have more than one extension however i think its not worth changing them too would make things a lot more complicated we already have a good base for future expansions and for using this in combination with externalfiletypes if i understand correctly this should go into master before merging yes definitely ive refactored a bit more it was easier to hijack this pr than describe the refactorings in detail sorry if you are happy with these changes feel free to merge otherwise just revert my commits looks good so far if someone can merge this with co authoring i got this wrong last time
4016,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,do not trim or remove whitespace from the title based id fetcher because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i now moved trimming down to the concrete fetcher classes and added tests
4019,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,fix acm fetcher import of entries removed & sign from id patterntested with a couple of searches works fine because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i merge this now as this is a one liner
4040,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,convert shareddatabaseconnect dialog to javafx connection works so far no more freezes regarding addtabs in basepanelsomehow the dialog looks odd tobiasdiez any idea what is missing the checkboxes are not visible correct i just see that it looks really odd in he maintable beta branch too eg int he event logedit the conection and the synchronization seems to be working fixes postgressql database connection now supports ssltodo for documentaition create and configure server certs to keystore format i only tested it with postgressql but i see that mysql should also work describe the changes you have made here because github does not support autolinking there todo check conflict merge dialog change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the display problem probably results from us playing around with different styles and changing defaults since there is no checkbox in the main view it was not noticed that some of the input controls look strange ill have a look at it later the database connection works so far tested with postgressql i reworked the dialog and an error in the listener which led to freezes the mergeentrydialog is not yet converted this will be done in a future pr the only thing open is the gui styling the dialog looks a bit odd but thats due to some missing css stuff i think yes i tried both with and without the tags same behavior i dontunderstand thistobias diez schrieb am fr mai tobiasdiez commented on this pull request in src main java org jabref gui shared shareddatabaselogindialogviewjava inject private dialogservice dialogservice private final shareddatabasepreferences prefs new shareddatabasepreferences private final buttontype connect new buttontype connect buttondatayes private final button btnconnect private final jabrefframe frame private dbmsconnectionproperties connectionproperties private shareddatabaselogindialogviewmodel viewmodel public shareddatabaselogindialogview jabrefframe frame { thisframe frame thissettitle localizationlang connect to shared database thisgetdialogpane getbuttontypes addall connect buttontypecancel did you also tried it without the surrounding buttontypes tag — you are receiving this because you authored the thread reply to this email directly view it on github the thread now moved all stuff and implemented the validationto the viewmodel and will tackle the shareduimanager stuff next
4047,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,a first solution for the cli problem exportfactory is not initialized at this execution pointthe printusage method is used twice the jabrefcli prints the usage if an error occurs during argument parsing and the argumentprocessor prints the usage when help option is chosen i made two solutions for this problem commit some sort of a hack to only get the names of the exporters without altering the processing in the main method commit changed the order of execution in the main method the argument processor needs the export factory i dont know if the processing of the preferences will influence the cli functionality change in changelogmd described manually tested changed features in running jabref tldr i guess we should use the second method lets see what the others thinki guess the second solution is fine if not we will find outi think we could also extract some methods here for the initialization of the migrations and then the preferences from the start method and afterwards instantiate the argument processor so the start method gets more clear
4056,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,extract old bibtex key generation action this is one for the javafx guyswe need a new javafx action here or duplicate parts of the codei already marked the respective code locations with todos we could use the fxdialogservice but there is an additional checkbox for do not ask this question again in the old dialog also i dont know how to properly extract such worker code for javafx otherwise i would have to duplicate the code on all occurences i would suggest you directly implement this on the maintable beta branch otherwise we will get the hell of merge conflicts and we would need to rework the abstractworker againhave a look at the functionality of backgroundtaskwrap is there any possibility to extract and reuse actions in javafx except from the action in controlsfx sure we do this all the time in the maintable beta branch we use the openxyzaction extends simplecommand class for the things in orgguijabrefactions this is also functionality from a beta framework we could use the fxdialogservice but there is an additional checkbox for do not ask this question again in the old dialogthe dialogservice has an option for this where you can add a consumer which then should store the property ive now extracted the code of the cite key generation of a single entry and extended it by a warning dialog that is shown if a previous key is about to be overwritten with these changes the buttons in the entry editor show now a button text instead of a single icon fixing this requires to be merged thus in the current state this pr is not mergable but can nonetheless be reviewed thanks for your efforts with these changes the buttons in the entry editor show now a button text instead of a single iconwhat does this mean why text instead of the icon the text generate key appears this is due to a limitation of the controlsfx library that we use hopefully my pr there gets merged in the next few days can we merge this now is it released by controlsfx yes my pr is finally integrated into the snapshot build of controlsfx and thus ill merge it now
4057,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,to make push to application work again on osx for unknown reasons it seems no longer possible to give the commandas one single string i created a test class and not even simple commandscan be executed im not sure when this changed but giving the commandas a list of arguments works as expected because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4058,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,cpu leak see fix java to later version pretty restrictive for the user unfortunately jabref developers i worked a little bit with jabref and the new jdk and i feel like also the problems with duplicated entries in the search box and freezes are less frequent nowmaybe the constant load provokes these issues even moretherefore i vote to release a new jr version where we force the users to upgrade to the newest java jre jdkalso refs let me finish today and we can go for a release as this really improves the situation at least for me i think we should definitly include this in our release stefan kolb which tool did you use for the cpu monitoringi tried java version _ and it doesnt seem to cause high cpu loadfocused entry editor entry editor grafik i used the visualvm it is actually not caused by the entry editor but by switching between programslet me check v _
4074,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,mac graphics linusdietz halirutan can you also take a look as you own a mac please 😄 should also be backported to v x stefan kolb i certainly can test something but what exactly should i look out for with jabref open should my macbook use the integrated graphics card or the fast one or should i only test if jabref works it should use the integrated card fyi i just upgraded from jabref to i had to correct the plist again to have jabref use the integrated graphics card see so i guess that we are just waiting for your corrections to be it seems to work my activity monitor says that jabref does not require high performance gpu is there anything else i should look out for i guess thats it linusdietz i guess that is the correct indicator i originally used gfxcardstatus to verify this but i now also compared both cases old and new with activity monitor and it is consistent on jun at patrick scheibe wrote it seems to work my activity monitor says that jabref does not require high performance gpu is there anything else i should look out for — you are receiving this because you commented reply to this email directly view it on github or mute the thread
4100,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,migrate review field in entry preview to comment migrate review field in entry preview to commentreplace review with comment in every layout file because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues added a test case i would vote for merging this i refactored the tests and the migrations so that they no longer call globalsprefs _ more mocking is not really possible
4106,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,opens the directory of the currently edited file when opening a new file opens the directory of the currently edited file when opening a new file change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues done
4107,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,0,fix a few things in entry editor because github does not support autolinking there fixes two things reactivate next previous entry shortcuts in entry editor preserve focus of text fields in entry editor when the user switches between entriesplease merge and dont squash change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4116,1,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,dont report journal name as abbreviated when full name abbreviated name because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for the feedback your solution was my initial idea but then went on to modify the journalrepository because other potential callers of the repository also profit from the change i wouldnt consider bioinformatics abbreviated when its also the full journal name which is of course a question of definition in the end its almost a question of taste and im also fine changing it to your solution if you think the additional work is worth it that was exactly my thought too that bioinformatics is no abbreviation of bioinformatics but then we should rather cleanup the list than the code but then i thought ok they want to have this journal in there
4123,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix convert to bibtex moves contents of the file field because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues yep that was my thought too
4124,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,saves and reloads window state on close and on open saves and reloads window state on close and on openopens by default maximized change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues code loooks good 👍 ps if you just enter followed by the issue number here on github the issue will be auto linked and if you add sth like closes or fixes issue number it will be auto closed when the pr is
4137,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,dash correctly terminates commands in layout files because github does not support autolinking there now commands terminated by a hyphen like \edition work correctlyway back in morten added the extra check for hyphens commit bc a dd eb aa e d bb however im not aware of any field that has a dash in it so im not sure what was the reason for the change i couldnt find an old bug report also refactored a bit the layout tests change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4138,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,single line text fields solution for ive used text formatter to force single line behavior hope its enough particular fields that should contain only one line are stored in immutable set tests have failed but they also had failed before on master mrdlibimportertest testimportdatabaseishtmlsetcorrectly mrdlibimportertest testimportdatabaseistitlesetcorrectly mrdlibimportertest testimportdatabaseisyearsetcorrectly xmputilreadertest testreadarticledublincorereadrawxmp xmputilreadertest testreadarticledublincorereadxmp xmputilwritertest testwritemultiplebibentries xmputilwritertest testwritexmp cant we just change the underlying gui component from textarea to textfieldalso please use plain java for making fields immutable or final not comgooglecommoncollectimmutableset if possible stefan kolb how about nowive added editortextfield class similar to editortextarea and extracted addtocontextmenu to interface contextmenuaddable also i had to change parameter type textarea to textinputcontrol in few places in order to use classes in generic way that looks good so far for me havent tested it yet but codewise it looks good although the final in front of method parameter is suerpfllous i use finals to avoid stupid bugs like reassigning variable with them my ide automatically underlines such stuff another thing is that ive decided to make code more readable so ive put new lines between simpleeditor constructor parameters because there was one long line and now codacy yells about that should i extract those parameters to another class like simpleeditorparameters or sth ping 😄
4181,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,no longer freeze when clicking browse in aux import dialog because github does not support autolinking there yet another interaction between swing and javafx threads change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4184,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,ctrl f selects search field again because github does not support autolinking there shortcut was simply not registered also remove a bit of legacy code which is no longer needed change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4212,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,make attached files relative to the file directory because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4245,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,fix style issues in about dialog because github does not support autolinking there and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states merge instead of squashing the commits change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues lgtm i am merging this now
4246,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,solved file annotation this pull request solved and improved the new line remover removed hyphens and newlines of highlighted texti removed all new lines which dont have preceded or becaues i think or is often used to start a new paragraphtest text test result change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez thanks for your review i will fix them soon hi i reverted the change for removehyphenatednewlinesformatter and removenewlinesformatter i have also the tooltip for marking summary before img src src im going to add some unit tests all done 😃 thanks for the quick follow up looking forward to your next pr
4252,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix attach file does not relativize file path attached files were only made relative before if you hit the browse button because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4255,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix for issue koppor auto cleanup url because github does not support autolinking there this issue is auto cleanup url links on paste action and add cleanup url menu item to the url fieldmost codes are modified from a previous contributor in the menu item list changed as follows with defalut editor menu change case convert etc i am not sure whether its necessary to add defalut editor menu if not the menu item list would be have run gradlew check but failed but even if i switch to the master branch which is the same as jabref master the build still failed with the same error message like it seems that i did not modify related classes i dont know what went wrong it confuses me a loti am looking forward to your feedback change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your contribution the gradlew check often fails locally due to some platform specific encoding issues in the terminal you dont reed to run it as it just takes time to run all the test we use travis ci continous integration for testing as long as the travis ci test does not show any errors its good in case travis fails just click on it and you can see where it exactly failed
4259,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,remove spin comments comments mentioning spin were removed or replaced with a mention that backgroundtask is now used change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4260,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix for issue migrate all tests to junit because github does not support autolinking there hi im trying to fix the issue and i have some problems here can someone help me some tests dont seem to have a parameter source such as bibtexmlexportertestjava msbibexportformattestfilesjava modsexportformattestfilesjava and so on since i cant get feedback from both travis ci and my ide i couldnt do anything at the moment something about the external libraries for mainarchitecturetestswitharchunitjava testcompile comtngtecharchunit archunit junit isnt enough for migrate this test to junit just a few days ago archunit just supported tests with only junit package but this feature needs a testcompile comtngtecharchunit archunit junit and as far as i know this version has not been released yetfor citekeybasedfilefindertestjava i havent found an extension in junit for the mockitojunitrunnerclass in junit and it seems that their mock official version hasnt been release yet too the database test as i can see those tests have already been migrated partly to junit but the rest of it is the problemive tried to migrate dbmsprocessortestjava but the code is no longer concise after thatfor example image is the old version and image is the new version and that is only part of itthe reason is that i couldnt pass the parameters to the beforeeach method in junit but junit can use those local variable to pass the parameters i think this is where the difference occurred the gui test i just change the category annotation to tag annotation as i have known that those tests are mostly obsolete about cleanupworkertest this test is not hard to migrate from junit to but when i finish and run the tests on my ide two tests failed and the error message is quite weird it seems that the worker doesnt work in junit tests image if there are any errors or something can be improved in other tests that i didnt mention please let me know thanks change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your work most of the conversion looks good concerning your questions the exporter and importer tests use a filename based convention to find and check the tests for example all files that start with mods there are usually two files with the same name one with bib ending and one with xml the tests then should test that exporting the content of the bib file using the mods exporter give the contents of the xml file yes there is not yet a release of the new archunit so for now the architecture tests can stay using junit the mockito runner is not really needed its only purpose is to support the mock annotation but you can always use variable mock currently there is no neat way to handle this problem see the open looks good i think the problem is the setup in the bib file should reside on the same level as the pdf folder and not within tobiasdiez thanks for your answer ill have a try soon tobiasdiez hi ive done some improments but i still have some questions i understand what you say but when i try to enable this line streamforeach n systemoutprintln n with no other code changed i still get nothing looks like therere no such files on my laptop i suspect that it is the cause of this problem done ill keep those tests for the time being as that kind of code is just frustrating and of course if you have any requirements ill use the complicated way to handle it done i have a try the cleanuprelativepathsconvertabsolutetorelativepath test passed but the cleanuprenamepdfrenamesrelativefile test still failed so i was wondering if you can give me a further guide about this it can be a big help the tests in fileutiltestjava use create method which is totally not recommended in the api guide so when migrating it to junit i name a folder manually to imitate the original tests and you can see this in the new version of fileutiltestjava if i do something wrong tell me and ill do my best to fix them soon the failing architecture test is one thing i already experienced a while ago its because it checks for public class i was so free to create a simple patch which fixes thissimply remove the txt extension after download and execute git am returns e \workspace\jabref\jabref\bin\main\org\jabref\logic\exporter although it should be bin test okay i found the issue with the paths i really wondered if it ever worked but well now it does the key is to point to one existing resource the rest can be found dynamically and this leads us actually to some failing tests but i would ignore that for the moment that is a difference metatronwings you can use this patch as a start for all the related importer exporter tests fix resolving of paths in msbibexporterpathpatchtxt im very glad to see this issue will be resolved by us soon only a few more small questions some tests have not been migrated yet the dbmssynchronizertestjava and synchronizationtestsimulatorjava have not been migrated yet as there is no good way to handle chaos code after migration see example in dbmsprocessortestjava do i need to migrate themthe mainarchitecturetestswitharchunitjava have not too as there is not yet a release of the new archunit since i didnt migrate them how should i write the changelogmd and thanks for all of you metatronwings its okay we will sure find a way for them in the long run not that importantyou dont need to add a changelog entry as this is only a code quality issue which will not have any impact on the normal jabref user we hope you enjoyed it and if you want you can also further contribute looking to see more from you i just converted the two other classes with the legacy file methods to use the nio stuff include main java in resources as wellpatchtxt sorry but i must do that tomorrow morning because its pm in my timezone thanks for the patch
4268,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,convert part of the issue quality cleanup entries because github does not support autolinking there i have done some changes about convert the swing dialogs to javafxits about quality cleanup entriesbut when the component became the node it doesnt work i mean these checkbox wont change its value when i click them change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues please merge the latest version of upstream master repo from jabref and the checkbox should be working againhere is a tutorial on how to setup the remotes i went over the code again and it is now ready for merge from mine point of view
4275,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,changed the behavior of the field formatting dialog i made the loops for formatting all fields in the fieldformattercleanup class test for not being the key_field i originally had this in the cleanupsinglestring method to prevent key_field from being cleaned up reformatted entirely but decided to let the user specifically format that field when the user chooses to format all fields at once however the key_field will be not be reformatted this solves issue https githubcom jabref jabref issues i created a few unit tests for the last one i hard coded the latex version of the ç character my pleasure
4289,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix npe in merge entries dialog fix fx thread errorconvert file to path because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues changed that
4291,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix loading and storing of xmp field exclusions koppor i am not that into the xmp stuff are those fields i can add there bibtexfields which i can exclude from the export then it would make sense to have a combobox analogous to the cleanup panel with all fieldsedit decided to add the combobox with all fields because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i am going to merge this now if no further comments are coming
4299,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,0,fix freeze on import into current library execute import inspetion dialog in swing thread because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4311,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix drag and drop in entry editor comment same issue described consistent with preview panel behavior because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues as its a copy and paste of the method handling in the preview panel i merge this now
4311,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix drag and drop in entry editor comment same issue described consistent with preview panel behavior because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues as its a copy and paste of the method handling in the preview panel i merge this now
4312,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,convert new entry dialog to javafx followup from bibtex custom custom grafik describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues adressed all comments the duplicate check is actually different handled and is slightly coupled to the import inspection dialog this is stuff for a new pr i would like to merge this now if no further comments are added
4317,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,fix that rename and move file throws file not found exception moreover i refactored a bit how files are renamed moved to the default file directory this should make it easier to reuse the code because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ill merge this now so that progress on is not blocked
4325,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,wrap preferences in scrollpane as well dont override pref sizequick fix we definitively need to redesign rearrange some prefs because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4327,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,save sort order column of main table i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit i also an fx threading error when opening a new library the snackbar output was not onfx thread tobiasdiez any idea if i did sth wrong oder have to set the value somewhere else because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues sorry no idea would also need to debug this to see whats going on hm this is odd i created a simple test application based on the code here i experience the same behaviour apparently the sortorder alone was not sufficient works now i will try if i can store the sortorder as well i now managed to save the whole sort oder for multiple columns
4327,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,save sort order column of main table i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit i also an fx threading error when opening a new library the snackbar output was not onfx thread tobiasdiez any idea if i did sth wrong oder have to set the value somewhere else because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues sorry no idea would also need to debug this to see whats going on hm this is odd i created a simple test application based on the code here i experience the same behaviour apparently the sortorder alone was not sufficient works now i will try if i can store the sortorder as well i now managed to save the whole sort oder for multiple columns
4337,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fix export of corporate author to msoffice fix testsfix the underlying problem is the same as in however i came up with a workaround for msoffice getting the original field check for corporate author braces start and end get latex free value readd braces for corporate parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces
4337,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fix export of corporate author to msoffice fix testsfix the underlying problem is the same as in however i came up with a workaround for msoffice getting the original field check for corporate author braces start and end get latex free value readd braces for corporate parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces
4338,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,added new keyboard shortcut ctrl e for closing the entry editor enhancement presented here i have added a new keyboard shortcut for closing the entry editor by using ctrl e because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you first time here thanks for your contribution 👍 looks good to me as wellwe hope you are interested in contributiong some more
4355,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,auto trim url field because github does not support autolinking there fixes created a formatter to auto trim all kinds of whitespace defined by java change in changelogmd described manually tested changed features in running jabref _no need_ helpjabreforg https githubcom jabref helpjabreforg issues
4367,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,0,0,arxiv fetcher support url in this pr i wanted to fix the issue from i simply used existing code in the same file which just takes the identifier at the end of the url and perform a searchfor example _ to _ _the error dialog does not appear anymore and a new entry is made change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues yeah looks good to me i exactly had the same issue yesterday that i could not paste the whole url
4369,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,testexportasmodsandthenimportasmods because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for quick follow up
4379,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,change latex command handling only for xml chars refs change in changelogmd described manually tested changed features in running jabreftried to solve this issue in pr this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to bernhard kleine i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing testbracesresultxmltxt will write tests based on your files if the export is now correct thank you johannes manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title this is a separate item from the docbook export where i am waiting for feedback added two test cases for removed words based on an error during the latex command processing and for unicode problems based on the same error ping what is the status johannes manner oversee the comments and the ping sorry for that
4379,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,change latex command handling only for xml chars refs change in changelogmd described manually tested changed features in running jabreftried to solve this issue in pr this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to bernhard kleine i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing testbracesresultxmltxt will write tests based on your files if the export is now correct thank you johannes manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title this is a separate item from the docbook export where i am waiting for feedback added two test cases for removed words based on an error during the latex command processing and for unicode problems based on the same error ping what is the status johannes manner oversee the comments and the ping sorry for that
4379,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,change latex command handling only for xml chars refs change in changelogmd described manually tested changed features in running jabreftried to solve this issue in pr this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to bernhard kleine i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing testbracesresultxmltxt will write tests based on your files if the export is now correct thank you johannes manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title this is a separate item from the docbook export where i am waiting for feedback added two test cases for removed words based on an error during the latex command processing and for unicode problems based on the same error ping what is the status johannes manner oversee the comments and the ping sorry for that
4396,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fixes for all mods exporter tests because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues github is a bit buggy atm so i dont know which one is the right pr siedlerchr this is the right pr this wasnt showing up previously so i created another pr but after githubs issue got found that both prs were showing up so i closed the other one sorry for the confusion
4405,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,show dialog before creating entry now when you click new entry in a right toolbar it open an extra dialog where user can select a entry type change tooltip to new article
4408,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,add a preference to add files in entry editor this pr for mainly involves allowing users to choose how they want to link copy rename move files in entry editor through preferences apply same behavior of drag and drop for the whole entry editor instead of a different behavior in file view of the entry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg will log an issue to helpjabreforg if these changes are approved please feel free to suggest any changes thank you https user imagesentcom e d a e a d fb a apng codacy seems to have stuck in pending analyzing state is there something that i need to do from my side so that its analysis is completed hit it was probably stuck because you had a merge conflict in the changelogmd file i resolved this ps for future contributions create a new branch and do not work on master reduces potential conflicts tobiasdiez thanks for reviewing for the preference value should only be treated as the default action when no modifier is pressed i dont think there is a straightforward solution using the dragevent used in the code this is because i wont be able to detect the modifiers pressed or confirm whether no modifier is pressed i will keep looking into this let me know if you have any guidance to resolve it the code you edited had this functionality before you can get the modifier using eventgettransfermode see also the code comments what will happen in a case where the transfermode is move and would have no shift key pressed at that time the comment states shift on win or no modifier how would i differentiate between transfermodemove without shift key pressed and dragdropped behavior from preference option as we want this to be read only when there no modifiers for the other two modes link and copy i was thinking to do an or with preference option but that would not be applicable for transfermodemove its probably not possible to differentiate between move no modifier and move shift thus i would suggest the following behavior move do what is configured in preferences default move rename and link file link link file except if preferences link in this case move rename and linkcopy do what is configured in preferences default move rename and link file in this way the user can configure the default action on windows and linux but is also possible to only link the file if he wants to just need some clarification on the behavior for link i got that if the transfer mode is link then we should allow the user to link file but if the preference is set to link with link as the transfer mode then why should we move rename and link file shouldnt we follow move rename and link when preference is set to move rename and link and not when it is set link i wasnt sure about this either my rationale was to allow for the following behavior users selects move & rename as default action no modifier move & rename ctrl transfermodelink link users selects link as default action no modifier link ctrl transfermodelink move & renamebecause otherwise the users has no option to perform move & rename if he selected link as the default action but im very open for suggestions if this behavior is counter intuitive i think your option is good but i just feel that it should be documented that what keys would be used for each option in preferences tab in brackets one more suggestion that we can consider is as follows pref move shift or no modifier move ctrl copy alt link pref copy shift or no modifier copy alt link alt is the default key for linking so user has one less thing to remember ctrl move pref link shift or no modifier link alt move ctrl copy ctrl is the default key for copying so user has one less thing to remember let me know your thoughts on this shahamish please be aware that the keys differ on other operating systems eg linux or mac and not all operating systems differ between all modifiers see my code comment regarding ubuntu somewhere your suggestion looks good to mewhatever behavior we choose in the end it should be documented in the help and even better directly during the drag & drop action eg something like the following and replacing sposta with the real action to be performed but this is something for a new pr i have added the logic we discussed above and the linkedfileseditor to allow moving of the files within the file editor i also updated the issue on helpjabref to follow the behavior as we have discussed here for documentation if tobiasdiez gives his okay we can merge this
4413,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix group hit counter when adding entries by replacing the eventbus subscription by a javafx listener lgtm
4415,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,searchable filterable preferences up so far i just created the textbox for searching and a deprecation warningi added paulkra as collaborator on my forklast step so far i was asking myself how i can access the text of the different preferences categories and i was wondering if i need a new interface something like preftabcontents or preftabcontainer for it or extend existing prefstab interface change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues first of all thanks for your contribtion 👍 if you look at the code fo the old preferencesfilterdialog you see that the data comes from the jabrefpreferencesfilter class in orgjabrefpreferences if you have further questions you can also ask in out gitter chat adjusted my comment the easiest solution is probably to transverse the complete control node tree and take the text of all label controls wtfjoke paulkra what is the current status here the code looks already promising it would be really nice if you could finish this siedlerchr its still on my todo list havent found the time to investigate further and were stuck on how i display the filtered preferences i think paulkra doesnt work on it he still didnt accept my invitation link to my forked repo okay thanks for the udpate take your time if you have any questions just ask here or in gitter and we try to help maybe the jfxhighlighter from works to highlight the matches tobiasdiez thanks for the hint however i tested it locally but i didnt liked it that much for example it did mark the buttons for importing exporting show reset preferences also if i dont find alternatives i think about using it anways i tried the _jfoenix_ library but it didnt quite work as expected for eg labels remained highlighted even after changing the query text what i propose is to highlight the matched labels by styling their background with a different color we keep track of the highlighted labels and on every input change reset the highlighted labels and update it with new ones this could be optimized note the entire label is highlighted not a part of it captaindavinci sounds like a good plan the javafx pseudo class seems to work nicely for this thanks for sharing the article tobiasdiez i added the search highlight feature in the latest commithowever i have made use of labeled objects hash code when inserting into the map this would result in a list of all labels instead of grouping them by their text could be replaced by a list instead to avoid this another approach would be to map the texts to a set of labels as well but considering that the number of labels wont be too large i dont think there will be any significant gain in performance the current approach looks good to me im however wondering why you have the map as the relation label or text tab for me the converse relation tab label feels more natural in the end it probably doesnt really mattersplease also use a mutlimap instead of map come to think of it the converse relation does seem more natural and has a simpler implementation ill make the required changes and push the codeedit i am thinking about how to perform better matching of labels for eg one of the tabs has a label named _sending of emails_ a query such as _sending emails_ would not match any labels but in practice i think it should one possible solution is to split the query string delimited by space and check if any token is present in the label name right now two filtering actions are performed by tabs and by labels i think both actions should be merged into one when no match is found the preference window shows contents of previous tab in this case i think the content of preference window should be replaced by the contents of the first tab which matches the query if none match then it should be blank captaindavinci is this ready for review or do you need to further work on it the first remark you had concerning sending emails is a nice suggestion for further improvement but not necessary for merging i would say tobiasdiez yes this is ready for review thank you for the suggestions tobiasdiez and siedlerchr i have refactored the code for the most part to account for the changes and will push the code once i have implemented all changes screenshot showing the preferences window when searching captaindavinci look at my patch import via git am { searchhandlersearchtextproperty required so that changed are reflected} hm this is odd it worked fine for me with this line searchhandlersearchtextproperty bindbidirectional searchboxtextproperty whenever i changed the text in the gui field eg key to asdfasd the view was updated and the new findings were highlighted maybe i understand you wrong but i think this is enough under the hood the bidirectional is nothing else than a wrapper around the changelistener stuff also note that its necessary to have a reference to searchtext property accessed under the changelistener for searchbox could this be related to some sort of premature garbage collectionedit for me changing the text in the gui field did not update the view or highlight the labels bindings are created using weaklistener so they might get garbage collected but i still dont understand why it works for me with the patch i would propose you test again with my patch or at least commit the changes and let others test as well unfortunately i am the next days busy at work and probably cant help much okay i have pushed changes in the mean time i will try testing it again ps since the preferencessearchhandler does not use the searchtext property but only the query text can we instead bind the searchbox to the filtertabs ie not have to deal with binding the text property and string property thanks to both wtfjoke and captaindavinci for joining forces
4426,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix arrayindexoutofboundsexception on second pdf import the variable formally known as i is a global variable which had after the first run and therefore threw an exception because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues added tests
4428,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,radiobuttons in preference menu previously multiple radiobuttons in preference menu belonging to the same group were selectable simultaneously this issue is now on multiple occasions allowing only one option per group to be selected at the same time issue https githubcom jabref jabref issues
4446,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,set auto update checkbox enable disable when reading preferences this patch addresses issue added a call to the existing event handler which enables disables the checkbox in response to user clicks when we set the checkbox value from the preferences change in changelogmd described manually tested changed features in running jabref _n a_ helpjabreforg _n a_ behavior should beuse timestamp checked update timestamp is enabled can be checked unchecked use timestamp unchecked update timestamp disabled
4470,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,fix group renaming fix group renaming please have a look at the failing tests and please test if the latex stuff is still transformed to unicode after rename ali kz why did you close the pull request you can simply push your changes to your branch and the pr is updated tobiasdiez could you review again
4484,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix save button when you click save and there is no database selected that will act as save as
4498,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,improve page checker superseeds the pr and now page ranges like r r are considered to be correct
4498,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,improve page checker superseeds the pr and now page ranges like r r are considered to be correct
4519,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,put html in clipboard i get all tag value and put it in a string
4547,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,do not extract file ending from urls do not extract file ending from urls should also please check tobiasdiez i cannot access jstor stuff due to however with any url and some appended key values like accetptrue it works for me again please fix the checkstyle issue import with is not allowed
4549,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,fixes that renaming a group did not change the group name in the interface
4555,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,automatically created groups with field to group by as entrytype because github does not support autolinking there potential solution for made entrytype as a valid keyword for automatically created groups added check in bibentry to see if searchfield matches type_header entrytype made change in wordkeywordgroup to collect entries for the entrytype groups screenshots reflecting the change attached all entries img width altall_entries_ss src automatically create groups field to group by is entrytype img width altcreate_group_ss src result img width altgroup_view_ss src change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues hi is there anything else that needs to be done here before this pr can be merged with master if tobiasdiez is fine with the change we can merge
4565,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,add uncaught exception message added a simple dialog showing up if an uncaught exception was loggedadded the dialogs text to the german and english language filesfixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you very much for your contribution 👍 we are looking forward seeing more from you
4587,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add a variable to track the change in preview style proposed solution for i have added a previewstyle variable to check when the preview style changesfrom my observation the layout is updated every time tabs are switched or preview styles are cycled through with the addition of a variable these situations can be differentiated to print out the notification more appropriately change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues looks also good from my site i am merging this now
4601,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,convert duplicateresolverdialog to javafx describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues yes i thought i added the label on that issue
4604,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,enable default cursor for new entry sets text field on focus at the end of initialization by running the javafx thread change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4613,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix preview style configuration user mentioned that after pressing one of the styles and saving it the style is not updatedto change the preview style he has to move the selected style to the right column before pressing saveselecting styles in the right column can be previewed in the test panel however the style of bibentry is not updated after pressing test to rectify this the citation style is updated in preferencesto ensure preview style configuration is saved the chosen preview style is also saved in the preferencesnote that if preview style at the left column is selected the configuration will not be saved change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues code looks good from my side as well could you please test if the error i encountered is also resolved with your code siedlerchr that error is not resolved in my pr do you want me to fix it chelseyong okay thanks for the info if you want you could do this in another pr thanks again for your contribution
4642,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,add integrity check for books with edition reported as tobiasdiez siedlerchr could you review this pr also i am not sure why travis is failing ronaklakhotia if you click on the travis build failed details you can expand the failing job in your case its just the localization test which failed you need to add the string to the english localization file under src main resources l n orgjabreflogicl nlocalizationconsistencytest findmissinglocalizationkeys failed orgopentest jassertionfailederror detected language keys which are not in the english language file paste these into the english language file edition\ of\ book\ reported\ as\ just\ edition of book reported as just expected but was at orgjunitjupiterapiassertionutilsfail assertionutilsjava at orgjunitjupiterapiassertequalsfailnotequal assertequalsjava at orgjunitjupiterapiassertequalsassertequals assertequalsjava at orgjunitjupiterapiassertionsassertequals assertionsjava at orgjabreflogicl nlocalizationconsistencytestfindmissinglocalizationkeys localizationconsistencytestjava thanks for the pointer the failing test ready for review tobiasdiez siedlerchr ready for review you can ignore the outdated dependencies its one of the tasks which is allowed to fail build passed ready for review any updates ronaklakhotia we have the policy that at least two core developers have to approve a pull request before me merge since we are all working on jabref in our freetime reviewing of a pr might take a day or two especially over the weekend but that shouldnt stop you from looking and working at other open issues if you have the motivation and the drive to do so
4644,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix for issue remove usage of tempdirectory extension from junit pioneer fixes removed the tempdirectory extension from junit pioneer with the built in extension of junit manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message perfect thanks a lot
4658,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,fix for cant save new content selectors dialog converted into javafx old functionalities are preserved new validations added error message thrown when dialog invoked but not active connection exists remove keyword button is enabled just in case some keyword is selected change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues additionally it would be nice if you could add a screenshot of the converted dialog siedlerchr hi thanks for the reviewi hope i was able to incorporate all the changes mentioned above listproperty bindingshere is the screenshot of converted dialog tobiasdiez thanks for the review changes have been made thanks again for your contribution looking forward to your next pr thanks guys for super guidance ricantech we have to thank you for your contribution we hope you are interested in fixing some other issues as well
4660,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,changed the way the groupdialog description is displayed fixes changed groupdialog description node to textflow groupdialog is no longer resizable changed the layout of the groupdialog window to be more horizontal ok button is only enabled after some input jabrefgroupdialog change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the code looks good to me and we can merge it as it is now nonetheless christoph is right and it would be better to replace the html completely by styled javafx text modules with corresponding css style classes defined in the basecss since this is a bit of work as you need to fumble around with the localization and its not utterly important i let you decide if you want to work on this or invest your time in something else eg fixing another issue i definetly agree that this should be done the right way at some point but im not really confident to touch the localization im going to move to another issue so this pr can be merged 😄 ah i think i just noticed a bug please wait with merging could you please also take a look at ok so i tried to automatically create a database when the user tried to create a new group without a open database but i couldnt get it to run the code to add the group to the open database always ran before the new database was createdin the end i gave up and i just created a warning when the user tries to create a group without a database i hope i made no mistakes while adding the localization could you please also take a look at this error never occurred when i tried it the report is a little thin and i couldnt recreate itif everything looks good to you you can merge this pr thanks for the quick follow up and sorry for being somewhat pedantic
4696,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,remove resolve duplicate keys dialog because github does not support autolinking there removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply for all entries or only for the duplicated ones through the entry editor and or menu change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues well however on import there should be a warning and the option to resolve duplicate keys its essential to discover duplicates siedlerchr such a feature wasnt implemented the only check was when opening a database and is obsolete with my other pr where now keys are automatically generated for every imported entry duplicate entries are also highlighted in the import dialog okay then i see no problem
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,group and reorder the main menu tabs & icons group and reorder the main menu file edit library quality tools and view tabs & icons now it looks like on the martinkarims prototypes _file pr & fixes & fixes & fixes & fixes & fixes & fixes & fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your work on this the code changes look good to me i believe that removing the three tools opening a folder file or url doi apply disables the associated shortcuts eg f to open a file can you please make sure the shortcuts work as expected and if not add some code for this here ive a few questions for martinkarim why he proposed certain changes some of which are not too intuitive for me replace string from edit to tools & set clear rename append fields from edit to library both of these operations change field values of the currently selected entries or all entries and thus for me have the same quality as the manage keywords feature which is essentially a special version of set fields moreover all these three features dont involve any magic on jabrefs part in contrast to tools but they are different versions of bulk edits but thats definitely a developer viewpoint and not a user centric one im fine with moving all three to tools although i feel this menu gets overloaded a bitmoreover i would suggest t rename replace string by find and replace find unlinked files from quality to tools for me this feature is connected to the set file link feature because once you linked a file to an entry that it is no longer reported under unlinked files and vice versa the find unliked files dialog allows to link files to entries so personally i would group them together new sublibrary based on aux file from tools to library with the reasoning that adding a sublibrary has a global effect on the library however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools yes you are right now those shortcuts are disabled although ctrl a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects tools web search groups interface is not synchronized with it side paneli will deal with it in a while the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown not shown in the openoffice panel i had to explicitly set the preferences to new values i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time no problem take your time siedlerchr what about the coverage test do i need to get an equal or greather percent you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives eg marking functions as unused but does not take into account that these are defined in fxml we are generally not so focused on code coverage but prefer tests for the most important model logic functionality by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right click menu tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items features you mentioned _replace string_ i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs _set clear rename append fields_ i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the rename part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate _find unlinked files_ while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it _new sublibrary based on aux file_ i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like export entries cited in aux file however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore depends on it and an aux file i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion thanks martinkarim for your detailed explanation that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to rename replace string to find and replace move new sublibrary based on aux file to toolsas part of this pr and then merge davidemdot could you please implement these changes thanksthen as a second step we should discuss in the devcall set clear rename append fields edit library or tools new sublibrary based on aux file library tools export how to improve telemetry collection tobiasdiez i think it is done now
4713,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,fix bibkey generated does not handle diacritics clean up the author value in bracketedpattern after it is retrieved from the bibentry change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your contribution unfortunately your changes resulted in a lot of failed tests look at details of the travis build and then select the failing job seems like there are some more cases you need to take care of im not that deep into the bibtexkeygenerator stuff noted is there another approach to handle this currently facing some issues while writing tests mockito and jfoenixcontrolsjfxsnackbarlayout cannot be imported whereas jfoenixcontrolsjfxsnackbarsnackbarevent works fine i updated to jdk _ and it doesnt help just reimported the project it works now after syncing fork the same error occurs how to fix this chelseyong try merging the current master in eg if upstream is the jabref jabref repo git fetch upstream git merge upstream master im not an intellij user but executing gradle should be sufficient maybe halirutan can tell you more sorry for the delay i had some software issuessymbol is now removed from key generation
4720,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,newline format couldnt be changed because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4722,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,adding additional modifiers to be used in bibtex key generator as i currently wanted to have a possibility to have capitalized shorttitles in my bibtex keys i reused the already existing capitalizeformatter titlecaseformatter and sentencecaseformatter as modifiers to be used also for the bibtexkeygeneratorthis implements and is more flexible as the solution developed by oscargus at the time in as it can be applied to all other fields and not only to titles change in changelogmd described manually tested changed features in running jabref helpjabreforg needs to be updated if you merge the current master in the build errors should be resolved i accidentally pushed some changes to master yesterday as build is now passing after rebase ill merge now
4727,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,disable renaming if i remember correctly this is a design flaw in the java language of the functional programming implementation try using the classic if construct i am not sure how to get around this does this mean the equals method in optionalutils is redundant because using the if construct would mean i cant use the generic types on issamefile method
4729,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,saving changes and exiting application when the user clicks _save changes_ option the status ofsaving is not shown unlike before i am not sure what might bethe cause of that because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the teardownjabref filenames executes before the files are actually saved would this be responsible for the ui not being shown i dont have the code at hands but this could be a reason you could debug and see where the save happens and when the instance should be closed okay so this is what i think is happeningthe savedatabaseaction class dosave updates ui on _javafxthread_ however the call to teardownjabrefframe executes before that and a blank window is shown instead of the uii placed a lock before calling teardownjabrefframe hence blocking that thread but the code under dosave method wasnt executed shouldnt they be running on separate threads ill take a look at it tomorrowyash kothari schrieb am mi märz okay so this is what i think is happening the savedatabaseaction class dosave executes before that and a blank window is shown instead of the ui i placed a lock before calling teardownjabrefframe — you are receiving this because you commented reply to this email directly view it on github the thread i have a doubt since the dosave method handles saveexception what exceptions are we trying to catch under confirmclose please remove the runinjavafxthread call only when the dosave is called from gui methods it might that the dosave could be called from a background thread which will result in a not on fx thread exception will adding a new method savefromgui in savedatabaseaction be a good approach to solving this problem this i think will lead to some redundant code or will require refactoring of the save method
4730,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,improve toolbar icons and their layout group and reorder the toolbar icons and add generate bibtex keys button now it looks like on the martinkarims prototypes screenshots of the new layout right pr because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4731,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,0,1,fix default import format pattern remove display arrayadd migration because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4738,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,adding support for input methods because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you i am enjoying the process so far
4744,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,move library specific key pattern dialog call to library menu follow up of and menu entry bibtex key patterns is calling a library specific dialog to set key patterns the global key patterns are managed using options preferencesthus moving it to library menu grabbed_ minor addition setting title of dialog which was empty before change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4746,1,0,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,0,1,switch to the mariadb connector from the mysql one switch from commysqlcjjdbcdriver to orgmariadbjdbcdriver references checklisthappy to work on these as required change in changelogmd described modified original travis helpjabreforg https githubcom jabref helpjabreforg issues hey kiwiroy thank you for this contributionafter some minutes of comparing the jdbc drivers im not sure why mariadb is the obvious way to go so please add more reasoning both here in the comments as well as a condensed version in an architecture decision record here will help us to judge upon the benefits and consequences of this change im curious would it be possible to have both connectors eg mysql and mariadb together so that a user can choose between them or does this create conflics just some comments here first im unsure if this is relevant but this blog has some background informationmariadb provide a comprehensive feature comparison though that is mainlyserver features rather than client as far as possible they maintain protocol compatibility for clientsfor the linked issue the mysql connector does not connect to the pamenabled server despite claims the mysql connector documentation mention aconfiguration property authenticationplugins which is a comma delimited listof classes that implement commysqlcjprotocolauthenticationplugin a pamclass id expect dialog cannot be seen in the connector either the performance in mysql and with the mysql connectorj was worse in all cases than mariadbit is possible to have the two resident in the class path concurrently blog comparison walkthough first pass at mysql and mariadb travis test suite passes and local testing of mariadb connector against the database with pam auth succeeds while only changing the dropdown to mysql results in the unable to load authentication plugin dialog message nb as the driver is the only difference i chose to reuse the mysqlprocessor class yeah cool that it works that would be best compromise here i think right should this pr be closed and a new one created after a little tidy upalso any pointers on how this passed while including this line hm that is really odd regarding the test try debugging the test locally or add a systemoutprintln before comparing the values to see the outputyou can either reuse this pr if you want or use the other pr whatever you want kiwiroy what is the current status here it would be really nice to have this inlcuded i’ve had a busy few weeks will attend to it soon kiwiroy any update closing due to inactivity feel free to reopen it if you have time to work on it i resolved the conflicts and are going to merge it i will add an adrwe keep only mariadb reason mysql connector j is licensed under gpl source without limiting the foregoing grant of rights under the gplv and additional permission as to separately licensed software this connector is also subject to the universal foss exception version a copy of which is reproduced below and can also be found along with its faq at understand that there is that foss exception but i am not aware of the consequences and that exception is not commonly known
4759,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,feature implement search filter in show preferences add a search box in show preferences window to allow users to filterpreference options because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues codewise lgtm could you please provide a screenshot how it looks like when the search matched text is found siedlerchr i have added a screenshot now will moving the checkbox next to the search field provide a better ux should the count label be bound to filteredoptionssize yeah thats cool looks good i would move the checkbox to the top next to the search fieldregarding your second option either you directly bind it to the filtered list size property or you update the text in the method which is your current way but both together will result in an error a bound value cannot be set so as you automatically call the updatemodel method on changes you can leave it as is but the updatedmodel is called only when check box is changed i was wondering if having it update while filtering would be a good addition on moving the checkbox to the top next to the search field what are your opinion on it tobiasdiez siedlerchr _ x _scrot yep that is exactly what i meant looks good and thanks for fixing this longstanding issue i am glad it came out as expected however i think that the count label should be bound to the table size so that the right count is shown when filtering i will push the changes and we can decide on whether to merge the change or stick with the current setup
4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,improve remote messaging multiple instances possible and should by reducing the timeout thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast surpasses because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues does not work still possible to start a second instance from within eclipse javafx application thread debug orgjabreflogicremoteclientremoteclient could not ping server at port javanetsockettimeoutexception connect timed out at javanetdualstackplainsocketimplwaitforconnect native method at javanetdualstackplainsocketimplsocketconnect dualstackplainsocketimpljava at javanetabstractplainsocketimpldoconnect abstractplainsocketimpljava at javanetabstractplainsocketimplconnecttoaddress abstractplainsocketimpljava this sounds like the first instance failed to respond did you made sure that both instances run from the new code do you get an error message in the first instance yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors tested again today seems to work now
4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,improve remote messaging multiple instances possible and should by reducing the timeout thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast surpasses because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues does not work still possible to start a second instance from within eclipse javafx application thread debug orgjabreflogicremoteclientremoteclient could not ping server at port javanetsockettimeoutexception connect timed out at javanetdualstackplainsocketimplwaitforconnect native method at javanetdualstackplainsocketimplsocketconnect dualstackplainsocketimpljava at javanetabstractplainsocketimpldoconnect abstractplainsocketimpljava at javanetabstractplainsocketimplconnecttoaddress abstractplainsocketimpljava this sounds like the first instance failed to respond did you made sure that both instances run from the new code do you get an error message in the first instance yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors tested again today seems to work now
4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,improve remote messaging multiple instances possible and should by reducing the timeout thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast surpasses because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues does not work still possible to start a second instance from within eclipse javafx application thread debug orgjabreflogicremoteclientremoteclient could not ping server at port javanetsockettimeoutexception connect timed out at javanetdualstackplainsocketimplwaitforconnect native method at javanetdualstackplainsocketimplsocketconnect dualstackplainsocketimpljava at javanetabstractplainsocketimpldoconnect abstractplainsocketimpljava at javanetabstractplainsocketimplconnecttoaddress abstractplainsocketimpljava this sounds like the first instance failed to respond did you made sure that both instances run from the new code do you get an error message in the first instance yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors tested again today seems to work now
4761,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,enable import button only if entry selected because github does not support autolinking there fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4769,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix removing entries when source code field is out of focus the issue was storesource method is called when entry is out of focus however if another entry is selected then currententry is updated to that and storesource is called with the previous codearea but updating it in the second entry thus causing a duplicationfix was to pass the entry as another argument to storesource because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4779,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,fix illegalargumentexception when ranking entries add names for ranking entries event so it does not generate an illegalargumentexceptionthis pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4791,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix npe in duplicate resolver dialog init method was accessing the database field before it was initializedfixes pass a new bibdatabsecontext because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues as this are very simple fixes i merge directly
4791,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix npe in duplicate resolver dialog init method was accessing the database field before it was initializedfixes pass a new bibdatabsecontext because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues as this are very simple fixes i merge directly
4792,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,relativizes paths to aux files because github does not support autolinking there fixes issue introduced a new latexfiledirectory to metadatajava the path of the aux file is now serialized as a relative path with respect to the latexfiledirectory the getfilepath of texgroup now returns the relative path of the aux file used to create the group each user can define their own latexfiledirectory similar to userfiledirectory i have implemented tests to check for basic parsing serialization and also to check that the relative path is being found correctly when user selects an aux file via the browse button they are shown the relative path of the file in texgroupfilepath in group dialog change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4794,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix closing of library not handling backup and autosave manager shutdown the issue was when the tab is closed by clicking x it did not callthe method closetab which handles the closing of backup andautosave manager because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you for those kind words thank you very much for this fix can you please write a changelog entry before we merge thisedit actually im not sure when this bug was introduced probably only recently so we dont need a changelog entry
4797,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,fix right clicking on any entry and selecting open folder results in the nullpointer exception the issue was when a user right clicks an entry and right click open folder then it results in null pointer exception in linux systemthe main cause for this issue was in the linux implementation of nativedesktop linuxjavaopenfolderandselectfile that code looks for an environment variable named desktop_session and if this variable is not set in any system then it will result in null pointer exceptionthe fix was to check if desktop_session variable is present or not if not present then run a default command which will try to open the folderanother issue was that if a system does not have a file browser installed then right clicking on any entry and selecting open folder option will not do anything if there is no file browser installed in the system to fix this issue ive added an option in preference setting window to set command or program for default file browser where a user can explicitly set command or let jefref use a default behavior like this jabref fix change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues could you please check issue as well siedlerchr okay ill try to fix this issue
4807,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,item count in a group updated correctly because github does not support autolinking there fixes issue pr fixes the first issue i could not reproduce the second issue the item count should now be updated correctlythe problem was because of the listener not getting notified when changes were being made this was due to the weak listener which was attached to observablelist returned databasecontextgetdatabase getentries only case where this pr might not work is when we are dealing with a library in which there are no groups other than the all entries that is because the group being utilized in the line texttextproperty bind groupgethits asstring in file gui groups grouptreeviewjava is the group all entries that is present even before you open any library in jabref this causes value to not be set properly but the only time it happens is if the only group you have in the new library is all entries once we are able to fix that this pr should work in all cases change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues is this the only instance where listeners are registered against the list returned getentries i would also be nice if you could add a small comment in the code explaining why we need to hold a reference to the list because some ides would suggest to convert the field to variable with field scope i am not sure about that i can check for other instances over this week
4807,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,item count in a group updated correctly because github does not support autolinking there fixes issue pr fixes the first issue i could not reproduce the second issue the item count should now be updated correctlythe problem was because of the listener not getting notified when changes were being made this was due to the weak listener which was attached to observablelist returned databasecontextgetdatabase getentries only case where this pr might not work is when we are dealing with a library in which there are no groups other than the all entries that is because the group being utilized in the line texttextproperty bind groupgethits asstring in file gui groups grouptreeviewjava is the group all entries that is present even before you open any library in jabref this causes value to not be set properly but the only time it happens is if the only group you have in the new library is all entries once we are able to fix that this pr should work in all cases change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues is this the only instance where listeners are registered against the list returned getentries i would also be nice if you could add a small comment in the code explaining why we need to hold a reference to the list because some ides would suggest to convert the field to variable with field scope i am not sure about that i can check for other instances over this week
4815,1,0,0,1,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,enhanced message log worked on removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log j because logevent objects are reused they were copied in logmessagesadd but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for closes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues siedlerchr tobiasdiez i thought while im at this anyway i could also do it properly and checked all calls to dialogservicenotify i refactored all places where the method was called from a background thread so that i could remove defaulttaskexecutorruninjavafxthread from dialogservicenotifyat two points however it was not as easy see the review abovewhat do you think thanks for the update the backgroundtask has updateprogress and updatemessage for these cases however an implementation along these lines needs further refactoring i guess in my opinion we can leave it like that for the moment and merge ok so maybe a follow up issue could then be to improve the identifier lookup and maybe also the fulltext lookup using updateprogress and updatemessage this is ready for merge then i guess yes to change the identifer lookkup and the other would be a good followup issue
4815,1,0,0,1,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,enhanced message log worked on removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log j because logevent objects are reused they were copied in logmessagesadd but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for closes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues siedlerchr tobiasdiez i thought while im at this anyway i could also do it properly and checked all calls to dialogservicenotify i refactored all places where the method was called from a background thread so that i could remove defaulttaskexecutorruninjavafxthread from dialogservicenotifyat two points however it was not as easy see the review abovewhat do you think thanks for the update the backgroundtask has updateprogress and updatemessage for these cases however an implementation along these lines needs further refactoring i guess in my opinion we can leave it like that for the moment and merge ok so maybe a follow up issue could then be to improve the identifier lookup and maybe also the fulltext lookup using updateprogress and updatemessage this is ready for merge then i guess yes to change the identifer lookkup and the other would be a good followup issue
4818,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,put renaming of file entries in javafx thread for cleanup closes because field changes must be done in the javafx thread i put the field change in a callable to be executed by the javafx threadthis issue might arise for other cleanup tasks as well change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your pullrequest tobiasdiez im sorry i was a bit careless with this pull request and used a class from the gui inside the logic package and now the build fails shall i open another pull request to revert this or can you fix this on the master branch
4822,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,convert autolinkfilesaction to javafx also convert a few other message boxes to javafx because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues lgt build failing is due to previous problematic pr with cleanup
4835,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,all buttons in custom dialogs react on enter all buttons in custom dialogs react now also on enter the default behavior space in javafx is not affected by this change change in changelogmd described manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message could you please check the edit strings dialog cause it has an editable table and you need to press enter to confirm the column value im not sure if this interfers with the main dialog button from my point of view there is no intereference the confirmation of the value via enter works
4839,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fix parser exception when loading tex groups with non existing file catch file not found exception and handle non existing aux files gracefully because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4847,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,removed default constructor of fxdialogservice fix for needs test and discussion removed injection mechanism for dialogservice in order to remove its default constructor because through the null value used in the default constructor the nullpointerexceptions were caused change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4848,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,fix custom name formatters because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4860,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,remove deprecated awt apple extension because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues linusdietz halirutan could you please test if this removal breaks anything related to mac the only thing from the code might be the file handling eg double click on a bib file in the finder tested it for a day no issues appeared
4876,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,fix saving of strings fix removing of strings the only problem i now have i cant reliable detect prevent dupliacte stringseg a user can have a string with label a and content b and a user can enter a new string a with content cthe first string would now be overwritten tobiasdiez do you have an idea if we can directly prevent the entering of duplicatesthe addall method simply adds all strings and updates the content if found previously it would always report a duplicate label exceptionmaybe one could check the id value if its present or equals because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks now its functional
4892,1,0,0,0,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,closing of the shared database login dialog if the user enters wrong authentication details fix for the issue dialog close after pressing ok button closing of the shared database login dialog if the user enters wrong authentication details change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4896,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,store column widths as integer store column widths as integer because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4918,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,fixes throwing an exception when id field is present in bib file because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues should the exception also be removed from the clearfield method yes please also remove it from the clear field method
4931,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,improve author parsing the author class added an additional space when converting a o to the dotted version a o because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4935,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,throw bibentrynotfound exception in case entry is no longer present when an entry got removed a npe complaining about an empty database was thrown because of some weird unkownbibtexentry thingnow the correct bibentrynotfound exception is thrown showing the problematic reference mark because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4943,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix threading issue with opening from recent libraries on windows i could not reproduce the original exception but im very convinced that i found the threading culprit because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4950,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fixes remaining issues in because github does not support autolinking there as usual the situation was not as easy as it seemed to be in i reused now the existing renaming logic for renaming to suggested filename which performs some more checks like not to overwrite existing files and also takes the file directory settings into accountthus this should fix the remaining problem mentioned in change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4964,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,remove ui threadlist for maintable as it prevents sorting in maintable renenables sortingtried a bit around and could not find any side issue so far because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues added it around the original getentries that works now as well jabref dev snapshot master baa bd linux generic amd java _ yes seems to work fine its a little slow perhaps jabref seems to need a up to seconds to sort a newly selected date year column thinkpad t with i core cpu bib database with entries and a few seconds after a sort to start receiving keystrokes again alphabetic field columns sort more quicklythanksdominik tobiasdiez i didnt encounter any problems with the cleanup maybe we can remove the wrapper seems to cost performance
4965,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,fix downloading pdf produces html as extension if we already have a filetype we use that instead of relying on the autodetection because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i tried adding a test but its a bit complicated as the logic is an lambda in the preparedownloadtask method and solely testing the new method which just passes the type as parameter is trivial mhh you should be able to test the download method directly javalinkedfile onlinefile new linkedfile something linkedfileviewmodel viewmodel new linkedfileviewmodel onlinefile viewmodeldownload assertequals expectedpath onlinefilegetlink needs a bit more setup but should work in principle got it to work with heavy mocking and refactoring the shitty externalfiletypes singleton is really bad for testingneeds some cleanup of the test class now delete some things which are no longer necessary
4970,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,bump jsoup to and switch jsoups stringutil for jabrefs stringutil here is a correction for it bumps jsoup from to and also it switchs jsoups stringutil for jabrefs stringutil in all files that used it change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4979,1,0,0,1,1,1,1,0,0,0,1,0,1,0,1,1,0,0,1,fix command line help text now in the cli help text arguments and descriptions have been rewritten for fixing simplifying and detailing them betterit fixes issue cli help change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4980,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,0,0,1,resize different fonts changing entry type now jabref uses the same typography for the two menus to change entry type and for the tooltip it entry_type_menu change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4981,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,duplicate check on import should be run in background task created background task for the work done in org jabref gui importer importentriesviewmodeljava siedlerchr thank you for the review your suggestion is committed as per call flow i havent found some bottleneck for viewmodel as per call flow if gets called mainly org jabref gui importer importentriesdialogjava but i guess as you wrote it worth to have this task done in a separate thread for both use cases
4993,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,fix icon size the second the entry editor showed a slightly smaller icon for the generatebibtexkey button this bug also had an effect on the display of icon size in the generatebibtexkey button is now a button like every other button in fxml the actionobject was put into a standard fxml method everything works including undo and asking before overwriting change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ready to review thanks for the fix
4996,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix the attach file dialog for starting on the users main directory now the attach file dialog in the right click menu for an entry starts on the working directory instead of the users main directory it is the same behavior as when adding a file from the entry editorit solves change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4999,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,fix iee fetcher add exception dialog on import failcheck if we have keywords field present in json because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5011,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,latex integration project hey this is the pull request where i will be uploading everything related to the latex integration project which tobias mentioned in for the moment i have been coding the backend of the tex parser and preparing tests for these classes before the end of this week i will add support for nested files and cross references and will keep improving the related documentatio y feedback is more than welcome d a suggestion for the ui of the search result window i like the design of researchgate to show the citations can do something similar just replacing the reference minimal two spheres with the name of the latex document and the links view with an option to jump to the citation in the latex filein general tables are nice if you want to compare items while lists are preferred if the user is more interested in the details of an item i guess for the search result window we are in the second case although that might differ from user to user thanks for your feedback siedlerchr and tobiasdiez now all identified issues should be todo add support for multicite commands todo expand integration test tobiasdiez what do you think of this gui according to the example that you proposed parser ui the way you all can follow the development of the user interface in other pull request this one is becoming very big i have renamed crossingkeys to texbibentriesresolver do you think this is a clear method signatureregarding bibdatabase and cloneentry they were related to an idea from the first few days but it does not make sense anymoreall your remarks should be solved nowfurthermore i have been working on the gui too hope to commit the latest changes soon thanks for the update the code looks good to me now and from my point of view we can merge this pr onto a new branch at the jabref repository this allows you to open further prs against this new branch with proper updates and build checks moreover our build infrastructure kicks in and we get a proper build which we could share with users to get early feedback siedlerchr linusdietz davidemdot if possible can you please change the target branch to a new one say jabref latexintegration if not please open a new pr targeting this branch tobiasdiez i can change this pr to another branch but i am not allowed to create a new one in this repocould you open it please just writing the name in the branch selector menu and new_branch done ive merged this now so you can target your new prs onto jabref latexintegration with proper github notifications and build infrastructure
5014,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,adding doi to test entry one liner to have also a doi available in the entry to test the preview function nomicrosoftbuhtz any more suggestions what should be added change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a loti would like to have some comments in the past it was notes wasnt it and groups and keywords how could we handle issue as i understand biblatex issue is used when number and volume does not exists and vis a vis i also know that some journals or import export mechanism generates entries with all three attributesif we are still in wish modewhat is about the gettestentrybook is it still usedbeside an article i would like to see a testentry for incollection of course combined with a collection entry only three wishes i also added issue keywords and comment to the test entry groups in general would also be possible but as there are different ways to configure groups eg based on keywords etc its hard to configure a preview to show all possibilitiesthe gettestentrybook method is used in the libreoffice settings but not in the entry preview preferences
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,select push app in preferences as asked by tobiasdiez here is my alternative proposal this closes by merging closes and closes img width altprefpushtoapp src branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review i added some eye candy you will be charmed img width altselect push application src looks good to me ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards and the fate of swing looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good works fine at least if i understood you right i hope so looks very good to me now thanks again you are welcome this was fun again lets push jabraf forward towards
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,select push app in preferences as asked by tobiasdiez here is my alternative proposal this closes by merging closes and closes img width altprefpushtoapp src branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review i added some eye candy you will be charmed img width altselect push application src looks good to me ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards and the fate of swing looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good works fine at least if i understood you right i hope so looks very good to me now thanks again you are welcome this was fun again lets push jabraf forward towards
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,select push app in preferences as asked by tobiasdiez here is my alternative proposal this closes by merging closes and closes img width altprefpushtoapp src branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review i added some eye candy you will be charmed img width altselect push application src looks good to me ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards and the fate of swing looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good works fine at least if i understood you right i hope so looks very good to me now thanks again you are welcome this was fun again lets push jabraf forward towards
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,select push app in preferences as asked by tobiasdiez here is my alternative proposal this closes by merging closes and closes img width altprefpushtoapp src branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review i added some eye candy you will be charmed img width altselect push application src looks good to me ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards and the fate of swing looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good works fine at least if i understood you right i hope so looks very good to me now thanks again you are welcome this was fun again lets push jabraf forward towards
5025,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,add warning for empty bibtex keys in entry editor added a warning for empty bibtex keys in entry editor a request came in to have the entry editor provide a warning when the bibtex key field is empty in order to make the warning icon appear changes were necessary added new key value pair to multi map in fieldcheckers to check for a valid bibtex key in the entry editor the fieldcheckers object had the following key value pair in its multimap fieldnamekey validbibtexkeychecker object where fieldnamekey is the string keywhen the bibtexkeyeditorviewmodel tries to actually run this check they key it provides to the fieldcheckers instance is bibentrykey_field bibtexkey instead of fieldnamekey key to accommodate for this bibentrykey_field was added to the fieldcheckers multimap added null and empty string check in validbibtexkeycheckercheckvalue fixing the first issue caused an error to come arise in bibtexkeygeneratorcleankey when called by validbibtexkeycheckercheckvalue this error was due to null strings being fed into bibtexkeygeneratorcleankey to fix this a check for null or zero length strings was added this check also returned the empty bibtex key message note an issue with the fix is that while it does create the empty bibtex key warning the invalid bibtex key warning is pushed down pictures of this issue are attached img width altwarningicon src width altwarningicon src change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5033,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,convert preferencedialog to mvvm one of the last missing things in is the conversion of the preferencedialog and some of its tabs to mvvm i understood that in the future jabrefpreference probably need properties to make them bindable but for now i think this goes beyond this prit works as expected i took the liberty to add a split pane between the conents and the tablist to enable the user to change the width between them so this pr is not just about refactoring the dialog this is very early shot on this matter i dont know if you think its worth moving on with this and to look also into the tabs for the default export options i already did that because they are reused in the library properties dialogoh yeah i see that now this is great this is almost all the work i can almost just copynpaste yours 😆 i made some visual improvements and converted the generaltab to mvvm still everything wip but you can see where the road goes i encountered a problem id like to ask to help with i wasnt able to apply l n on the controls on the pane which is why travis is currently failing but on the large headings which are basically labels too very strange do you have an idea generalstab the basic workflow is now understood the other tabs shouldt take too long but i do not have much spare time the next days so it could take some days i can continue to commit and do some cleanups in the meantime could you take a quick trivial look into the code if i did something utterly wrong so i dont repeat it thank you very much i think we should follow the suggestion by tobiasdiez and merge this asap and you or others can then create the fxml and logic for new tabs ok i will get this ready to merge asap but there really need to be some cleanups after converting the last one of the tabs i added the filetab beacause i already started with it before we were talking about merging this asap but should be soon ready now i am to tired should be ready saturday night sorry i was not able to present a solution including the validator i got them somehow working but there is still an big issue somehow the validator does not seem to be updated after something was typed in the textfield the stringproperty keeps somehow the old input if i dont disable and reenable it i will have another try tomorrow ok validators work i got the dialog and the two tabs general and file converted including the validators where they were in the first placeshould be ready to review and probably be merged if there is no issue left so the the other tabs can be converted by other prsafter converting the last dialog there need to be some interface changes to prefstab to make validsettings bindable and to make some cleanups i did not want to do them now because it would blow up this pr way more two little things and injected dialogservice ready again
5042,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,convert merge shared entries to javafx last big dialog for conversion to javafx refs remove old dialoguse the already created merge dialognow it looks like this odd thing i noticed and this refs probably is that whenever i paste an entry in the shared database it gets duplicated multiple time this looks oddly familiar i remember that this was having to do with the subscribers and the event bus system because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5048,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,preserve encoding while copy and pasting in maintable encodes and decodes data with utf merging this now
5056,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,fix order of other fields because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your contribution could you please adjust your title of the pr and describe how or why the fix works thanks in advance tobiasdiez sure ill add comment descriptions for the next prs btw i cannot merge this pr any reason only members of the core jabref development team are able to merge prs this is normal for most github organizations projects each pr should ideally be reviewed by at least two jabref core developers to maintain a high quality of the code base siedlerchr sure i thought the reason might be something like a ci build failure or any
5058,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix automaticalls set file links task not runinng executing the created task would have been helpful 🤦‍♂ because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5068,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,add copy linked files action to contextmneu in general tab because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues added a variant for a single entry and did some refactoring
5086,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,bugfix modified the existing logic to comply crossref resolution with biblatex specification because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your contribution could you please add a test for the changed code tobiasdiez siedlerchr sure ill make those amendments and the uts tobiasdiez could you please review the latest commit thanks looks good to me now please merge the latest master changes in there have been renaming of the fields classes so you need to fix this then we can merge siedlerchr i pulled the changes from master this pr can be merged to the master now please review the imports and organized imports please review and merge please review the imports fixed and organized imports please review and mergeplease have a look at travis checkstyle output star imports are not allowedif you use intellij you can directly import the code style from the config folderfor eclipse you can run gradlew eclipse to automatically import the correct code styleif you then run organize imports in the ide it will be correct please review the imports fixed and organized imports please review and merge please have a look at travis checkstyle output star imports are not allowed if you use intellij you can directly import the code style from the config folder for eclipse you can run gradlew eclipse to automatically import the correct code style if you then run organize imports in the ide it will be correctfixed imports issue please review
5101,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fixes ris data field because github does not support autolinking there this pull resquest fixes issue importing ris files jabref checks for date fields y pyda and y and uses the first one it finds the problem is that y refers to access date da in most cases is a generic date and py is the publication year reliable field couldnt find references to y primary date however as already cited in and by doing some exports we found y to be pys synonym furthermore when py received a higher priority than y some tests cases didnt pass as there were a missing month field in bib we established a priority system indicated by the datetags lowest index higher priority added test cases for this and changed one of the old ones adding the month field nicely displayed in change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for the feedback siedlerchrthose are great suggestions using a list is much better and since indexof returns if it doesnt find the element we can use it to find out if the element is in datetags and to get its index like this java } else if tagpriority datetagsindexof tag && valuelength { if tagpriority premature optimization is the root of all evil donald knuththe complexity really is only for large nbut i think you can omit one time searching the list see my comment at the code thank you for your work
5121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,add option to allow for integers in field edition when running database in bibtex mode because github does not support autolinking there issue is a new fork from the old pull requesti added a checkbox in preferences generaltab to allow insert integers in field edition when bibtex mode is running also i modified editionchecker class to permit this configuration as well as the test cases in integritychecktest class change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ok i focused on the preference stuff made a comment everything else fits into the pattern so i guess besides the override lgtmdid you notice the unresolved merge conflicts please fix the changes proposed from calixtus and merge the latest jabref master branch in your branch
5123,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add search for citations in latex files back end and gui here is a latex parser tool that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will ask the user for a directory to search tex files then the user could select specific files after that the tool parses these files and shows all the bibliographic entries found in a new dialog box latex_parser issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot
5142,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix substring exception in find unlinked files refactor to own method and add testthe exception came when the parsed editor string did not end with a colon and two spaces because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5150,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,fix for issue because github does not support autolinking there distinguish the user action between menu and button reuse the acitons class to add enum to the description of user action 图片 https user imagesentcom afa e ae d a cec png 图片 https user imagesgithubusercontentcom c afa e c f faapng 图片 https user imagesgithubusercontentcom d f afa e db fe d d png just change the jabrefaction as your suggestion hey ffffatgoose it would be awesome if you could have a look at the comments and find some time to incorporate them in the pr or discuss them in the comments in case you disagree i feel very sorry to delay for so long i have some question for the class actions below are the codes of button creation in the main frame of gui as the javadoc told olddatabasecommandwrapper and actions is deprecated however they are still in use…… input parameter is in the form of actions so i reuse the class to return the exact actionname of user action waiting for suggestions d i feel confused about the checkstyle error……ask for some help 图片 ffffatgoose this is not related to your changes its a problem in the master branch hi ffffatgoose jabref is in the middle of converting the gui from the old swing controls to javafx see pr and also refactoring the codebase to the mvvm pattern this is why actions oldcommandwrapper etc are deprecated but are still used since not everything is already refactored this will take timeto bring some relief from confusion the controlsfx library brings its own action class which is different from the standardactions enum and the deprecated actions enum the mvvmfx actionclass is just the eventhandler the standardactions enum of jabref and the action interface includes only the information about the action text icon etc since not everything is converted yet most of the menuitems still use the olddatabasewrapper stuffabout your checkstyle issue i was able to reproduce it with the vanilla sources i think it has something to do with the gradle build script and some recent updates of the junit library would be probably the best to create a new issue in the issuetracker on githubedit whoopsie while writing my comment siedlerchr was quicker ffffatgoose calixtus the checkstyle problem on the master should be gone now get it i only used the class actions in the place that the input parameter is in the form of actions like this i think its no use to add a new enum for it is there and else problem i should solve or it is necessary to change my way to solve this tvt davidemdot could you take a second look if this is ready tobiasdiez do you think this is fine to merge yes looks good to me thanks again for your contribution
5190,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,border for group color indicator and some space for tooltip refs one of my groupcolors is white which made it hard to see in the jabref windowi added a thin grey border so one can see even white groups on white backgroundalso i made the area the user can put his mousepointer in to show the tooltip a little wider pixels were to small left before right after groupcolorbefore groupcolorafter to review change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5191,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,tooltip and icon added to group cell with a missing tooltip and icon in the color group column i used default_group_icon from jabreficons to supplement the missing icon hi i just saw your pr with a very close relationship to mine there are two little issues i spotted but i think both should work well together you can ignore codecov its for gui stuff not really relevant we try to focus on important tests for logic and model eg the methods and classes there should have tests thanks for your contribution
5195,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,add citation commands to texparser we added a few more citation commands autocite autocite blockcquote and textcquote this pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5196,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,implement ottobib fetcher fetcher does not return bibtex data in plain text instead its part of an html text areafix isbn testsupdate user agentfollow up from change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5197,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,0,with missing year value in year column with missing year value in year column the query to receive this value was missing in the ieeejava simply added one change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your contribution its better if you create a new branch for a fix or feature this makes it easier to only see the related changes and not the other merge historyhere is a description how it works sorry for the problem and thanks for the tip would you like me to redo the last commit i can reset my local repo make a change and send it back in new branch or just leave it as it is now for this small commit it should be sufficient to just merge the latest upstream master changes in your branch
5201,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,fix exception when adding new entry because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste working in linux as well
5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste working in linux as well
5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste working in linux as well
5224,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,fix exception when adding field formatter in cleanup entries dialog this
5230,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,treat unknown fields as multi line fields unknown fields are now treated as multi line fields in the future we should provide an ui interface to specify or change properties of fields because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5259,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,avoid erroneous materialdesigniconfactory fix for refactoring of the code for managing icons now all usages of dejensdfxglyphs or dejensdfxglyphsmaterialdesignicons are encapsulated in the package guiicon in there the usage of dejensdfxglyphsmaterialdesigniconsutilsmaterialdesigniconfactory is avoided because of the error described in the issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ok thank you for your suggestions i reworked it now and tried to improve it further by keeping all things related to materialdesignicons inside guiicon and outside of this package only jabreficon s are used that also made the class jabrefmaterialdesigniconfactory obsoleteit is working now as expected but there is one thing which should be improved in the class orgjabreflogicgroupsdefaultgroupsfactory there was an import of dejensdfxglyphsmaterialdesigniconsmaterialdesignicon which passed the architecture tests when i refactored it i exchanged it with an import of orgjabrefguiiconicontheme which caused the architecture test to fail now im not sure how exactly the functionality in defaultgroupsfactory is needed and dont know how to properly do it to let the test pass i used a string constant nowi also added the architecture test you suggested and hope that it is correct as i havent done anything with archunit yet looks good but that workaround is no longer necessaryits not a workaround anymore but more a refactoring which also fixes the issuei would also say that it is ready to merge there is just the thing i described in the class orgjabreflogicgroupsdefaultgroupsfactory there was an import of dejensdfxglyphsmaterialdesigniconsmaterialdesignicon which passed the architecture tests when i refactored it i exchanged it with an import of orgjabrefguiiconicontheme which caused the architecture test to fail now im not sure how exactly the functionality in defaultgroupsfactory is needed and dont know how to properly do it to let the test pass i used a string constant now i am going to merge this now looks good to me i think the issue with the groupfactory is when you store and read groups with an icon
5265,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,conversion of preferences xmp and nameformatters to mvvm follow up to quick and easy same issue with combobox as in filed bug report in xmp be ready to review change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues im going to have to resolve some merge conflicts after merging as usual a big thanks for your work again as usual the code looks really good a few minor suggestions and then we can merge from my point of view will review your other pr as soon as possible have a bit much to do at the moment sorry as usual there is no hurry really im just coding this in my not so free time to distract me from my real work with my thesis this is just to have some fun and to remind me of the days i studied informatik in sorry for asking but why do i receive e mail notifications about this pr here i am not subscribed to it codeberg asgithubalternative buhtz you may have accidentally subsribed or comemnted earlier on this pr or you are watching the repo at the top right side next to an issue or pr you can unsubscribe
5266,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,issue issue add software and dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in software and dataset entry type entrytype change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues looks good so far please add a changelog entryregarding the fields you can look up in the biblatex documentation the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes xxxx or xxx then the issue will be automatically closed when the pr is which biblatex styles support dataset biblatex bath does
5266,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,issue issue add software and dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in software and dataset entry type entrytype change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues looks good so far please add a changelog entryregarding the fields you can look up in the biblatex documentation the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes xxxx or xxx then the issue will be automatically closed when the pr is which biblatex styles support dataset biblatex bath does
5276,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,add shorten doi field formatter because github does not support autolinking there what this pr addsthis pr is related to added a field formatter called shorten doi formatter which shortens doi using service you run the formatter from _cleanup entries dialog_ by adding it to _run field formatter_ listit looks to work fine it enables one way conversion from doi to short doi implementation details i assumed that short doi is still a legal doi thats why i adjusted the doi class to work with short dois feedback wantedi id like to ask for your feedback about the code at this stage next step add a more accessible ui a toggle button next to the doi field _shortened long version_ this was suggested by koppor this will require adding opposite conversion from short doi to doi as servcie doesnt offer such a feature i see two approaches store the original doi during the conversion for further back conversion drawback you may not convert from short doi to doi if you havent done the opposite conversion for at least one time try to obtain doi from short doi using service as it is possible by catching the redirectioni find the st approach fine the th approach is not really good as we are not using any public api and this can stop working in the futurewhat do you think folks importantif you would like to checkout this branch and test locally please use shortdoi workaround branch which uses workaround by r light for issue on master branch there is an issue with accessing _general tab_ in bibentry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you for review i applied changes as you suggested in commentsnow you have to decide what about this more accessible ui to this feature imho adding it to right click menu as suggested by tobiasdiez sounds nice but as you said its unfortunately blocked at the moment by what do you think tobiasdiez siedlerchr kopporwould you like to merge this pr if you approve it of course and create a new issue for the ui enhancement in the future or rather do ui in this pr i think you can create a new issue for adding it to the context menu and then refer to that blocker issue i think we can already merge and ill add a comment concerning the ui implementation in again for your contribution
5280,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,revert get jabref running in eclipse reverts jabref jabref
5282,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix field inheritance this implements the complex biblatex rule set to solve the crossref inheritance issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot for your contribution codewise looks in general good to me it would be nice if you could incoropate some more tests you can make a parameterized test then maybe siedlerchr tobiasdiez i reworked and extended the tests according to your suggestions thanks for your valuable feedback
5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes fixes the threading issue part of is by using uithreadstringproperty new classes are added to guiutiluithreadaware which enable a wrapper class around observablelist which ensures that changes are propagated on the javafx application threadi started with uithreadlistdecorator but others like uithreadmapdecorator could be implemented similarly change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ok it took me while to reproduce reliably but now i added a uithreadstringproperty in personseditor which wraps the original property and the issue should be now tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in guifieldeditors thanks i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side thanks i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your sidealright not quite i want have another look at it and also add some comments to the new classes ok from my side this would be ready to merge tobiasdiez thanks for the help and feedback for this i guess is obsolete now
5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes fixes the threading issue part of is by using uithreadstringproperty new classes are added to guiutiluithreadaware which enable a wrapper class around observablelist which ensures that changes are propagated on the javafx application threadi started with uithreadlistdecorator but others like uithreadmapdecorator could be implemented similarly change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ok it took me while to reproduce reliably but now i added a uithreadstringproperty in personseditor which wraps the original property and the issue should be now tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in guifieldeditors thanks i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side thanks i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your sidealright not quite i want have another look at it and also add some comments to the new classes ok from my side this would be ready to merge tobiasdiez thanks for the help and feedback for this i guess is obsolete now
5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes fixes the threading issue part of is by using uithreadstringproperty new classes are added to guiutiluithreadaware which enable a wrapper class around observablelist which ensures that changes are propagated on the javafx application threadi started with uithreadlistdecorator but others like uithreadmapdecorator could be implemented similarly change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues ok it took me while to reproduce reliably but now i added a uithreadstringproperty in personseditor which wraps the original property and the issue should be now tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in guifieldeditors thanks i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side thanks i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your sidealright not quite i want have another look at it and also add some comments to the new classes ok from my side this would be ready to merge tobiasdiez thanks for the help and feedback for this i guess is obsolete now
5325,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,use binding to update global state manager because github does not support autolinking there use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular and fixes moreover i an error that was thrown when interacting with the toolbar missing open statement but we were using reflection change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5325,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,use binding to update global state manager because github does not support autolinking there use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular and fixes moreover i an error that was thrown when interacting with the toolbar missing open statement but we were using reflection change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5326,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,fix problem with search and switching between libraries by using bindings instead of listeners because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5338,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix npe when opening a non existing file from the recent files menu dialogservice object was null because the filehistorymenu class is initialized before the ctor of jabref frame creates the dialog service object because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5340,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix various copy to clipboard issues pt fixing by only using the text content to be added in the right click copy functionality in the preview see right click option in maintable additionally store content also in string format that can be accessed then with simple text editorspt improve also functionality in export to clipboard dialogcurrently all exporters are used for export to clipboard however the ones which are creating files like pdfs cannot be used for copying to clipboard thus they are filtered out now additionally in case rtf or html content is exported the specific clipboardcontent has been used change in changelogmd described tests created adjusted for changes manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez if you dont have further objections i would merge it to master 😃
5347,1,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix display bug for keyword groups with empty keywords by filtering out empty keywords because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5351,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix exception when closing jabref by using javafx windows instead of awt windows because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5352,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,bring back the context menu as explained in it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround and refs i removed the custom tab handling because it is now working as expected ie is in java because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5352,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,bring back the context menu as explained in it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround and refs i removed the custom tab handling because it is now working as expected ie is in java because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5354,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,fix group color when scrolling problem was that the pseudo class was not initialized correctly but was only triggered upon changes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5355,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix default group color now groups have a dark gray instead of white as their default color because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5356,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,show more than one group color bar shows multiple colored bars if the entry belongs to more than one group with color implements describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues for left aligned if one does not know the feature this looks better to meanything else left ok left aligned it is ready to merge from my pov
5382,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix for fallback to in case stored preview cycle pos does no longer exist fix for problem should in theory not happen as always a correct size should be stored however if for example csl styles are not loaded properly the mentioned exception in might occurto prevent this upon creating the preview prefs now the stored cycle position is now compared to the actual list of previews before being set because github does not support autolinking there change in changelogmd described i think as this is not a common problem can be omitted manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5385,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,reenable prevcycle because github does not support autolinking there okay this should be working again now however without the csl styles working see its a bit hard to check fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5392,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix writing of editor field is duplicated serialization of orfields was not implemented properly as the currently written field was not stored correctly change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5395,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,fix exception when merging entries the problem was that sourcechanged was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime solution run sourcechanged on the javafx thread but synchronously because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i merged to keep things moving however it would be nice if my code questions would lead no another pr adding comments on the code
5421,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,add change listener to main table to scroll to imported entry add change listener to main table to scroll to imported entry change in changelogmd described not really testable via unit tests manually tested changed features in running jabref not needed helpjabreforg https githubcom jabref helpjabreforg issues please re review siedlerchr what do you think loos good to me now as well thanks for your contribution
5432,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,fix cursor jump the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are now because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues when you create a new entry the focus should be in the first field does this still hold true siedlerchr thats a good suggestion but does not even work in the current master something for another pr maybe
5448,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix nullpointer on import change in changelogmd described not testable with unit tests manually tested changed features in running jabref not needed helpjabreforg https githubcom jabref helpjabreforg issues
5451,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,add option to display entry preview as tab in entry editor adds the entry preview as a tab also fixes plus a bit of refactoring describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5451,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,add option to display entry preview as tab in entry editor adds the entry preview as a tab also fixes plus a bit of refactoring describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5454,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,fix highlight issues for lists and fixes the problem was in both cases that the list view reuses nodes when scrolling instead of creating new ones because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5454,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,fix highlight issues for lists and fixes the problem was in both cases that the list view reuses nodes when scrolling instead of creating new ones because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5471,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,mark oostyle as invalid if no defaultstyle in addtion dsplay correct layout for article and book todo add documentation issue because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5472,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix highlight problem in entry preview by using markjs because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5481,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix for issue issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues good work 👍 ill merge this pr nowi hope you enjoyed contributing to jabref i would like to continue working with you what do you think about resolving this issue was recently reported and is about an important feature of jabref
5482,1,0,1,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,add x primary selection clipboard support _related to issue jabref and the x window clipboard selections _i have been testing different alternatives and i think that this is the best choice for using xclipboard a new dependency is needed and it does not give any added value all contents that jabref sends to the system clipboard will be available in the x primary clipboard too ie copyversiontoclipboard in the about dialog so it is possible to paste it in a text editor doing click in the middle third mouse button copy_version it is necessary to call the install method in every text field where you want to use it for the moment it is activated in the globalsearchbar therefore you can try it write something select a piece of text and do click in the middle button global_search now clipboardmanager uses the singleton pattern it is instantiated once in globalsjava any feedback will be more than welcome d change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you on working on this no linux at hand currentlythe primary and secondary buffers are completely separate buffers so the test case is open jabref add a new entry have the entry editor opened showing the author and title field select milton {abramowitz} and irene a {stegun} here in this issue and press ctrl c to copy that text to the primary buffer select handbook of mathematical functions with formulas graphs and mathematical tables with the mouse to not press any keyboard shortcut switch to jabref maybe using alt tab go to the title field press the middle mouse key check expectation handbook of mathematical functions with formulas graphs and mathematical tables is pasted go to the author field press ctrl v expectation milton {abramowitz} and irene a {stegun} appears davidemdot could you check if it works like that gregoa this is the expected behavior if i remember the linux desktop correctly i checked which seems a good short resource on that i see at that firefox pastes the secondary clipboard at ctrl v if text was selected in firefoxshort summary for x clipboards longer text good introd pargraphs i learned there is clipboard typically ctrl c v and primary mouse text highlight source for the bibtex example koppor after last commit which activates the primary clipboard for all textfield textarea controls in the entry editor your test case works exactly as you said gregoa nomicrosoftbuhtz could you test if it meets your expectations find the build at
5483,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix not on fx thread error for custom entry types revert change done in because the actual code just opens the already loaded databasesat this point the databases are already loaded in a background thread because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5495,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,fix deprecated crossref rest api parameter changed the query parameter querytitle which is deprecated to querybibliographic because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for the quick fix for your next pull request please use a short description of the fix in the title and the actual xxx in the description because this makes it easier for us to see what the pr is about without checking the issue number firsttip github takes the first line of the commit message as title in a prtext after an empty line linebreak will be considered as description text
5497,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,try to fix dark theme path fix dark themeworkaround until is because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues gradle also works fine still invalid url should work now
5501,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,new ads fetcher i added a new fetcher that uses the new ads api some open question for implementation which ids should be viable ids for idbasedfetchers only doi only ads bibcode the current old version can handle both but im not sure if this is intentional we need an api key to access the api i have one for development but someone has to create one for the project we need to set a limit on how much search results are shown is a good valuerefs change in changelogmd described cleanups tasks change comments and documentation manually tested changed features in running jabref add api key that looks already really good nice job if it is relatively easy to implement then doi bibcode support would be nice i will request an official key entries sounds indeed gooddo you have any questions codewise at the moment or anything else where we can help if it is relatively easy to implement then doi bibcode support would be nicethat is no problem i already have implemented this do you have any questions codewise at the moment or anything else where we can helpat the moment i dont have any questions but i would like to get as much feedback as possible right now i have implemented the fetcher in a new class should we keep the old one and remove it later you can delete replace the old fetcher there is no point in having two fetcher for the same online service great thanks any plans chances that the new fetcher will be back ported to the latest stable release
5513,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,making importing a single file easier issue i added a condition to see if only one entry is being importedif the condition adheres mark the entry as selected change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues i would totally agree with you but when i try that it doesnt seem to select the entryi had though to put it there too at first any other suggestion as to how to make it work usually the problem is that the code is run before the control is initialized completely to fix this it is usually sufficient to wrap everything in a platformrunlater call can you please try this out here as well i tried to wrap the if statement in a platformrunlater and it did not workalso tried to wrap all of initialze in a platformrunlater with and without the if statement in itit did not select the single file being importeddo you have any suggestions as to what i could do differently sorry for the inconvenience of this pr
5519,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,fix xmp null error was caused by wrapping a set of fields in a treeset without specifying the comparator because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5521,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix text colour in merge dialogue fixes the colour of the textfields in the merge dialogue was set to black i set that to fx light text color aa af in mergeentriescssno need for documentation updatetested manually on local environmentopen to suggestion for test cases 😄 ps forgive me if i missed something this is my first pr to a relatively large project ✨ because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg width altscreenshot at srchttps user imagesentcom cde f e e f f d f dfpng img width altscreenshot at src colour of field text in merge window from black to gray ps forgive me if i missed something this is my first pr to a relatively large project tested the change manually however im open to suggestions in regards to what other gui test i see that diffhighlightingtestjava checks style classes the failing test on travis is bibentrywritertestjava alphabeticserialization introduced today on master not related to this ticket will update with master again once the above is resolved thank you for your review ill test the css change and push that as well soon 😄 matthiasgeiger im having a hard time finding which property makes the radio buttons look black when they are not selected do you know where it could come fromin the meantime i spotted that i was affecting the light theme with the new css now that is welcome to jabref and thanks for your contribution the substructure of the radio button is described here so radio button radio applies to the outer ring while radio button dot is for the centered dot these admit also additional pseudo classes controlling the appearance in the different states for example radio armed is for the armed state and there are also selected determinate and indeterminate updated radio button to look like this thank you for your help tobiasdiez 👍 img width altscreenshot at src great looks good to me now
5525,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,remove empty customization warning problem was that the dialog was shown whenever the library contained customized entry types even if the customizations were equal to the customization stored in the global preferences a bit of refactoring renaming along the way because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5533,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix a bug that threw a npe when using middle mouse click on windows hotfix for solving code looked good since its a hotfix i just
5539,1,0,0,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,improve performance improve performance by caching fields as keywordlist remove duplicate change listener remove preference access in loopwith these changes the mega huge library of aegit works without too much delays the initial loading of the database is a bit slow but still ok thus this pr is a potential fix for and for describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez wonderful let me know when i can start testing this fix
5554,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,make entry editor dnd behave as specified in settings because github does not support autolinking there the setting only applies to the entry editor the maintainable is still differentiating between the dnd modifiers as implemented in the linked pr koppor refs change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues in my opinion dnd onto the maintable and the entry editor should behave the same otherwise its really confusing that some operations on the entry editor respect some settings while a similar action on the maintable does not agree both should behave as outlined above if possible 😅tobias diez schrieb am sa nov in my opinion dnd onto the maintable and the entry editor should behave the same otherwise its really confusing that some operations on the entry editor respect some settings while a similar action on the maintable does not — you are receiving this because you were mentioned reply to this email directly view it on github koppor why did you merged this although it removes functionality that we both agreed should be kept ill revert since this is not a proper fix in my opinion i understood your comment wrong i thought with this pr they would behave the same i did not check whether the entry editor supports modifier keysone should update wrt the current behavior of the entry editor
5556,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,select newly added jstyle in table to prevent exception because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5558,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,dont remove unwanted characters before first author is s… heyim copying my comment from the issue page i found that in bracketedpatternjava on line the comma is removed and therefore the authorlist is not correct would fix this issue by not applying bibtexkeygeneratorremoveunwantedcharacters before extracting the author but afterwards the tests pass but can anyone think of a problem with that approachas it is my first pr to this project any suggestions are highly appreciated thanks for the great work change in changelogmd described manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message https user imagesentcom ceaaf fdad e eed e png thanks for your contribution looks good to me i currently cant think of any issues with this fix and thats why we have tests for such cases 😉 i am glad that i could help
5560,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix status popups as discussed in this pr removes some obsolete notifications and additionally removes notifications during autosavei have also removed the strings from the language file however i was not sure if this was correct change in changelogmd described manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message ka o thanks for your contribution again could you please fix the checkstyle error then its ready for merge siedlerchr i forgot to remove the unused import it should pass the style check now
5614,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,add option to parse new references from plain text using grobid service solving this pr should solve jabref extension is developed as part of a software engineering course even though we write this feature mainly for our university course we are willing to adjust our feature so that jabref can benefit from itthe feature is now ready for review it reintroduces the possibility to extract references from plain text using a custom grobid server this is implemented via a new searchbasedfetcherone could work some more on the grobid server see but sadly we do not have time for that change in changelogmd described manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message note in i tried to bring back the old menu item as it exists in the x versions of jabref quick statement about the points you mentioned the documentation you read is not up to date especially in terms of the dialogue popups on branch milestone we already reused the existing pop up window and added the entries automatically after parsing moreover since the user might want to add multiple entries at once we inserted a checkbox which enables the user to create a new library tab so that possibly wrong parsed references are not immediately in his the current libraryscreenshot ceckbox will change the buttons soon we changed our mind and do not intend to implement the conversion function tei to bib by ourselves anymore after seeing this method and this method the reference text is parsed by the grobid server which already has the needed function we just change the function to return the processed citation in bibtex format rather than tei format here thats why we need a custom grobid server we will link this server in this pr we already implemented a checkbox to use a custom grobid server ip preferences advanced tab if unchecked the default value is selected probably we should set that to but the problem is that this server seems to be constantly overwhelmed by the number of incoming requests thats why we hosted the server on localhost for testing purposes you can find a manual how to start that server here it uses gradle screenshot grobid we will try to change our package structure button placing as well as used dependencies according to your suggestions this week we will also try to update the documentation concerning maybe switch the two buttons in the existing implementation the go on button should always be right and never label cancel label it return to library so that the user knows what happens that depends on the os you can add the correct type and then javafx will put them in the right order automatically and cancel is pretty ok please merge into your branch then i will close that pr 👍 i would make the checkbox an additional buttoninsert into current library and insert into new library here is the link to the custom grobid server koppor do we have the resources to host the grobid server i dont think many people have the knowledge to install and setup gropid on localhost tobiasdiez there are options maybe we just limit the request rates just limit the requests per user per hour or simply charge for it we will check options how to host and maybe host some public service in beta we finished our work for this week except unit test and documentation we added a new button in the toolbar pressing this button or the corresponding context menu button this window appears waiting for the server response the following dialog is displayed successfully parsing the entries are created and one of them is displayed inside the entryeditor grobid fails to parse a string the following message is displayed this is also the case when some entries are parsed successfully and some are not user must separate the entries with double semicolon we had no better idea the still open to dos are write the unit tests update the documentation add localization entries work on the grobid serveralso we intergrated our code better into the existing code base it would be nice to get some feedback on thatnote the grobid server does not work right with java we used java for the server but recommended is java as stated here server had some nullpointer exceptions for no reason sometimes unit tests have now been implementedthe documentation was updated to match the current development status and to track changes in our timeline and planning hey nikodemkch obsluk marcelluethiwe want to help you by deploying a grobid server i hope you understand that it is important that the server is maintained by the jabref developers team ive already set up the default grobid server but what i read is that you want to customize the server can you point me to a repo from which i can deploy you custom server hey linusdietz the repo is here only difference to the original server is the following still have to look at the requested changesthank you for deploying the server hey linusdietz the repo is here the only difference to the original server is the following nikodemkch grobid e b we still have to look at the requested changes thank you for deploying the serverso i do have the server running it might be a bit slow but feel free to test it and report your findings to me potentially via slack ive invited nikodemkch whats the current status here is this already ready for review or do you need input on certain parts today we will fix the requested changes and try to fix the travis pipeline then we will open the pr for review sadly we will probably not find the time to change the grobid server as requested as the examination phase is kicking in first exam on december th this pr is now ready for review sadly the provided server seems to not work properly i cant access the page even in a browser it says the server took too long to respond the feature was tested with a locally hosted server sadly the provided server seems to not work properly i cant access the page even in a browser it says the server took too long to respond sorry indeed the server is running but the port in question is unreachable from the internet ill have a look the server should be available now can you check again thanks for the feedback we will work on this pr the next days nikodemkch could you please merge upstream master so that our github workflows are triggered on pushplease also be aware of eol issues anyone experiencing &quoterror your local changes to the following files would be overwritten by merge src test resources org jabref logic importer fileformat bibtexmlimportertestarticle bib&quot can just delete src test resources org jabref logic importer fileformat bib &mdash jabref jabref_org sorry for our late response but we will finish our feature as soon if the upcoming exams are over january th i hope this is ok to mention that here could you shortly outline why jruby is needed i thought a simple call is made to a grobid server could you shortly outline why jruby is needed i thought a simple call is made to a grobid serverjruby is not needed anymore at the beginning of this feature project we thought about including a different parser that uses jruby but we are using grobid via now status update we have resolved all requested changes and are now fixing the pipeline we have finished this feature and waiting for your reviewsince we must document all ui changes here they are one can access the new feature in two ways jabref pressed the following screen will appear jabref pressed the following notification appears jabref here is the end result when parsing is complete jabref just a little pr mainte ce were on it and are confident itll be ready early next week if there are no other changes necessary unfortunately our lectures will begin next week which means well have to put this project on the back burner for a bit if we fail to deliver for the release thanks a lot for the very good revision ive only a couple of minor remarks left before we can merge would be awesome if you could address them in a timely manner so that your pr still makes it into the release in two weeks koppor is it possible to create the domain grobidjabreforg as an alias for linusdietz grobid server in this way we can change the server in the future without changing the url and thus without the need of a new releasei have resolved all these issues and am re requesting your review textkolb s wirtz g towards application portability in platform as a serviceproceedings of the th ieee international symposium on service oriented system engineering sose oxford united kingdom april from author {s kolb and g wirtz} title {towards application portability in platform as a service}} result is so so however user experience is ok the only thing is the textbox can it be soft wrapped grafik grafik pasting kolb s wirtz g towards application portability in platform as a service proceedings of the th ieee international symposium on service oriented system engineering sose oxford united kingdom april from grafik result misc{kolb author {s kolb and g wirtz} title {towards application portability in platform as a service} } result is so so however user experience is ok the only thing is the textbox can it be soft wrappedwe made the conscious design choice to go without softwrapping user input to improve quality of user experience when passing multiple entries but changing it isnt a problem and we should be able implement softwrapping together with the other requested changes until the weekend i see the problem we decided to split entries at line breaks regex \\\r\\\n without the line break you copied over from the website the result is quite better article{kolbjune july author {s kolb and j lenhard and g wirtz} year {june july } address {new york ny usa} booktitle {application migration effort in the cloud the case of cloud platforms proceedings of the th ieee international conference on cloud computing cloud }} softwrap makes sense since it mentally prevents the user from adding more breaks after he pasted his referenceswe thought using line breaks would be most convenient but we can easily change this to double line breaks or even something else so what do you think koppor as the example shows it would be indeed good to change the item separation to two lines so that one empty line needs to be between the entries could you also add this as a short comment in the prompt text please enter the plain text references to make it easier for users to discover the feature ready for review againsee comments in open issues abovealso the feature now separates at double empty lines onlyand this is displayed to the user since the commit below think we are good to gofor a follow up the accept header should be set i created a follow up issue at you so much for working on this issue and keeping up the work after the exam phase 🎉 koppor the address is still pointing to tum and your alias is not working would be nice to fix this before the release we also want to thank you very much it was a great experience for the whole team to participate on your project it was very helpful that you mentioned so many import details that we didnt see that helped us improving our skills to become a good software engineer 🎉 tobiasdiez added it to koppor good but can we also fix that before we release this weekend thank you for your support and feedback during the development of this featurei got response for my feature request at grobid asking for a service call that can process multiple requests at once the second use case is not what we are looking foras i understand i as caller would have the choice between sending everything in one request with little slower processing or creating and collecting multiple async threads but slightly faster processing so what do you think koppor tobiasdiez
5629,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,side pane not remembering position hii found a bug where javafx was doing some recalculations during the initial layouting setting setresizablewithparent before initial layouting was finished resulted in javafx assuming a wrong widthi changed that by adding the code to a run later blockit works good for me on mac are there any concerns with thatbest regardskai change in changelogmd described manually tested changed features in running jabref
5646,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,dark theme visibility fixes there had been some visibility issues with the interface when in dark theme changed the color of the vertical scroll bar in dark mode to allow it to be more visible against the other colors changed the color of the accent behind the number selected which appears in the group tree when an item in a group is selected to allow for the number inside to be more readablefixes shot at pm change in changelogmd described manually tested changed features in running jabref sorry if i did anything wrong this is my first pull request on a public repoalso happy birthday if youre reading this dad ageofadz thank you for being brave and submitting a pull request this is how open source should work 🎉 regarding the red cross its because our test coverage checker sometimes fails due to time outs you can ignore this error refs thank you very much for your contribution 🥇 looks good to me would you mind fixing the preview ciation styles panel for openoffice libreoffice as well this is the same one as in the entry editor so it should be easy to adapt just for clarification siedlerchr is referring to the issue mentioned here thank you very much for your contribution 🥇 looks good to me would you mind fixing the preview ciation styles panel for openoffice libreoffice as well this is the same one as in the entry editor so it should be easy to adaptthanks so much for the feedback everyonestarted working on a few of the changes as for the changes to the openoffice style selection theres a method in gui preview previewviewerjava called settheme that can apply a theme to previewarticle and previewbook in gui openoffice styleselectdialogviewjava with a note about an open issue on openjdk i was able to add previewarticlesettheme dark_css to get the text in the openoffice style selection to fit the dark mode but because it only takes strings i havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selectedheres the methods code public void settheme string theme { if themeequals themeloaderdark_css { we need to load the css file manually due to a bug in the jdk todo remove this workaround as soon as is merged url url jabrefframeclassgetresource themeloaderdark_css string dataurl data text csscharsetutf base base getencoder encodetostring stringutilgetresourcefileasstring url getbytes previewviewgetengine setuserstylesheetlocation dataurl } } what do you mean with the following but because it only takes strings i havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selectedthe method allows you to load the darkcss in which you then can add change the necessary style information what do you mean with the following but because it only takes strings i havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selected the method allows you to load the darkcss in which you then can add change the necessary style informationbecause it checks if darkcss is passed in as an argument and switches to dark theme if it is it needs a string that says which theme is active for it to change according to what theme the user selectedat the time i couldnt find one but i found the hashmap in jabrrefpreferences and passed that into it now with jabrefpreferences prefs jabrefpreferencesgetinstance and previewarticlesettheme prefsget jabrefpreferencesfx_theme which appear to worktesting right now will update my pull requests later today with that addition and your earlier suggestions jabrefpreferences prefs jabrefpreferencesgetinstance and previewarticlesettheme prefsget jabrefpreferencesfx_theme which appear to workin the style select dialogview you have access to the preferences via the preferences service which is a wrapper for dependency injection via the fxml loader for the jabrefpreferenceswe try to pass dependencies always as constructor arguments inversion of control principle to avoid direct dependency callsso the idea would be to add a method eg getactivetheme to the preferencesservice which returns the theme for the preferences then you can call settheme on the previewviewer hey many thanks once again for everyones feedbackthe newest commit has updates to darkcss based on tobiasdiazs suggestion to overwrite scroll bar and group hit colors in addition to siedlerchrs suggestion to update the styleselectdialogview using the preferences services wrapper injection as opposed to a hard dependency to jabrefpreferencesattached is a screenshot displaying the changes to scrollbar and group selected indicator visually unchanged since first commit and the oo style selection dialog view screen shot at pm this looks good thanks for the follow upi think you latest commit reverted the changes in the previous commit you can use git cherry pick to integrate these changes as well this looks good thanks for the follow up i think you latest commit reverted the changes in the previous commit ageofadz b b you can use git cherry pick to integrate these changes as wellto fix that should i use git cherry pick ^aa cd c cd a d e c b b b b fc c aa ed bcfe the commit from two hours ago should have just added gettheme to preferencesservices and jabrefpreferences and updated the styleselectdialogview to remove directly calling jabrefpreferences to refer to the preferencesservices gettheme mr koppor git wizard can you please assist with the git issue if it is only the commit b b b b fc c aa ed bcfe git cherry pick b b b b fc c aa ed bcfe is enough no need for commit ranges possibly conflicts have to be resolved just resolve it with the ide and then commit the result i use git gui and click on the envelope buttons at the upper left newest commit cherry picks b b and resolved conflicts in changelogmd and styleselectdialogviewjavathank you git wizard koppor i think a git push is missing maybe you cherry picked on the wrong branch you can always check the current overall branch status with gitk all& then it displays where which branch currently points to maybe the articleh helps a bit the latest commit is dceb f d ceffae e b c fb cf gitk all& shows it as head with c bedd c fb f cd f ca as parent git status says im up to dateunsure why it isnt appearing in the pr but appears on my fork you pushed it to your master branch but not to the base branch of this pr this looks good now thanks again and looking forward to your next pr 😄 couldn’t wish for a better first pr learned a lot and had a blast i’m stoked to do many morethank you all very much for being so helpful and patient commit after commit 😂
5665,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,improve change scanner if a file is changed externally jabref is doing a way merge between the last saved value vs current value in jabref vs new value in filethe way this is done is by first comparing the last saved file with the current changed file and then trying to find additional other changes in the currently open database this is really complex and i believe there is some subtle bug in the logic leading to with this pr the change scanner is changed to a to simple way merge between the current value in jabref vs new value in file this is way simpler and i hope this pr in a few edge cases the way merge has a small disadvantage for example consider the following steps user a opens file user a changes field author to user a and adds field title with value new user b opens file user b changes field author to user b user b saves fileat this point user a gets a message that the file changed with the following changes field author changed from user a to user b field title was removedthe way merge could detect that title was newly added and thus could automatically reapply this change this is no longer possible with the simple way merge title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable we have to be careful how this works together with a shared database the shared databases have their own update sync mechanism but i do agree that this should be made consistent at some point i am making it consistent in my local dev branch at that one uses the merge entries dialog as it is the case in the shared database dialog does also cover the edge case by tobiasdiez is the reference file updated after the conflicts are reported is it necessary i would guess yes because changes reported should not be reported again and the reference file is not the bib file on disk is it possible to add some test cases i removed the reference file completely how hard is it to embed the merge entries dialog at the yellow place below koppor the merge entries dialog is already consisting of a borderpane called mergeentries which can be embedded easily see the mergeentriesdialog minor wish esc should be enabled for closing the dialog refs siedlerchr great may i ask whether you could do it i if can wait until this evening or afternoon i can try to add it improved the pr based on the comments didnt change anything to the ui as this was not the subject of this pr so we are going ahead with this pr and further work on after the release of this pr has the advantage that its finished and seems to work 🎉 maybe we will offer both possibilities transparent merge of changes explicit merge of changes this pr siedlerchr can you do the integration of the merge entries dialog in a separate pr this evening is still long and i am really looking forward to it meanwhile ill work on the other pr
5666,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,auto file finder follows symbolic links title of the pr must not reference an issue because github does not support autolinking there i didnt tried it but it should work change in changelogmd described if applicable needs to be tested on linux and mac os x lyzardking and linusdietz maybe you could test that maybe even add a test case which runs only on linux and osx i just tried this out on my system with the deb from master installed to see if i was having the same issueit seems to work already i added a reference with key foobar added in the file path in settings the link created with ln s in the path i created a foobarpdf filejabref seems to import it the only problem i can see is that it added two files one from the normal folder and one from the symlink
5667,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,rename lookup fulltext to download fulltext closes and surpasses does not addresses the follow up issues mentioned in describe the changes you have made here title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5667,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,rename lookup fulltext to download fulltext closes and surpasses does not addresses the follow up issues mentioned in describe the changes you have made here title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5670,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,improve column preference migration title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5671,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix copy drag and drop action title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5680,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,add throttle to autosaveuimanager as discussed in there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in ms which is especially handy when automated tasks like find and replace are performed change in changelogmd described if applicable when working on this the comments on should be checked 😇 i found the scheduledservice from javafx mabye this is an option as well koppor by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progressthis leads me to another question lets say an auto save action is happening and during the save process the user presses ctrl s what happensas i can see there are two savedatabaseaction created one in the basepanel and one in the autosavemanager no locking is happening so basically the later manual saved version could be overwritten by the older autosave one siedlerchr i think this is more for recurring tasks rather to simply defer a task as it says that it will go from scheduled running finished scheduled automatically actually siedlerchr you were right there is a scheduledthreadpoolexecutor i now completely changed the way to tackle the problem autosavemanager had a normal executorservice there was actually a bug when saving took longer executorservice would through an exception as the pool size was only of the size one under certain circumstances newer information might not get auto saved thereforethe current implementation replaces the executorservice by an scheduledexecutorservice additionally the bug of can now be reproduced when autosave is enabled change something and quickly press ctrl s you will see the error so we should make the savedatabaseaction thread safe to prevent the error koppor what do you think ah cool that sounds good thread safe sounds fittingthere are different ways to achieve this and maybe one of those newer locking things is helping ka o do you use eclipse or intellij with intellij and the complete setup from the autoformat takes care by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progress this leads me to another question lets say an auto save action is happening and during the save process the user presses ctrl s what happens unsure whether this is still the question either cancel the current autosave or let it go and then trigger it again i would prefer the former as long as we write to sav and then move to bib thus we do not destroy the bib file of the user koppor actually i have important that already but i forgot to do auto formatting before committing ive now created a pre commit hook which runs checkstyle so that this doesnt happens again thanks again
5694,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,bump checkstyle from to bumps checkstyle from to release notes sourced from checkstyles releases checkstyle aa maven release plugin prepare release checkstyle d doc add releasenotes c issue fix wrapping handing xml indentation aa e issue add media query for small devices use wrapper for tables svgs edc revert issue fix xwiki build on wercker c c issue fix xwiki build on wercker cdbc d config bump picocli from to abc ae config bump maven enforcer plugin from m to m b f config disable mac jdk until fbac config bump sevntu to additional commits viewable in compare view dependabot compatibility score will resolve any conflicts with this pr as long as you dont alter it yourself you can also trigger a rebase manually by commenting dependabot rebase dependabot automerge start if all status checks pass dependabot will automatically merge this pull request dependabot automerge end dependabot commands and options you can trigger dependabot actions by commenting on this pr dependabot rebase will rebase this pr dependabot recreate will recreate this pr overwriting any edits that have been made to it dependabot merge will merge this pr after your ci passes on it dependabot squash and merge will squash and merge this pr after your ci passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this pr if it is closed dependabot close will close this pr and stop dependabot recreating it you can achieve the same result by closing it manually dependabot ignore this major version will close this pr and stop dependabot creating any more for this major version unless you reopen the pr or upgrade to it yourself dependabot ignore this minor version will close this pr and stop dependabot creating any more for this minor version unless you reopen the pr or upgrade to it yourself dependabot ignore this dependency will close this pr and stop dependabot creating any more for this dependency unless you reopen the pr or upgrade to it yourself dependabot badge me will comment on this pr with code to add a dependabot enabled badge to your readmeadditionally you can set the following in the dependabot configyml file in this repo update frequency automerge options never patch minor and dev runtime dependencies out of range updates receive only lockfile updates if desired security updates receive only security updates if desired ant checkstyle error home runner work jabref jabref src main java org jabref logic bibtexkeypattern bracketedpatternjava unused param tag for bibentry javadocmethod ant checkstyle error home runner work jabref jabref src main java org jabref logic bst bibtextextprefixjava unused param tag for numofchars javadocmethod ant checkstyle error home runner work jabref jabref src main java org jabref logic openoffice oobibstylejava unused throws tag for ioexception javadocmethod task checkstylemain ant checkstyle error home runner work jabref jabref src main java org jabref logic openoffice oobibstylejava unused throws tag for ioexception javadocmethod ant checkstyle error home runner work jabref jabref src main java org jabref logic openoffice oobibstylejava unused throws tag for ioexception javadocmethod one of your ci runs failed on this pull request so dependabot wont merge it gui tests checkstyle deploy on macos deploy on windows will still automatically merge this pull request if you amend it and your tests pass
5717,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix import into currently open library remove unnecessary parallel execution of addtab which title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5724,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,fix multiple entries allowed in crossref issue issue where multiple entries were allowed in crossref field whereas only one should be allowed https githubcom jabref jabref issues i merge even though the co authored by strings are not correct co authored by julien bénardco authored by lucas berettico authored by venceslas roullier source from for follow up please ensure that checkstyle runs through there was a wrong import order julien did you configure your ide correctly nevertheless thank you for putting effort into this looking forward to more contributions
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,persistent column sortorder this pr should make the column sort order persistent siedlerchr asked me to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it fixes refs and follow up to and the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here change in changelogmd described if applicable i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it againa shortcut for quicker testing after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog yes works fine after resetting the preferences 👍 codewise also looks good i let have tobiasdiez the final say on this great did you notice any performance drops so far not sorting alone in a huge database with over entries and many groups takes a long time so this is definitely not related to the storage of the order i am so free to merge this
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,persistent column sortorder this pr should make the column sort order persistent siedlerchr asked me to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it fixes refs and follow up to and the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here change in changelogmd described if applicable i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it againa shortcut for quicker testing after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog yes works fine after resetting the preferences 👍 codewise also looks good i let have tobiasdiez the final say on this great did you notice any performance drops so far not sorting alone in a huge database with over entries and many groups takes a long time so this is definitely not related to the storage of the order i am so free to merge this
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,persistent column sortorder this pr should make the column sort order persistent siedlerchr asked me to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it fixes refs and follow up to and the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here change in changelogmd described if applicable i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it againa shortcut for quicker testing after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog yes works fine after resetting the preferences 👍 codewise also looks good i let have tobiasdiez the final say on this great did you notice any performance drops so far not sorting alone in a huge database with over entries and many groups takes a long time so this is definitely not related to the storage of the order i am so free to merge this
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,persistent column sortorder this pr should make the column sort order persistent siedlerchr asked me to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion 😁 maybe someone else likes to test it fixes refs and follow up to and the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here change in changelogmd described if applicable i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it againa shortcut for quicker testing after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog yes works fine after resetting the preferences 👍 codewise also looks good i let have tobiasdiez the final say on this great did you notice any performance drops so far not sorting alone in a huge database with over entries and many groups takes a long time so this is definitely not related to the storage of the order i am so free to merge this
5731,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,keep source groups selected after drag and drop this pr fixes a bug where the selection of the source groups was lost after drag and drop i noticed a bug in the mapping from groupnodeviewmodel to the corresponding treeitem the bug might also have caused other selection related bugs change in changelogmd described if applicable thanks again for the contribution very welcome guys happy to be able to support you
5738,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,bugfix for multiscreen made following changes to solve multiscreen issue at jabrefgui new local variable correctedwindowpos to support saving of screendata change in method openwindow to open window at the mainscreen if needed made method printwindowstate to print out windowposition data if logger in debug mode made method testexternalcoordinates to test if window is on external screen made method numberofmonitors to test if external screen is connected numberofmonitors finally replaced by screengetscreens size at jabrefpreferences made copy of the window position and size variables recognised with _core made initialisation for the variables described above made in accordance with an project on software engineering at university basel in cooperation with unibas marcelluethi change in changelogmd described if applicable thanks for the contribution please remove the travis integration as we recently switched to github actionsotherwise this looks good so far thanks for the quick follow up
5781,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,fix gui tests refs wanted to know why our gui tests are broken the reason seems to be that we dont pass the preferences objects directly around but use globalsprefs at more places currently the issue is in maintablejava java importhandler new importhandler framegetdialogservice database externalfiletypes globalsprefsgetfilepreferences globalsprefsgetimportformatpreferences globalsprefsgetupdatefieldpreferences globalsgetfileupdatemonitor undomanager globalsstatemanager i would propose to convert the constructor of maintable and basepanel to a builder pattern because we have more than three arguments and add passing of these preferencesalternatively we can mock globalsprefsgetfilepreferences etc this is also ok for me as i accept global objects however we had a long discussion that we should get rid off globals is the right issue where we discussed globalsprefs i think the comment at summarizes the discussion for extracting globalsprefs and mocking the relevant data i dont think a builder pattern is necessary as the relevant classes are rarely initialized and all arguments need to be present anyway im not sure whether we should continue with it like that should we tryother solutions such as eclipse jubula which are independent from theconcrete code i see that separate preferences for model and logic makessense for gui it is much effort is it really worth the effort do weneed these kinds of tests would it make more sense to do black box testingmaybe we should let this task enable testing by testfx be done bystudents in a training next year seems to be much more work than expectedi wanted to come up with a quick solution to get it running to have ourtobias diez schrieb am do dez tobiasdiez commented on this pull request in src main java org jabref gui basepaneljava private optional changemonitor optionalempty private jabrefexecutorservice executorservice public basepanel jabrefframe frame basepanelpreferences preferences bibdatabasecontext bibdatabasecontext externalfiletypes externalfiletypes { thispreferences objectsrequirenonnull preferences public basepanel jabrefframe frame basepanelpreferences basepanelpreferences bibdatabasecontext bibdatabasecontext externalfiletypes externalfiletypes groupviewmode groupviewmode filepreferences filepreferences importformatpreferences importformatpreferences updatefieldpreferences updatefieldpreferences fileupdatemonitor fileupdatemonitor statemanager statemanager consumer updatecolumnpreferences supplier timestamppreferencessupplier { i think its better to pass a preferenceservice if you need to store preference options or get the current preferences at a later moment — you are receiving this because you authored the thread reply to this email directly view it on github i think gui tests would be nice to have its a good idea to let students extend the code coverage in a forthcoming project similarly to what we did with the fetcher test suite however we should provide a few basic tests that serve as an orientation with mvvm there shouldnt be any need for ui tests in the traditional sense testfx or jubala or whatever as one can simply write unit tests for the view model classes moreover the current gui tests dont add much value in my opinion for me it would be fine to remove all gui tests that we have currently the whole mess is only for the basepaneltest to fix the other tests was easy i removed all the improvements and made only cosmetic changes
5786,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix & on previews title of the pr must not reference an issue because github does not support autolinking there proposed solution for i deleted a line where the & was getting escaped when generating the preview apparently csl already handles some kind of escapingthe following entry misc{b author {b a} title {c \& d} year { }} generates this html a b ôc & dö which renders in the previewlayout like this ampersand all items with are still a todo remove items not applicable change in changelogmd described if applicable i fear that will destroy the html export and other custom html exportsthe htmlchars formatter is used there a lot idea which just came to my mind have you tried without the html chars formatter eg if it works if you remove the html chars formatter in that step you are right i removed the formatter from the csl adapter and it works just fine ill update the pr josejesinohui thank you for working on jabref could you please merge upstream master so that our automated checks are triggered on your pr would it be possible to add test cases here you already provided a snippet the reason is that in one year someone touching csladapter wont know that the htmlcharsformatter was removed and will re add it again there wont be any automatism preventing that hi sorry for the delay i will add tests and update my pr perfect thanks for the quick followup
5799,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,reimplement custom entry types dialog very early draftfield type should be radio button to switch between optional requiredtodo add check for empty fields and types prevent them with validator describe the changes you have made here title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable cool that you worked on thisas a suggestion i would not follow the original design very closely instead of having different lists for required and optional fields i would add one big list of all fields with a checkbox toggling between required optional thanks for the idea that indeed sounds more practical maybe a radio button column question which just came to my mind do we allow changing the default entry types and their fields eg removing a field from an entry type like article koppor yes it was possible to add remove fields from the built in entry types tobiasdiez what is the preferred way to add new fields to a an existing entry typei saw the entrytypesmanager with the addcustomormodifiedtype but i am not sure if this is the right approach yes that methods sounds right i vaguely remember that the complete entry type had to be replaced instead of only specifying the added removed fields easiest way is probably to look at the original code this looks really nice and is leagues above the original dialog in terms of user friendliness good job still a few things to do especially saving and removing all the fields back to the db and the prefs but at least adding to the gui already works without any further effects tobiasdiez do you have an idea why the tableview content has these empty fields when i change between a list with more and fewer fields tableview is bound bidirecitonal to the fieldsfortypeproperty thisfieldsfortypeproperty new simplelistproperty existingfieldsfortype easybindsubscribe selectedentrytypesproperty type { if type null { list typesforfield typeswithfieldget type existingfieldsfortypesetall typesforfield } } the table view is programmed in such a way that always the complete visible table is filled with rows thus even if there is no data the toggle buttons moreover rows are reused ie not re created i think it should suffice to add the check item null to and perhaps add an else statement with setgraphic null thanks that worked selected field null in stdout when i open the dialog burrbull thanks for your interest however this is still work in progress and not yet ready especially saving is not yet implemented in biblatex mode there should be position required optional optional burrbull we want to drop the difference between optional and optional field sin the long run we had already discussion about this in the past hi a very useful functionality in was the manual sorting not only in alphabetical order of the fields in the edit entry panel are you planning to implement this in this version thanks for this nice work general functionality is now ready loading saving and removing of types is possiblealso removing and adding fields to standard types is workingremoving standard entry types like article has no effect can someone update builds burrbull we have currently some problems with our buildserver at buildsjabreforg however you can download it from here the top right corner click on artifacts grafik bugwhen i try to move optional field to required whole required list emptiedi use biblatex burrbull thanks for testing could you please add some more details on how to reproduce this what steps did you do where i think i found the problem working on it changes are not properly propagated somehow the celledit event is not propagated to the listener here although the radiobuttoncell fires an event any idea where the problem could be tobiasdiez code is adapted from here fieldtypecolumnseteditable true fieldtypecolumnsetoneditcommit celleditevent t { tgettableview getitems get tgettableposition getrow setfieldtype tgetnewvalue } burrbull i the issue with the switch between required and optional aso the modified types are correctly loaded again from the preferences when opening the dialog regarding the gui i jave just one more question by default the required and optional are not shown complete i already tried to reduce the size of the left column but that didnt really work i hate those column resizing shit in javafx grafik you can try to set a preferred width in you increase the scene width now i have javalangruntimeexception javalangreflectinvocationtargetexception at orgjabrefmergedmodule javafxfxmlfxmlloader$methodhandlerinvoke unknown source at orgjabrefmergedmodule javafxfxmlfxmlloader$controllermethodeventhandlerhandle unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventhandlerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireeventimpl unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireevent unknown source at orgjabrefmergedmodule javafxeventeventfireevent unknown source at orgjabrefmergedmodule javafxscenenodefireevent unknown source at orgjabrefmergedmodule javafxscenecontrolbuttonfire unknown source at orgjabrefmergedmodule comsunjavafxscenecontrolbehaviorbuttonbehaviormousereleased unknown source at orgjabrefmergedmodule comsunjavafxscenecontrolinputmapinputmaphandle unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventhandlerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireeventimpl unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireevent unknown source at orgjabrefmergedmodule javafxeventeventfireevent unknown source at orgjabrefmergedmodule javafxscenescene$mousehandlerprocess unknown source at orgjabrefmergedmodule javafxscenesceneprocessmouseevent unknown source at orgjabrefmergedmodule javafxscenescene$scenepeerlistenermouseevent unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$ unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent unknown source at orgjabrefmergedmodule comsunglassuiviewhandlemouseevent unknown source at orgjabrefmergedmodule comsunglassuiviewnotifymouse unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguicustomentrytypescustomizeentryactionexecute unknown source at orgjabref orgjabrefguiactionsjabrefactionlambda$new$ unknown source at orgjabrefmergedmodule orgcontrolsfxcontrolactionactionhandle unknown source at orgjabrefmergedmodule orgcontrolsfxcontrolactionactionhandle unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventhandlerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireeventimpl unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireevent unknown source at orgjabrefmergedmodule javafxeventeventfireevent unknown source at orgjabrefmergedmodule javafxscenecontrolmenuitemfire unknown source at orgjabrefmergedmodule comsunjavafxscenecontrolcontextmenucontent$menuitemcontainerdoselect unknown source at orgjabrefmergedmodule comsunjavafxscenecontrolcontextmenucontent$menuitemcontainerlambda$createchildren$ unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventhandlerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventhandlermanagerdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventbasiceventdispatcherdispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventdispatchchainimpldispatchevent unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireeventimpl unknown source at orgjabrefmergedmodule comsunjavafxeventeventutilfireevent unknown source at orgjabrefmergedmodule javafxeventeventfireevent unknown source at orgjabrefmergedmodule javafxscenescene$mousehandlerprocess unknown source at orgjabrefmergedmodule javafxscenesceneprocessmouseevent unknown source at orgjabrefmergedmodule javafxscenescene$scenepeerlistenermouseevent unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$ unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock unknown source at orgjabrefmergedmodule comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent unknown source at orgjabrefmergedmodule comsunglassuiviewhandlemouseevent unknown source at orgjabrefmergedmodule comsunglassuiviewnotifymouse unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplication_runloop native method at orgjabrefmergedmodule comsunglassuigtkgtkapplicationlambda$runloop$ unknown source at javabase javalangthreadrun unknown source caused by javalangreflectinvocationtargetexception at javabase jdkinternalreflectnativemethodaccessorimplinvoke native method at javabase jdkinternalreflectnativemethodaccessorimplinvoke unknown source at javabase jdkinternalreflectdelegatingmethodaccessorimplinvoke unknown source at javabase javalangreflectmethodinvoke unknown source at comsunjavafxreflecttrampolineinvoke unknown source at jdkinternalreflectgeneratedmethodaccessor invoke unknown source at javabase jdkinternalreflectdelegatingmethodaccessorimplinvoke unknown source at javabase javalangreflectmethodinvoke unknown source at orgjabrefmergedmodule comsunjavafxreflectmethodutilinvoke unknown source at orgjabrefmergedmodule comsunjavafxfxmlmethodhelperinvoke unknown source morecaused by javalangruntimeexception a bound value cannot be set at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybaseset unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertysetvalue unknown source at orgjabref orgjabrefguicustomentrytypescustomentrytypedialogviewmodeladdnewfield unknown source at orgjabref orgjabrefguicustomentrytypescustomizeentrytypedialogviewaddnewfield unknown source more when try to add new field siedlerchr one little remark hovering the dustbin icon of eg the field doi states remove field from entry type doi which is not appropriate systemoperator one question does the table update properly i am referring to the other bug if you add a new type add a new field remove a new field burrbull all errors fixed siedlerchr concerning updating the table everything works perfectly but when i add a new entry type then i firstly get an exception javalangruntimeexception javalangreflectinvocationtargetexception at javafxfxml javafxfxmlfxmlloader$methodhandlerinvoke fxmlloaderjava at javafxfxml javafxfxmlfxmlloader$controllermethodeventhandlerhandle fxmlloaderjava at javafxbase comsunjavafxeventcompositeeventhandlerdispatchbubblingevent compositeeventhandlerjava and afterwards i get another exception javalangnullpointerexception at javabase javautilabstractcollectionaddall abstractcollectionjava at javafxbase javafxcollectionsmodifiableobservablelistbaseaddall modifiableobservablelistbasejava at javafxbase javafxcollectionsmodifiableobservablelistbasesetall modifiableobservablelistbasejava and then the entry shows up in the tablesubsequenty when i delete a newly inserted entry type then sometimes a null pointer exception occurs javalangnullpointerexception at javabase javautilabstractcollectionaddall abstractcollectionjava at javafxbase javafxcollectionsmodifiableobservablelistbaseaddall modifiableobservablelistbasejava at javafxbase javafxcollectionsmodifiableobservablelistbasesetall modifiableobservablelistbasejava at orgjabref orgjabrefguicustomentrytypescustomentrytypedialogviewmodellambda$new$ customentrytypedialogviewmodeljava at easybind orgfxmisceasybindeasybindlambda$subscribe$ easybindjava and when i select another entry type and simply click on the newly added entry type there is another null pointer exception oh i have not seen that it was already mentioned previously ah thanks i thought i had fixed this already probably forgot to commit this on my other pc just fixed it will take a bit until the binaries are updated testing the fixed one some corner cases adding several entry types without any name or at least two types with the same name exceptions occur when deleting them adding several or sometimes just one new fields without any name exception thats one thing i want to prevent empty fields and empty entry types wont be allowed will add a validator that in the next daysjust wanted to be curious about the table updating refreshing the main difference between the other table for external file types and this one is that i created a viewmodel for the table and i think in the other dialog the externalfiletype is directly used sounds good empty types should not be allowed as well as types with the same name thats one thing i want to prevent empty fields and empty entry types wont be allowed will add a validator that in the next days just wanted to be curious about the table updating refreshing the main difference between the other table for external file types and this one is that i created a viewmodel for the table and i think in the other dialog the externalfiletype is directly usedconcerning the external file types maybe the problem is that there is a type hierarchy involved and the table uses the interface externalfiletype basically all cases could be covered with just one externalfiletype as well there will be a follow up pr to fix one small issue eigentlich fehlt nur noch ein check dass man keinen doppelten typ field angeben muss aber der wird eh nicht gespeichert bzw ist dann beim reload nicht dabei ansonsten ist es soweit fertig
5823,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,fix for multiple error messages in messed up source editor jabref created a new instance of codearea everytime an entry was selected and bound multiple listeners to the codearea and to the validationstatus in bindtoentry refactored it a little bit so the codearea stays persistent and the error messages are only displayed oncedid some minor refactorings to the other validators and to modulesinfo too to avoid warning messages from the ide and a minor mistake from a previous pr in darkcss no screenshot as there is no visual change change in changelogmd described if applicable thanks for the fix i dont know exactly what but i remember we had issues with the code area when going up and down in the main table with an open entry editor and also when importing i know that there was a reason why it was created new every time maybe tobiasdiez remembers this should do the trick now apparently javafx fires the focus event after loading the next entry and registering a listener does not mean it is also runwhat i dont understand is the failing gui test it fails somehow during setting the test up trying to call getsourcestring with an empty bibentryit does not fail with a real entry open in jabref but only with the test should i modify the test the new fix looks good toi guess the test fails as currententry is null in can change to notifyaboutfocus
5826,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,conversion of group dialog to mvvm pattern a first approach to convert the add edit group dialog to the mvvm pattern and a step forwards to implement the changes martinkarim supposed in still some problems and things to talk aboutthe most obvious one is groupdescription i really dont know what to do with this personally i think this description stuff shuld go into the help page its a wild mesh up of error messages validation messages for the regex and some hints about the groupthe next thing are the different group types martinkarim supposed to merge most of them as they mostly intersect each other but if we do this we need to provide migrations for the old groups too this would probably go far beyond this prscreenshot belowthe old labels of the checkboxes a displayed as a tooltip now but they should be better placed in the help pagei have some problems with the validators somehow if i bind the disableproperty of the ok button to validproperty of the validator java throws a npe if i dont get this working i need to think about a workaroundi need to stop procrastinating now and get back to studying change in changelogmd described if applicable 👍 for removing the description i like how the dialog looks in your screenshot nicely done i would maybe left align the options case sensitve and regular expression so i got no other opinions descriptions are gone group dialog but this pr does only change the groups dialog it does not fix the issue mentioned looks good so far the constructors are gone and the whole globals stuff in this part probably too as i made same bigger changes i would appreciate it if you could just take a quick look at the latest commit and the changes to the optics again expecially the enummap is this ok this way i really did not like the gettext method img width altgroup src merging then
5841,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix missing file extension for downloaded files by falling back to pdf as default file type title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5855,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix opening pdf with okular in linux change in changelogmd described if applicable thanks for your contribution t morales may i ask you to to unabbreviate the variables and to give them a selfexplaining name you can also link the fix in github to automatically close the issue just because im curious how does the fix work edit nevermind just saw the extensive discussion calixtus as i said in the issue i am not familiarized with java it was more or less a trial and error procedure with the help of the comments of other users not so sure why this works and it would be good if someone with better understanding on java took a look at that thanks for the follow up
5868,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,it was indeed the throttler at least it is working now for me title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5879,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fixes making paths of linked files relative web urls will not be touched anymore description cleaning up entries with make paths of linked files relative if possible broke web urls and resulted in various other issues subsequently this pr fixes this issueit has been tested for local files and web urls change in changelogmd described if applicable thank you very much for your contributionfix looks good is there still something i need to do or is everything fine because one check failed you can ignore the failing check its just the upload of the binaries which sometimes failsour code quality policy requires a review from a second reviewer for external developers before it can be mergedi think you also should add a changelog entry since its at least an error from the beta previous version would a proper implementation of rfc be an overkill maybe this could be achieved with a proper regex this calixtus checking a path as follows could be a simple alternative but nevertheless i also see advantages with the current approach since it also detects urls as web urls even if they are potentially broken in some way this was the reason why i created it like that i think the main goal is to identify a web url rather than checking its validity systemoperator that should work using new url in practice and i think should be sufficient for most cases as an indicator i eg think about the following scenario given are broken web urls like googleat mind the unintended space character mind the unintended second period i think in this screnario it is more important to identify whether it is a web url or not rather than making it more strict saying checking whether it is a valid web url because in the case that it would be a invalid web url as eg shown above then in this scenario the url would again get cleaned up and thus it will become even more destoryed as it would be interpreted as a local file url again and many other issues would again show upon the other hand if a broken url gets identified as a web url then it will be processed properly and everything will work out but when opening the url it just cannot be loadedin my opinion this method is all about identifying a web url not validating one thats why it is called isonlinelink rather than isvalidonlinelink somewhere i think youre some kind of right too on the other hand where do we want to decide whats still a acceptable and what not what about file im aware that normally a file path is printed without this here but it still could happen we also had a few months ago someone here using jabref as database for genetics stuff and not for books proofing the mutability of jabref please dont misunderstand me i get your point and i dont exactly know the right answer before implementing it i thought about many of those things with the current implementation a file link starting with file will not be interpreted as a web url anyway so this would be fine as well at least the javadoc should then be adapted of course i would like to hear tobiasdiezs recommendation about that as well then i will implement it as desired i think the current implementation is a good compromise in the ideal world the url is valid and a proper validation as calixtus would be preferable however the data quality we get from some fetchers is suboptimal so that it is a good idea to error on the save side eg better identify to many paths as web urls i suggest to merge now and come back to it later if users complain provide problematic use cases
5903,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,fix properly resolves orfields of required fields addresses and partially this fix adds all entries of orfields of the required fields of entrytypedefinitions to the list of required fields for the tab required fields of the entry editor change in changelogmd described if applicable please resolve the conflicts and fix the checkstyle issue than we can merge siedlerchr is there still something i need to do which checkstyle issue do you mean see it for you and will merge now thanks again for another great pr
5903,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,fix properly resolves orfields of required fields addresses and partially this fix adds all entries of orfields of the required fields of entrytypedefinitions to the list of required fields for the tab required fields of the entry editor change in changelogmd described if applicable please resolve the conflicts and fix the checkstyle issue than we can merge siedlerchr is there still something i need to do which checkstyle issue do you mean see it for you and will merge now thanks again for another great pr
5917,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,added update method to typepropertylisteners change in changelogmd described if applicable
5923,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,disable search when no library is opened and fix exception when getsearchresultsize returned nulli found this wile trying to reproduce hopefully and fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable jabref beta a c linux generic amd java close all libraries type abc in search box multiple uncaught exception error messages pop up at orgjabref orgjabrefguisearchglobalsearchbarlambda$new$ unknown source at javabase javautiloptionalifpresent unknown source at orgjabref orgjabrefguisearchglobalsearchbarlambda$new$ unknown source at orgjabrefmergedmodule orgfxmisceasybindeasybindlambda$subscribe$ unknown source at orgjabrefmergedmodule comsunjavafxbindingexpressionhelper$genericfirevaluechangedevent unknown source at orgjabrefmergedmodule comsunjavafxbindingexpressionhelperfirevaluechangedevent unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybasefirevaluechangedevent unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybasemarkinvalid unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybaseset unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertysetvalue unknown source at orgjabref orgjabrefguistatemanagersetsearchquery unknown source at orgjabref orgjabrefguisearchglobalsearchbarperformsearch unknown source at orgjabrefmergedmodule orgreactfxutilfxtimerlambda$restart$ unknown source at orgjabrefmergedmodule comsunscenarioanimationsharedtimelineclipcorevisitkeyframe unknown source at orgjabrefmergedmodule comsunscenarioanimationsharedtimelineclipcoreplayto unknown source at orgjabrefmergedmodule javafxanimationtimelinedoplayto unknown source at orgjabrefmergedmodule javafxanimatio imationaccessorimplplayto unknown source at orgjabrefmergedmodule comsunscenarioanimationsharedsingleloopclipenvelopetimepulse unknown source at orgjabrefmergedmodule javafxanimatio imationdotimepulse unknown source at orgjabrefmergedmodule javafxanimatio imation$ lambda$timepulse$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule javafxanimatio imation$ timepulse unknown source at orgjabrefmergedmodule comsunscenarioanimationabstractmastertimertimepulseimpl unknown source at orgjabrefmergedmodule comsunscenarioanimationabstractmastertimer$mainlooprun unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitpulse unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitpulse unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitpulsefromqueue unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitlambda$runtoolkit$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguijabrefdialogserviceshowerrordialogandwait unknown source at orgjabref orgjabreffallbackexceptionhandlerlambda$uncaughtexception$ unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguijabrefdialogserviceshowerrordialogandwait unknown source at orgjabref orgjabreffallbackexceptionhandlerlambda$uncaughtexception$ unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguijabrefdialogserviceshowerrordialogandwait unknown source at orgjabref orgjabreffallbackexceptionhandlerlambda$uncaughtexception$ unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplication_runloop native method at orgjabrefmergedmodule comsunglassuigtkgtkapplicationlambda$runloop$ unknown source at javabase javalangthreadrun unknown source seems like you still have an old version from yesterday this is in todays version i hope so the version of feb isnt downloadable yet ill report back when ive tried it wujastyk unfortunately we currently have no space left on our build server however you can download a version from here
5923,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,disable search when no library is opened and fix exception when getsearchresultsize returned nulli found this wile trying to reproduce hopefully and fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable jabref beta a c linux generic amd java close all libraries type abc in search box multiple uncaught exception error messages pop up at orgjabref orgjabrefguisearchglobalsearchbarlambda$new$ unknown source at javabase javautiloptionalifpresent unknown source at orgjabref orgjabrefguisearchglobalsearchbarlambda$new$ unknown source at orgjabrefmergedmodule orgfxmisceasybindeasybindlambda$subscribe$ unknown source at orgjabrefmergedmodule comsunjavafxbindingexpressionhelper$genericfirevaluechangedevent unknown source at orgjabrefmergedmodule comsunjavafxbindingexpressionhelperfirevaluechangedevent unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybasefirevaluechangedevent unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybasemarkinvalid unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertybaseset unknown source at orgjabrefmergedmodule javafxbeanspropertyobjectpropertysetvalue unknown source at orgjabref orgjabrefguistatemanagersetsearchquery unknown source at orgjabref orgjabrefguisearchglobalsearchbarperformsearch unknown source at orgjabrefmergedmodule orgreactfxutilfxtimerlambda$restart$ unknown source at orgjabrefmergedmodule comsunscenarioanimationsharedtimelineclipcorevisitkeyframe unknown source at orgjabrefmergedmodule comsunscenarioanimationsharedtimelineclipcoreplayto unknown source at orgjabrefmergedmodule javafxanimationtimelinedoplayto unknown source at orgjabrefmergedmodule javafxanimatio imationaccessorimplplayto unknown source at orgjabrefmergedmodule comsunscenarioanimationsharedsingleloopclipenvelopetimepulse unknown source at orgjabrefmergedmodule javafxanimatio imationdotimepulse unknown source at orgjabrefmergedmodule javafxanimatio imation$ lambda$timepulse$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule javafxanimatio imation$ timepulse unknown source at orgjabrefmergedmodule comsunscenarioanimationabstractmastertimertimepulseimpl unknown source at orgjabrefmergedmodule comsunscenarioanimationabstractmastertimer$mainlooprun unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitpulse unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitpulse unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitpulsefromqueue unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitlambda$runtoolkit$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguijabrefdialogserviceshowerrordialogandwait unknown source at orgjabref orgjabreffallbackexceptionhandlerlambda$uncaughtexception$ unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguijabrefdialogserviceshowerrordialogandwait unknown source at orgjabref orgjabreffallbackexceptionhandlerlambda$uncaughtexception$ unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplicationenternestedeventloopimpl native method at orgjabrefmergedmodule comsunglassuigtkgtkapplication_enternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuiapplicationenternestedeventloop unknown source at orgjabrefmergedmodule comsunglassuieventloopenter unknown source at orgjabrefmergedmodule comsunjavafxtkquantumquantumtoolkitenternestedeventloop unknown source at orgjabrefmergedmodule javafxstagestageshowandwait unknown source at orgjabrefmergedmodule javafxscenecontrolheavyweightdialogshowandwait unknown source at orgjabrefmergedmodule javafxscenecontroldialogshowandwait unknown source at orgjabref orgjabrefguijabrefdialogserviceshowerrordialogandwait unknown source at orgjabref orgjabreffallbackexceptionhandlerlambda$uncaughtexception$ unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at javabase javasecurityaccesscontrollerdoprivileged unknown source at orgjabrefmergedmodule comsunjavafxapplicationplatformimpllambda$runlater$ unknown source at orgjabrefmergedmodule comsunglassuiinvokelaterdispatcher$futurerun unknown source at orgjabrefmergedmodule comsunglassuigtkgtkapplication_runloop native method at orgjabrefmergedmodule comsunglassuigtkgtkapplicationlambda$runloop$ unknown source at javabase javalangthreadrun unknown source seems like you still have an old version from yesterday this is in todays version i hope so the version of feb isnt downloadable yet ill report back when ive tried it wujastyk unfortunately we currently have no space left on our build server however you can download a version from here
5925,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix maintable not updated when changing entry type title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5938,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix not escaping special characters in search pattern the error when searching for doi endrev bnz or any phrases containing special javascript regular expression characters is caused by not escaping special characters before passing search pattern to javascript script used for highlighting words in preview view title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable a test would be greatok i will write a test i think this is really great as well thank you
5940,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,by creating a mutable list in opendatabaseaction this pr fixes the problem when opening a library from the recent libraries menu change in changelogmd described if applicable thanks again for your contribution we tried it locally did not fix the issue we will switch to listof
5945,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,try to fix linux pdf opening again and fixes probably title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable could you please try again with the newest version from this branchi forgot one method
5945,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,try to fix linux pdf opening again and fixes probably title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable could you please try again with the newest version from this branchi forgot one method
5955,1,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,added menubuttons to integritycheckdialog this pr adds menubuttons to the integritycheckdialog because there was a complaint that the filters were not very easy to find i did not implement the option to make the current filters in the table persistent as the use case for this is extremly limited sorry controlsfx does not support this and the workaround would be hugei dont think that documentation is necessary for this as it should be very obvious to understand integrity_without_panel change in changelogmd described if applicable looks good
5969,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,refactored subtile changes to optics of library properties some subtile changes added a scrollpane to the library properties dialog and to saveorderconfigdisplay and to fieldformattercleanupspanel fieldformattercleanupspanel needs to be refactored in the future to mvvm pattern but this pr is just a quick fix for the issue so the library properties are somewhat usable on scaled displays librarypropsup change in changelogmd described if applicable
5983,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,loosing group if the most bottom one in list is dragged on itself change in changelogmd described if applicable
6018,1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,1,0,0,1,add shortscience integration title of the pr must not reference an issue because github does not support autolinking there this pr introduces a simple integration towards shortscience as tracked by the integration is in the form of an additional context menu item called search shortscience which if clicked will open the users web browser to the search results for the selected entrys titlei experimented with generating a direct link to the shortscience page for the article instead of linking to the search results but the uri scheme is not entirely consistent nor predictable at shortscience so it was deemed more effort than it was worth change in changelogmd described if applicable hi stevensdavid thank you for your work and your pr you are right baseaction is deprecated and i already prepared a pr to completly remove the deprecated baseaction stuff from the rightclickmenu the future way to implement menu actions is to put the action information in standardactions and to implement the action as a class extending simplecommand should be very straight forward for some hints please have a look at my pr if you have questions just ask me im happy to help youhey calixtus it seems i need a few of the changes in api that you implemented in order to use the new style making it difficult to port the feature to the new style before your pr is merged specifically id need the new signature for rightclickmenucreate that you implemented in d d c d d c b b fc f f f b bb as it includes the statemanager and the actionhelper methods you introduced in f d e e f c bbc eec abb these commits dont seem particularly easy to cherry pick without getting your other refactoring work and im not entirely sure if it is considered good practice to cherry pick partial commits as i havent done that before 😅 yes maybe its better to wait until after the release of its better not to introduce new features right now but to stabilize the current branch so we can release in some days and to put this feature into stevensdavid you can base at calixtuss branch if that works out or just merge his branch into your branch i ended up merging calixtuss branch into this one so the diff looks larger than it actually is as such this shouldnt be merged before the code has been rewritten to use the new style and i have broken out the link generation into a separate method which now has a few test cases should the documentation and changelog be updated as part of thisedit code style errors seem to be inherited from the merge and are not from new changes i changed the base branch to replace_deprecated to enable reviewing the diff to explanation i mirrored the current state of into the branch replace_deprecated by locally cloning calixtuss fork git remote add calixtus git fetch calixtus checking out the branch and pushing it to here origin koppor thank you for the feedback ive pushed new commits that should resolve your comments
6031,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,translation for specialfield names in preferences names of special fields were not translated in preferences change in changelogmd described if applicable
6054,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix warning display issue for entering a title made of two words title of the pr must not reference an issue because github does not support autolinking there hello this pr fixes the issue that a warning is displayed when users enter a title made of two sentences in the entry editor change in changelogmd described if applicable hi koppor thank you for your review i have made changes to the code i found that there is an existing test which is testtitlechecks in integritychecktestjava for this functionality so i added test cases for the title with delimiters there please let me know if there is anything else i need to take care of happy to make a contribution eetian we are in nitpicking mode 😇 it might cost more time to refine the code to provide some background the jabref team decided to improve the code quality thus we aim for all code being a model for java coders to learn how things work see for details thus we kindly ask you to include our feedback please do not hesitate to contact us in case you have any question merging
6110,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,groups searching for keywords field mandatory value not checked closes closes alert dialog triggered active info icons image inactive info icons image dialog should not close when error dialog is discarded calixtus not sure if we have this problem in more dialogs the setresultconverter method will always close the dialog we want to go abck to the dialog if errors are displayed as alert dialogs however we need to use addeventfilter for this i guess am no expert in javafx tobiasdiez see dialog validation section at https docsoraclecom javase javafx api javafx scene control dialoghtml in other dialogs we dont show any error message instead we disable the ok buton until all required fields are set the dialog is duplicate see for example the shareddatabaselogin dialog siedlerchr i really like that metaphor think its also in place in angular apps ^^ refs which states that we should document it i agree but thats not what i and what the pr is about i agree that the ok button should be disabled in case there are validation errors the code for this seems to be in place as well so i guess there is a bug somewhere siedlerchr calixtus do you have an idea where i did take a look at the code and tried a little bit around but i must confess i dont ever reach the alert dialog the button disableproperty is with this pr now completly and correctly bound to the validation status and im unable to click the button so huhalso i agree to the button disabled metaphor so simply remove the dialog and all is done disabled button should work except for when the dialog is opened at first the checks only come into place when one has entered data in the mandatory fields we need to trigger the validation after initialization to change this can we track the additional changes in a follow up issue id rather limit this pr to the fixes if possible
6110,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,groups searching for keywords field mandatory value not checked closes closes alert dialog triggered active info icons image inactive info icons image dialog should not close when error dialog is discarded calixtus not sure if we have this problem in more dialogs the setresultconverter method will always close the dialog we want to go abck to the dialog if errors are displayed as alert dialogs however we need to use addeventfilter for this i guess am no expert in javafx tobiasdiez see dialog validation section at https docsoraclecom javase javafx api javafx scene control dialoghtml in other dialogs we dont show any error message instead we disable the ok buton until all required fields are set the dialog is duplicate see for example the shareddatabaselogin dialog siedlerchr i really like that metaphor think its also in place in angular apps ^^ refs which states that we should document it i agree but thats not what i and what the pr is about i agree that the ok button should be disabled in case there are validation errors the code for this seems to be in place as well so i guess there is a bug somewhere siedlerchr calixtus do you have an idea where i did take a look at the code and tried a little bit around but i must confess i dont ever reach the alert dialog the button disableproperty is with this pr now completly and correctly bound to the validation status and im unable to click the button so huhalso i agree to the button disabled metaphor so simply remove the dialog and all is done disabled button should work except for when the dialog is opened at first the checks only come into place when one has entered data in the mandatory fields we need to trigger the validation after initialization to change this can we track the additional changes in a follow up issue id rather limit this pr to the fixes if possible
6121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,icons from material design icons not recognized related jabref developers b cddf cceae fd f daa caused this issue only icons contained inside jabreficons are available nowthe question is do we really want this feature not sure if changing the line back to return enumsgetifpresent materialdesigniconclass iconcodetouppercase localeenglish tojavautil map icon new internalmaterialdesignicon getcolor icon will reintroduce the referenced issue feature also only makes sense if we have a dropdown with all available icons inside the new edit group dialog imho https user imagesentcom c fd ea b d bd png merging
6121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,icons from material design icons not recognized related jabref developers b cddf cceae fd f daa caused this issue only icons contained inside jabreficons are available nowthe question is do we really want this feature not sure if changing the line back to return enumsgetifpresent materialdesigniconclass iconcodetouppercase localeenglish tojavautil map icon new internalmaterialdesignicon getcolor icon will reintroduce the referenced issue feature also only makes sense if we have a dropdown with all available icons inside the new edit group dialog imho https user imagesentcom c fd ea b d bd png merging
6130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,small improvements in preferences dialog changes reduces the size of the rarely used import export show reset preferences buttons to icon buttons to free space to display all of the tabs in the list the font size is now controlled by a spinner a text field with arrows on the right side the comboboxes now have valuefactories to properly display the real name of the languages the charsets and the bibdatabasemode which incorrectly displayed biblatex instead of biblatex some keyboard events are added to the add textfields in nameformattertab etc to make usage more intuitive removed obsolete and non functional open pdf settings closes preferences_polish change in changelogmd described if applicable no coverage uploaded for pull request base master f click here to learn what that means
6130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,small improvements in preferences dialog changes reduces the size of the rarely used import export show reset preferences buttons to icon buttons to free space to display all of the tabs in the list the font size is now controlled by a spinner a text field with arrows on the right side the comboboxes now have valuefactories to properly display the real name of the languages the charsets and the bibdatabasemode which incorrectly displayed biblatex instead of biblatex some keyboard events are added to the add textfields in nameformattertab etc to make usage more intuitive removed obsolete and non functional open pdf settings closes preferences_polish change in changelogmd described if applicable no coverage uploaded for pull request base master f click here to learn what that means
6143,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,add aps fetcher refactored part of follow up from title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable failing test is not relevant i merge now
6143,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,add aps fetcher refactored part of follow up from title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable failing test is not relevant i merge now
6143,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,add aps fetcher refactored part of follow up from title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable failing test is not relevant i merge now
6151,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,actionhelper to test for present file this pr fixes koppor it took a little bit more refactoring than expected for it does not only check if standardfieldfile has text inside but if the file is also really present in the file system there are some design decisions im unsure of there is no alert about that no file is really present the menu entry is just disabled although there is a file symbol in the main table since standardfieldfile is not empty feedback could be implemented in the files editor in the entry editor as validationthe other thing is that in theory at last the table does not yet automatically update if a file is added or removed so no file is attached this would require probably an array of observables to be used as an invalidation alert im unsure where to start with that however only in theory pracitcally the entry is unselected automatically if i change something about the attached files in the entry editor so nobody would notice if this would not be implemented change in changelogmd described if applicable i added some validation the regular validation mechanics of controlsfx seem somewhat broken the icon is shown but behind every other ui element so instead i just marked the background of the cells with files that do not exist in the filesystem in the warning color this one is mergable
6152,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,allow reordering of custom entry types fields additionally restore the old multiline property and make it configurablecurrent status adding removing reordering works removing standard entry types has no effect they are always readded if deleted sort fields alphabetically would that effect the order needs investigation cannot sort it influences the save order refs and title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable linkedhashset is no solution either as the standard fields are always inserted firsttodo check it again tobiasdiez i currently have the problems that in my hashmap which contains entry types with their corresponding fields the fields order is not updated if i change them via drag and drop in the main tablethis is logical because the fieldswithtypes is not an observableany idea how i can do this with some binding foo can i add some observabelist to that map im not sure what exactly you mean a map does not work i tired it but its a bit more complicated i think or maybe i am thinking too complicated i would need to bind a listproperty to the values collection of my mapand then i would need to change that listproperty fieldsfortype content based on my selected entry types currently i am doing this more or less manually private final listproperty fieldsfortype private final observablelist allfieldsfortype fxcollectionsobservablearraylist extractor new observable {extractorfieldname extractorfieldtype } for bibentrytype entrytype alltypes { list fields entrytypegetallfields stream map bibfield new fieldviewmodel bibfieldgetfield entrytypeisrequired bibfieldgetfield bibfieldgetpriority entrytype collect collectorstolist typeswithfieldsput entrytype fxcollectionsobservablearraylist fields } thisfieldsfortype new simplelistproperty allfieldsfortype easybindsubscribe selectedentrytypes type { if type null { allfieldsfortypesetall typeswithfieldsget type } } i guess the following might work create your map entrytypeswithfields when the user selects an entrytype then set fieldsfortype to entrytypeswithfieldsget entrytype it is important that you set really the observable list and not the contents of the list ie not setall by the way the whole map construction seems to be overly complicated why not create a entrytypeviewmodel that wraps a given entry type and also contains an observable list of fields then you can have a simple observable list of entrytypeviewmodels which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type tobiasdiez sometimes when i go up and down in the dialog and switch between the entry types suddenly the fields are empty any idea what this means or why this occurs the issue with the delete on change is now i think i encountered a bug with the entrytypesmanager parsing if a custom entry type has only required or optional fields eg one of the fields array is empty a ghost bib field is createdneed to invesitgate this todo modify type article add field langid make optional move after number save reopen dialog langid field is no longer after number it has moved to a different positionproblem possible in bibentrytypesmanager public sortedset getalltypes { sortedset alltypes new treeset customormodifiedtype alltypesaddall standardtypes return alltypes } yeah i found the bug custom entry types order is now correctly stored and also applied to entry editor grafik
6152,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,allow reordering of custom entry types fields additionally restore the old multiline property and make it configurablecurrent status adding removing reordering works removing standard entry types has no effect they are always readded if deleted sort fields alphabetically would that effect the order needs investigation cannot sort it influences the save order refs and title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable linkedhashset is no solution either as the standard fields are always inserted firsttodo check it again tobiasdiez i currently have the problems that in my hashmap which contains entry types with their corresponding fields the fields order is not updated if i change them via drag and drop in the main tablethis is logical because the fieldswithtypes is not an observableany idea how i can do this with some binding foo can i add some observabelist to that map im not sure what exactly you mean a map does not work i tired it but its a bit more complicated i think or maybe i am thinking too complicated i would need to bind a listproperty to the values collection of my mapand then i would need to change that listproperty fieldsfortype content based on my selected entry types currently i am doing this more or less manually private final listproperty fieldsfortype private final observablelist allfieldsfortype fxcollectionsobservablearraylist extractor new observable {extractorfieldname extractorfieldtype } for bibentrytype entrytype alltypes { list fields entrytypegetallfields stream map bibfield new fieldviewmodel bibfieldgetfield entrytypeisrequired bibfieldgetfield bibfieldgetpriority entrytype collect collectorstolist typeswithfieldsput entrytype fxcollectionsobservablearraylist fields } thisfieldsfortype new simplelistproperty allfieldsfortype easybindsubscribe selectedentrytypes type { if type null { allfieldsfortypesetall typeswithfieldsget type } } i guess the following might work create your map entrytypeswithfields when the user selects an entrytype then set fieldsfortype to entrytypeswithfieldsget entrytype it is important that you set really the observable list and not the contents of the list ie not setall by the way the whole map construction seems to be overly complicated why not create a entrytypeviewmodel that wraps a given entry type and also contains an observable list of fields then you can have a simple observable list of entrytypeviewmodels which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type tobiasdiez sometimes when i go up and down in the dialog and switch between the entry types suddenly the fields are empty any idea what this means or why this occurs the issue with the delete on change is now i think i encountered a bug with the entrytypesmanager parsing if a custom entry type has only required or optional fields eg one of the fields array is empty a ghost bib field is createdneed to invesitgate this todo modify type article add field langid make optional move after number save reopen dialog langid field is no longer after number it has moved to a different positionproblem possible in bibentrytypesmanager public sortedset getalltypes { sortedset alltypes new treeset customormodifiedtype alltypesaddall standardtypes return alltypes } yeah i found the bug custom entry types order is now correctly stored and also applied to entry editor grafik
6174,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,fix overwritting downloaded files with same name added auto numbering for downloaded file names which conflict with file names in the current directory change in changelogmd described if applicable thank you for your contribution some nitpick comments inside 😇 two more things please keep filenamecleaner and introduce filenameuniqueness reason there is no shared code between the two utility methods no cohesion in the sence of data only in the sense of the general setting small classes make it easier to maintain them can you try to include a check of filesmismatch see for details at download before the same file is linked just do not link it instead of creating pdf i think our problem is that different files are getting downloaded as defaultpdf when no bibtex key exists if we use filesmismatch as you mentioned in number above since both paths refer to same file path it would return a match and hence not download the other files which we do not want i guess can you try to include a check of filesmismatch see stackoverflowcom a for details at download before the same file is linked just do not link it instead of creating pdf i think our problem is that different files are getting downloaded as defaultpdf when no bibtex key exists yeah if we use filesmismatch as you mentioned in number above since both paths refer to same file path it would return a match and hence not download the other files which we do not want i guess long solution would be defaultpdf exists download as default pdf store it in the linked files check if defaultpdf equals default pdf if defaultpdf equals default pdf then a remote default pdf from the file system b remove default pdf from the list of linked files c add a notification that the file already existsi thought that one can omit step step c is necessary in all casesi see that this is not strongly part of your pr so can be left for future work submitted as comments addressed there are some code style issues which i will quickly fix in master after merge thank you for having kept up the work looking forward to more contributions
6179,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,truncates the link and or the link description in the column linked files in main table if too long references change in changelogmd described if applicable thanks for your pr as this is a display issue i would prefer if this could be on the gui side ie no changes in the logic package one option would be to use the built in javafx facilities and put the text in a labeled control and use the textoverrun the first argument in the constructor of the java fx menuitem requires a string unfortunately my hands are tied here you can set the text overrun property also on the menu item i could not find out a way how to adapt it using the menuitem both links redirect to the same web page suggestions are welcome the labeled is part of the menuitem and thus cannot be accessed directly from code however its possible to use css similar to here not all works as preferred but at least it is better than without it fx pref width makes the item bigger as needed but at least it works fx max width and fx text overrun center ellipses would be preferred but it does not work fx wrap text true does not work either its slightly frustrating since it should have been a quick fix feel free to suggest any solution for me adding menu item label { fx pref width px} in basecss worked this of course has to be further specialized as this changes every menu item fx pref width already works the way it is implemented so far in my opinion px is too small because hardly anything can be read in the combination with description and url this gets even worse furthermore this overrunstylecenter_ellipsis thingy or any other customized overrunstyle does not work as expected i personally prefer my initial commit where both the description and the url get centered ellipsis since this shows the relevant parts in a perfect way and the context menus width is only as big as needed but limited as well thus this is what i currently use for my local jabref version^^ how about moving the truncation code from the first commit to the location where there is now this fx pref width i agree px is too small i just wanted to show you how pref width ellipses do work truncating the link and the description separately is indeed a good suggestion should be able by putting them in separate labels with pref width elipse overflow systemoperator ping 😇 the current implementation has the following flaws opening the context menu where several files links are associated even if the texts are very short the width of the context menu has the defined max width fx max width does not work at all so fx pref width has been used but it always sets the context menu to the defined max width and wrapping the text does not work either preference the context menu should only be as big as needed otherwise its irritating and disturbing i have tried to fix it but i did not succeed it seems to be a bug if the text in the context menu exceeds the defined max width then it currently gets truncated at the end of the text with right ellipses even though i have declared that centered ellipses fx text overrun center ellipses should be used probably this is another bug preference centered ellipses should be shown descriptive text of the file dfdfdf asdas filehtml if this works another improvement would be using centered ellipses for both the descriptive text and for the path link descriptive file initial commit truncated the text itself and added centered ellipses which would eliminate the aforementioned second flaw furthermore there was no need to define a max width since the text was truncated and thus also the context menu itself did not exceed a specific width and was only as wide as required by the text as a result it would have eliminated all flaws mentioned aboveconsidering all the issues concerning the java fx components i would tend to a solution which simply truncates the texts itself as already suggested in earlier comments above this is what i currently use for my local jabref instance okay youve convinced me its a bit unfortunate that there is no css based fix because i really think that truncating should be handled by the javafx controls but well if its not possible then yeahso im fine with changing the display text itself as it was done in one of your earliest commits please add a helper method to controlhelper that does the actually truncation and can be reused a bit similar to which might also be helpful for the implementation tobiasdiez what do you think about it merging now thank you very much
6184,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,include append functionality in the import entries dialog needs testing stefan kolb maybe 😇 co authored by christoph co authored by tobias diez co authored by carl christian snethlage
6203,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,add tooltips for all entry types for the pull request refers to issue by systemoperator change add tooltips in the select entry type dialog you can see the tooltip when hovering a button of an entry typeremaining add those tooltips in the left side of the entry editor and in the main table when clicking change entry type still havent figured it out yet how to implement the remaining stuff so any help would be much appreciatedand please let me know what you think of my implementation so far dimitra karadima right clicking an entry in the main table calls further calls siedlerchr i have noticed that the entry types patent and periodical as well as the type alias electronic do not exist in standardentrytypejava but suppperiodical exists and other type aliases as well acutally all other types except those three exist is there a special reason for that siedlerchr i have noticed that the entry types patent and periodical as well as the type alias electronic do not exist in standardentrytypejava but suppperiodical exists and other type aliases as well acutally all other types except those three exist is there a special reason for thatsome of those types eg patent were from the ieetran package but are now also in the official biblatex package i dont know if those package is still in use but i guess it was just historical reasons why they are there maybe koppor can enlighten us systemoperator check my latest commit and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful i am new to the project and open source in general so i am a little bit lost dimitra karadima you can add the tooltips by adapting the method something like the following minimal working example java public static menuitem createmenuitem entrytype type bibentry entry undomanager undomanager { custommenuitem menuitem new custommenuitem new label typegetdisplayname menuitemsetonaction event { namedcompound compound new namedcompound localizationlang change entry type entrysettype type ifpresent change compoundaddedit new undoablechangetype change undomanageraddedit compound } tooltip tooltip new tooltip descriptional tooltip tooltipinstall menuitemgetcontent tooltip return menuitem } so you basically replace menuitem with custommenuitem and configure it as shown abovethe good thing is that this will set the tooltips for both pending cases when changing the entry type in the entry editor left side of the entry editor when right clicking a reference in the main table and clicking change entry type systemoperator check my latest commit and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful i am new to the project and open source in general so i am a little bit lost dimitra karadima you can add the tooltips by adapting the method to something like the following minimal working example java public static menuitem createmenuitem entrytype type bibentry entry undomanager undomanager { custommenuitem menuitem new custommenuitem new label typegetdisplayname menuitemsetonaction event { namedcompound compound new namedcompound localizationlang change entry type entrysettype type ifpresent change compoundaddedit new undoablechangetype change undomanageraddedit compound } tooltip tooltip new tooltip descriptional tooltip tooltipinstall menuitemgetcontent tooltip return menuitem } so you basically replace menuitem with custommenuitem and configure it as shown above the good thing is that this will set the tooltips for both pending cases when changing the entry type in the entry editor left side of the entry editor when right clicking a reference in the main table and clicking change entry type 😄 systemoperator thanks for your help i have added the tooltips and in the change entry type please take a look and let me know what you think dimitra karadima i wanted to merge but some tests are still failing can you please have a look at them dimitra karadima i wanted to merge but some tests are still failing can you please have a look at them thanks tobiasdiez i tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks if you could help me in any way would be much appreciated dimitra karadima try to merge in the latest upstream master branch in your branch taht shoudl resolve most problems dimitra karadima try to merge in the latest upstream master branch in your branch taht shoudl resolve most problems siedlerchr thanks for your input but unfortunately it didnt work i dont know what to do because my master branch also fails these tests is it possible that i have done any mistake while building the project in eclipse hm this is odd i will test it locally dimitra karadima the issue was the checkstyle configuration which has still some issues with jdk features the switch expression for example i merged your pr and updated the config to exclude your file dimitra karadima the issue was the checkstyle configuration which has still some issues with jdk features the switch expression for example i merged your pr and updated the config to exclude your file siedlerchr thank you so much for your help
6203,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,add tooltips for all entry types for the pull request refers to issue by systemoperator change add tooltips in the select entry type dialog you can see the tooltip when hovering a button of an entry typeremaining add those tooltips in the left side of the entry editor and in the main table when clicking change entry type still havent figured it out yet how to implement the remaining stuff so any help would be much appreciatedand please let me know what you think of my implementation so far dimitra karadima right clicking an entry in the main table calls further calls siedlerchr i have noticed that the entry types patent and periodical as well as the type alias electronic do not exist in standardentrytypejava but suppperiodical exists and other type aliases as well acutally all other types except those three exist is there a special reason for that siedlerchr i have noticed that the entry types patent and periodical as well as the type alias electronic do not exist in standardentrytypejava but suppperiodical exists and other type aliases as well acutally all other types except those three exist is there a special reason for thatsome of those types eg patent were from the ieetran package but are now also in the official biblatex package i dont know if those package is still in use but i guess it was just historical reasons why they are there maybe koppor can enlighten us systemoperator check my latest commit and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful i am new to the project and open source in general so i am a little bit lost dimitra karadima you can add the tooltips by adapting the method something like the following minimal working example java public static menuitem createmenuitem entrytype type bibentry entry undomanager undomanager { custommenuitem menuitem new custommenuitem new label typegetdisplayname menuitemsetonaction event { namedcompound compound new namedcompound localizationlang change entry type entrysettype type ifpresent change compoundaddedit new undoablechangetype change undomanageraddedit compound } tooltip tooltip new tooltip descriptional tooltip tooltipinstall menuitemgetcontent tooltip return menuitem } so you basically replace menuitem with custommenuitem and configure it as shown abovethe good thing is that this will set the tooltips for both pending cases when changing the entry type in the entry editor left side of the entry editor when right clicking a reference in the main table and clicking change entry type systemoperator check my latest commit and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful i am new to the project and open source in general so i am a little bit lost dimitra karadima you can add the tooltips by adapting the method to something like the following minimal working example java public static menuitem createmenuitem entrytype type bibentry entry undomanager undomanager { custommenuitem menuitem new custommenuitem new label typegetdisplayname menuitemsetonaction event { namedcompound compound new namedcompound localizationlang change entry type entrysettype type ifpresent change compoundaddedit new undoablechangetype change undomanageraddedit compound } tooltip tooltip new tooltip descriptional tooltip tooltipinstall menuitemgetcontent tooltip return menuitem } so you basically replace menuitem with custommenuitem and configure it as shown above the good thing is that this will set the tooltips for both pending cases when changing the entry type in the entry editor left side of the entry editor when right clicking a reference in the main table and clicking change entry type 😄 systemoperator thanks for your help i have added the tooltips and in the change entry type please take a look and let me know what you think dimitra karadima i wanted to merge but some tests are still failing can you please have a look at them dimitra karadima i wanted to merge but some tests are still failing can you please have a look at them thanks tobiasdiez i tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks if you could help me in any way would be much appreciated dimitra karadima try to merge in the latest upstream master branch in your branch taht shoudl resolve most problems dimitra karadima try to merge in the latest upstream master branch in your branch taht shoudl resolve most problems siedlerchr thanks for your input but unfortunately it didnt work i dont know what to do because my master branch also fails these tests is it possible that i have done any mistake while building the project in eclipse hm this is odd i will test it locally dimitra karadima the issue was the checkstyle configuration which has still some issues with jdk features the switch expression for example i merged your pr and updated the config to exclude your file dimitra karadima the issue was the checkstyle configuration which has still some issues with jdk features the switch expression for example i merged your pr and updated the config to exclude your file siedlerchr thank you so much for your help
6232,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,allow basic markup syntax custom previews add markdownformatter using to format markdownto configure markdown in custom previews add the markdown formattermarkdown is enabled by default for the comment field as requested in change in changelogmd described if applicable needed to merge master to sync the pr with your state alexandergirgis refs you fix checkstyle
6233,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,add disable enable calculation of items in group this is my first pull request to a project new java developer add disable enable calculation of items in groupi realized that groupnodeviewmodeljava class uses method calculatenumberofmatches to get number of items looks like it uploads full database from disk every time you need to calculate no of items in group therefore if you have thousand groups it will read the entire database thousand times ui changes added new checkbox in preferences groups display quantity of items in group added new property display_group_quantity to jabrefpreferencesjava file connected new checkbox with jabrefpreferencesjava i used another preferences as a samplelogic changes i added link to jabrefpreferences in grouptreeview class if user wants to display groups quantity a panel with quantity will be shown quantity is calculated when groupnodeviewmodel class is initialized so i decided to wrap a panel into an if statementtests passed thanks for your contribution and thanks for investigating looks like it uploads full database from disk every time you need to calculate no of items in group therefore if you have thousand groups it will read the entire database thousand timescould you add some details on this problem so maybe we are able to fix the underlying issue as well good dayi was working on this issue says jabref starts slowly if you have a lot of groups proposed improvement disable calculation of items quantity in groupkind regardsgennadiy oh i was a bit quick with merging just saw that the code only influences the display of the hit number but the cost intensive process is the actual calculation of this number which still happenscould you please open a follow up pr which makes sure that the calculation is also not done hisorry my bad i saw this last week and forgot today in the morning would you mind if i add preferencesservice to groupnodeviewmodel inject private preferencesservice preferencesservice in this case my if statement goes from grouptreeview to groupnodeviewmodel calculatenumberofmatches method like this private void calculatenumberofmatches { we calculate the new hit value we could be more intelligent and try to figure out the new number of hits based on the entry change for example a previously matched entry gets removed hits hits if preferencesservicegetdisplaygroupcount { backgroundtask wrap groupnodecalculatenumberofmatches databasecontextgetdatabase onsuccess hits setvalue executewith taskexecutor } } ok we can also remove calculatenumberofmatches from groupnodeviewmodel constructor and have options option no insert calculatenumberofmatches into gethits method before returning a value to grouptreeviewoptions no create a public method gethitsfromdatabase having calculatenumberofmatches inside and call it from grouptreeview before calling gethits but only if count of if tems in groups is enabled i think the solution you proposed in is perfect
6240,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,add simple unit tests for i have split some unit tests into different methods with only one assert statement koppor please let me know what you think about my additions so far change in changelogmd described if applicable i would split it even further create a separate class for each integritychecktest eg one class for edition one for author as we also have a different class for each integrity check hi dimitra karadima thanks for you effort writing unit tests is sometimes boring but can also be very educational thank you very muchalso i wanted to ask you to keep the checkboxes in the pr description as they are always useful to us to get a quick overview to which extent a pr is done even if only one checkbox makes sense in a pri took the liberty to readd them by myself hi dimitra karadima thanks for you effort writing unit tests is sometimes boring but can also be very educational thank you very much also i wanted to ask you to keep the checkboxes in the pr description as they are always useful to us to get a quick overview to which extent a pr is done even if only one checkbox makes sense in a pr i took the liberty to readd them by myselfthanks for your input i will keep it in mind for the upcoming prs dimitra karadima did you already found the time to address the comments above dimitra karadima did you already found the time to address the comments above tobiasdiez sorry i was a little bit busy but until sunday i will commit my new changes dimitra karadima did you already found the time to address the comments above tobiasdiez what do you think about my latest commit looks got o me please resolve the conflicts at integritychecktestjava looks got o me please resolve the conflicts at integritychecktestjava koppor i it dimitra karadima thank you for continuing to work on it it would be very nice if you looked at our automated tests the checkstyle is failing can avoid the unused imports if you format the file please ensure that you have the jabref code style active in intellij see for details had to retrigger the build workflows as they were not executed correctly checkstyle still fails grafik you can execute the checkstyle checks locally either in the ide or using gradlew checkstylemain thank you for the follow up i merged it as a single commit into a local branch in this repository i will address the minor comments for myself there
6242,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix storing of custom jstyles rename method for internalstyle title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
6248,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,number of items found in importentriesdialog this pr finishes the abandoned pr from cloudfenrir closes change in changelogmd described if applicable
6258,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,fix inspire fetcher use application x bibtex header link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6264,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,showing correct icon on main table linked files column link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes hello i have fixed the bugs that appear in the icon of the linked file column i create a draft pull request if there are breaking any contribution rules please let me know if everything is ok i will create a pull request then i have tested to import some format of doc just a simple test of docx pptx and pdf format files the source code i have a question i found the wrong icon still shows in the general files list which only shows pdf icon no matter what format of files attached then i found orgjabrefguifieldeditorslinkedfileviewmodelgettypeicon which directly indicate the icon to pdf which seems like the source of the bug there is a todo comment above which seems like this bug has already discovered then i went through the issue list and tried to find some relevant thing to this bug todo but nothing found i would be happy if you can provide more info about it thanks ^_^ image go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at fixes and finish the todo additional feature which has mentioned beforehello i have fixed the bugs that appear in the icon of the linked file column and finish the additional feature i create a draft pull request if there are breaking any contribution rules please let me know if everything is ok i will create a pull request then i have tested to import some format of doc just a simple test of docx pptx and pdf format files the bugs i found that is coming from the wrong filter i think it should be a mistakefor the additional features i was using the same method in think the modification wont do any harm to other code change in changelogmd described if applicable for ui changes if not created an issue at perfect thanks again for your contribution and hope to see the next pr from you soonim searching for our next target issue ^_^
6269,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,fix import into current library issuing wrong message this change in which an erroneous message import canceled is displayed when importing into the current library this fix was accomplished by modifying the parameter of the extends clause of the importentriesdialog class to have a return type of boolean rather than void and making setresultconverter return false rather than null link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository welcome to jabref and thanks for your contribution can you please describe how your changes i couldnt find the place where the return value of the dialog was used hello since this issue is a duplicate of i followed the comments on that issue and implemented your possible solution which resolved the issue to be honest i do not know exactly how this the issue i have pushed a commit fixing the indentation and fixing the problem in the findunlinkedfilesdialog thanks again for your contribution 👍 we hope you are interested in contributing further youre welcome this was fun i hope to contribute further as well
6272,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,ris import takes the wrong date and duplicates abstract an issue with duplicate values in abstract field checked code and couldnt reproduce second error publication date is taken from the y field not from the correct y see lines of risimporterjava it works fine and importing publication date as expected tested on file from crystalfp see file attached to issue kind regardsgennadiy change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository ok will do
6287,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,ui consistency bibtexstringeditordialog rework follow up to took me only about four and a half months to figure that out thanks tobiasdiez 😜 nodelookup did not work as the textfield node was not present at the time a edit cell was createdgood news is i found a way to bypass the restrictions of the private textfield variable bad news is its a bit of a hack but hopefully somewhat leightweight also changes in tables should now be commited if the focus is lost temporarily removed again since there are deeper issues with the cellfactoryim still working on some minor issues especially the validation in tablecells is completly dysfunctional change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository finally most of the dialog works but i had several problems with listening to the focus lost eventthis revealed some deeper issue with the cellfactory i have been investigating the last few daysthere was a very strange issue with the cells editing worked only on the first item and on the fifth and so on in case a listener is registered with the tablecell at first i was not able to understand the issue so i decided to work on the validation in the meantime since the controlsfx validation decoration did not work too the icon was b w and hidden behind the border of the cell i chose to highlight the whole cell instead by a pseudo class as we did in this led me finally to understand the direction where the issue with the first and the fifth row came from probably jabref is reusing nodes again to create tablerows a picture is better than a thousand words seems to be something wrong with the cellfactory i tried to understand the issue but had no success yet so i could use some advise maybe tobiasdiez can help me here since he was able to solve a similar problem with the listcellfactory in i tried his solution here did i do something wrong this should now be somewhat ready for reviewthis should already an improvement to the earlier version of this dialog auto edit works etc but due to a bug in javafx commit on focus lost is not working a workaround i tried produces only more problems this seems to be a known issue but there is no progress in fixing it since so ill leave it at this point i believe the dialog is better then before although it is not perfect
6289,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix xmpexportertest hotfix for xmpexportertest not workingas soon as pr goes through i will mergefollow up on code quality will be done at the issue was introduced during removing of deprected method in
6290,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fix selecting custom export for copy to clipboard with uppercase file ext link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6315,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,make wrap fields also visible in entry editor i simple reused the fieldformatterpreferences wrapfieldlist more like a hackthe original multiline property got removed in a more elegant solution would be to maybe add this to the custom entry types dialog link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i would leave a proper implementation for the future this depends also a bit on pinghow do we proceed here i m merge this now and will work on a more clean solution
6345,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,fix export to clipboard dialog icon change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository could you please also add a changelog entry entry added
6368,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix various dark theme issues related issues dragndrop text dialogs image issue is that i dont find the dialogs graphics eg the confirmation image adequate so maybe create custom ones for the dark theme or remove them scroll panethe scroll pane is quite visible at least on my side so i dont know if that issue has been considered as resolved or not image change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository changes regarding the scroll bar hover image perfect thank you again
6368,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix various dark theme issues related issues dragndrop text dialogs image issue is that i dont find the dialogs graphics eg the confirmation image adequate so maybe create custom ones for the dark theme or remove them scroll panethe scroll pane is quite visible at least on my side so i dont know if that issue has been considered as resolved or not image change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository changes regarding the scroll bar hover image perfect thank you again
6371,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,disable the generate button if the id field is empty change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks looks good to meps if you write in the body fixes followed by issue nunber without the code tags github will close the issue automatically on merge thanks again for your contribution
6377,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,file directory bug was introduced in sorry calixtus for suspecting you 👼also a bit of code cleanup is included for example i tried to minimize using strings and favored path s instead link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at sorry calixtus for suspecting you 👼forgiven and forgotten you owe me one 😉 thanks for the quick reviews
6379,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fix library sort order get lost this pr co authored by heriniaina randrianasolo co authored by omar tachour co authored by sadji micipsa this error is due to the absence of an object equality test for the saveinspecifiedorder attribute so we have handled this error by correcting the equals function in the saveorderconfig class change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository your changes look good to me but im currently trying to understand why this fixes the error could you please explain that in a bit more detail hrandrianasolo i tested your changes and they dont seem to make a difference so could you please explain it hi siedlerchrwe apologize for the delay i am the colleague of hrandrianasolo the bug correction works very well on a version which is not up to datewe have well compiled and executed the modified code and we found that the bug is corrected there i am trying to test it on the new versionregarding the explanation the configuration of the export sort order is represented by the class saveorderconfig in librarypropertiesdialogview there are two objects of type saveorderconfig → oldsaveorderconfig represents the old configuration→ newsaveorderconfig represents the new configurationwe compare the equality of its last two to see if a change has been made or not after several tests we realized that the equals function in saveorderconfig did not take into account the equality of all attributes hi siedlerchr i inform you that i tried our correction on todays version it also worked hi everyone sorry for the delay as my colleague explained above regarding the explanation of the fix i put here screenshots of the bug fix instead of the screen recorder because i cant put it in the comments sélection_ thanks for the explanation lgtm we merge to get things moving forwardwe will add the changelogmd change by ourselves
6381,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,added a download checkbox to the import dialog when importing entries users now have a checkbox available to downloadfiles linked via urli am not a gui expert and am wondering whether my fix is appropriate and is considered clean in the mvc concept since the functionality was already implemented in the linkedfileviewmodel i just created an instance and let it handle the download is that ok if not copying the code over and resolving some dependencies would be the easiest but also the dirtiest solution to this problem is there an appropriate place the code in linkedfileviewmodel could be moved so it is callable in importentriesviewmodel go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at thanks for your contribution looks good already i think your approach is the best solution there are multiple pieces in the code which create the linkedfileviewmodel so its totally fine if you want to learn more about the gui principle mvvm if you want to make it persistent i think an option in the preferences is fine maybe add to the file tab then you could add it as part of the filepreferencesi think the import tab would be more appropriate dont you think just add it where it suits best i went with filepreferences after all as the other settings of the importtab are stored there as wellone last thing that bugs me after downloading the file it is put after the online link so when i click on the entry it still opens the online link i think it would make sense to reverse that order dont you thinki plan on reversing it in any case and giving the user the option in the preferences only not on each import to remove the online link in case a file was successfully downloaded btut yes that sounds like a good idea but i am not sure if removing the online link at all is a good idea there might be cases where its useful to keep it maybe when you share the bib file and the other user does not have downloaded the pdf yet just put the pdf in front of the link siedlerchr exactly thats why i would have that functionality configurable in preferences and off by default okay that sounds reasonable i noticed that jabref was opening the online link by default not because the file was second in the list but because it was never actually linked to the entry i did that and now when clicking on the file jabref asks me if i want to open the link or the filenow it makes no more sense to me to have the option to delete the link and i will not implement it ok i think i am satisfied nowto sum up the import dialog now offers a check box if the user selects the check box and the imported entry contains an online link jabref will download the file it is stored in the directory set up by file directory pattern and named according to the filename format pattern in the import tab of the preferences dialog the file entry is prepended to the imported bib entrythe user can choose to have that check box selected by default in the import tab of the preferences dialog thanks codewise looks good to megreat also good that you now take the filedirpattern and filenamepattern into account i think this was also one issue when downloading from the entry editorindeed this bugged me even before i coded this feature i tried looking for an issue to reference here but could not find any thoug so maybe this was just me btut thanks again for your good work looking forward seeing more from you i think the status item is enough work for another pr best thing would probably to finish the logic of this pr first with the most basic progress indicator possible merge this pr and then create another pr for the status indicator as it would probably affect way more parts of the code dont misunderstand me i do like the idea of a generic progress for jabref toojust do one step after another ok to conclude this pr i suggest the following pr to fix the entry duplication for the right click download action pr to remove the dead progress bar code pr to implement the list of background tasks and its graphical representation in the guii can probably get to the first two today but will need some time for the third i will create a pr after only a couple of commits so we can start discussing there i hope you dont mind great thank you go aheadsplitting this up in multiple prs makes it just easier to review and later to debug if there are unknown sideeffects
6386,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix jstyle was invalid with default section at the start adapted the error message to give a hint what is probably missingi also noticed a problem in eclipse when executing the l n test it was missing an add opens link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6389,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix underscore character being omitted from file name in recent libraries list fixes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository perfect thanks for the quick follow up
6402,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix action helper when no library is open this an exception when opening the view menu with an empty library link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository a fix using easybindmonadic similar to the other fix doesnt work this is i guess the cleanest solution since you dont need to worry about null values anymore its the bindings version of optional tobiasdiez thanks for the hint i refactored it now seems to still work i am not that into those binding stuff i am wondering about the fieldbinding that seems uncessary now
6406,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,restore some missing keyboard shortcuts change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks again for the contribution would be cool if you could check the other keybindings as well if there are some missingà simply search for reference should be the easiest way to find any missing one
6407,1,0,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,an issue where a new entry is not shown in the library if a filter search is active i used the existing endsearch method of globalsearchbar to clear the search if a new entry is addedprobably the solution is quite quick and dirty and i am not sure if it fits to your architecture and if i added it at the the right spot in the codei would be happy about feedback and advice for the future change in changelogmd described if applicable for ui changes nsmt it would be really cool if you could change this so we can merge your pr nsmt it would be really cool if you could change this so we can merge your pr siedlerchr sorry i was really busy the last weeks totally forgot about thati adjusted the fix like you recommended by injecting the statemanager and using clearsearchquery
6419,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix pasting on mac and linux pr caused the double pasting issue on macos see after the first paste the edit action focusowner did somehow trigger on mac and this resulted in executing paste twice i really dont get where the bug is reverting this reopens issue especially because by logic this should be here so where is the bug this should be before calixtus whoops i overlooked the original issue for your pr so we are in some kind of situation where we have contradicting behavior in two operating systems that kinda sucks since we need to differentiate between those now last time this was the fix but maybe this is when we also introduced i have been thinking this through since the hint of siedlerchr the thing is the insert command should stand here is there another issue with macos some method fired by macos we did not see yet if we dont find out the root cause in mac we could add an ugly os check for linux mac i already stumbled upon other methods jabrefframein openaction quit and about especially for macos did i mention that i dont like apple 😉 i agree with calixtus the command there makes sense linusdietz can you debug and report which other code triggers the paste command on macos os macos catalina e hello everyoneim currently trying to reproduce the error of non working menu items or duplicating objects during paste command from google scholar and between two bib libraries but i canti use intellij idea to start jabrefare there any issues with copy paste gena just to double check you are on latest master linusdietz maybe you can add a screencast using loom koppor yes im on latest masteri downloaded last build and pulled changes from github both last build and source code in intellij show no error ie record inserts without duplicates looks like i see an errorits very phantom ie i still can not understand what should i do to repeat it sometimes i have entries inserted sometimes only one ill continue testing and try to do something about it ok i need some help looks like paste command of maintablejava executed twice in editactionjava and this was deleted by current pull request now its back again line framegetcurrentbasepanel paste in maintablejava method setupkeybindings i tracked first case and it turns out that editactionexecute called jabrefframejava line createmenu method when i commented that line jabref inserts only one item per each ctrl v commandso in general paste command is called first time because we have maintablesetupkeybindings and it triggered by ctrl v second time because ctrl v command triggers main menu command edit paste sorry for our late replythank you for you work in tracing this bugthe deletion of framegetcurrentbasepanel paste was the unsuccessful attempt to fix the issue in this prwould you like to create a fix for this issue following your investigations and to open a new pr so we can probably close this one and merge yours with the master branch calixtus i hoped to get some ideas about solving this issue ok if there are no any ideas i will continue to investigate myself we have to disable main menu from listening ctrl v and keep it listening in maintablejava ill be back with ideas does ctrl c or ctrl x also call an edit action maybe there is some design flaw in a hotkey that is defined twice by setupkeybindings and the the menu command ctrl x works in the same way when i press command x the program deletes two entries from current lib then i move the cursor to another lib and press command v jabref inserts last entry to the new library ie one entry just disappearsit looks like jabref cut entries twicechecked from intellij and using last stable version from jabreforg why do we need setupkeybindings method in maintablejava when i delete copy paste cut commands from it the program works finethis lines case paste paste eventconsume break case copy copy eventconsume break case cut cut eventconsume so why do we need those commands in maintablejava the reason is that you can define custom keybindings options manage keybindings for all commands and so people can use their emacs vim whatever paste command stylefor mac we use the keybindings and simply replace ctrl with meta in the keybindingrepositorymaybe that is part of the problem as well public keycombination getkeycombination keybinding bindname { string binding get bindnamegetconstant if osos_x { binding bindingreplace ctrl meta } return keycombinationvalueof binding } siedlerchr if i remove this line of code binding bindingreplace ctrl meta i just have to use command button on mac instead of control a bit more natural for iosthe problem persistswhat about main menu i mean if you wanna change key combinations and we remove that lines from maintablejava does main menu works with new key combinations for copy pase cut i will test this on windows options customize keybindings changed copy paste to the following alt gr o and alt gr p i can copy and paste using those shortcuts ctrl c and ctrl v then dont worki also tested uncommenting the setupkeybindings in maintableno difference no duplicatesso now we would need someone on linux who can test this linux user wanted lyzardking could you assist in testing this on linux assigg some other shortcuts to copy pastetest if it worksand then do a test with commenting out the method setupkeybindings in maintable sure i can test both stable and the version from buildsjabreforgits not clear to me what i should be doingive never had duplicates in pasting if thats the issue here issue was about merging in pasting in linux and windows lets follow the mac related stuff here will look into this as i have now a mac at hand nope didnt fix it but i think i found the real reason now doesnt work on linuxi hadnt noticed this issue before in the deb it now doesnt work even if i press ctrl v i think i have found the root cause now pasting to a new library should work now as well please try again when the new build is ready new build is ready please try pasting an entry from a library to a new empty library it works but i have top copy ctrl v multiple times to get it to work if the library is emptythe copy paste buttons are not active on an empty libraryon a not empty library it works normally works fine on windows as well the menu buttons are disabled on windows as well i think they are only activated if you have at least one entry selected but this is a minor issuetherefore i would propose to merge this regarding the disabled enabled menu items we track the issues at the problem turns out to be a bit complex we need to find a way to differ if an action was triggered by key or not or to move the keybinding from the maintable to the edit actiontherefore i would prefer to have this pr in as it enables copy pasting vai keyboard commands and we can reopen the other issue regarding the menu commands
6423,1,0,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,0,0,keep group pane size when resizing window link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes hello i think i have fixed this bug the main reason for this bug is group pane is resizable with parent window size i add one line in jabrefframejava to set group pane not resizable with parent thus it can keep size when resizing window the following is manual test before resizing window resizing window image go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at thanks but i dont understand what is the meaning of it does not make sense to put them together put what togethersorry for the misunderstanding i was meaning that you are right a separation of the group reisze and the parent window resize is betteryou could also try to add the scrollbars in your pr as well or create a new one ok i see thank you very much yes user can still resize the sidepane manually and i have added the change log in changelogmd
6426,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,sorting custom entry fields that contain numerical values mootezsaad and i have worked together and this pull request we added a new comparator for numeric cases and now they are sorted as integers and not alphabetically change in changelogmd described if applicable for ui changes if not created an issue at hi dimitra karadima koppor and me had a mob session tonight and we took the liberty to use your pr to teach me a bit about git since there were only some checkstyle nitpicks with your pr left we hope you dont mind we finished your work in thank you very much for your work on this we hope you did enjoy working with jabref you are always welcome to contribute more calixtus of course no problem thanks for fixing and merging my code
6427,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,add truncate as a bibtex key modifier link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes adds a truncate modifier to the available bibtex key modifiers for a title the bracketed pattern title truncate produces the result a t the syntax is truncaten title truncate to mimic the pattern of authn etcremaining see if layered expressions are reasonable to implement eg auth title truncate update changelog documentationthings i am not sure about should truncate be a formatter orgjabref logic formatter currently formatters does not accept arguments the interaction between bibtex key generation and truncate might lead to unexpected results as whitespaces are removed after truncation unless this is considered obvious it should perhaps be mentioned in the documentation of truncate eg for a title title truncate will lead to the bibtexkey at should this be included in the changelog there were a bracketedpatterntest in orgjabref logic util is there a correct location for the bracketedpatterntest others change in changelogmd described if applicable x for ui changes x if not created an issue at \ ideally it would be a formatter maybe we need to adapt the interface to allow argumentsi missed how regexformatter is implemented ill just mimic that and it shouldnt be a problem updates to documentation in a nutshell truncaten has been added as a formatter directory names are truncated to a length of characters using a utility function for filenames i dont think i should change the parser there is a large risk i will create more issues than i solve it might be possible to shorten the code in java org jabref logic bibtexkeypattern bracketedpatternjava quite a bit if larger parts of the code is turned into formatters and formatters can accept arguments either in the constructor or in the format method both are currently being used when i try to import a file from an url using a pattern that creates a javaniofilefilesystemexception the directory cannot be created but the file is still downloaded should i try to fix that as part of this pull request as well if a file cannot be downloaded to the location specified by a file pattern it makes more sense to me that the file isnt downloaded at all your changes look so far is this ready then yes the last conflicts should be resolved now the last change change of test names can be removed but it seems more consistent with the guidelines for me its fine for external contributors we have the rule that at least two developers should review a pr so when a second dev gives his okay its ready for merge
6440,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,add support for jumping in ordered author list by typing letters link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes i think i have added the support for jumping to the entry when typing lettersshould i add some comments to the method i addedthanks d change in changelogmd described if applicable for ui changes if not created an issue at i only test manually i set the time to ms because i think s is too long for our typingthats fine there are many scenarios some gui stuff just cannot be tested i only test manually i set the time to ms because i think s is too long for our typing thats fine there are many scenarios some gui stuff just cannot be testedyeah i found the sad truth finally t^t calixtus thanks for your suggestions i made a mistake when i adjust the code format and had not realized that lgtm thanks for your contribution i didnt test if this interferes with typing in the entry editor or searchbar but it shouldnt as the event is registered on the maintable yeah i tested it manually which will not interfere with the searchbar the target of the input is depended on the focusing window ok approvals koppor s suggestions are and the change is testedim going to merge this now leitianjian thank you very much for your contribution i hope you liked working on jabref and consider to contribute more
6455,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix autocomplete thread the autcomplete binding was triggered when a cleanup called setbibentry from a background thread link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6475,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,that multiple background task popups stacked over each other link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixed added a globle popover variable to hide existed popover if any if a pop over is showing and i clicked on the background tasks button the showing pop over will hide first then the new pop over will show the pop overs wont stack over go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at it would be really nice if you could finish this pr and try the changes so that we can merge this pr soonyes sorry for the late change i have made that please check it again
6478,1,0,0,1,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,fix libre office connection and other progress dialogs error was introduced in with the progressdialog showandwait i had to revert that btut the showandwait broke all dialogs which used the dialog eg also copy linked files link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository uh i forgot to roll that back the progressdialog is not actually used by the background task functionality because i could not get it to worki think it would be better to change the name of the method to showprogressdialog the old name showprogressdialogandwait suggests that the dialog is waited for indeed good idea i renamed it now do i get that right that most of the progress dialogs can probably be converted to be displayed in the new progress popup i dont know which other features use the progress dialoguei had three problems with the progress dialogue it displays the progress of an actual task i wanted to show a list of tasks it is not waited for there is no way to close it when the progress reached in the dialogue that i implemented as a solution for this i used the list of tasks stored in statemanager it would be easy to pass a list of tasks instead then we could add an option to the dialogue to only show and it could replace the other dialoguesbut as the original dialogue is not waited for i guess it is only used as information to the user how about registering the relevant task in the background task list in statemanager then you could just pop up the new dialogue you could even pop up the pop over of the task progress indicator in the toolbar this would be very similar to a show only dialog no wait the user can hide it and check the status later by clicking on the progress indicator againimo this would be a good way to go i think the new dialogue and pop over are more informative as they show the actual progress of tasks if available afaict from the code the old dialogue just showed an indeterminate progress bar i just checked and it is just the waitforsavefinished dialog that creates a task for this purpose the other times the dialogue is shown it is shown with actual worker tasks so progress should be shown i agree these progress dialogs can be replaced by using the new progress popup none of them actually has a reason to block the ui and can safely be run in the background in my opinion the only critical application is indeed the connection to libreoffie but that could also be done in a background task because its usually finished very fast however we have to be careful of tasks throwing exceptions the copy linked files to folder displays a progress dialog and afterwards the result dialogindeed it doesnt make sense to block the ui with a progress dialog here
6479,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fixes generated bibtex key and display of institute authors link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes fixes there are two parts of this issue a null is prepended to an abbreviated bibtex key curly brackets are not respected in the maintables author column fix to the prepended null what is going on bracketedpatterngenerateinstitutionkey gets called for any author enclosed in curly brackets eg {the school of life} the method expects an institute of technology or university and appends its name to the key eg null if there is no name why is it going on academic institutions can have long generated bibtex keys unless abbreviated eg royal institute of technology the school of electrical engineering and computer science which generateinstitutionkey shortens to riteecs fix replace a null valued university with an empty string the drawback is potentially very short bibtex keys eg the school of life l what are alternatives regex matching universities and technological institutions which is hard to implement correctly on the other hand the drawback is an unexpected bibtex key in a corner case in the case of the school of life would be abbreviated to sl instead of l fix to the author column when the list of authors gets converted to a latex free version all curly brackets are removed since the whole string is parsed as latex when the latex free string is used to create fetch an authorlist it will no longer contain any brackets and the information needed to format the string is gone what i think is left to do find out why {the school of life} isnt respected in the author field of the gui attempt to match universities etc with regex assume that names that have comma separated parts are universities update bibtexkeygeneratortest as it makes heavy use of deprecated methods the deprecated methods are essentially convenience methods so they have been moved inside the test file see if the readability of generateinstitutionkey can be improved change the key generator for institution corporate names to a formatter generateinstitutionkey should not be a separate formatter it is only called normalize and change in changelogmd described if applicable for ui changes if not created an issue at find out why {the school of life} isnt respected in the author field of the guii think it could be that the latex unicode convert is called for the author field it kills the extra braces i had a similar problem in the msoffice exporter i think i implemented a workaround there ah nice thank you i will take a look i believe this is fixable in bibentrygetlatexfreefield by splitting it into bibtex latex according to whichever bibtex version are supported but the problems are i cant find which bibtex version we are supporting in adr nor anywhere else bibentrygetlatexfreefield appears to be used both for bibtex in utf eg {lâtëx} and for fully expanded text eg lâtëx as those are incompatible perhaps it makes sense to split the method and track down what method wants what should i do this i can attempt to do the same workaround but it doesnt really solve the problem as i understand it i can also look at it a bit more and see if i have missed something anyway any suggestion hint is greatly appreciated siedlerchr hithanks for investigating the underlying problem is the latex unicode external library kills the braces it has of course no understanding of an author refs and i fear there is no easy solution we use the latexfree field method to not have latex code displayed in the main table i would treat this as a secondary issueregarding the second issue replace a null valued university with an empty string the drawback is potentially very short bibtex keys eg the school of life l what about using a formatter that uses the capital letters eg jabref would then become jrand orgs with abbreviations eg uno or who would stay as is similar to the title formatter regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantif i understand things correctly there are currently three different cases relevant to and assuming we are using the bibtex format described at bibtexorg special symbols plain bibtex eg kurt {g\od}el used as the internal representation bibtex with unicode eg kurt {göd}el used for exporting to a unicode aware file format and editing in unicode formatted text eg k gödel used to display to a user or export to a latex bibtex unaware environment bibentrygetlatexfreefield handles case while to the best of my knowledge no function method handles case the issue with case is that latex and bibtex are two incompatible languages since some reserved words are the same therefore if we are using the format described at bibtexorg format the correct way of dealing with case using bibentrygetlatexfreefield is to either split out the latex components and translate them to unicode separately or to escape the parts that are in bibtex format if i am using the bibtexorg format at least all non nested curly bracketsl not preceded by a keyword should be escaped {jabref} \{jabref\} proceedings of the {ieee} proceedings of the \{ieee\} which is then dealt with correctly in bibentrygetlatexfreefield what i was trying to argue is that case and case must be dealt with differently i can deal with this after issue if that is of interest however i just realized that issue is case and can most likely be solved by changing the order of method calls please point out if something is unclear or incomprehensible i am trying to improve my writing skills but i am well aware that i have some practice ahead of me my only excuse is that it is still morning here x regarding the second issue that does sound better i cant think of any case where keeping all capitalized letters isnt good and it should be compatible with the current implementation regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantno problem we are happy for every contributor its just a complex issue its just complicated issue because it involves corporate authors and unicodei try to provide some background on this unicode originally bibtex and latex did not support unicode thats why you have to use those latex escaping of umlauts and other charactersbiblatex the successor of bibtex supports unicode but many journals still require bibtexand many citations from online resources still contain latex escaping of charactersoriginally jabref maintained a bidirectional mapping between latex escaped characters and their unicode equivalent some time ago we switched to the latex unicode library of course javafx has no idea of latex therefore having a title or an author encoded in latex must obviously converted to unicode for displayeg kurt {g\od}el becomes kurt gödel corporate authors see the biblatex manual section corporate authors and editors corporate authors and editors are given in the author or editor field respectivelynote that they must be wrapped in an extra pair of curly braces to prevent data parsing from treating them as personal names which are to be dissected into their components example author {{national aeronautics and space administration}} in jabref the latex unicode formatter is called for every field and the formatter now receives the string toconvert {national aeronautics and space administration} the latex unicode formatter now kills the curly braces as they could indicate some latex commands and returns string converted national aeronautics and space administration jabref now splits the author according to it rules and thinks its in this case two authors separated by authors the only solution i see is to check if its a corporate authors convert it to unicode and add the braces again one really difficult edge case is for example author {\l{}}ukasz micha\l{} could be easily interpreted as corporate authorsi hope my long explanation helps you a bit to understand the problem maybe you come up with an idea hello k kaw pnf mkmdsmphz thank you for your work in fixing this issue and thanks for that informative context siedlerchr thats a very interesting edge case i think there could be a test where braces are counted to corroborate that the brace at the very beginning is not closed earlier on that would be the case where formatting as a corporate author would apply i think i have some code in python that does something related though the opposite it matches the most ancient parenthesis first ill adapt it when i return home pythondef par_count text letters opener str closer str numbers base algorithm to count matching parentheses parameters text str the string to be parsed against matching opener and closer opener str the character s to be considered as the opener of a sequence closer str the character s to be considered as the end of a sequence yields count int a sequence of int that are the number of matches for each character examples here are some base examples of expected output and actual output c for c in par_count c for c in par_count c for c in par_count c for c in par_count c for c in par_count a a b a a c for c in par_count a a b a a type declarations for local variables count int character str pending_from int pending_to int others counter str count pending_from pending_to others counter logging recommends using s substitutions instead of f strings or string interpolation with brackets logger logginggetlogger __name__ loggerdebug about to parse s with s and s text opener closer for character in text if character closer if pending_from pending_to pending_from yield pending_from else count pending_from count pending_to count yield count elif character opener count pending_to count yield count else othersupdate character yield othersget character loggerinfo parsed s with s and s text opener closer rolandog your hint with the braces gave me the idea and i think we maybe have already a solution for this problem i cant believe its been hidden in plain sight 🤦 this method is used in the bracketedpattern class to define if its an insituation corporate author or not the test hi rolandog thank you for the very detailed issue it makes things a lot easier pi have done a bad code update to demonstrate what i think is the issue with displaying names in the maintable ie the order of method calls siedlerchr and rolandog you are both of course most welcome to add any comment change any code and if there is any way i can make life easier for you do tell i am currently quite new to github and my todo list notes and links are currently kept in a offline jupyter document and i have no idea how to do it differently x siedlerchr thank you for the overview and the biblatex manual link i have been looking for that one ooi am going to stay out of the biblatex discussion for now because i believe kurt {g\od}el should be kurt gödel it doesnt mean i am not interested in the issue just that i have a lot of reading ahead of me apparently a lot have changed since and bibtex k kaw pnf mkmdsmphz youre welcome im glad to have helped pinpoint this and thank you for taking on this issueand thats great siedlerchr im happy that it seems that this may not need extreme refactoring thats a very clever functionhowever i think i found an edge case where isincurlybrackets may present a false positive in its current form inspired by the corporate author kurt gödel society but instead using łukasz michał as part of a corporate author name im not familiar with jabrefs whole codebase so mismatched braces may be caught earlier on as per is an example displayed as a test where one of the entries would throw an error the last one java test void testisincurlybrackets { correct c {\l{}}ukasz micha\l{} brackets count assertfalse stringutilisincurlybrackets {\l{}}ukasz micha\l{} correct c {{\l{}}ukasz micha\l{} society} brackets count asserttrue stringutilisincurlybrackets {{\l{}}ukasz micha\l{} society} mismatched braces should return false c {{\l{}}ukasz micha\l{} {society} brackets count assertfalse stringutilisincurlybrackets {{\l{}}ukasz micha\l{} {society} } in case this isnt filtered checkbraces then checking the final value of brackets could prevent that edge case java checks if the given string has exactly one pair of surrounding curly braces strings with escaped characters in curly braces at the beginning and end are respected too param tocheck the string to check return true if the check was succesful false otherwise public static boolean isincurlybrackets string tocheck { int count int brackets if tocheck null tocheckisempty { return false } else { if tocheckcharat { && tocheckcharat tochecklength } { for char c tochecktochararray { if c { { if brackets { count } brackets } else if c } { brackets } } return count && brackets } return false } } rolandog thanks for testing and checking that edge case feel free to submit a new pr and in that way you can also fix the workaround i used in the msbibauthor for the ms office exporter curly brackets are not respected in the maintables author column is the same as issue should i leave it alone in this pr or update this one to close both since they are related you can update your pr to close both just add it also to the changelog then i am having issues finding a case that is supposed to break the method fixauthornatbiblatexfree ill look at it a bit longer before extending the same tests to the other methods but i dont think i will come up with anythingother than that i cant find any tests for bibentrytableviewmodel nor maintablenameformatter i dont think i should attempt to create any as at least bibentrytableviewmodel has gone through quite a bit of changes recently if you cant find a case thats breaking the test its a good sign regarding tests for other classes i think this would be beyond the scope of the pr here k kaw pnf mkmdsmphz as you now have some more deep insights into the bibtexkeypattern generation now than i can you maybe help that usere here in the forum sure i will look at it i somehow missed that jabref has a forum oo so what remains are preferences no longer updates without restart eg from none to natbib that is not within the scope of the pr and i am guessing someone is fixing it already weird things happens if you try to escape curly brackets in the author section of required fields i am guessing the \ is being protected somewhere i can open up an issue about it but i dont have time to look at it until the th of may thanks already for your contribution and the extensive tests just let me know if its finished so far then we can review it it would be nice if you could open an issue for the two problems especially that preferences reloading i guess escaping the curly brackets should hopefully be not that common in the author field more relevant for the title field or so i guess i just saw two minor style issues nitpicks but nothing importanti am trying to learn and improve nitpicking is appreciated and encouraged k kaw pnf mkmdsmphz big thanks for your work on thisi just noticed some latex commands are not cleared in the now master buildhas this been an issue before is this still an issue with latex unicodeadapter library is jabrefauthors in src test resources testbib which file in particular and which settings entry table format of author and editor name hum i am not sure what is going on ill have a look most of those should be cleared and are cleared when i build locally but that might be something wrong with my setup looks fine for me as well lastname option and do not abbreviateedit calixtus do you have show names unchanged activated i think i could reproduce calixtus screenshot in jabref ffa cd but right now i seem unable to do so again and i have tried k kaw pnf mkmdsmphz if you have show names unchanged in the prefs activated then no conversion is happening i see so the solution would be to change return nametoformat to return latex unicodeadapterformat nametoformat or similar in maintablenameformatter calixtus i thought the intent of that option was to leave the names completely unchangedalso if you change that dont forget to add a cacheeditwith cache i mean something along the line of private string authorsnatbiblatexfree in authorlist uh im not going to change anything today 😄 i was just wondering about that hum actually that is my bad jabref does indeed clear the latex even when show names unchanged is set should i open up an issue and fix this then yes it would be nice if you could provide a fix no need to create an issue before ok i apparently dont know how to do this i created well thank you all for reviewing this pr it is very appreciated ❤️ 🎉 🎈ill take the reviews and results to heart and make sure the next pr will create fewer issues 🤦
6479,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fixes generated bibtex key and display of institute authors link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes fixes there are two parts of this issue a null is prepended to an abbreviated bibtex key curly brackets are not respected in the maintables author column fix to the prepended null what is going on bracketedpatterngenerateinstitutionkey gets called for any author enclosed in curly brackets eg {the school of life} the method expects an institute of technology or university and appends its name to the key eg null if there is no name why is it going on academic institutions can have long generated bibtex keys unless abbreviated eg royal institute of technology the school of electrical engineering and computer science which generateinstitutionkey shortens to riteecs fix replace a null valued university with an empty string the drawback is potentially very short bibtex keys eg the school of life l what are alternatives regex matching universities and technological institutions which is hard to implement correctly on the other hand the drawback is an unexpected bibtex key in a corner case in the case of the school of life would be abbreviated to sl instead of l fix to the author column when the list of authors gets converted to a latex free version all curly brackets are removed since the whole string is parsed as latex when the latex free string is used to create fetch an authorlist it will no longer contain any brackets and the information needed to format the string is gone what i think is left to do find out why {the school of life} isnt respected in the author field of the gui attempt to match universities etc with regex assume that names that have comma separated parts are universities update bibtexkeygeneratortest as it makes heavy use of deprecated methods the deprecated methods are essentially convenience methods so they have been moved inside the test file see if the readability of generateinstitutionkey can be improved change the key generator for institution corporate names to a formatter generateinstitutionkey should not be a separate formatter it is only called normalize and change in changelogmd described if applicable for ui changes if not created an issue at find out why {the school of life} isnt respected in the author field of the guii think it could be that the latex unicode convert is called for the author field it kills the extra braces i had a similar problem in the msoffice exporter i think i implemented a workaround there ah nice thank you i will take a look i believe this is fixable in bibentrygetlatexfreefield by splitting it into bibtex latex according to whichever bibtex version are supported but the problems are i cant find which bibtex version we are supporting in adr nor anywhere else bibentrygetlatexfreefield appears to be used both for bibtex in utf eg {lâtëx} and for fully expanded text eg lâtëx as those are incompatible perhaps it makes sense to split the method and track down what method wants what should i do this i can attempt to do the same workaround but it doesnt really solve the problem as i understand it i can also look at it a bit more and see if i have missed something anyway any suggestion hint is greatly appreciated siedlerchr hithanks for investigating the underlying problem is the latex unicode external library kills the braces it has of course no understanding of an author refs and i fear there is no easy solution we use the latexfree field method to not have latex code displayed in the main table i would treat this as a secondary issueregarding the second issue replace a null valued university with an empty string the drawback is potentially very short bibtex keys eg the school of life l what about using a formatter that uses the capital letters eg jabref would then become jrand orgs with abbreviations eg uno or who would stay as is similar to the title formatter regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantif i understand things correctly there are currently three different cases relevant to and assuming we are using the bibtex format described at bibtexorg special symbols plain bibtex eg kurt {g\od}el used as the internal representation bibtex with unicode eg kurt {göd}el used for exporting to a unicode aware file format and editing in unicode formatted text eg k gödel used to display to a user or export to a latex bibtex unaware environment bibentrygetlatexfreefield handles case while to the best of my knowledge no function method handles case the issue with case is that latex and bibtex are two incompatible languages since some reserved words are the same therefore if we are using the format described at bibtexorg format the correct way of dealing with case using bibentrygetlatexfreefield is to either split out the latex components and translate them to unicode separately or to escape the parts that are in bibtex format if i am using the bibtexorg format at least all non nested curly bracketsl not preceded by a keyword should be escaped {jabref} \{jabref\} proceedings of the {ieee} proceedings of the \{ieee\} which is then dealt with correctly in bibentrygetlatexfreefield what i was trying to argue is that case and case must be dealt with differently i can deal with this after issue if that is of interest however i just realized that issue is case and can most likely be solved by changing the order of method calls please point out if something is unclear or incomprehensible i am trying to improve my writing skills but i am well aware that i have some practice ahead of me my only excuse is that it is still morning here x regarding the second issue that does sound better i cant think of any case where keeping all capitalized letters isnt good and it should be compatible with the current implementation regarding the first issue first of all as you know i am not a regular contributor to jabref if youd like me to drop this topic for any reason please say so i am just hoping that sorting this out will save someone else time in the future but i am not familiar enough with jabref to know if i have missed something importantno problem we are happy for every contributor its just a complex issue its just complicated issue because it involves corporate authors and unicodei try to provide some background on this unicode originally bibtex and latex did not support unicode thats why you have to use those latex escaping of umlauts and other charactersbiblatex the successor of bibtex supports unicode but many journals still require bibtexand many citations from online resources still contain latex escaping of charactersoriginally jabref maintained a bidirectional mapping between latex escaped characters and their unicode equivalent some time ago we switched to the latex unicode library of course javafx has no idea of latex therefore having a title or an author encoded in latex must obviously converted to unicode for displayeg kurt {g\od}el becomes kurt gödel corporate authors see the biblatex manual section corporate authors and editors corporate authors and editors are given in the author or editor field respectivelynote that they must be wrapped in an extra pair of curly braces to prevent data parsing from treating them as personal names which are to be dissected into their components example author {{national aeronautics and space administration}} in jabref the latex unicode formatter is called for every field and the formatter now receives the string toconvert {national aeronautics and space administration} the latex unicode formatter now kills the curly braces as they could indicate some latex commands and returns string converted national aeronautics and space administration jabref now splits the author according to it rules and thinks its in this case two authors separated by authors the only solution i see is to check if its a corporate authors convert it to unicode and add the braces again one really difficult edge case is for example author {\l{}}ukasz micha\l{} could be easily interpreted as corporate authorsi hope my long explanation helps you a bit to understand the problem maybe you come up with an idea hello k kaw pnf mkmdsmphz thank you for your work in fixing this issue and thanks for that informative context siedlerchr thats a very interesting edge case i think there could be a test where braces are counted to corroborate that the brace at the very beginning is not closed earlier on that would be the case where formatting as a corporate author would apply i think i have some code in python that does something related though the opposite it matches the most ancient parenthesis first ill adapt it when i return home pythondef par_count text letters opener str closer str numbers base algorithm to count matching parentheses parameters text str the string to be parsed against matching opener and closer opener str the character s to be considered as the opener of a sequence closer str the character s to be considered as the end of a sequence yields count int a sequence of int that are the number of matches for each character examples here are some base examples of expected output and actual output c for c in par_count c for c in par_count c for c in par_count c for c in par_count c for c in par_count a a b a a c for c in par_count a a b a a type declarations for local variables count int character str pending_from int pending_to int others counter str count pending_from pending_to others counter logging recommends using s substitutions instead of f strings or string interpolation with brackets logger logginggetlogger __name__ loggerdebug about to parse s with s and s text opener closer for character in text if character closer if pending_from pending_to pending_from yield pending_from else count pending_from count pending_to count yield count elif character opener count pending_to count yield count else othersupdate character yield othersget character loggerinfo parsed s with s and s text opener closer rolandog your hint with the braces gave me the idea and i think we maybe have already a solution for this problem i cant believe its been hidden in plain sight 🤦 this method is used in the bracketedpattern class to define if its an insituation corporate author or not the test hi rolandog thank you for the very detailed issue it makes things a lot easier pi have done a bad code update to demonstrate what i think is the issue with displaying names in the maintable ie the order of method calls siedlerchr and rolandog you are both of course most welcome to add any comment change any code and if there is any way i can make life easier for you do tell i am currently quite new to github and my todo list notes and links are currently kept in a offline jupyter document and i have no idea how to do it differently x siedlerchr thank you for the overview and the biblatex manual link i have been looking for that one ooi am going to stay out of the biblatex discussion for now because i believe kurt {g\od}el should be kurt gödel it doesnt mean i am not interested in the issue just that i have a lot of reading ahead of me apparently a lot have changed since and bibtex k kaw pnf mkmdsmphz youre welcome im glad to have helped pinpoint this and thank you for taking on this issueand thats great siedlerchr im happy that it seems that this may not need extreme refactoring thats a very clever functionhowever i think i found an edge case where isincurlybrackets may present a false positive in its current form inspired by the corporate author kurt gödel society but instead using łukasz michał as part of a corporate author name im not familiar with jabrefs whole codebase so mismatched braces may be caught earlier on as per is an example displayed as a test where one of the entries would throw an error the last one java test void testisincurlybrackets { correct c {\l{}}ukasz micha\l{} brackets count assertfalse stringutilisincurlybrackets {\l{}}ukasz micha\l{} correct c {{\l{}}ukasz micha\l{} society} brackets count asserttrue stringutilisincurlybrackets {{\l{}}ukasz micha\l{} society} mismatched braces should return false c {{\l{}}ukasz micha\l{} {society} brackets count assertfalse stringutilisincurlybrackets {{\l{}}ukasz micha\l{} {society} } in case this isnt filtered checkbraces then checking the final value of brackets could prevent that edge case java checks if the given string has exactly one pair of surrounding curly braces strings with escaped characters in curly braces at the beginning and end are respected too param tocheck the string to check return true if the check was succesful false otherwise public static boolean isincurlybrackets string tocheck { int count int brackets if tocheck null tocheckisempty { return false } else { if tocheckcharat { && tocheckcharat tochecklength } { for char c tochecktochararray { if c { { if brackets { count } brackets } else if c } { brackets } } return count && brackets } return false } } rolandog thanks for testing and checking that edge case feel free to submit a new pr and in that way you can also fix the workaround i used in the msbibauthor for the ms office exporter curly brackets are not respected in the maintables author column is the same as issue should i leave it alone in this pr or update this one to close both since they are related you can update your pr to close both just add it also to the changelog then i am having issues finding a case that is supposed to break the method fixauthornatbiblatexfree ill look at it a bit longer before extending the same tests to the other methods but i dont think i will come up with anythingother than that i cant find any tests for bibentrytableviewmodel nor maintablenameformatter i dont think i should attempt to create any as at least bibentrytableviewmodel has gone through quite a bit of changes recently if you cant find a case thats breaking the test its a good sign regarding tests for other classes i think this would be beyond the scope of the pr here k kaw pnf mkmdsmphz as you now have some more deep insights into the bibtexkeypattern generation now than i can you maybe help that usere here in the forum sure i will look at it i somehow missed that jabref has a forum oo so what remains are preferences no longer updates without restart eg from none to natbib that is not within the scope of the pr and i am guessing someone is fixing it already weird things happens if you try to escape curly brackets in the author section of required fields i am guessing the \ is being protected somewhere i can open up an issue about it but i dont have time to look at it until the th of may thanks already for your contribution and the extensive tests just let me know if its finished so far then we can review it it would be nice if you could open an issue for the two problems especially that preferences reloading i guess escaping the curly brackets should hopefully be not that common in the author field more relevant for the title field or so i guess i just saw two minor style issues nitpicks but nothing importanti am trying to learn and improve nitpicking is appreciated and encouraged k kaw pnf mkmdsmphz big thanks for your work on thisi just noticed some latex commands are not cleared in the now master buildhas this been an issue before is this still an issue with latex unicodeadapter library is jabrefauthors in src test resources testbib which file in particular and which settings entry table format of author and editor name hum i am not sure what is going on ill have a look most of those should be cleared and are cleared when i build locally but that might be something wrong with my setup looks fine for me as well lastname option and do not abbreviateedit calixtus do you have show names unchanged activated i think i could reproduce calixtus screenshot in jabref ffa cd but right now i seem unable to do so again and i have tried k kaw pnf mkmdsmphz if you have show names unchanged in the prefs activated then no conversion is happening i see so the solution would be to change return nametoformat to return latex unicodeadapterformat nametoformat or similar in maintablenameformatter calixtus i thought the intent of that option was to leave the names completely unchangedalso if you change that dont forget to add a cacheeditwith cache i mean something along the line of private string authorsnatbiblatexfree in authorlist uh im not going to change anything today 😄 i was just wondering about that hum actually that is my bad jabref does indeed clear the latex even when show names unchanged is set should i open up an issue and fix this then yes it would be nice if you could provide a fix no need to create an issue before ok i apparently dont know how to do this i created well thank you all for reviewing this pr it is very appreciated ❤️ 🎉 🎈ill take the reviews and results to heart and make sure the next pr will create fewer issues 🤦
6504,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,enable users to simultaneously search all searchbasedfetchers this pr enables users can send queries to all e libraries simultaneously through the websearchpane ref adds a new searchbasedfetcher called compositesearchbasedfetcher that delegates the query to all of the fetchers it is composed of and merges the fetched results in webfetchersgetsearchbasedfetchers a compositesearchbasedfetcher is added that contains all searchbasedfetchers if this pr gets approved an additional documentation entry has to be added change in changelogmd described if applicable for ui changes if not created an issue at it would be nice if you could some more fetchers to your test and also test what happens when one fetcher returns an errori replaced the tests with parameterized tests thanks for your contribution i like the ideaim happy about that for now only a initial impression after scrolling through the code did you test it in a running jabrefi tested it with a few queries and it worked so far ^^ im somewhat afraid that this quickly leads to jabref being blocked by some databases since it issues quite a lot of requests moreover if i understand the implementation correctly then every fetcher is always asked which should lead to quite a huge list of returned entries probably with perhaps many duplicates one option might be to offer the user a way to configure which fetchers to includein my current implementation i do not offer any post processing yet i think doing post processing in the fetcher is not a great design idea what do you think where should i implement the post processing of the fetched entries jaxb refs and
6508,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fixes missing library properties context menu on library tab fixes issue to implement context menu on library tabswith the library properties menu item describe the changes you have made here link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at jabref grafik oltman b could you re add this functionality toothank you since making this commit i decided to start working in net so i removed my java dev tools for the time being if i get some extra time id like to work on the related issue but if anybody else wants to take it feel free
6511,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,return true in action helper if file is online link otherwise it will be interpreted as path which obiously fails link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable dev version only for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6516,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,add some javadoc and fix the preview update issue link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes i have taken a long time considering how to update the preview when preference change after i found that the previewpanel will be bind to entry in fieldseditortabjava then we can just update the layout in previewpaneljavasetentry some ideas can we using observer pattern to refactor the code jabrefpreferences as observable object and component need preferences can register as observer if the preferences were changed we can notify the affected component to do an update change in changelogmd described if applicable for ui changes if not created an issue at thanks codewise looks good to me we are currently in the process of refactoring the preferences in general and trying to solve the updating of preferences without restarting jabref as wellwhat is the current idea of refactoring these preferences code i wonder where i can see these discussions leitianjian developer discussion happens here feel free to participate or even contribute if you like we can talk a bit about the principles behind my current attempt in refactoring the preferences leitianjian developer discussion happens here feel free to participate or even contribute if you like we can talk a bit about the principles behind my current attempt in refactoring the preferencesthanks for your kindness recently im busy with other things so i cannot fully participate in it but i will keep track of your pr and the chat in gitter maybe i can learn something or provide some ideas thanks again for your contribution i took the freedom to merge it thanks
6518,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,refactor main table preferences follow up to merged table preferences see the screenshot change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i think the enable special fields should move to another preference tab as this is not really related to the main table moreover is the show extra columns still needed and what does it do any maybe rename natbib style to what it actually represents which is actually not clear to me show extra columns adds additional columns to the combobox providing a column for every filetype instead of one column displaying different icons for each filetype in refactoring the tabs to the mvvm pattern we discussed removal of these columns but decided to keep them as they were not really complicated to implement or maintain we didnt want to kill a feature even though there is probably hardly a use case without needabout special fields i did not yet have any better idea to place them but the general tab but this is no permanent solution so i decided to keep this as it is and leave it to a dedicated specialfields pr because i would like to focus here on extracting the calls to jabrefpreferences out of the codebasenatbib style is if i remember right lastname or lastname et al done what i planned to do here tobiasdiez do you have a suggestion for the natbib label what about show only lastname instead of natbib but this is already in abbreviationsso im not sure what natbib actually does ok then i would vote to remove the show extra columns option and always add these fields to the dropdown its not hurting if there are a couple of more options to selecti agree with the special fields it was just an observation as you were already touching the codeill review the code later i fear a merge conflict in with regarding the maintableformatter therefore i would propose to first merge the other pr and then this agreed i took a look at it we definitely should merge first integrating the changes shouldnt be that hard although we worked on the same code we were working on different aspects has been merged now
6554,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,fix group hit counter calculation preferences closes created this pr because i kinda messed up the git history in pr change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository after short videocall with koppor this should be safe to merge
6554,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,fix group hit counter calculation preferences closes created this pr because i kinda messed up the git history in pr change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository after short videocall with koppor this should be safe to merge
6558,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,use letters to acess recent libraries in menu link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes after fix the issue i typed then then k xvnkfj t can open a database relative to typed key and i also checked that when typing a letter not a num eg a there will be nothing to happen and if type a num larger than the max index of history record nothing will happen as wellthe main idea to solve this issue is to add key event listener in jabrefframejava and design relative handle function openfilebykey go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6567,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix exception for unlinked files link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes exception when importing certain unlinked local files for some certain files they have metadata but cannot find start or end tag so cause exception i added statements to check if can find start or end tag and if the position of start tag before end tag in metadata original private list getfilelistfromnode checkboxtreeitem node method just can find children nodes so causes that files under subfolder cannot be found then cannot be imported i modified this method to iterate find all selected leaf nodes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository just another wish it would be really cool if you could a test for the fix in the xmputilreader as well see xmputilreadertest ok ill try done done thanks for the quick follow up
6578,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fix xmp exctrator not returning empty optional link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6586,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,1,validates the file path of a texgroup and fixes texgroups library has been modified by another program fixes change in changelogmd described if applicable for ui changes if not created an issue at just to make sure that i understand the changes correctly the issue is by parsing the groups lastyes because the groups access data which need to be defined beforehand depending on the sequence in the entry set this may work once but not every time now without stream^^any suggestion how to test the case mentioned at the code looks good to me for the test it should be similar to the following the string by hand with groups before the other setting that makes troubles and then verify that the groups in the parsed metadata has the valid data the test was a bit tricky access real file relative user name hostname but it works now
6586,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,1,validates the file path of a texgroup and fixes texgroups library has been modified by another program fixes change in changelogmd described if applicable for ui changes if not created an issue at just to make sure that i understand the changes correctly the issue is by parsing the groups lastyes because the groups access data which need to be defined beforehand depending on the sequence in the entry set this may work once but not every time now without stream^^any suggestion how to test the case mentioned at the code looks good to me for the test it should be similar to the following the string by hand with groups before the other setting that makes troubles and then verify that the groups in the parsed metadata has the valid data the test was a bit tricky access real file relative user name hostname but it works now
6587,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,fix some fetcher tests refs change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i think the inspire test can also be seems like the bib item changed the inspire test leaves me clueless the text is exactly the same maybe its about the line seperators i was unable to debug the test myself can you maybe take a look at it siedlerchr for inspire change the line in the second entry to this articlesetfield standardfieldjournal nucl phys b without the double back slashes siedlerchr and tobiasdiez could you do me a favor and take a look on the buildinfo stuff im not sure if i did that right and im unable to debug that according to the test log instead of the api key the ieee fetcher only recieves three asterisks from the build script is this normal did i do something wrong the test log does not output the api keys it just outputs starts this is perfectly ok this pr is done for now and should fix all the fetcher tests except ieee fetcher which depends most likely on a new api key so we now only have mrdlib and ieee not working strange mrdlib tests ran through an hour ago without complaining
6590,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fix ris doi import use doi parse and only add valid doisfollow up from change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6590,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fix ris doi import use doi parse and only add valid doisfollow up from change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6603,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,an issue where entry preview tab has no name in drop down list i didnt add preview to jabref_enproperties because already exists describe the changes you have made here link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6608,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix downloaded files moved to citation key dir link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6635,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,change duplicates window to recall size position the possible duplicate entries window now remembers its size and position throughout a session this was done by adding a dialogwindowstate class to the gui utils this class stores the size and position of the dialog window the statemanager class was modified to store this object it is retrieved whenever a new duplicateresolverdialog object is created to get the previous size and position and is updated whenever the user proceeds through the dialog options the dialogwindowstate class can be re used if this feature is needed for other dialog windowsthis is my first ever pull request so please let me know what you think or whether i need to re tool my approach to be more in line with the structure of the rest of the code i did not include any screenshots as this felt like a sort of awkward fix to try and take screenshots of change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository hi gdstewart thank you for your work i really like the ideaabout the implementation on first sight i would suggest two enhancements could you inject the statemanager in duplicateresolverdialog in the constructor so we can do without using globals and secondly could you rework the dialogwindowstate class immutablefor other clean code principles we try to follow in jabref have a look at the excellent book java by comparison by two former developers of jabref you have questions dont hesitate to ask us in the gitter chat on first sight looks already pretty good besides some checkstyle issues got two ideas for improvements instead of using magic strings eg duplicate_resolver_dialog you could use the classname instead getclass getsimplename also if you are interested in implementing a tostring method and a simple parser i believe this should be very simple to store in the preferencesthank you for your ongoing interest in jabref
6637,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fixes issue where unix crashes when inotify is full previously the program was crashing for unix users when inotify had reached its max file limit since the only way to fix this seems to be to close applications or to edit privileged system files the proposed solution is to notify the user of the issue and give them the option of continuing usage of the application since this is an important fix it should not be stalled cttillman we hope that youll include other improvements in jabref so we want to share knowledge about the coding ideas in jabref the localization is a difficult thing here would you mind to fix the localization isse
6641,1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,medra doi fetcher implementation i added the possibility to retrieve doi metadata from medra agency some dois return code even if they are correctly registered at medra im waiting for the medra team to answer on that change in changelogmd described if applicable for ui changes if not created an issue at searchbasedfetchers webfetchersgetsearchbasedfetchers importformatpreferences try scanresult scanresult classgraphscan { classinfolist controlclasses scanresultgetclassesimplementing searchbasedfetcherclassgetcanonicalname set expected new hashset controlclassesloadclasses expectedremove searchbasedparserfetcherclass remove acm because it doesnt work currently expectedremove acmportalfetcherclass remove grobid because we dont want to show this to the user expectedremove grobidcitationfetcherclass remove medra because it only works for id based search expectedremove medraclass assertequals expected getclasses searchbasedfetchers } } if you think this could be a proper approach i will commit still checkstyle issues ill work on that are you using intellij then you can import the style and let the ide format your changes and organize the imports nope eclipse for the imports you can use ctr shift o will organize the imports i believe this has been a really great lesson for me since ive gone through several never encountered issues i hope this will be released at the end so i can move forward to another issuethanks a lot for your patience and guiding advices once your pr is merged in master it will be available in the next automatic build of development version i think something went wrong with the merge of master into this branch need to investigate manually before merginggeneral remark the discussion in this pr seems to be long are respective code comments added might it be necessary to add an adr hi koppor thanks for the feedbackone of the last commit was rejected with non fast forwarding error so i tried to pull the medra fretcher branch back to local and then push back only the last changes could this have messed up something and most important is there anything i should could do for example creating new branch and work the implementation thereabout comments i inserted a few lines in the code where i thought they could have help is this you are referring toabout adr probably i need some more instructions is it something i should do on my ownthanks again live update this commit is ok this one is not have to think longer of how to solve itregarding the adr the adr is something signifcat which cannot be put into a javadoc comment alone i think your doi regsitry thing is something like that maybe its engough to have it in the javadoc comment in this case as its not such a significant thing such as selecting a build tool see for adr examples last commit with some git magic i created f aab which should revert all wrongly added changesnow im going to review mind why did you close this pr did you delete the branch i think it should only be necessary that you pull your branch hope i did not confuse you that i updated your branch i haven’t done anything i was just moving through the comment in the github app form mobile it’s strange i didn’t close it or i haven’t done it intentionally what should i do should i reopen it just clicked on reopen pr and everything is back to normal hopefully 🎉 with a git pull you should get the fixes in locally i must thank you for the time you spent on this really i do sincerely appreciate your comments because that’s what i need and i understand your point i will work on them thanks for your contribution mind and the quick follow up we hope you werent frightened by our reviews and we hope you will continue contributing shit saw this only after merge the following classes are not allowed to depend on orgjabreflogic expected but was shit saw this only after merge orgopentest jassertionfailederror the following classes are not allowed to depend on orgjabreflogic expected but was anything i should dothis happened when i moved the getagency from doifetcher to doi the idea behind our high level architcutre is to have the model as model package we are aware this leads to an anemic domain model sure whether downloading things should be part of a model think this is a devcall thing we should discuss whether we want to undo the seperation of model and logic what are our limits in model stefan kolb as the build is broken now i would vote to simply change it back to the original eg move the agency fetching back to the fetcher what should i do now mind just create a new pr where you move the doi agency getting back to the doifetcher class that is the simplest solution and this would not destroy our architecture constraints so if i got it right i have to push the same files as the last commit i made changing only the getagency location as the code is already merged into masteryou fetch and pull the upstream master in your local masterthen you create a new branch and then you just move the getagency back todoifetcherthen you commit your changes and push your new branch and create a new pram mo juli um uhr schrieb giovanni caldarola so if i got it right i have to push the same files as the last commit i made changing only the getagency location — you are receiving this because you modified the open close state reply to this email directly view it on github unsubscribe for internal referencre follow up pr is everyhting should be fine now
6642,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix for exception thrown if no delimiters were specified assigned default values for delimiters to fix the exception thrown change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i commited my update the required import is not added maybe someone can add it otherwise ill try to find time on the weekend and go ahead with merging this is some kind of hotfix and should go in early
6664,1,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,add collection of comp sci bibliographies fetcher change in changelogmd described if applicable for ui changes if not created an issue at page for fetchers yep ill add to the documentation
6682,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,rework search bar picturemessage_ ata qts chg change in changelogmd described if applicable for ui changes if not created an issue at the changes look good to me the only concern that i have is that the search bar is now really small thus while editing a more complex query it is no longer possible to see the complete query and scrolling in a text field is rather tedious this was the main reason for the extend on focus mode im not particularly attached to the extend animation but it should be still possible to comfortably edit more complex queriesim not quite sure i understand what you mean about the small search bar i removed the previous restriction of the searchbar to expand to the right so now its always extended the empty space still showing between the searchbar and the toolbar buttons is left over from before and shows found x entries i did not yet had a good idea what to do with this message so i did not touch it except adding pixels distance to the searchbar for comparison this is how the master branch looks right now ah ok then i misread the code and the first screenshot i thought thats now the size of the search bar maybe the stored value is corrupt and not parseable by value of
6693,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,issue renamed listbind to bindcontent where it was used
6706,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,readability for citation key patterns link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes the issue is that authorlistfixauthorforalphabetization is used to create a string representation of authors names this can leave unbalanced brackets if a name piece starts with a latex command as it is not the intended use of the methodthe suggested fix is to resolve latex in the name of an author and then remove any illegal characters in the post processing which is dependent on if it is going to be used as a file path or citation key as unicode characters are already allowed in the name of an author this change should not affect users too much it will however have slower performance as all authors are being processed as if they contain latex in almost all cases that contain latex it will produce different output than the previous solution as always these are only suggestions any comments and criticism are encouraged the intuition behind the suggestion is that latex in strings will always be hard to deal with and i think most users expect a pattern to resolve to something as similar as possible to what is shown in the main table what remains verify that the citationkeygenerator does not output unicode keys remove the latex_to_unicode modifier as it should not be used change access modifiers for methods in bracketedpattern id suggest that most should be private or protected change how arguments are parsed for auth ed patterns readability add test cases for this issue test for character classes in regexp fix parsing of bracketed patterns fix the conversion of unicode to characters allowed in bibtex keys in citationkeygenerator change in changelogmd described if applicable for ui changes if not created an issue at a lot of refactoring for your discussion of the consequences maybe an adr could be the proper formati should have written most of the pull request in adr format the issue of unbalanced brackets is adressed by converting all authors names to unicode however id benefit from a second and or third opinion at this point several cite key patterns do not work as expected when names containing latex are converted to unicodeexample auth for gödel would result in goe authn should get the first n character of the authors last namei extended the workaround that already existed for authn to several other auth edt patterns and i will update those patterns in the documentation if this solution is acceptable an alternative would be to extend the workaround from authn to all author editor patterns which would give more consistent results all authors names will contain replacements for unicode characters for files directories and cite keysthe issue where bracketedpattern cant use unicode because of restrictions in citationkeygenerator can be avoided entirely by preprocessing the bibentries in citationkeygenerator but i dont feel i can adequately judge the advantages disadvantages of the different solutions that would accomplish this so id rather leave it to someone else if there are future issues complaints so the alternatives are leave the behaviour as is replace all unicode characters for patterns that requires the number of character to be known in advance replace all unicode characters in all patterns with authors names i d maybe th i can continue attempting to fix this properly allow unicode in all patterns for bracketedpattern and disallow for citationkeygenerator but it will result in even more work for a reviewer thank you for the longer explanation now i begin to understand what your are really adressing your pr was full of good code style improvements which ditracted me to focus on the underlying issue context for others the pr addresses the issue that the patterns are used for something diferent than the bibtex key generation label pattern documentation at our patterns have magic built in such as shortening each element to n letters we dont offer a streaming approach as crush does just linking for presenting an idea not applicable as solution in this context i would expect following behavior i when using in the bibtex key generator the non ascii characters are converted to a good representation as in your example göd goe ii when using the pattern in other places the unicode represation is usedreason unicode is working in the year the only exception are bibtex keys because the bibtex tooling is not fully utf biblatex biber is but not the more commonly used bibtex tool thus we will have to add a separate handling herefor case i the author stated latex_to_unicode as you pointed out the length restriction wont work thereto achieve the different handling you already stated the solution entirely by preprocessing the bibentries in citationkeygeneratori like that then the he workaround that already existed for authn is obsolete minor issue is the example of included in a test case herei think this somehow refs i think this somehow refs 😛 minor issue is the example of included in a test case herethe example relates to bracketedpattern it is my solution of that example that make the consequences for citationkeygenerator harder to ignore which is why my discussion is focused on that part entirely by preprocessing the bibentries in citationkeygenerator i like that then the he workaround that already existed for authn is obsoletethis is based on my current understanding non trivial which is why i havent done it and why it would require more time from reviewers if i attempt to implement it ill get back with a write up on why but itll be somewhat lengthy hum ill give it a shot and if it is too annoying to review we can just revert it x i have some nitpick comments nitpicking is always welcome i am new enough at this that a nitpick is still a learning experience 😝 tell me if i should focus more on the actual issue since it was is tagged as a high priority bug id like som input on patterns such as auth auth auth based on the coding guidelines i believe they should throw an exception and generate a warning message is this correctthis is relevant as unifying the parsing of the patterns id like it in one spot not three will make it easier to ensure that the unicode ascii conversion use a valid string is it possible to fix checkstyle this does not look good home runner work jabref jabref src test java org jabref logic citationkeypattern citationkeygeneratortestjava error package orgjabrefmodelbibtexkeypattern does not exist seeing the long list of changes i would suggest to merge this in and then work on the two remaining open points otherwise it will get harder and harder to reviewsorry about that i didnt really expect to go down this routeafter the merge ill open up a pr for issue dealing with parsing i realized this pr still closes issue the problem with converting unicode characters is not in the issue tracking system i can open up a pr for it after is if that sounds reasonable seeing the long list of changes i would suggest to merge this in and then work on the two remaining open points otherwise it will get harder and harder to review sorry about that i didnt really expect to go down this routeno need to be sorry i have to thank you that you keep working on the pr even if much time is spend on the code quality after the merge ill open up a pr for issue dealing with parsingyear thank you for that i realized this pr still closes issue the problem with converting unicode characters is not in the issue tracking system i can open up a pr for it after is fixed if that sounds reasonablesure step by step
6723,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,delete link after download link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at int as we directly operate on the list and do not use the full power of optiona i dont really think that the new version is much more readable but ok koppor please test pre condition entry with link in the file field right click download link should be replaced tried it out locally works
6725,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,add css customisation this pr continues the abandoned pr as discussed in the devcall we are now aggressivly finishing those prs we would like to include in jabrefworks so far yet i still want to make some changes with the opticsintroduces also appearancepreferences screenshots are out of date see below change in changelogmd described if applicable for ui changes if not created an issue at globalsgetthemeloader installcss getdialogpane getscene globalsprefs in the basedialog constructor the problem seems to be that java only calls the subscriber when already this dialog was opened before so it works but only on the second attempt strange maybe siedlerchr has a clue but since this issue is not directly connected to this pr i suggest we follow it in also i noticed we have to make the controls dependend on the selected font size since they wont be displayed properly if the font size is increasedtherefor this pr should be ready review the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits marcel luethinils streijffertqingshiqingliuwangaooa the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits nils streijffert
6725,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,add css customisation this pr continues the abandoned pr as discussed in the devcall we are now aggressivly finishing those prs we would like to include in jabrefworks so far yet i still want to make some changes with the opticsintroduces also appearancepreferences screenshots are out of date see below change in changelogmd described if applicable for ui changes if not created an issue at globalsgetthemeloader installcss getdialogpane getscene globalsprefs in the basedialog constructor the problem seems to be that java only calls the subscriber when already this dialog was opened before so it works but only on the second attempt strange maybe siedlerchr has a clue but since this issue is not directly connected to this pr i suggest we follow it in also i noticed we have to make the controls dependend on the selected font size since they wont be displayed properly if the font size is increasedtherefor this pr should be ready review the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits marcel luethinils streijffertqingshiqingliuwangaooa the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits nils streijffert
6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix copy pasting and delete via menu or key add hack for osxcaveat prevents pasting using cmd v on an empty library menu pasting however works fixes fixes would be nice if someone could test this for windows linux as well link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository this bug reoccurs for me on jabref dc a linux generic amd java i cant help but now under linux neither the cut copy nor paste buttons seem to work anymore consistently im using as you can see a jabref just a couple of days old however using keyboard shortcuts works as usual
6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix copy pasting and delete via menu or key add hack for osxcaveat prevents pasting using cmd v on an empty library menu pasting however works fixes fixes would be nice if someone could test this for windows linux as well link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository this bug reoccurs for me on jabref dc a linux generic amd java i cant help but now under linux neither the cut copy nor paste buttons seem to work anymore consistently im using as you can see a jabref just a couple of days old however using keyboard shortcuts works as usual
6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix copy pasting and delete via menu or key add hack for osxcaveat prevents pasting using cmd v on an empty library menu pasting however works fixes fixes would be nice if someone could test this for windows linux as well link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository this bug reoccurs for me on jabref dc a linux generic amd java i cant help but now under linux neither the cut copy nor paste buttons seem to work anymore consistently im using as you can see a jabref just a couple of days old however using keyboard shortcuts works as usual
6746,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,fix entry gets deleted after aux import set changed flag on clone also for misc entry type because otherwise it equals the default entry type and no change is triggered which results in the entry not beeing written to the database on save simplify gui code link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository calixtus and me implemented all required changes manually tested the changes again all good merge now
6747,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,added support for biblatex software added change to changelog link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pr is in reference to added the new biblatex software entries under a new divider like the below image biblatex software go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at thank you for working on it i have some refinemenets to the adrhi koppor i have updated the adr per the review comments please do have a look thank you very much for your contribution and for creating an adr id id not the final check on the pr we missed two things now breaking master unit test related to this pr fail markdown lintthis is an easy fix linter ensure consistent formatting of all files grafik markdown lint is already in master 🎉 not sure why the other pr complained ther markdown was fixed i overlooked the unit test probably because of the failing architecture thingprobably need to add those b iblatex software somehow to the test can look into this tomorrow fixed by calixtus test fixed at looks like i overlooked the unit test apologies guys we did so too no need to apologize
6760,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix html chars formatter for percent sign change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks for your fix the changes look good to me could you please add a change log entry and add a few tests to the validate authors workflow is failing can you please have a look tobiasdiez in reason was unescaped backtick and quotes in the message output refs i did not test my review updates properly
6768,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,merge identical group color indicators this pr finishes the prs of wangaooa see and does some cleanup in the maintablecolumnfactory linkedidentifiercolumn filecolumn and specialfieldcolumn is now extracted in separate classes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits wangaooa the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits marcel luethiwangaooa the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits marcel luethiqingshiqingliuwangaooa checkstyle is happy again so i am merging
6768,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,merge identical group color indicators this pr finishes the prs of wangaooa see and does some cleanup in the maintablecolumnfactory linkedidentifiercolumn filecolumn and specialfieldcolumn is now extracted in separate classes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits wangaooa the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits marcel luethiwangaooa the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits marcel luethiqingshiqingliuwangaooa checkstyle is happy again so i am merging
6771,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,shared database synchronized by focuschangedevent this pr is related to and partly shared database synchronization event in dbmssynchronizer is triggered by a focuschangedevent this is added similar to fieldchangedevent but has to be initiated from entryeditor i have manually tested the new code _and it does not work_ maybe we can discuss changes through this pull requestthank you for your help i tried firing the event via the bibentry method setfocusedfield again this method is called entryeditor via setfocustofield but i dont know if this is generally possibleperhaps the second commit is a bit irritating it is only uncommenting something in dbmssynchronizer sorry for thatthe important commit is adec b its a bit complicated with all those listenesthe eventbus is a local object in fact its similar to the classical eventlistener in gui an even its relayed to its parend until its handled the only difference is that we do this relaying here manuallywhen you add a new event in bibentry you have to relay that to the call chain the corasechangefilter register itself here registers itselt as a listener on bibdatabaseand bibdatabase finally register itself on each entry you need to listen for the focuschangedevent and relay that thank you for your help finally i deleted all focuseventchanged related stuff and concentrated on coarsechangefilter there i introduced a delaytaskthrottler for the eventbuspost event also i revised the conditionals while introducing three conditions isnewedit editing right after loading shared database iseditonotherfield editing other field changes on previous field should be synchronized ismajorchange some editing with much character inputi found out that a throttled task will not interrupt any input that means if a fieldchangedevent is posted with delay you can write further until database synchronization appears in the worst case you lose some information because all characters typed in after the event are not synchronized furthermore it appears that when the event is posted during delay jabref hangs upcan you reproduce this problems in general it works as intendedanother idea what about throttling _all_ fieldchangeevent s in order to not interrupt input process then we would have to ensure that all pending synchronization events would be ready before closing the database we could add an indicator in the gui for this purpose or add something on closing database event side note we have an internal discussion ongoing why not using javafx observables everywhere instead of the event bus not fully checked all aspects until now will hopefully be done at jabcon do you have a feeling on that i have not much experience with javafx observables but it seems like they are directly bound to gui elementsthus events maybe could only be fired less in accordance to the gui on the other hand it would be an advantage to use gui events from everywhere with little efforti think the coarsechangefilter would become obsolete wouldnt itso why not giving observables a try thanks a lot m mauersberger ive a few very minor things that i noticed and will merge now looking forward to your next pr
6771,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,shared database synchronized by focuschangedevent this pr is related to and partly shared database synchronization event in dbmssynchronizer is triggered by a focuschangedevent this is added similar to fieldchangedevent but has to be initiated from entryeditor i have manually tested the new code _and it does not work_ maybe we can discuss changes through this pull requestthank you for your help i tried firing the event via the bibentry method setfocusedfield again this method is called entryeditor via setfocustofield but i dont know if this is generally possibleperhaps the second commit is a bit irritating it is only uncommenting something in dbmssynchronizer sorry for thatthe important commit is adec b its a bit complicated with all those listenesthe eventbus is a local object in fact its similar to the classical eventlistener in gui an even its relayed to its parend until its handled the only difference is that we do this relaying here manuallywhen you add a new event in bibentry you have to relay that to the call chain the corasechangefilter register itself here registers itselt as a listener on bibdatabaseand bibdatabase finally register itself on each entry you need to listen for the focuschangedevent and relay that thank you for your help finally i deleted all focuseventchanged related stuff and concentrated on coarsechangefilter there i introduced a delaytaskthrottler for the eventbuspost event also i revised the conditionals while introducing three conditions isnewedit editing right after loading shared database iseditonotherfield editing other field changes on previous field should be synchronized ismajorchange some editing with much character inputi found out that a throttled task will not interrupt any input that means if a fieldchangedevent is posted with delay you can write further until database synchronization appears in the worst case you lose some information because all characters typed in after the event are not synchronized furthermore it appears that when the event is posted during delay jabref hangs upcan you reproduce this problems in general it works as intendedanother idea what about throttling _all_ fieldchangeevent s in order to not interrupt input process then we would have to ensure that all pending synchronization events would be ready before closing the database we could add an indicator in the gui for this purpose or add something on closing database event side note we have an internal discussion ongoing why not using javafx observables everywhere instead of the event bus not fully checked all aspects until now will hopefully be done at jabcon do you have a feeling on that i have not much experience with javafx observables but it seems like they are directly bound to gui elementsthus events maybe could only be fired less in accordance to the gui on the other hand it would be an advantage to use gui events from everywhere with little efforti think the coarsechangefilter would become obsolete wouldnt itso why not giving observables a try thanks a lot m mauersberger ive a few very minor things that i noticed and will merge now looking forward to your next pr
6788,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,fix cleanup field formatters not working when enabled the problem orginally comes from here its not possible to add a not there directlythe method bindbidirectional property in the type booleanproperty is not applicable for the arguments booleanbinding link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository done
6790,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,fix more fetchers this pr fixes fetchers refs add cleanup for library of congress springerlink now uses the springernature api key same key can be used refs add url logger for ieee and other fetchers change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6808,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,refactor edit action needs testing unter linux link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository doi pasting still works tested again
6809,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,added icon for multiple identifiers added icon for multiple identifiersand modified behaviour to open eprint when clicked without opening menuissue icon for linked identifiers does not change when more than one entry is linkedthe web material design glyphicon did not have a plural variant so thought will change to this for singular variant screenshot from for the plural variant used this can change this to something else too screenshot from made changes so that when only one entry is available the link is opened immediately without the menu change in changelogmd described if applicable for ui changes if not created an issue at thanks a lot for your contribution tobiasdiez glad to help the code looks good to me and ive only a few very minor remarks concerning the icon im also not sure what to choose there doesnt seem to be a good icon for multiple links the database icon is already used in a few places groups and shared database so im a bit hesitant to use it here as well what about using the link and link variant other solution would be to keep the current www and use earth for multiple linksyeah my initial thoughts too database icon is common this is link screenshot from this is link variant screenshot from earth below does not look like indicating multiple entries i feel screenshot from greetings from the jabcon was wondering what this was google was not helpful thanks for your work hemantgs we took the liberty to fix some small merge errors
6820,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,follow up fix for copy paste also enable paste menu action for empty libraries with no entries yet link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6825,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,architecture fix by re sorting the classes link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there to be merged after jabcon fixes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits m mauersberger the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits chenyuheng
6833,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix use format conversion for all imports this pr adds conversion of entries into the desired format for all imports change in changelogmd described if applicable for ui changes if not created an issue at expected but was orgopentest jassertionfailederrororgopentest jassertionfailederror obsolete keys found in language properties file this\ query\ uses\ an\ unsupported\ syntaxthis\ search\ contains\ entries\ that\ match\ all\ specified\ terms
6858,1,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,fix icon issue changed the link used when we have only one entry to a single chain change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository https user imagesentcom cd eda ed b ea a c da cf bd png thanks for your contributioni think that the icon that is currently used for entries with multiple dois should be used for entries with one doi and entries with multiple dois should use a new dedicated iconpropose problem we only use fontawesomeicons materialdesign icons implementation of custom icons is a bit more effortmy suggestion merge this as a quick fix to distinguish better between both types and see if we can find a better icon soon
6871,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,copy key and link copy key and link from right click menu creates a string that is not a url it includes the url but it also includes the keysethtmlcontent was not appropriate change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository codewise looks good plase fix the remaining checkstyle errors just click on the details of the failing tests to see them
6879,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,fix pasting in codearea under mac codearea does not implement textinputcontrol it would be if someone could test this under linux and windows copy bibtex entry paste in source code editor in entry editor pasting works and no duplicates on the maintable link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits mlep seems to work in linux and windows
6897,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,doi matching in duplicate check follow up from change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits andrewandrew kuncevich ku drew your problems probably came from the fact that your repos master branch is behind the naster branch of jabref on the commandlne check that git remote v has listed sth like upstream git githubcom jabref jabrefgit can also the link if not then do git remote add upstream git githubcom jabref jabrefgit if you use ssh otherwise use the link git checkout master git merge upstream masterthen you master branch should be even with jabrefs upstream branch so creating a new branch and creating a pr wont poroduce any conflicts
6897,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,doi matching in duplicate check follow up from change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits andrewandrew kuncevich ku drew your problems probably came from the fact that your repos master branch is behind the naster branch of jabref on the commandlne check that git remote v has listed sth like upstream git githubcom jabref jabrefgit can also the link if not then do git remote add upstream git githubcom jabref jabrefgit if you use ssh otherwise use the link git checkout master git merge upstream masterthen you master branch should be even with jabrefs upstream branch so creating a new branch and creating a pr wont poroduce any conflicts
6920,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,improve parsing of short dois no more erroneous interpretation as short doi of urls notes like abccom something whateverstill correct detection of short dois hidden in urls as long as _doi_ is part of subdomain eg wwwdoixyzcom abc correct detection of short dois like doiorg ab respective testsadded entry to changelog change in changelogmd described if applicable for ui changes if not created an issue at task checkstylemain ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is preceded with whitespace nowhitespacebefore ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is not followed by whitespace whitespacearound ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is not preceded with whitespace whitespacearound please fix the checkstyle issues you can install the extension in intellij directly task classes ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is not followed by whitespace whitespacearound task checkstylemain ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is preceded with whitespace nowhitespacebefore ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is not followed by whitespace whitespacearound ant checkstyle error home runner work jabref jabref src main java org jabref model entry identifier doijava is not preceded with whitespace whitespacearound hi siedlerchrwhenever i try to add the checkstyle file to the checkstyle plugin i get the following error compuppycrawltoolscheckstyleapicheckstyleexception cannot initialize module treewalker unable to instantiate invalidjavadocposition class it is also not possible to instantiate it as invalidjavadocposition invalidjavadocpositioncheck invalidjavadocpositioncheck please recheck that class name is specified as canonical name or read how to configure short name usage please also recheck that provided classloader to checker is configured correctly at compuppycrawltoolscheckstylecheckersetupchild checkerjava at compuppycrawltoolscheckstyleapiautomaticbeanconfigure automaticbeanjava at orginfernusideacheckstyleservicecmdopcreatecheckerexecute opcreatecheckerjava at orginfernusideacheckstyleservicecmdopcreatecheckerexecute opcreatecheckerjava at orginfernusideacheckstyleservicecheckstyleactionsimplexecutecommand checkstyleactionsimpljava at orginfernusideacheckstyleservicecheckstyleactionsimplcreatechecker checkstyleactionsimpljava at orginfernusideacheckstyleservicecheckstyleactionsimplcreatechecker checkstyleactionsimpljava at orginfernusideacheckstylecheckercheckerfactoryworkerrun checkerfactoryworkerjava caused by compuppycrawltoolscheckstyleapicheckstyleexception unable to instantiate invalidjavadocposition class it is also not possible to instantiate it as invalidjavadocposition invalidjavadocpositioncheck invalidjavadocpositioncheck please recheck that class name is specified as canonical name or read how to configure short name usage please also recheck that provided classloader to checker is configured correctly at compuppycrawltoolscheckstylepackageobjectfactorycreatemodule packageobjectfactoryjava at compuppycrawltoolscheckstyletreewalkersetupchild treewalkerjava at compuppycrawltoolscheckstyleapiautomaticbeanconfigure automaticbeanjava at compuppycrawltoolscheckstylecheckersetupchild checkerjava more what am i doing wrongchoosing the intellij idea code style xml as style file works but that alone doesnt have any discernible effect on anything sorry i am quite new to java and very new to intellij idea no idea whats wrong with the plugin but you can always execute gradlew checkstyle on the comandline
6928,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,changed default value of search and store files relative to bibtex file to true i think the problem was if isbiblocationasprimary is not set the bib file dir has not been added to the list of searcheable directories at all if set it should be the first one to look up if not the last see change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the authors file in case you want to use a different one please comment here and adjust your name in your git configuration for future commits nikolaus koopmann there was a recent pr about this but i cannot find it i think it was by design to not add it to the list of search paths mh a possible problem could be a design issue in basepaneljava like marked here need to investigate this a bit further maybe setting the default for this preference option to true is already enough the preferences option says search and store files relative to library file locationill change the misleading antique variable names to some more meaningful names and make them default onmaybe we need to set a note somewhere in the docs couldnt resist to make some heavy cleanups
6933,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix remove actions for entry types in the editor created separate view models for standard and custom entry types adding remove icon only for the custom ones updated changelogmdits working solution but please take a look whether the implementation is good i will modify the user doc if its accepted link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository ive created request with user doc update
6938,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,fix for some unicode characters in citation keys link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes some unicode characters can be encoded in multiple ways and the mapping that stringutilreplacespecialcharacters relies on does not contain all cases the proposed solution uses nfc to re encode the characters so that these characters can be foundthere exists more information on unicode normalization in the java api subjective opinion is that most people expect unicode to work similar to nfc ie if characters looks the same it is likely that they are equivalent hence if someone debugs issues in the unicode_char_map they will expect nfca more holistic approach should likely start with the compatibility equivalence which will require larger changes and there does not seem to be any bugs issues that requires these larger changes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository siedlerchr in my opinion it is a mess best avoided if possible x i believe nfc is how most people expect unicode to work which is why i am using it here ill add some more details to the top part of the pr in case someone needs to patch this patch later
6941,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,fix in entry types editor selected field is not removed after first click the issue is happening because cells with delete icon are set editable because the whole table is set editable go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks for spotting and fixing this erro i have adjusted the changelog a bit
6945,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fix a fetcher test for the shortdoiservice link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this addresses one of the errors in the fetcher tests as run by the ci see here is and example of a test failure change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6960,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,corrected shortcut a new shortcut combination added for pull changes from shared database because current ctrl shift r is already assigned for create tech report command change in changelogmd described if applicable for ui changes if not created an issue at tobiasdiez koppor please review changescould you please resolve the conflicts please merge upstream master i solved the problem with empty defaultkeybinding string by adding an if statement in keybindingrepositoryjava lgtm key combinations for new_inbooknew_techreport changed from ctrl to alt it was on purpose to add an additional modifier and not to change the modifier i was thinking that an additoinal moddifier is easer to remember instead of another modifierhowever having our discussion in mind we should just leave these shortcuts empty a user seldomly will use these shortcuts i think now we can keep ctrl shift r for pull_changes_from_shared_database as it was initially what do you thinkthats good please revert your change to change the modifier to alt shift d i also created new_inproceedings keybindinglooks good but i cantt find this menu item in createmenu method of jabrefframe class sorry need help do we have such menu item where i dont quite get what you are referring to with this menu item in the normal entry creation menu it is already there i think your current code enoughi think it should also be added to orgjabrefguifieldeditorstypeeditorviewmodeltypeeditorviewmodel koppor done sorry for menu item i thought you can attach key bindings only to menu items but now i know about keys for new inproceedings works via shortcut alt shift c please review orgjabrefguifieldeditorstypeeditorviewmodel i added new line there but i still cant understand where and how its used can you give a small comment gena please try to merge upstream master to resolve the merge conflicts koppor tobiasdiez please review changes sorry for delay im trying to learn java with mentor and become valuable contributor so thank you for your comments here they really helpi changed getkeycombination method of keybindingrepository class and all its dependenciesalso please give your comments for typeeditorviewmodel class this comment from tobiasdiez calixtus thanks for comments please review changes calixtus thanks again correctedlooks like my checkstyle was disabled maybe because of intellij update also ok for me still have to update changelogmd because keyboard shortcuts were removed in this pr
6968,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,remove online prefix in the expected file urls to fix springer fetcher tests this addresses two of the errors in the fetcher tests as run by the ci see examples for the failures are here and here go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6976,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix irregularly losing ability to edit data in biblatex source tab is about the source tab bibtex source losing the ability to be editable this happens because codearea can be disabled but there is no code path that re enables itthis patch re enables codearea as editable if the bibtex entrys source code is correct although the source tab cannot be used by the user to fix any syntax error in bibtex fields source tab will be disabled if there are syntactic errors introduced by editing the fields in the other tabs such error can be by editing the field which will trigger sourcetab s listener and call the updatecodearea method which will enable codearea if the source of the bibtex entry is syntactically correct change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6977,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,adapt the short doi regex it now accepts dois with only three characters this fixes an error in the shortendoiformattertest as run by the ci see for example here https githubcom jabref jabref runs check_suite_focustruestep
6982,1,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,0,0,1,incorrect color of identity column header added style for identity column header see column with previously it had different colour img width altscreenshot at src width altscreenshot at src change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
6989,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,merge parsing of bracketed patterns link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes character classes regex expressions in brackets eg a za z should be usable with the regex modifier but it currently isnt for citation keysbracketed patterns are parsed using several different methods in citationkeygeneratorjava bracketedpatternjava and abstractcitationkeypattern this pr aims to merge all parsing code into bracketedpatternjava to make it easier to modify bracketed patterns without breaking the citation key generatorcurrently bracketedpatterns parser can parse expressions containing the regex modifier using character classes todo what are abstractcitationkeypattern and globalcitationkeypattern used for and should they be removed why are both globalcitationkeypattern and citationkeypatternpreferences needed to create a citationkeygenerator checklist change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i think i need an opinion on the cleaning of unwanted charactersin the argument were that citation patterns containing special characters auth year should not remove the between the two bracketed expressions field markers as it is a wanted special characterid argue based on recent changes this should no longer be the case as it is a preference that the user can set themselvesin particular i believe this test case fail using the default unwanted characters this reasonable should i open a separate pr with more information on this issue the answer dictates where the cleankey method call goes and should only change lines of code regarding the unwanted characters you are right the generator should respect the user defined unwanted chars and of course the illegal ones siedlerchr ill change it and add some test cases i think looking more into abstractcitationkeypattern and globalcitationkeypattern will end up being out of scope of this pr i have left them unchanged
7007,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,support for exporting to yaml format support for exporting to yaml deleteblanklines parameter in templateexporter not working enabled deleteblanklines for the ris exporter which used to have that enabled change in changelogmd described if applicable for ui changes if not created an issue at but was i see the unit tests failing test exportcorrectcontent path failed orgopentest jassertionfailederror expected but was could you please check whats going wrong therei already that issue in my local branch currently testing the blank line deletion thank you for the patience joethei
7009,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,removed menu entry for manage external file types removed the menu entry to only have one way to access manage external file types in the preferences dialog change in changelogmd described if applicable for ui changes if not created an issue at welcome to jabref development and welcome to hacktoberfest small nitpicks then it is good to go from my side koppor thank you very much for the nice welcome and your review sorry i completely missed the unused import i think i resolved now everything you mentioned
7014,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,add selection of all entries group on start up link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks for your contribution lgtm
7025,1,0,0,1,0,1,1,0,0,0,1,0,1,1,1,1,1,1,1,add cleanup for copying over physcial review article id as the page n… added a cleanup to copy over the article id as the page number for aps journals this only happens if the page number doesnt exist already link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at thanks a lot for you pr your idea seems to work nicely and the code looks good as well ive only one remark about the location of the code and a bit of fine tuning please also add a test and have a look at the fetcher tests that are currently failing because the fetcher now returns also page information thanks for the review siedlerchr tobiasdiez i think i am almost finished but some of the fetcher tests are still failing sometimes i dont think it has anything to do with my code though as its just a connection failure here is the exception caused by javaioioexception server returned response code for url am guessing its an issue with the crossref website thanks looks good to me now dont forget to add a changelog entry for the new feature thanks i hope you enjoyed the process although may have been a bit confusing at times sorry for that looking forward to your next prand now merge 🚀
7026,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,improve error handling on grobid server connection issues hithis pr relates to issues and its more improvement than an actual fix because the root cause is the server is not available which i cant fix motivation when i read and i realized that these were reported by power usersmeans people who eg understand how to activate debug logging when i tried to reproduce the issues i realized that for the end users the issue is not transparent additionally on my osx the java runtime has an infinite connect timeout set so i never got a visual response on my action refers to new entry from plain text button what i changed add a property connecttimeout to urldownloader this avoids the situation where eg on similar setups than mine java on osx theres an infinite default connecttimeout and i never saw any error in ui nor log set the default connecttimeout to seconds which is eg the same order of magnitude as in many other tools and thus should have no side effects to other usages of this class set the connecttimeout for grobid server to seconds because this should be sufficient as i expect this is a cloud based service please comment if this assumption is wrong refactored the grobidservce so that ioexceptions are percolating higher in the call stack and then can be handled in the ui in case of error i add a notification to the user with an explicit message so users have a chance to know whats going on imho thats more correct and easier to understand for users over the current behavior where just a message entries parsed occurs screenshot below in the comments added en and de translation for the new messagei hope with this new behavior users will better understand why this feature does not work as expected change in changelogmd described if applicable for ui changes if not created an issue at thanks a lot for the quick follow up from my side this is now good to go we have the convention that at least two core developers have to approve a pr so please have a bit of patience until the second review arrives koppor the author check fails againshould we disable it againthank you very much tobiasdiez im participating in the hacktoberfestmay i ask to label this pr as hacktoberfest accepted to signal that i did follow the rules please the pr wil count towards hacktoberfest because we applied the hacktoberfest label on the repo thanks for your contribution looking foward seeing more from you
7039,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,add short date formatter add formatter that can format the month field to use the shorthand abbreviation change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7040,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix shared database tests fix fieldchangeevent delta computationthe coarsechangefilter only reports delta as major changethe problem is that when you codewise set new field content with the same exact length as before but not the same content it still has a delta of and therefore no db sync is triggered a more detailed explanation is link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7043,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,add online link detection to filefieldparser link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes the filefieldparser did not detect an url and created a linkedfile object with the url as a local file path which caused an error when running check integrityim not sure if the unit test is in the right classif this change requires a changelog entry im happy to add one change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks for the contribution lgtm nice contribution lgtm
7073,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fixes exception in preview using regexp search and regexp search without specified field link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes the issue originates in how the javascript regexp is created in previewviewerhighlightsearchpattern fixes the use of regexp while searching for one term eg liu fixes exception in the preview when forward slash is used in the regexp change in changelogmd described if applicable for ui changes if not created an issue at as you are at the search code and as you also worked on the unicode normalization can you maybe check that issue here as well sure will do i think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use convert to lucencei agree and i havent really looked into this in enough detail to contribute there are definitively still going to be other issues after this pr it just aims to address the most obvious cases of the exception and thanks for finding the issue with the grammar based search the regexthank you for the sanity check and help it is both appreciated and saves me time ^^ may i ask whether its possible to add a test case for the functionalityill look into it tomorrow i dont have any experience writing tests for this type of code but there should be some template i can use elsewhere regarding tests you are lucky as there is already one also refactor the bibentry to withfield i keep running into the same issue with creating a previewviewertest javabibdatabasecontext databasecontext new bibdatabasecontext statemanager statemanager new statemanager statemanagersetsearchquery new searchquery test false false previewviewer pw new previewviewer databasecontext null statemanager as soon as i call the constructor i get a javalangexceptionininitializererror ie before it enters the constructor if you want to test something on the javafx thread you need to use the testfx extensions and declare it as gui test see as an example the sourcetabtest under guientryeditorbut that is complicated i would rather merge this one as it is now feel free to create another pr with a gui test siedlerchr koppor thank you both for your reviews they are very appreciated if you want to test something on the javafx thread you need to use the testfx extensions and declare it as gui test see as an example the sourcetabtest under guientryeditor but that is complicated i would rather merge this one as it is now feel free to create another pr with a gui testgreat in that case ill put adding a test case for this issue on my todo list for laterthank you for linking sourcetabtest now i know where to start digging 😃 i suspect ill have opportunities to practice writing gui tests soon x
7077,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix preview settings not saved due to l n introduce internal name for finding layout the problem was that the getname method returned a l n name for custom preview layout link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7082,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,feature enable paginated fetchers this pr adds complex search query support for paginated fetchersit additionally implements the corresponding interfaces for a couple of fetchers arxiv scholar ieee xplore springer link refs koppor change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7095,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,setting title of saved new library follow up to change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7097,1,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,1,update antlr task gradle fixes koppor jabref i finally found the solutionget rid of our antlrplugin and follow the idea from here to gradle and newer is not yet possible due to koppor happy link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository except for the unnecessary tab at the eol i like reviewdog and the many additional linebreaks 😁 it looks good to me although i did not work much with groovy yet i see that there is mac failing will investigate that
7115,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,fixes npe on opening grouppanel change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository tests are failing mhhh
7116,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix saving in codearea without leaving the field refactor globals link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7119,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,improve library loading ux when jabref opens a library it opens a file runs the database parser and after everything is done creates a new tab in the frame with the contents of the open databasean improvement would be to first create a tab in the frame display a loading animation and after the parser has finished display all entries or display every entry as soon as it is parsed there is a bug that i couldnt fix even after data is loaded the group pane will keep showing entry you need to navigate away from the tab and back to get the real number of entriesabout applying the improvement on startup i think having a splash screen will look better something like a blocking dialog that displays a progressindicatorcloses im change in changelogmd described if applicable for ui changes if not created an issue at ill take a look into it the next days im just a bit busy this week i hope you dont minddont worry im not in a hurry take your time i will fix some line breaks and merge tonight sorry for delay thanks again for your contribution
7131,1,0,0,1,0,0,1,0,1,1,1,0,1,1,1,1,1,0,1,fixing glyph icon colors in search bar in dark mode link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes this pull request is on behalf of team isd lnmiitcase sensitive dark_case_sensitive insensitive dark_case_insensitive go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7132,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix document viewer not showing first page turned out it was an off by one error change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository failing unit test is not related
7154,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,fix remembering password for sql db a binding was missing 🤦 link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7173,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,updates to colored group indicator for cited entries link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes an entry can belong to a specific group depending on field or type in the bibentry the settings of the specific grouphence any changes in a field or type in the bibentry or any change in the groups should reevaluation wether or not the entry is still in any given groupi am not very comfortable with the javafx mvvc structure yet so i have attempted an approach with as few structural changes as possible keep the count badge is up to date refresh the selected groups deal with concurrentmodificationexception fix performance bottleneck occurs when switching library and the group is selected check for potential memory leaks caused by extending observable in texgroupjava how should the listeners be stored dependence on deprecated method grouptreenodesetgroup abstractgroup newgroup use of eventbus without unregistering listener x make a weakinvalidationlistener adapter x jabref believes the bib file has changed when the aux file changes x check if the isfilteredout attribute of bibdatabasecontextchangedevent is used to prevent saving x add javadoc x how does the current groupinvalidationevent affect the hierarchical group structure should it be fired from elsewhere so that only partial recalculations of group colors are necessary x replace unnecessary adapter class x change in changelogmd described if applicable x x x for ui changes x if not created an issue at k kaw pnf mkmdsmphz the bib file is changed can be also — you are receiving this because you were mentioned reply to this email directly view it on github or unsubscribe as a first workaround try disabling autosave siedlerchr at least for now it happens independently of autosavethe reason why jabref believes that the database has changed is that i wanted to use groupupdatedevent to notify any listener that a group has changed groupupdatedevent extends bibdatabasecontextchangedevent which i guess triggers others i wanted to view it as a change to the metadata the issue with texgroup is that it requires an update without any interaction from the user it updates on changes in an external file and these updates does not need to be savedi think it is the only group with these characteristics hence i dont see it motivated to extend the groupupdatedevent since it seems well established that bibdatabasecontextchangedevent implies a change that requires savingill figure something out but i am temporarily a bit stuck 😱 hum texgroup has a reference to the metadata is it ok if i its eventbus to post updates instead barring changing quite a large part of the code to use observables i saw some discussion regarding this in other issues but i am not aware of if there is a consensus this is my attempt at addressing this issue sorry about the delay and rather large changes doh i just realised a mistake ill have to fix tomorrow it might make sense to make texgroup observable or to use its fileupdatemonitor directly in the groupnodeviewmodel hey k kaw pnf mkmdsmphz you didnt change anything on this pr for days is this pr ready for review sorry yes it is ready for reviewon january at carl christian snethlage notifications githubcom mailto notifications githubcom wrote hey k kaw pnf mkmdsmphz you didnt change anything on this pr for days is this pr ready for review — you are receiving this because you were mentioned reply to this email directly view it on github or unsubscribe i have just tried this fix with the current master build on ubuntu unfortunately it seems neither the colored group indicator nor the badge icon are updated automatically in my situation step build tex file with additional reference observations counter in badge icon for cited entries is not incremented badge icon for cited entries is not highlighted when the bib entry is selected colored group indicator for cited entries is not shown for the newly added reference step update group of cited entries just edit the group of cited entries and save it again when a dialogue appears choose to assign the original groups entries again to this group observations counter in badge icon for cited entries is now incremented properly badge icon for cited entries is now highlighted properly when the bib entry is selected colored group indicator for cited entries is still not shown for the newly added reference step close and reopen the bib file observations everything is shown as expected sorry about that i am using texpad with mac os x and the group gets updated of the aux file as id expect on jabref cf ccould you give me more details on step which application you are using etc and ill try to get a virtual box with ubuntu up and going in the coming days i have used a test tex file with biblatex see first example in the library was configured for biblatex in jabref as well i have used texstudio but i think its independent of this because i have even simply opened the aux file with some editor and i have directly removed or added entries like \abx aux cite{xxx } it seems that the file monitor does not get triggered properly on a file change thus keysusedinaux will not be cleared and the current group bindings are not invalidated directly removed or added entries like \abx aux cite{xxx } it seems that the file monitor does not get triggered properly on a file change thus keysusedinaux will not be cleared and the current group bindings are not invalidatedyup adding removing entries in that fashion works for me in os x ill look into it i dont really have a hypothesis for why it doesnt work in ubuntu yet you are using a local drive not remote is it possible your editor is generating a create event instead of a modify event this doesnt have to be the same issue as with texstudio yes on a local drive you are right i have created a small java test program of your provided link creating the file testfiletxt triggers entry_create testfiletxt editing the file with the simple text editor pluma triggers entry_create testfiletxt if this file is already opened in texstudio and it has been modified within it before it detects the change and it asks whether the file should be reloaded editing the file with texstudio triggers entry_create testfiletxtg entry_modify testfiletxtg entry_create testfiletxt apparently other programs also observe re ceating files since i have never had such problems elsewhere before editing the file with vs code triggers entry_modify testfiletxt but when building the pdf file from a tex file with texstudio modification events are triggered with this java program for the aux file entry_modify mainaux modification entries omittedentry_modify mainaux but still no event gets triggered in jabrefthe same applies when editing the aux file with vs code which also triggers a modification event with the java test program but not within jabref tobiasdiez k kaw pnf mkmdsmphz do you think that it would make sense to also observe the entry_create event to make the detection of file modifications more reliable since two out of three of my tested editors trigger the entry_create event and other programs apparently also check on this event yes i guess its a good idea to also listen for entry_create at least i cannot think of a negative sideeffect
7174,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,context menu of linked files not updated this should hopefully fix the bug about the context menucan someone please test it with a file download i just now dont have a proper file link at hand change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository works fine for testing you can add the following to the bibtex source file { noticed that it is impossible to add an online file link manually
7178,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,fix newly added entry not synced to db should also newly added entries have empty fields dont update the field table to prevent sql exceptionfix shared entry not found by iduse left outer join for this link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i dont know why the documentation test fails
7178,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,fix newly added entry not synced to db should also newly added entries have empty fields dont update the field table to prevent sql exceptionfix shared entry not found by iduse left outer join for this link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i dont know why the documentation test fails
7179,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,disable slr in ui until is merged this pr addresses the issue of integrating the slr feature in the planned release version without by disabling itrefs change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7191,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix short doi error in issue the detection of exact short dois was improved this was relevant where short dois were misplaced under the wrong field of an entry this did not affect the method public static optional findintext string text which looks for dois _within_ text not exact matches with this commit i have carried the improvements over to the _within text_ detection i had to make the detection more stringent to avoid mis detections for cases like _bla bla bla bla_ or _bli blubb blibb blabb_ etc short dois within text will now only be detected if there is any _doi_ or _urn_ within the substring eg any of the following will be detected doi ab urn ab doiorg doiorg ab shortcut doi etci also introduced the concept of _shortcut dois_ to the in text detection eg _doiorg xyz _ change in changelogmd described if applicable for ui changes if not created an issue at premkolar as you recently adapted the doi find in text i just stumbled upon an issue which results in an error when the method finds a doi with a dot at the end this results in a not found error from doiorg doi s it would be cool if you could add a replacement at the end the following text is coming from the pdf content importer it extracts the text content of the first page and then calls doifindintext firstpagecontents hhs public access author manuscript breast cancer res treat author manuscript available in pmc july published in final edited form as breast cancer res treat july – doi s acupuncture for breast cancer related lymphedema a randomized controlled trial i was going to report the same error but i wanted to check whether dois could syntactically validly end in periods before i did so
7210,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,updates to institution citation keys link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes fixes tldrauthors only having a last name are abbreviated is miss abbreviated because name parts containing uni are assumed to be universities eg united airlines is triggers the abbreviation method because from bibtex´s point of view the author only has a last name the name is later removed because java does not classify the first character as an uppercase letter hence the heuristic assumes it is an insignificant word eg {ebay} gets removed {jabref} doesnt backgroundauthors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion the abbreviations are generated in is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific authorissue is due to a regexp being overly broad when determining if an author is a universityissue was created from where i changed how a company institute is identified in previous versions of jabref an author is an institute if it is enclosed in curly brackets eg {jabref} and i changed it to also include authors who only have a last name eg jabref which means that the author in issue is treated as an institutionthis would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation think of the and in national aeronautics and space administration since the authors name only consist of one word it is removed this is why the workaround tobiasdiez mentioned does not work even if it should changes for identifying universities in the authors names is arbitrary the new regexp matches ^uni vb$ instead of ^uni there are other suggestions in that can be implemented instead the inline institute abbreviation should now work again eg {jabref {jb} } should produce jb i am ignoring the shortauthor field because i find it unclear how and when to use the field eg for multiple authors ill change how institutes are identified so that the author must only have a last name and that last name must contain a space this should only happen if the author originally were enclosed in brackets in all other cases id argue it is acceptable to not abbreviate the author since the name is only one word drawbacks to this approach is that i am using the latextounicodeadapter to remove braces and it doesnt like unbalanced ones todo log a warning for unbalanced brackets in author s change in changelogmd described if applicable for ui changes if not created an issue at java but if i am not misreading the latex unicodeparse i am going to have to check if the result is instanceof fastparsesuccess in which case we need to add fastparse as a dependency i dont know the drawbacks advantages of that approach but if this is the only part of the jabref code that needs this perhaps it is better to leave the code as is we already have farstparse as a dependency so thats not a problem i agree it would be nice to check for parsing errors so i support you here sadly only morally since i dont have any scala experience too fastparse is an indirect dependency from latex unicodethe issue i am having is that latex unicodeparse returns a fastparsecoreparsed instance unless i am missing something it means i must be able to import fastparsecore which i cannot right nowshould i add fastparse to module infojava i am missing something in the jabref building process ill see if i can figure out yes in principle importing it should work however there could be problems since fastparse is not yet modularized and we have a workaround in place dont spend too much time trying to make it work tobiasdiez you were right for some reason my first attempt did not work i need to check one more thing {european union {\{a}}viation safety agency} euaesa but i cant right now so i am putting this back in draft thank you for your help tobiasdiez ❤️ i removed one test case because i believe is out of scope for this pr how to deal with restricting the number of characters between the bracketedpattern citationkey is a different issue eg a bracketed pattern that should only have one character ö can by accident turn into two characters oe in the citation key generation i’ll be looking at it shortly dinner on december at christoph notifications githubcom mailto notifications githubcom wrote siedlerchr commented on this pull request in src main java org jabref model strings latextounicodeadapterjava return a string with latex resolved into unicode throws illegalargumentexception if the latex could not be parsed public static optional parse string infield throws illegalargumentexception { objectsrequirenonnull infield string toformat underscore_matchermatcher infield replaceall replacement_char try { var parsingresult latex unicodeparse toformat if parsingresult instanceof parsedsuccess { string text parsingresultget value toformat normalizernormalize text normalizerformnfc return optionalof underscore_placeholder_matchermatcher toformat replaceall _ } else { return optionalempty } } catch throwable throwable { the try and catch can now be removed — you are receiving this because you authored the thread reply to this email directly view it on github or unsubscribe is this ready for review i think it looks good is this ready for review i think it looks good yup it is ready tobiasdiez good catch apparently i did not examine my assumptions enough my concerns regarding including it is based on and others i when using in the bibtex key generator the non ascii characters are converted to a good representation as in your example göd goe because the bibtex tooling is not fully utf biblatex biber is but not the more commonly used bibtex tool my thoughts were that to the largest extent possible bibtex citation keys should be ascii ansi only in which case should not be added as a test case if {ebay} is successful it is likely that will be as well from bibtex java´s point of view both contain only a last name that starts with a lowercase letter and it was the institute abbreviation method that removed 杨秀群 i am not convinced that the currently generated citation key is correct but you seem to know more about this particular issue than i so feel free to correct me 😛 i based my decision on xiaodongcenturys comment 杨 秀群 but not 杨秀群 the former has a space between last name and first name of a chinese namein my opinion the correct citation key should be either 杨 or 秀群 ie based on the documentation the citation key shoul be the last name with ebay i know the citation key is correct however all of that being said and my apologies about the rather lengthy reading if this is how jabref is used perhaps the test case should be added anyway as we have quite a lot of chinese users it would be good to support this as far as possible thus if the user enters chinese authors then i would say we should generate a key with chinese characters in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for thisfor now i would say we simply add 杨秀群 as a test with whatever result it currently produces for now i would say we simply add 杨秀群 as a test with whatever result it currently produces sure in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for this pinyin j seem to be the most popular java alternative however given that there isnt a need of high performance clean up operation there are more popular javascript libraries i dont know if there is an interest for this thanks also for the research concerning pinyin libraries lets see if users report this as a feature request siedlerchr tobiasdiez thank you both for your time reviews and suggestions they are appreciated thank you allthe jabref b b works perfectly with chinese namesthanks again
7210,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,updates to institution citation keys link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes fixes tldrauthors only having a last name are abbreviated is miss abbreviated because name parts containing uni are assumed to be universities eg united airlines is triggers the abbreviation method because from bibtex´s point of view the author only has a last name the name is later removed because java does not classify the first character as an uppercase letter hence the heuristic assumes it is an insignificant word eg {ebay} gets removed {jabref} doesnt backgroundauthors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion the abbreviations are generated in is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific authorissue is due to a regexp being overly broad when determining if an author is a universityissue was created from where i changed how a company institute is identified in previous versions of jabref an author is an institute if it is enclosed in curly brackets eg {jabref} and i changed it to also include authors who only have a last name eg jabref which means that the author in issue is treated as an institutionthis would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation think of the and in national aeronautics and space administration since the authors name only consist of one word it is removed this is why the workaround tobiasdiez mentioned does not work even if it should changes for identifying universities in the authors names is arbitrary the new regexp matches ^uni vb$ instead of ^uni there are other suggestions in that can be implemented instead the inline institute abbreviation should now work again eg {jabref {jb} } should produce jb i am ignoring the shortauthor field because i find it unclear how and when to use the field eg for multiple authors ill change how institutes are identified so that the author must only have a last name and that last name must contain a space this should only happen if the author originally were enclosed in brackets in all other cases id argue it is acceptable to not abbreviate the author since the name is only one word drawbacks to this approach is that i am using the latextounicodeadapter to remove braces and it doesnt like unbalanced ones todo log a warning for unbalanced brackets in author s change in changelogmd described if applicable for ui changes if not created an issue at java but if i am not misreading the latex unicodeparse i am going to have to check if the result is instanceof fastparsesuccess in which case we need to add fastparse as a dependency i dont know the drawbacks advantages of that approach but if this is the only part of the jabref code that needs this perhaps it is better to leave the code as is we already have farstparse as a dependency so thats not a problem i agree it would be nice to check for parsing errors so i support you here sadly only morally since i dont have any scala experience too fastparse is an indirect dependency from latex unicodethe issue i am having is that latex unicodeparse returns a fastparsecoreparsed instance unless i am missing something it means i must be able to import fastparsecore which i cannot right nowshould i add fastparse to module infojava i am missing something in the jabref building process ill see if i can figure out yes in principle importing it should work however there could be problems since fastparse is not yet modularized and we have a workaround in place dont spend too much time trying to make it work tobiasdiez you were right for some reason my first attempt did not work i need to check one more thing {european union {\{a}}viation safety agency} euaesa but i cant right now so i am putting this back in draft thank you for your help tobiasdiez ❤️ i removed one test case because i believe is out of scope for this pr how to deal with restricting the number of characters between the bracketedpattern citationkey is a different issue eg a bracketed pattern that should only have one character ö can by accident turn into two characters oe in the citation key generation i’ll be looking at it shortly dinner on december at christoph notifications githubcom mailto notifications githubcom wrote siedlerchr commented on this pull request in src main java org jabref model strings latextounicodeadapterjava return a string with latex resolved into unicode throws illegalargumentexception if the latex could not be parsed public static optional parse string infield throws illegalargumentexception { objectsrequirenonnull infield string toformat underscore_matchermatcher infield replaceall replacement_char try { var parsingresult latex unicodeparse toformat if parsingresult instanceof parsedsuccess { string text parsingresultget value toformat normalizernormalize text normalizerformnfc return optionalof underscore_placeholder_matchermatcher toformat replaceall _ } else { return optionalempty } } catch throwable throwable { the try and catch can now be removed — you are receiving this because you authored the thread reply to this email directly view it on github or unsubscribe is this ready for review i think it looks good is this ready for review i think it looks good yup it is ready tobiasdiez good catch apparently i did not examine my assumptions enough my concerns regarding including it is based on and others i when using in the bibtex key generator the non ascii characters are converted to a good representation as in your example göd goe because the bibtex tooling is not fully utf biblatex biber is but not the more commonly used bibtex tool my thoughts were that to the largest extent possible bibtex citation keys should be ascii ansi only in which case should not be added as a test case if {ebay} is successful it is likely that will be as well from bibtex java´s point of view both contain only a last name that starts with a lowercase letter and it was the institute abbreviation method that removed 杨秀群 i am not convinced that the currently generated citation key is correct but you seem to know more about this particular issue than i so feel free to correct me 😛 i based my decision on xiaodongcenturys comment 杨 秀群 but not 杨秀群 the former has a space between last name and first name of a chinese namein my opinion the correct citation key should be either 杨 or 秀群 ie based on the documentation the citation key shoul be the last name with ebay i know the citation key is correct however all of that being said and my apologies about the rather lengthy reading if this is how jabref is used perhaps the test case should be added anyway as we have quite a lot of chinese users it would be good to support this as far as possible thus if the user enters chinese authors then i would say we should generate a key with chinese characters in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for thisfor now i would say we simply add 杨秀群 as a test with whatever result it currently produces for now i would say we simply add 杨秀群 as a test with whatever result it currently produces sure in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for this pinyin j seem to be the most popular java alternative however given that there isnt a need of high performance clean up operation there are more popular javascript libraries i dont know if there is an interest for this thanks also for the research concerning pinyin libraries lets see if users report this as a feature request siedlerchr tobiasdiez thank you both for your time reviews and suggestions they are appreciated thank you allthe jabref b b works perfectly with chinese namesthanks again
7224,1,0,1,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix clipboardmanager prefs ordering change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7225,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,fix some fetcher test this pr fixes some of the failing fetcher tests specified in namely jstor result differs citeseer result differs titlefetcher change format disable compositefetchertest on ci change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository home runner work jabref jabref src test java org jabref logic importer fetcher compositesearchbasedfetchertestjava error cannot find symbol disabledonciserver produces to many requests on ci ^ symbol class disabledonciserver 😄
7229,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,disable acm google scholar jstor we cannot get the acm fetcher working nor the google scholar jstor has a traffic limit thus we disabled them change in changelogmd described if applicable for ui changes if not created an issue at schrieb am mi dez is the jstor fetcher working in principle and only hits the quota limit after a certain amount of usages how many per day — you are receiving this because you authored the thread reply to this email directly view it on github unsubscribe i remember that it worked a while ago maybe they require some cookies or whatever to be presentedit they now also use recaptcha i tried some access with curl curl
7232,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add a more descriptive path when directory cannot be found link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there issue problem when you try to download a pdf lookup search full documents online and you dont have a file directory set an alert tells you that you should follow a path to set your file directory preference file but that path is not correct because to set the file directory you need to follow this path options preference linked files main file directory suggested changes change the message to _main file directory not set check the preferences linked files or the library properties_ screenshots change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository please see can define relative directories in the library properties and thus the main file directory can be empty in addition theres a checkbox to always use the bib file location which will override all other settings suggestionchange the message to no file directory set or check the preferences linked files or the library properties thanks for the review i added some changes 😀 huh i think we totally forgot your pr when thinking about the issue with but since your pr is now independent of this issue i dont see any cause not to merge since every other remark is implementedsorry for the delay and thanks for your work
7240,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,add traditional chinese to look into crowdin how to map it link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7243,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,fix normalize pages formatter not replacing dashes link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository for devcall i would suggest we weaken the regex to follow the biblatex def a range is something optionally followed by one or more dashes optionally followed by some non dash eg as a follow up to i added unprotecttermsformatter i was not sure about the naming because it is not an opposite one unfreezeallwords was the old proposalthe discussion continued at regarding the case pages i was unsure i opted to also to reformat them
7260,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,improved detection of long dois within text fixes a checkstyle issue of change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7269,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,1,only disable move to file dir when path equals fix equals in path method the dialog is now only disable when the file is already in the file directory link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7290,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,fix for issue link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there where the about dialog doesnt open a second timefix for issue change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thank you for the quick action taken faeludire
7292,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,exception about missing custom css file java exception when trying to open the preferences with missing custom themeafter some testing i found that there two main paths that could result in the same failure the css file being missing before application start and changing the name of the css file while the application is running to resolve the latter i think the best approach is to check the custom css file existsthis is already done for the theme as used for most of the application however the preview viewer has its own css url logicrather than add file checking logic to the preview viewer i have refactored and moved the theme logic of preview viewer into theme so that all css url logic is encapsulated in that class i have also put the logic that checks that the url is valid and filters it to an optionalempty into one new method additionalcsstoload in place of the field of the same name this ensure that the file existence check is performed in all cases rather than just at construction of the theme objecti have kept the optional field so there should be no overhead to this approach for the built in themes and only the minor and necessary overhead of file existence checking for the custom themefor manual testing i checked previews and overall appearance for default theme are correct after restart previews and overall appearance for dark theme are correct after restart previews and overall appearance with a custom theme with a valid name are correct after restart live changes to the custom theme still work in general and for preview rename custom theme so that the configured theme is no longer correct before application start the preview is no longer themed but there is no error the preview theme is restored when the filename is restored to the configured value without restarting the application restart rename custom theme so that the configured theme is no longer correct while application is running the preview remains themed typically sized css themes are data url embedded and so survive file removal these tests were run both with the gradle run task and on the built binary rationale gradle presents the dark theme as a file while the binary has it built in on a jrt url so the results could be different pr tasks change in changelogmd described if applicable for ui changes n a if not created an issue at thanks for the work and also thanks for adding a test is this ready nowive justed add some test coverage for theme live reloading the change to it was minor but this should cover all the changes now all being well from ci pipeline i will remove the draft status i get an npe with the file watching themetest in the github ci pipeline that i dont get when running the test locally and the only thing i can see on the line with npe that could do that is closing the watchservice which functionally looks correct but perhaps is open to memory consistency issues so ive added volatile to the watchservice and i take a local copy to null check before closing in commit d c f b f a b e ive put a condition on that last test ive added so it only runs on windows ill try to figure out why it is behaving differently in the pipeline without holding up this pr as it is very likely a test artifact its quite complicated with needing to run up the file watching service and mock the javafx sceneive given a final quick manual test after the last commitfetcher tests fail with too many requests probably just because im hammering the ci and this is usual i guess the failing of the authors is usual for a first contribution so nothing to worry aboutonly thing that i am unsure of is why the mac osx create installer task fails consistently if thats something i need to fix let me knowfrom my perspective happy for this to be given a final review and merge docrjp the mac os will always fail because it requires some keys secrets however githubaction does not pass these to forks linux and file watching locking is a complex issue linux file system works completely different from windows eg there is no kind of lock for a filefetcher test are another non related issue only relevant if you worked on them i agree with tobiasdiez we should merge this one now as this is an improvement already bug has been and especially extracting theme logic out of foreign classes is very good even though the theme architecture is not perfect but this goes beyond this pr codewise looks good also to me tests have passed so ill merge this thank you for your work here and for accepting our commnts about it i hope you liked working on jabref we would be happy if you decide to continue to contribute thank you for your work here and for accepting our commnts about it i hope you liked working on jabref we would be happy if you decide to continue to contributeabsolutelythank you all siedlerchr calixtus tobiasdiez for your valuable feedback and support all of it was very much appreciated its a great community herei will definitely keep contributing jabref caught my eye on codetriage because i used over years ago as a postgraduate in private industry since and now wanting to give back it couldnt be more perfect 😄
7296,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fix typo in conversion for small pi link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes there is a typo in the unicode latex html conversion change in changelogmd described if applicable enter $\pi$ in abstract field convert unicode to latex in context menu for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7302,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,added keyboard shortcuts clear set read status link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there added keyboard shortcuts with defaults for clear read status alt c set read status to read alt r set read status to skimmed alt s fixes change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository ups thought i had to close the pull request but i think i have to wait until you merge it if everybody is happy ill think i merge thanks 😄
7338,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,fix expansion of bracketed expressions in regexpbasedfilefinder link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes contains two issues the bracketed pattern title does not refer to the standardfield title but a special pattern intended to give nicer output this is why dashes dont work see it is intended and can be avoided by using title an expanded bracketed pattern is interpreted as a regexp which it should not this is why parenthesizes doesnt work a pattern that expands into abc will match abc but not abc if the expanded bracketed pattern contains characters that have a special meaning in regexp such as a parenthesis and brackets it becomes a probleman entry with the title regexp from a z and the bracketed expression title would match a file titled regexp from b but not a file named regexp from a z the goal of this prmatch files whose expanded bracketed pattern includes symbols that can be miss interpreted regex all expanded brackets will match literally using patternquote i dont see a reasonable use case for allowing a bracket to expand into an actual regex cleaned filenames _in addition_ to matching the regularly expanded brackets they will also match cleaned file names it will find files containing both acm ieee cs and acm_ieee cs note regex can still be used outside of the bracketed patterns except for character classes since they will be interpreted as a bracketed pattern issues neither addressed in this pr nor the current master files that get truncated due to length character classes in the regexpbasedfilefinder in the following pattern title a z \\ extension a z is treated as if it is a bracketed pattern bracketedexpressions are only expanded in the file name not in the directory name checklist check if parts can be replaced by a glob acm_ieee_cs information technology curriculum i dont think this can be done reliably within the scope of this pr make sure a warning appears in the debug log if a filename dirname is expected to be too long refactor fileutilcreatefilenamefrompattern so the same code is used i dont think this can be done reliably within the scope of this pr add javadoc improve variable names and comments x change in changelogmd described if applicable x x the manual test was only performed with the example given in x for ui changes x if not created an issue at this needs deeper thinking at review at first gut feeling author text should be expaned this is not possible any more in this pr see remove tests this is possible in this pr ill review my pr description and see if i can clarify koppor siedlerchr sorry about that sometimes it is a bit too easy to tunnel vision and assume something is obvious while forgetting all the assumptions needed to make it obvious the pr description is updated and hopefully more readable
7352,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fixes regex again in previewviewer link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes apparently i did not pay enough attention while copy pasting in intellij or checking the method again afterward see for the original regex note that to reproduce it in the current jabref you need to have the preview pane open while searchingsorry about this one change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7355,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,fix harvard exporter by changing authorsformatter the layout files were still using the old formatter chaining for authors and therefore were responsible for removing braces also fix extension link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository for other layout files i have created a follow up issue k kaw pnf mkmdsmphz i simply had to replace the old formatters totally forgot that we changed the format implementation so sorry for bothering you we dont have any tests for this exporter we dont have any tests for the templateexporter the layout file based but i guess it would make sense to add some refs
7357,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,export urldate to msoffice link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7358,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,export full month name instead of number in ms office follow up fix from link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7368,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,add migration to special field this pr migrates all occurrences of special field values in the keywords into their respective special fields change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7379,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix alt keyboard shortcuts do not work link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there user can use checkmenuitem shortcut only when they click the tab that is because the event will not be created until user click the menu in original version such that i create the event when we intial the gui in this case the issue is fixed fixes change in changelogmd described if applicable for ui changes if not created an issue at hi fu i tried to fix the remaining issue i mentioned quickly by myself but it seems that you did not grant write access to your pr branch so please fix the remaining issue then we can merge also changelogmd needs some conflict resolutioni have fix the remaining issue thanks for your merge now you have introduced a lot of indentation changes in jabrefframe please undo them now you have introduced a lot of indentation changes in jabrefframe please undo themi have undo them and its ok now
7417,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,added keyboard shortcut for merging entries user submitted a patch link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7421,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,add selection copy to preview window added a feature that allows users to copy highlighted text in the preview windowscreenshot c ff e c cb ea e da cdd change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7438,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,fixes the issue non valid number as font size results in an uncaught exception link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable for ui changes if not created an issue at also returns null on no input at least when i did a manual test isnt it possible to pass a default value as an argument to the constructor calixtus are you referring to the onlyintegerformatter or the null reference exception in either case a default value is passed to the textformatter but a null reference exception can still happen the database tests fail can someone elaborate on this the database test sometimes fail for no reason not related to you changes calixtus are you referring to the onlyintegerformatter or the null reference exception in either case a default value is passed to the textformatter but a null reference exception can still happeni was referring to the onlyintegerformatter but i am satisfied thank you for your work here calixtus you are welcome calixtus i think you need to approve before we can merge since you requested changes
7440,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,zbmath fetcher add zbmath to the public databases which can be chosen when updating an entry with bibliographic information from the web see screenshot change in changelogmd described if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository in the fetcher tests src test java org jabref logic importer fetcher zbmathtestjava did not fail but some tests for other fetchers i think this failures are not due to my changes thank you for the help with the authorlist classi added the requested changes three fetcher tests from other fetchers failed but not from the zbmath fetcher i work for them i wrote this sometime ago on gitterbut you might not follow all messages there
7443,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,fix citation keys unintentionally being overwritten on import hello jabref team ive attempted to create a fix for issue im not sure if its done as expected though please let me know if i need to change update anythingthe version behaves like this if preferences citation key patterns overwrite existing keys is unchecked generatekey in citationkeygenerator overwrites the default citationkey with an newly generated one only if it is blank the default citationkey is not overwritten anymore and therefore stays the same if it is not blankbehaviour remains unchanged if overwrite existing keys is checked let me know if i misunderstood how this feature was supposed to work in general and ill adapt the behaviour accordingly fixes change in changelogmd described if applicable for ui changes if not created an issue at overwrite existing keys might be confusing this is used to warn prevent users if they try to generate a key using the generate key button in the entry editor although the entry already has a key the use case is that after generating a new key old latex documents stop compiling and some users would like to prevent this as you see this has nothing to do with the importmaybe its better to add a checkbox in the import dialog another idea would be to let the users specify a cleanup preset in the preferences that is applied after an import the latter would then also lucasf jabref developers what do you prefer oh ive completely missed the mark then sorry about thatthe way i understood the description discussion within the issue i presumed the overwrite existing keys option was the one that governs whether the default citationkey of an imported entry is overwritten by a generated key based on user preferences or not and wasnt working as intended my badjust for my understanding in general if the bibtex source string article{igor eha author {igor kulikov} title {a new gpu accelerated hydrodynamical code for numerical simulation of interacting galaxies} year { } month { } archiveprefix {arxiv} eprint { } primaryclass {astro phim}} is being imported after a web search default behaviour would be to overwrite the citationkey of the bibentry object with a generated key based on the pattern specified in citationkeypattern preferences eg igor in case of a default pattern of auth year if a user were to choose not to overwrite keys the bibentry would continue using igor eha as its citationkey would that then be considered intended behaviour for an importim afraid im not able to fully comprehend the cleanup preferences solution youve mentioned so im definitely not fit to voice an opinion here ive just got a first very localised look at jabref while attempting to fix the mentioned issuenot sure about the protocol would you like me to close this pr and await your decision on this topic another idea would be to let the users specify a cleanup preset in the preferences that is applied after an importi like this option i think it would address a lot of the confusion regarding when the citation key generator is used and what behavior it hashowever i dont think it replaces this pr i think there is a need for a default global citation key generation behavior which in my opinion should be set in the citation key patterns preferences i consider the unwanted characters another example of when a default option is necessary and should be applied wherever whenever the citation key generator is used oh ive completely missed the mark then sorry about that the way i understood the description discussion within the issuei dont think there is such a thing as missing the mark when it comes to jabref when something leads to an improvement i think everything is up for discussion and on the mark 😛 overwrite existing keys option was the one that governs whether the default citationkey of an imported entry is overwritten by a generated key based on user preferencesid argue that this is the case cleanup preferences solution youve mentioned so im definitely not fit to voice an opinion herei interpret it as essentially running a cleanup action on the imported entries perhaps using different preferences but otherwise same as the from my point of view as i proposed in comment it needs to the check needs to be added to the import handler before the key generator is calledam i reading too much into your comment in that you are aligned with the add a checkbox in the import dialog optionin my mind the logic is that a citation key generator object is created based on preferences citationkeypatternpreferences if the importer wants to override these settings it should create a new instance of this object then it is up to the citationkeygenerator to adhere to these preferences admittedly this doesnt work well with shouldwarnbeforeoverwritecitekey perhaps i am just overcomplicating things and thinking about this in the wrong way indeed there is no such thing as missing the mark in our cosy jabref worldthere are two things here that we shouldnt confuse use clicks generate citation key button controlled by the citation keys overwrite existing keys preference automatically generate keys upon import web search instead of using the one provided by the fetcher which most of the times is some cryptic key although from a code point of view they are the same for a user they are quite different and one could easily imagine that a user might want to prevent overwriting manually set keys but still would like to have automatically generated keys upon importi think the best way forward would be to introduce a new preference setting generate new key on import that could go in the general tab below the other import related preferences entry owner time stamp or if you feel comfortable enough with the code create a new preference tab import where you put all of these preferences options maybe calixtus has more input about the structure of the preferences thank you all for the explanations comments i feel like ive got a better idea about the subject id have to take a closer look at the project again to see whether i feel like id be able to implement the create a new import tab in preferences solutioni was wondering though wouldnt the option to decide whether or not to generate a key for a given import in the import dialogue be advantageous as well on top of the new entry in preferences this way a user wouldnt have to change their preferences when importing an entry for which theyd like to go against said preference as long as im not confusing things again i agree that such an option in the import dialog might be handy from time to time however this also makes the import dialog more complicated so im not sure if its a good idea to add it there maybe first try the solution via the preferences and then see if the users would like to have an option during the import as well lucasf it would be really nice if you could go with the simple solution first that would be a huge benefit already for many users we can always add an option in the import dialog later it seems im unable to accomplish even that im afraidive managed to add an import settings tab as well as a checkbox for toggling the option by attempting to copy how other tabs are implemented so nothing to write home about at all feature as such seems to be working as well but its messing with something or more like breaking something and i have been unable to understand what exactly it is image exceptions are raised once you have toggled the checkbox in the import settings at least once in a session as soon as you delete the last remaining entry within a libraryif the setting has not been changed in a session no matter if the option is enabled or not these exceptions are not raised when deleting the last entry in the libraryhowever the more often you toggle the option the more exceptions are thrownexample after having toggled the setting three times image want to push the branch in its current broken state thanks for your continued work on this looks already pretty good concerning the error message could you copy & paste the complete stacktrace moreover it would be good to have the code with your changes at hand could you maybe push them to a different branch heres a link to the new branch containing the code on my jabref fork hope thats how you wanted me to do that and this is the stacktrace thats being displayed on the console when the exception is thrown stack trace details javautilnosuchelementexception javalangindexoutofboundsexception at javautilabstractlist$itrnext abstractlistjava at javautiliteratorforeachremaining iteratorjava at javautilspliterators$iteratorspliteratorforeachremaining spliteratorsjava at javautilstreamabstractpipelinecopyinto abstractpipelinejava at javautilstreamabstractpipelinewrapandcopyinto abstractpipelinejava at javautilstreamreduceops$reduceopevaluatesequential reduceopsjava at javautilstreamabstractpipelineevaluate abstractpipelinejava at javautilstreamreferencepipelinecollect referencepipelinejava at orgjabrefguimaintablemaintablegetselectedentries maintablejava jabref jar at orgjabrefguilibrarytablambda$createmaintable$ librarytabjava jabref jar at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistlambda$new$ selecteditemsreadonlyobservablelistjava javafxcontrols at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at comsunjavafxscenecontrolreadonlyunbackedobservablelist_endchange readonlyunbackedobservablelistjava javafxcontrols at javafxscenecontrolmultipleselectionmodelbase$selectedindiceslist_endchange multipleselectionmodelbasejava javafxcontrols at javafxscenecontrolcontrolutilsupdateselectedindices controlutilsjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodelfirecustomselectedcellslistchangeevent tableviewjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodelclearselection tableviewjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodelupdatedefaultselection tableviewjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodellambda$new$ tableviewjava javafxcontrols at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at javafxcollectionstransformationsortedlistsourcechanged sortedlistjava javafxbase at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at javafxcollectionstransformationfilteredlistsourcechanged filteredlistjava javafxbase at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at comtobiasdiezeasybindmappedbackedlistsourcechanged mappedbackedlistjava easybind jar at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at orgjabrefguiutiluithreadlistsourcechanged uithreadlistjava jabref jar at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionsfxcollections$unmodifiableobservablelistimpllambda$new$ fxcollectionsjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsfxcollections$synchronizedobservablelistlambda$new$ fxcollectionsjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at javafxcollectionsmodifiableobservablelistbaseremove modifiableobservablelistbasejava javafxbase at javautilabstractlist$itrremove abstractlistjava at javautilcollectionremoveif collectionjava at orgjabrefmodeldatabasebibdatabaseremoveentries bibdatabasejava jabref jar at orgjabrefmodeldatabasebibdatabaseremoveentries bibdatabasejava jabref jar at orgjabrefguilibrarytabdelete librarytabjava jabref jar at orgjabrefguilibrarytabdelete librarytabjava jabref jar at orgjabrefguiediteditactionlambda$execute$ editactionjava jabref jar at javautiloptionalifpresent optionaljava at orgjabrefguiediteditactionexecute editactionjava jabref jar at orgjabrefguiactionsjabrefactionlambda$new$ jabrefactionjava jabref jar at orgcontrolsfxcontrolactionactionhandle actionjava controlsfx jar at orgcontrolsfxcontrolactionactionhandle actionjava controlsfx jar at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent compositeeventhandlerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent compositeeventdispatcherjava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventeventutilfireeventimpl eventutiljava javafxbase at comsunjavafxeventeventutilfireevent eventutiljava javafxbase at javafxeventeventfireevent eventjava javafxbase at javafxscenenodefireevent nodejava javafxgraphics at javafxscenecontrolbuttonfire buttonjava javafxcontrols at comsunjavafxscenecontrolbehaviorbuttonbehaviormousereleased buttonbehaviorjava javafxcontrols at comsunjavafxscenecontrolinputmapinputmaphandle inputmapjava javafxcontrols at comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent compositeeventhandlerjava javafxbase at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent compositeeventhandlerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent compositeeventdispatcherjava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventeventutilfireeventimpl eventutiljava javafxbase at comsunjavafxeventeventutilfireevent eventutiljava javafxbase at javafxeventeventfireevent eventjava javafxbase at javafxscenescene$mousehandlerprocess scenejava javafxgraphics at javafxscenesceneprocessmouseevent scenejava javafxgraphics at javafxscenescene$scenepeerlistenermouseevent scenejava javafxgraphics at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun glassvieweventhandlerjava javafxgraphics at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun glassvieweventhandlerjava javafxgraphics at javasecurityaccesscontrollerdoprivileged accesscontrollerjava at comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$ glassvieweventhandlerjava javafxgraphics at comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock quantumtoolkitjava javafxgraphics at comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent glassvieweventhandlerjava javafxgraphics at comsunglassuiviewhandlemouseevent viewjava javafxgraphics at comsunglassuiviewnotifymouse viewjava javafxgraphics at comsunglassuigtkgtkapplication_runloop native method javafxgraphics at comsunglassuigtkgtkapplicationlambda$runloop$ gtkapplicationjava javafxgraphics at javalangthreadrun threadjava caused by javalangindexoutofboundsexception at javafxcollectionstransformationsortedlistget sortedlistjava javafxbase at javafxscenecontroltableview$tableviewselectionmodelgetmodelitem tableviewjava javafxcontrols at javafxscenecontrolmultipleselectionmodelbase$ getmodelitem multipleselectionmodelbasejava javafxcontrols at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistget selecteditemsreadonlyobservablelistjava javafxcontrols at javautilabstractlist$itrnext abstractlistjava morecaused by javalangindexoutofboundsexception javafx application thread error orgjabrefguifallbackexceptionhandler uncaught exception occurred in thread javafx application thread main javautilnosuchelementexception javalangindexoutofboundsexception at javautilabstractlist$itrnext abstractlistjava at javautiliteratorforeachremaining iteratorjava at javautilspliterators$iteratorspliteratorforeachremaining spliteratorsjava at javautilstreamabstractpipelinecopyinto abstractpipelinejava at javautilstreamabstractpipelinewrapandcopyinto abstractpipelinejava at javautilstreamreduceops$reduceopevaluatesequential reduceopsjava at javautilstreamabstractpipelineevaluate abstractpipelinejava at javautilstreamreferencepipelinecollect referencepipelinejava at orgjabrefguimaintablemaintablegetselectedentries maintablejava jabref jar at orgjabrefguilibrarytablambda$createmaintable$ librarytabjava jabref jar at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistlambda$new$ selecteditemsreadonlyobservablelistjava javafxcontrols at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at comsunjavafxscenecontrolreadonlyunbackedobservablelist_endchange readonlyunbackedobservablelistjava javafxcontrols at javafxscenecontrolmultipleselectionmodelbase$selectedindiceslist_endchange multipleselectionmodelbasejava javafxcontrols at javafxscenecontrolcontrolutilsupdateselectedindices controlutilsjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodelfirecustomselectedcellslistchangeevent tableviewjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodelclearselection tableviewjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodelupdatedefaultselection tableviewjava javafxcontrols at javafxscenecontroltableview$tableviewarraylistselectionmodellambda$new$ tableviewjava javafxcontrols at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at javafxcollectionstransformationsortedlistsourcechanged sortedlistjava javafxbase at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at javafxcollectionstransformationfilteredlistsourcechanged filteredlistjava javafxbase at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at comtobiasdiezeasybindmappedbackedlistsourcechanged mappedbackedlistjava easybind jar at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at orgjabrefguiutiluithreadlistsourcechanged uithreadlistjava jabref jar at javafxcollectionstransformationtransformationlistlambda$getlistener$ transformationlistjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionsfxcollections$unmodifiableobservablelistimpllambda$new$ fxcollectionsjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$genericfirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsfxcollections$synchronizedobservablelistlambda$new$ fxcollectionsjava javafxbase at javafxcollectionsweaklistchangelisteneronchanged weaklistchangelistenerjava javafxbase at comsunjavafxcollectionslistlistenerhelper$singlechangefirevaluechangedevent listlistenerhelperjava javafxbase at comsunjavafxcollectionslistlistenerhelperfirevaluechangedevent listlistenerhelperjava javafxbase at javafxcollectionsobservablelistbasefirechange observablelistbasejava javafxbase at javafxcollectionslistchangebuildercommit listchangebuilderjava javafxbase at javafxcollectionslistchangebuilderendchange listchangebuilderjava javafxbase at javafxcollectionsobservablelistbaseendchange observablelistbasejava javafxbase at javafxcollectionsmodifiableobservablelistbaseremove modifiableobservablelistbasejava javafxbase at javautilabstractlist$itrremove abstractlistjava at javautilcollectionremoveif collectionjava at orgjabrefmodeldatabasebibdatabaseremoveentries bibdatabasejava jabref jar at orgjabrefmodeldatabasebibdatabaseremoveentries bibdatabasejava jabref jar at orgjabrefguilibrarytabdelete librarytabjava jabref jar at orgjabrefguilibrarytabdelete librarytabjava jabref jar at orgjabrefguiediteditactionlambda$execute$ editactionjava jabref jar at javautiloptionalifpresent optionaljava at orgjabrefguiediteditactionexecute editactionjava jabref jar at orgjabrefguiactionsjabrefactionlambda$new$ jabrefactionjava jabref jar at orgcontrolsfxcontrolactionactionhandle actionjava controlsfx jar at orgcontrolsfxcontrolactionactionhandle actionjava controlsfx jar at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent compositeeventhandlerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent compositeeventdispatcherjava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventeventutilfireeventimpl eventutiljava javafxbase at comsunjavafxeventeventutilfireevent eventutiljava javafxbase at javafxeventeventfireevent eventjava javafxbase at javafxscenenodefireevent nodejava javafxgraphics at javafxscenecontrolbuttonfire buttonjava javafxcontrols at comsunjavafxscenecontrolbehaviorbuttonbehaviormousereleased buttonbehaviorjava javafxcontrols at comsunjavafxscenecontrolinputmapinputmaphandle inputmapjava javafxcontrols at comsunjavafxeventcompositeeventhandler$normaleventhandlerrecordhandlebubblingevent compositeeventhandlerjava javafxbase at comsunjavafxeventcompositeeventhandlerdispatchbubblingevent compositeeventhandlerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventeventhandlermanagerdispatchbubblingevent eventhandlermanagerjava javafxbase at comsunjavafxeventcompositeeventdispatcherdispatchbubblingevent compositeeventdispatcherjava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventbasiceventdispatcherdispatchevent basiceventdispatcherjava javafxbase at comsunjavafxeventeventdispatchchainimpldispatchevent eventdispatchchainimpljava javafxbase at comsunjavafxeventeventutilfireeventimpl eventutiljava javafxbase at comsunjavafxeventeventutilfireevent eventutiljava javafxbase at javafxeventeventfireevent eventjava javafxbase at javafxscenescene$mousehandlerprocess scenejava javafxgraphics at javafxscenesceneprocessmouseevent scenejava javafxgraphics at javafxscenescene$scenepeerlistenermouseevent scenejava javafxgraphics at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun glassvieweventhandlerjava javafxgraphics at comsunjavafxtkquantumglassvieweventhandler$mouseeventnotificationrun glassvieweventhandlerjava javafxgraphics at javasecurityaccesscontrollerdoprivileged accesscontrollerjava at comsunjavafxtkquantumglassvieweventhandlerlambda$handlemouseevent$ glassvieweventhandlerjava javafxgraphics at comsunjavafxtkquantumquantumtoolkitrunwithoutrenderlock quantumtoolkitjava javafxgraphics at comsunjavafxtkquantumglassvieweventhandlerhandlemouseevent glassvieweventhandlerjava javafxgraphics at comsunglassuiviewhandlemouseevent viewjava javafxgraphics at comsunglassuiviewnotifymouse viewjava javafxgraphics at comsunglassuigtkgtkapplication_runloop native method javafxgraphics at comsunglassuigtkgtkapplicationlambda$runloop$ gtkapplicationjava javafxgraphics at javalangthreadrun threadjava caused by javalangindexoutofboundsexception at javafxcollectionstransformationsortedlistget sortedlistjava javafxbase at javafxscenecontroltableview$tableviewselectionmodelgetmodelitem tableviewjava javafxcontrols at javafxscenecontrolmultipleselectionmodelbase$ getmodelitem multipleselectionmodelbasejava javafxcontrols at comsunjavafxscenecontrolselecteditemsreadonlyobservablelistget selecteditemsreadonlyobservablelistjava javafxcontrols at javautilabstractlist$itrnext abstractlistjava more thanks after looking at your code i think the issue is not coming from your changes it looks like there is an issue somewhere in the entry list code and you just found a way to trigger them in fact such issues have been reported before we just didnt had a way to reproduce themso i would propose you push your changes to this pr we merge and then have a look at the exception later i kinda forgot about merging pushing sorry about that if further changes improvements are required preferred let me know looks very good although i maybe make some little rewordings before merging this to fit to the name conventions of jabref thank youmaybe well reorganize the preferences soon there is already another pr in waiting with a preferences option that would fit in this tab
7455,1,0,0,1,1,1,1,0,0,0,1,0,1,0,1,1,0,0,1,unmerge lo citations implemented unmerge citations in the openoffice libreofficeintegration panel go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described in a way that is understandable for the average user if applicable no tests were not created do you have gui tests there is a known problem merge citations does not save the information needed to find the optional extra info like page reference stored in document properties when reestablishing the individual references in uncombinecitemarkers getuniquereferencemarkname may or may not return the original name when it does not the extra info may be lost or even taken from another entry a solution could be to encode the number making the originals unique in the merged name in stead of jr_cite_ _xx ayy it would be eg jr_cite_ _xx a _yy apart from construction and parsing probably marking or calulating the originals as in use for getuniquereferencemarkname would be needed another problem combinecitemarkers orders the merged entries by year i am not sure why the original order is lost in summary the presented solution although improves the situation does not cover all aspects for ui changes jabref unmerge citations if not created an issue at i think it would make sense to change the cite generation to encode the unique thing when combining but then the parse ref names needs to be adjusted as well and many other cases as welli started a new branch to reorganize oobibbasejava at far it should contain no changes to user visible functionalitymainly reorganization of the code parsing of ref marks is now only in parserefmarknameand isjabrefreferencemarknameon the other hand reorganizing means lots of changesmany of which may seem or turn out to be superfluoussince i am editing while trying to understand what is going oni am worried that with so many changes i end up withsomething that will not be merged due to the amount of changesplease let me know what to expect and what to watch out for probably the best would be to merge this one and you keep working on your branch but try to focus on one issue change per commit so we can understand what you changed commit by commit you can also label your pr as wip and draft growing as you work on it and we check regularly in and have a look at your changesyou can even comment on your own code in the files changed tab so you can discuss your changes in that pr with usdont worry working on jabref together should be fun we dont bite 😄 probably the best would be to merge this one and you keep working on your branch but try to focus on one issue change per commit so we can understand what you changed commit by commit you can also label your pr as wip and draft growing as you work on it and we check regularly in and have a look at your changes you can even comment on your own code in the files changed tab so you can discuss your changes in that pr with us dont worry working on jabref together should be fun we dont bite smile antalk what do you think about merging this one first and then having the further refactoring an a second pr antalk what do you think about merging this one first and then having the further refactoring an a second pryes i think this is better as a separate mergedo i need to do something for thati am doing the refactoring in a separate branch ok ive reopened this pr then if you could address the small comments by calixtus and me then we can merge ok ive reopened this pr then if you could address the small comments by calixtus and me then we can merge thanksi believe i did that let me know if i left out something style checks reviewdog often ask me to make the code less readableshall i ignore it or follow its suggestions anyway the style check is important to have consistency across the repository and to prevent merge conflicts of unrelated changes eg whitespaces or line breaks you can import jabrefs code style in intellij and do a kind of the style check is important to have consistency across the repository and to prevent merge conflicts of unrelated changes eg whitespaces or line breaksthis sounds like follow its suggestions anyway ok i will try that well we configured reviewdog to automate the suggestions otherwise we would make what suggestions in particular do you think makes the code less readable well we configured review dog to automate the suggestions otherwise we would make what suggestions in particular do you think makes the code less readable no whitespace in sin x sounds ok but longvariablenamelongmethodname anotherlong something is harder to read than longvariablenamelongmethodname anotherlong something style checker documentation says abstract class for checking the padding of parentheses that is whether a space is required after a left parenthesis and before a right parenthesis or such spaces are forbiddenapparently they support both required and forbidden and implicitly nocheck avoid nested blocks rationale nested blocks are often leftovers from the debugging process they confuse the reader inner blocks are useful in restricting scope of local variables assuring the reader they are not referred to later current style checks disallow this void f x { string bibtexkeys { some localvar used to calculate initial value for bibtexkeys bibtexkeys } more code here does it use localvar } style checker seems to prefer this void f x { string bibtexkeys some localvar used to calculate initial value for bibtexkeys bibtexkeys more code here does it use localvar } line up for example assignments variable declatarions style checker insists on single space assert anotherlength fieldlengthassert anevenlongername fieldlengththisfield fieldthisanother anotherthisanevenlongername anevenlongername or assert anotherlength fieldlengthassert anevenlongername fieldlengththisfield fieldthisanother anotherthisanevenlongername anevenlongername i know when thisanevenlongernamethesecond arrives we either loosethe line up or change unrelated lines leading to potential mergeproblems google is more permissive here thanthe style checker in jabref where should the brace go easy void f x { well we configured review dog to automate the suggestions otherwise we would make what suggestions in particular do you think makes the code less readable no whitespace in sin x sounds ok but longvariablenamelongmethodname anotherlong something is harder to read than longvariablenamelongmethodname anotherlong something style checker documentation says abstract class for checking the padding of parentheses that is whether a space is required after a left parenthesis and before a right parenthesis or such spaces are forbidden apparently they support both required and forbidden and implicitly nocheck avoid nested blocks rationale nested blocks are often leftovers from the debugging process they confuse the reader inner blocks are useful in restricting scope of local variables assuring the reader they are not referred to later current style checks disallow this void f x { string bibtexkeys { some localvar used to calculate initial value for bibtexkeys bibtexkeys } more code here does it use localvar } style checker seems to prefer this void f x { string bibtexkeys some localvar used to calculate initial value for bibtexkeys bibtexkeys more code here does it use localvar } line up for example assignments variable declatarions style checker insists on single space assert anotherlength fieldlength assert anevenlongername fieldlength thisfield field thisanother another thisanevenlongername anevenlongername or assert anotherlength fieldlength assert anevenlongername fieldlength thisfield field thisanother another thisanevenlongername anevenlongername i know when thisanevenlongernamethesecond arrives we either loose the line up or change unrelated lines leading to potential merge problems google is more permissive here than the style checker in jabref where should the brace go easy void f x { body here } with a longer head brace on next line could improve visual separation of head and body void f x y z throws xexception yexception zexception { body here } void f x y z throws xexception yexception zexception { body here } im sorry but i disagree with all of your suggestions and prefer the current jabref code style jabref developers it is better to keep params short so you could also extract the long param to a var totally agree with the given rationale why inner braces should not be used your case to restrict use of vars should be a rare exception and youre better of to extract that into a function then might look nice but leads to a lot of refactorings when you add a new assignment we wanted to kep the number of unrelated line changes in diffs low to make it easier to review prs of course only a preference but we stick with the standard java code style here to add the brace in the same line might be too restrictive in oyur example but also here we tried to keep the number of rules low and simple without exceptions im sorry but i disagree with all of your suggestions and prefer the current jabref code style jabref developersit is ok i do not expect or suggest to change jabref code style just shared my preferences i accept the rules even if i do not always think they are optimal i am not a maintainer here or elsewhere thus probably underestimate the probability and burden of merging conflicts i am aware of this so i do not intend to shape your code style to my preferences you can import jabrefs code style in intellij and thank you for this suggestion installing idea helped a lot to find a styleaccepted by the checker thanks again for your contribution i tested your feature with both an author year and the numerical style and it works checks are good two approvals siedlerchr confirmed its working thanks for your great contribution
7471,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,validation before typing in new entry dialog do not show an error message if there is no error for me this doesnt make any change because you still have the init of the visualizer in line at the bottom of initialize siedlerchr thanks for your contribution
7471,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,validation before typing in new entry dialog do not show an error message if there is no error for me this doesnt make any change because you still have the init of the visualizer in line at the bottom of initialize siedlerchr thanks for your contribution
7484,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,improve user friendliness of automatically linked files link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there we have implemented a new textfield for files that are automatically detected by jabref and listed as files in the general tab of the entry editor we also changed the icon for automatically linked files from a briefcase_check to link_plus since we found it more intuitive this fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at calixtus different entries are handled separatelyof course its just about the look and feel if several different list entries are shown thanks for testing out i personally like the variant icon on the very left do we use opacity and what percentage would you like currently we use for automatically found files and for files that have been added its just fine as it is if you use opacity please also check out if it shows up right in the dark theme it works for dark mode ill push the latest changes screenshot from i realized that opacity was set way too low and that the correct images should be screenshot from from is how it looked in the first set of images with opacity we will write some tests for this as well if you like one more more idea on this the königsweg would be to assign a css pseudostate so the opacity would be addressable in the stylesheet and be customizable see for example importentriesdialog initialize lines and this way you could subscribe in the view easybind changes of isautomaticallyfoundproperty to the pseudo class and remove the opacityproperty which is some kind of a rule breaker of the mvvm design pattern kings trail has a different meaning in sweden highly recommended hike 😃 otherwise i agree wouldnt say so both the kungsleden and using psuedo classes for opacity are distinguished by special beauty 🙈 😆 we did not manage to figure out how to use easybind but the program now makes use of css to change the opacity when the text is generated and when the button is pressed calixtus tobiasdiez thank you for your time and engagement we appreciate all the help and advice you have given us i have just tested it nicethank you
7494,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,simplify biblatex entry type form related pr this is a follow up pr that simplifies the select entry type form in biblatex modescreenshots entryformnonexpand change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at dont forget the changelogsince this is a follow up i guess the line included in the changelog is enough we simplified the select entry type form by splitting it into two parts recommended and others based on internal usage data thanks for the quick follow up
7507,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,columns shrink in width when enlarging the jabref window link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there in method resize in order to make sure that we are staying under the total table width the program used to reduce the newsize by two for every column cause the method will be call for many times that will occur the problem which shown in the video in issue i do a little bit modify for this implement of controlling width which is reduce the width only if the current width exceed the total width and only reduce for the surplus partfixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repositorybefore user imagesentcom d f eb c d a mp after user imagesgithubusercontentcom e e f eb e c a f mp tobiasdiez thanks for your acknowledgment tobiasdiez no it does not make it obsolete even though i am for for this quick fix
7518,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,change export to save link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fix for change export to savefixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at pr i have seenlooking at your changes i think the section title export sort order needs to be modified too and maybe twice once for the preferences window and once for the library window okay i changed it too you probably need to adjust the localization in the l n properties file only delete the unused part of l n is enough am i right please check your github configuration the checks all stall and without checks its way harder for us to test changes made to the codebase please keep the distinction of export and save please change to neutral wording to enable use of a common fx control also yinpeiqi it would be really nice if you could implement the changes as outlined in the screenshots is this change ok okay i remove it there is still a unused import breaking a check style rule well this time i remove it you are welcome thanks again for your contribution
7542,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,add simple unit tests i have added some simple unit tests that will increase code coverage branch coverage they contribute to issue change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository hey davfon great to see someone takes a look at our test suiteat first glance the tests themselves look good but i think you could also convert these tests to parameterized tests there are some examples in our test suite if you like its pretty easy you could also use the builder pattern for the creation of bibentries for testing new bibentry withfield hi there calixtus thanks for the quick feedback i willl look into it and will try to convert them to parameterized tests wherever possible
7543,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,add simple unit tests i have added some simple unit tests that will increase code coverage branch coveragethey contribute to issue change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at i think your course is over elliemayvelasquez thus no more activity herethanks a lot for all the feedback koppor i will resolve all of these issues within this month hopefully just havent gotten around to it yet due to lots of parallel coursework atm nasdas dev may i ask which month you meant 😇
7544,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,add simple unit tests i have added some simple unit tests that will increase code coverage branch coveragethey contribute to issue change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository hi kopporthanks for reviewingive addressed your comments in commit and b d d
7545,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,add simple unit tests i have added some simple unit tests that will increase code coverage branch coveragethey contribute to issue change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7548,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,missing trigger for linked file operations change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i was also looking at this and got confused why there is a binding to the executable state in the first place the context menu is created when the user right clicks the file and then the state doesnt change until the user chooses a an option from the menu moreover the linked file view model should be recreated as soon as the content of the file field changes so no binding needed since the linkedfile is constant for all practical purposes what i am missing i have no idea but it works 😅 but seriously the contextaction command was introduced in the first place to prepare this for a later to be added undo functionality i tried it also with bindingshelperconstantof and directly with setexecutable but this did not show a consistent behaviour my guess is that something is still cachedin this state i think it works but some more investigation surely wouldnt hurt yeah im also afraid that it is actually a cache error and it still shows the context menu for the previous version of the linked file hopefully that doesnt lead to more problems eg when the action is performed with respect to the previous version instead of the current one
7549,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add ability to insert arxivid pasted arxivid creates new bibentry change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks again for your contribution thats very useful
7551,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,fix for issue opening bibtex file doubleclick from folder with spaces not working change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at if i double click on a bib file while jabref is not running then jabref opens it no longer gives me the error message however it does not open the file which i double clicked if i double click on a bib file while jabref is running it opens a new library called untitled but not the file i double clicked if i open jabref first and then open a file using file → open library it works finei tested these three ways to open a bib file got no errordouble click while jabref not running click while jabref running video aboveopen library
7552,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,ui fix for group icon link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes replaced the default group play icon by small circle change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at can you check if the color thing fixes as welli checked it and also updated the screenshots in fixes all issues mentioned in cool for me record looks appropriate thats awesome i agree record looks the best thanks again
7552,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,ui fix for group icon link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes replaced the default group play icon by small circle change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at can you check if the color thing fixes as welli checked it and also updated the screenshots in fixes all issues mentioned in cool for me record looks appropriate thats awesome i agree record looks the best thanks again
7558,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,allow identical group names link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there allow creation of groups with names that already exist somewhere in the group hierarchythis in the essence fixes by making repeated group names first class citizens in jabref allowing to create them in the gui with a warning of course it seems suitable for many users as judged by group interface discussions and does not bring any undesired consequences i played for a while with it everything works as expected assuming you are fine with the fact that two groups with the same names contain always the same entries for me this seems ok i offer this pr since the fix was very simple seh sunday evening hack and brings a lot of useful functionality imho the alternative name suggestions are possible but will need considerably more effort screenshot at change in changelogmd described in a way that is understandable for the average user if applicable – not yet but will do later sg if applicable – seems not all tests pass sg for ui changes if not created an issue at what should happen if the user renames one of the groups if the other group is not renamed as well then it contains no itemsa decent and easy strategy would be to detect this case and leave the old group name as well as the new group name in all entries of the original group then both the new renamed group and the old group will contain the same entries and from the point of renaming they start their independent life so to say amending the rename code should be easy i can do thata more elaborate solution would be to ask if a user wants to reassign the entries to the new group to the old group s or to all of them similar to the question that is asked when changing group hierarchical content but this is more work so the first try would be to leave entries in both old and new group as by default i think its already possible to have to groups with the same entries group a is an assign entries manually group and group b is a keyword based group for the field groups and value the name of group a the only constraint is currently that group a and group b have to have different names this is exactly what i am trying to avoid i mean i try to remove this constraint and allow users to create groups with identical names if they wish so but something as group a dup as a workaround doesnt seem to bad does this work is it already sufficientwell for my purposes of using jabref no it is not sufficientthe primary need is to allow identical group names in different parts of the hierarchy without this i just can not use the groups of example i can not migrate automatically my bibliographies from zotero where i do have identical group names in different parts of the tree and migrating our old jabref x group assignment is also not possiblethe fact that two groups with the same name always get the same entries is for me an u ticipated feature which can be put to good use once you understand it actually think about groups not as tree leaves but as _sets_ in a mathematical sense a set group is defined by its members and the same set can be a member of any other sets eg branches of a tree if i need to define a special group of a different kind then ill probably find it too complicated to maintain and will not do it think what happens when i rename your primary group group a all my symlink keyword based groups group b and friends will become invalid unless jabref fixes them automatically and how does it know when to fix keyword groups and when not most often when i change a keyword in an entry this means that it must appear in a different keyword group not that the original keyword group is retargetted to a new keyword what should happen if the user renames one of the groups if the other group is not renamed as well then it contains no itemsalso removing a group should leave entries assigned to the group if other instances of the same group exist i can take care of this as well im a bit undecided on the one hand i agree that allowing duplicate names would be natural and useful in some cases on the other hand it feels like opening a small box of pandora since there are so many things you have to think about renaming groups deleting moving in the tree manually editing of the groups tree in the bib file also it makes it harder to migrate to other solutions say id based or full path of group since the name is no longer unique another point is that we were thinking about adding a nice user interface for the groups and for this a group name group in tree map would be needed in summary allowing duplicate names definitely increases the burden for future mainte ce im tending to keep the error advanced users such as yourself can then still add groups with the same name by editing the groups tree manually in the bib file jabref developers what do you think im a bit undecided on the one hand i agree that allowing duplicate names would be natural and useful in some casesvery much so on the other hand it feels like opening a small box of pandora since there are so many things you have to think about renaming groups deleting moving in the tree manually editing of the groups tree in the bib file it seems to be not that bad actually less dangerous than having full paths in group namesthe mentioned actions seem to make a closed complete set of functions crud renaming a group is pretty much as it is now extension will be if another group with the same name exists leave the old group name in all entries and add the new group name if the group was unique remove old group name from entries add new group name to these entries very natural no information is lost the action is actually reversible the user can later rename the new group again move it in the tree or weed out some entries without affecting the original group deleting the group is very similar to renaming if another group with the same name exists no entries need to be changed otherwise group name is removed from all entriesim now experimenting with this functionality in my branch and will add modifications for and to the pr moving in the tree trivial as it is now just change the position in the list and the indentation number can be done both in gui and by editing sed editing the bibtex file manually editing of the groups tree trivial – just delete one row and insert it in another position if yo want it elsewhere this is how i produced the test cases with identical groups before the patch of this pr was implemented tree editing is independent from entry editing unless you want to rename the group manually and retain all entries in it editing groups in entries exactly as it is now just add a group name you want and you have added the entry to that named group it will appear in all places of the tree where this group is mentioned the entry editing is independent from the treeno dangers seem to be lurking so far also it makes it harder to migrate to other solutions say id based or full path of group since the name is no longer unique another point is that we were thinking about adding a nice user interface for the groups and for this a group name group in tree map would be needed in summary allowing duplicate names definitely increases the burden for future mainte cethe most painful migration was from groups x to groups where a lot of people including me lost their group assignment data well my day was saved by a subversion repo where all my databases reside and a bunch of unix scripts that restored the group assignments others might have been less luckyi see the group assignment by people to be a very valuable information – a lot of manual work went into assigning and classifying entries and people rely on them when finding information they need quicklyso an information preserving migration strategy will be needed anywaya possible migration would be when migrating from the current pr to a tree where groups in different tree branches are different if the new format supports the linked groups ie groups that all get the same entries when an entry is added to one of them convert synonymous groups to such entries if the new format does not support such functionality just retain groups with identical names and identical sets of entries and warn the user that the behaviour of jabref has changed when migrating from the old group format x to the new one as in this pr if all groups have unique names nothing needs to be changed if some groups in different places of the tree have the same name make only those groups unique by either appending a group parent names as in treatment medicine asthma and treatment biocompatibility surfaces or by appending just a serial number and warn the user about renaming the user can then adjust group names if they wish but must importantly their precious division of entries into groups is not lost im tending to keep the error advanced users such as yourself can then still add groups with the same name by editing the groups tree manually in the bib filewell even if i go for this i and my colleagues need some reassurance that jabref will keep the present functionality in the future so that our work of adding these groups and assigning entries to them does not go down the drain and keeping such functionality in sight is probably as much work for the jabref team as keeping it with the suggested changes added also if i need to use external scripts editors for managing my bibtex file well its doable but i lose some integration and the nice jabref features like auto fetch of bibliographies and oa papers would be a pity also it does not seem like a good advertisement for a gui program to say well you of course can have this feature but you need to save data open a text editor edit groups by hand watch out the syntax restart reread the data into jabref jabref developers what do you thinkkeen to hear the answers update in commits leading to f b when a group with duplicated name is deleted its name is removed from the entries only when there is no other group with the same name left works for delete group and subgroups command hi folksim trying to run jabref under debugger for this i installed ideac intellij and imported the jabref gradle project which ide recognised but when i try to run or debug the project i get an error from the ide caused by javalangruntimeexception test specified more than once to patch modulethats not always reproducible but essentially one can not work with the ide reliably goolged around and did not find any hints maybe someone has a quick idea what cold be wrongosname linuxmint java java ideaic tiasaulius i dont use intellij but did you configure it as stated here i dont use intellij but did you configure it as stated here for the link i had it running some time ago but many things probably changed since then ill have a lookwhich ide are you using i tried eclipse but it generates a lot of exceptions under debugger but did you configure it as stated here you very much the hint helped a lot now im running ok sorry ive overlooked this doc as discussed in i have just noticed that when i rename one of the dupliactes its entries are reassigned to the new group and vanish from all old group duplicates this is not what i and probably most other users would expect the fix should be easy – if the group s with the original name exist somewhere in the tree the old group name should be retained in the entries the entries will thus belong to two groups if one of the duplicates is renamed only of the group name vanishes from the tree it should be removed from the entries as well ill amend the pr to fix thisthe latest commit fixes this issue now entries are not removed from the remaining synonymous groups if one of them is renamed in that case entries become assigned to both groups the new and the old seems like a very natural behaviour to mehow do you find it the more i think about this the more im convinced that it was a bad idea on my side to use the group name as the identifier i propose we drop the requirement that the groups field should be human readable and instead use a unique identifier for each group the groups field in the entry editor would then use a chips view to give a nice ui to manage group memberships jabref developers input very much appreciated as a side note the proposed pr seems to also fix the the more i think about this the more im convinced that it was a bad idea on my side to use the group name as the identifier i propose we drop the requirement that the groups field should be human readable and instead use a unique identifier for each group the groups field in the entry editor would then use a chips view to give a nice ui to manage group membershipsif i may chime in sure if you want to have unique keys identifying your internal objects it is a bad idea to rely on external namesthat said i would not say that your idea to use user provided names as identifiers is so bad it depends on what you want to do if you take users provided group names at their face value as names that users want to use to identify their groups then you current implementation logically follows and also a behaviour suggested in pr logically followsafter a bit of testing and playing around i think i now see the full rationale of placing group names into entries and the emerging behaviour is quite useful – provided that you frankly admit that users can create groups with identical names and gui checks will not stop them note that when we have intermediate groups such as language in computer language sql and data language sql or human language esperanto the language group if it is a union group and has no entries of its own behaves exactly as it used to behave in the old systemmoreover if you have some entries in the language group it makes perfect sense to make a subgroup language others where others will contain all unassigned languages and move all these entries there then the language union group will continue to display all entries as it used before and all other language groups elsewhere in the tree would continue to show the entries in their subgroups a user is free to include groups others into those language groups or not to my taste this is perfectly usable quite transparent and rather useful we discussed this at our dev call we are not sure about the possibly overlooked consequences since we are software engineers we like empirical software engineering ^^ we do the shortcut and started a survey on twitter hopefully many persons will answer it we discussed this at our dev call we are not sure about the possibly overlooked consequences since we are software engineers we like empirical software engineering ^^ we do the shortcut and started a survey on twitter hopefully many persons will answer it idea general user feedback is very important and users should know what to expect we are not sure about the possibly overlooked consequences since we are software engineers we like empirical software engineering ^^why not running the branch in a sandbox and see how it behaves bugs and usability issues will surface empirically after some time of playing around tobiasdiez koppor any more thoughts on group implementation s should i go on to implemented dashboard like info as suggested by aegit in note to myself for the devcall tomorrow i think i agree with note to myself for the devcall tomorrow i think i agree with comment for the reply waiting for the devcall outcome devcall we accept the risk of some unforseen side effects with the benefit having identical groups working devcall we accept the risk of some unforseen side effects with the benefit having identical groups workingthank you very much for accepting this change you save my year – i start to migrate my groups immediately and will offer the javref dev version to my co workes as soon as the stability issues are resolvedin case there are unforeseen problems for sure i feel obliged to invest my effort to help resolving them as much as i can
7569,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,custom doi base address fix as mentioned in the option to choose custom doi base address did not propagate to librarytab and this pr aims to solve exactly that in the process i refactored linkedidentifiercolumn so that it uses openurlaction as well change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7571,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,refactor simple unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there i have refactored some simple unit tests to make them easier to understand more readable more maintainable and less likely for human error some identified test smells like general fixture and test code duplication have been fixed it addresses although it is mainly a refactoring change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at some small comments then it should be good to gothanks for the comments and suggested changes i addressed them in the last commits
7573,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix column sort order gets overwritten the problem was that maintablegetsortorder is only filled when there is a change however updatecolumnpreferences was also called when just the width changed and then getsortorder was empty and was always overwritten link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository may i eventually push on your branch id prefer immutable preferences objects fix itself looks right but there are some code style things i would like to change calixtus sure but i think the root cause was the immutable columnpreferences the sort order was always overwritten even if it did not change note that it is also not possible to check for empty because when you clear the sort order the list is empty and you could not reset the sort order i think its fine i just made the columnpreferences immutable again but kept the distinction in the methods between updates of the sortorder and the columns so nothing should be overwritten it just pulls the old opposite unchanged value directly from the preferences the logic should be exactly the same but without altering the existing columnpreferences but creating new ones with the kept value from the preferencescan you please check it to be sure it works for youi just believe this looks a bit cleaner ah i see will test tomorrow works but i found another bug in the saveorderconfigsortcriterion uses booleanparseboolean and it was passed the enum values ascending or descending which obviously will always return false when you have that input for booleanparse devcall merge as hotfix later nice preferences string should be enum
7579,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,add unit tests for orgjabrefgui classes test coverage for orgjabrefgui package is rather low this pull request adds unit tests to classes under the gui package increasing their respective line coverage from to they contribute to issue tests added appendpersonnamesstrategytest personnamestringconvertertest replacestringviewmodeltest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository two approvals mergablethanks for the tests
7581,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,refactoring and addition of unit tests this pull request includes new unit tests for three classes which increases their line statement coverage they contribute to issue further i have also refactored existing unit tests to make them more readable understandable and maintanable in this sense i focused more on test smells described in the paper _refactoring test code van deursen et al _ and also on the code howtos test cases in the development documentation change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository hi koppor thanks for reviewingi finally adjusted the code accoring to your comments and suggestions
7600,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix numberformatexception in bracketedpattern link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes the error occurs because the size of the integer is too large to be contained in an int the suggested changes use biginteger and stream instead of int and for loopsthis is mostly an excuse to verify my setup after the master main branch name change change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7602,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,adds progress count to possible duplicates dialog when processing duplicate entriespossible duplicates dialog gave no indication as to progressto address this lack of feedbacka progress counter was added to the title barthe title property now contains two updatable properties a total count of all duplicates a count of how many duplicates have already been addressedthey are updated with listeners and bindings toprovide real time feedback note because of the use of different threads the total count could not be directly bound so an extra variable and listener are required also line was removed and duplicatecountgetandincrement was changed from getandincrement to incrementandget so returned value could be used img width altscreen shot at pm src change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository the background tasks have already a progessvalue and progresstext property you can bind to have a look at the umportfilesinbackground here the binding in unlinkedfilesdialog siedlerchr i think this is a different kind of progress here the user is clicking and thus changing the progress while for your solution something is happening in the background siedlerchr the progress count is indeed a user paced progress which changes as the user clicks options for resolving duplicates and in a few cases increments automatically without presenting a user a dialog window but still only as a response to a previous dialog click this value i didnt think would be appropriate to use the background taskthe other value the total is only a count of total pairs found while it may be possible to take advantage of the background progress monitoring its really not a true progress count that is needed for this value i would have liked to simply request the value from the atomicinteger duplicatecount like the notify at the end but i wasnt able to use this directly because the dialog pops up before many of the pairs have been made often giving an artificially low count of this ends up being a progress count of a user working through the end result of the of the find possible pairs task ah thanks for the explanation siedlerchr would you like to see revisions tp thanks for your contribution and sorry for the delay
7636,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,add more unit tests to three gui classes this pull request replaces closed not merged and it contributes to issue which is to add more unit tests to the project in this case specifically in the gui package using test doublestests added newentryactiontestcopymoreactiontestexporttoclipboardactiontestin order to add the exporttoclipboardactiontest and to migrate to using preferencesservice code refactoring has been done as suggested by siedlerchr the purpose of the refactoring is to add preferencesservice as a parameter in the constructors of exporttoclipboardaction to replace the globals variable refactored classes are as follows exporttoclipboardactionjava jabrefframejava rightclickmenujava jabrefpreferencesjava preferencesservicejava change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository calixtus can you take a look at the globalsprefs extraction ningxie would be nice if you could address the hints related to the test you can use mockitos any method without specifying the exact localization content etc verify dialogservice times notify any
7636,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,add more unit tests to three gui classes this pull request replaces closed not merged and it contributes to issue which is to add more unit tests to the project in this case specifically in the gui package using test doublestests added newentryactiontestcopymoreactiontestexporttoclipboardactiontestin order to add the exporttoclipboardactiontest and to migrate to using preferencesservice code refactoring has been done as suggested by siedlerchr the purpose of the refactoring is to add preferencesservice as a parameter in the constructors of exporttoclipboardaction to replace the globals variable refactored classes are as follows exporttoclipboardactionjava jabrefframejava rightclickmenujava jabrefpreferencesjava preferencesservicejava change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository calixtus can you take a look at the globalsprefs extraction ningxie would be nice if you could address the hints related to the test you can use mockitos any method without specifying the exact localization content etc verify dialogservice times notify any
7638,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,add more unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pull request contributes to issue which is to add more unit tests to the project the tests make use of mocks stubbing to simulate the behavior of some classestests added importerviewmodeltestbibstringdifftestpreambledifftest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at it would be really nice if you would finish this pr asap davfonthanks for the feedback and sorry for the late response i will try to do the changes by tomorrow evening should be all good now had to override the equals method and add hashcode for checkstyle thanks again for the good inputs thanks for the follow up fixes and as you can see you discovered an error in the equals implementation for the bibtexstrings
7639,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,fix for issue journal abbreviations in utf not recognized change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at i might be not up to date but i always thought utf characters are only allowed in biblatex and that bibtex only handles asci characters did this changeyeah some journals and papers use non ascii characters as their names etc just as the bib in bibtex i added before and maybe it is difficult to do with it in jabref the details are shown in the issue so i think maybe it is better to trade them equally i dont really have experience with say chinese names as authors or journals with bibtex but the only evidence i could find was always suggesting biblatex since bibtex doesnt support utf see eg does it make more sense to keep the asci check for bibtex and add the new utf check for biblatex i agree with tobiasdiez we need the utf check for biblatex and the ascii checker for bibtex then i dont really have experience with say chinese names as authors or journals with bibtex but the only evidence i could find was always suggesting biblatex since bibtex doesnt support utf see eg so does it make more sense to keep the asci check for bibtex and add the new utf check for biblatex i agree with tobiasdiez we need the utf check for biblatex and the ascii checker for bibtex thengood idea！i will refactor my code to meet this need after searching more information about bibtex and biblatex i agree with you and the check of utf for biblatex maybe its not a bug but an enhancement laugh i will focus on it hi reviewers i have added the utf check for biblatex and recovery the ascii check for bibtex is there anything i should do to give a better submission so far looks good you only need to add the new localization string the l files see here for more details hi reviewers！i added this statement to all language packs but i rely on google translate for most of my translations so please double check it for errors you only need to add it to the english file all otherttranslations are managed by crowdin you only need to add it to the english file all otherttranslations are managed by crowdinemmm so i need to subtract all the files except the english file right i have changed that hope everything goes well i added the javadoc for utfchecker and fix a little problem in my junit test hi reviewers i have added junit test for utf checker and for integritycheck im not quite sure if these test cases are redundant and standardized so please give me some advice if problems exist thanks a lot for your contribution
7652,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,fix for issue unable to download arxiv pdfs if title contains curly brackets fix describe the changes you have made here link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository reproduce the issue open library select the bib file as below article{zhang_machine_ v author {zhang ruohan and guo sihang and liu bo and zhu yifeng and hayhoe mary and ballard dana and stone peter} journal {arxiv v cs } title {machine versus {human} {attention} in {deep} {reinforcement} {learning} {tasks}} year { } month feb url { double click the entry and then click the get fulltext on the right of general file it will give a message of no full text document found and if we erase the curly brackets in the title with other keep the same it will download the pdf file successfully the new title is given below machine versus human attention in deep reinforcement learning tasks after reading the source code i thought that it is the case that doi is not present and we need to use the author and title to query the url of the pdf file however the title with curly brackets may fail to search a arxiv entry or the search is success but the title fails to match the arxiv title process to fix the issue the arxiv related work is in the arxivjava then i found the url of pdf is defined in the function findfulltext and it further invoke function searchforentries i defined a method called ignorecurlybracket in stringutiljava to erase the curly brackets in the title if the title is not blank in the function searchforentries i invoke ignorecurlybracket to fix the title before it serve as a parameter to search arxiv entry and before the comparison with arxiv title screenshots of the result before image afterdownload successfully image https user imagesentcom e a e eb b cdc b png image https user imagesgithubusercontentcom f d a e eb d ea png theres also an architecture violation as stringutil is increased in size so is it not allowed to add anything in stringutil shall i simply move the function from stringutil to arxiv as for the checkstyle i just fix a part of it the only warning message remains is { is not preceded with whitespace“ but it may cause some problems if i add a white space before { as my sentence is replace { pikayue the checkstyle is referring to the method definition look at the changes tab reviewdog makrs the line im sorry now the checkstyle should be correct the unit tests failing are relevant to the help something got wrong there
7655,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,fix partly opacity of disabled icon buttons opacity of disabled icon buttons link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there add the disabled icon style in basecss no tabs opened i open a tab and do not select any entry i select an entry in the opened tab i go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7656,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,toggle of special fields does not work for sorted entries make a copy of selected entries and change field in the copy so that the sort strategy will not influence the result link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there the original version used for each on the selected entry list but concurrentmodificationexception happened then i tried to replace it with normal for loop but the toggle problem still exist though the exception did not occur any more by checking the list in each loop i found that the order of the items in this list was changed during the for loop not exactly knowing how the sorting strategy is performed i make a copy of the list and do field change on the copied list finally the toggle action performs correctly change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7657,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,fix sslhandshake exception by using bypass link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repositoryfile download path valid authentication path cannot be found from the site where the downloaded file is located prompting the user with the option of whether to continue the download warning user chooses to cancel the download canceled_tip user chooses to download anyway download https user imagesentcom f b a be eb dc e c dpng you can ignore the fetcher and the mac test but please have a look at the checkstyle test either click on details at the failing or you can go to the files changes tab to see the reviewdog comments the user chooses to cancel the download use notify instead of informationdialog to prompt the user canceled_tip just a minor improvement for the variable naming otherwise lgtm siedlerchr tobiasdiez thank you so much for your suggestions and help we have to thiank you for your contribution ryyyc
7663,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,fixes jabref unable to download some arxiv links if the eprint field is missing brief summary run eprintcleanup on a copy of the entry the arxiv fetcher is fetching before getting arxiv id from the eprint field add two test method one finds full text with title containing colon and journal while another finds full text with title containing colon and url problemwhen finding full text this bibtex reference works article{booth_bayes trex_ author {serena booth and yilun zhou and ankit shah and julie shah} journal {arxiv v cs } title {bayes trex a bayesian sampling approach to model transparency by example} year { } month dec archiveprefix {arxiv} eprint { } url { when eprint field is missing no full text will be found article{booth_bayes trex_ author {serena booth and yilun zhou and ankit shah and julie shah} journal {arxiv v cs } title {bayes trex a bayesian sampling approach to model transparency by example} year { } month dec archiveprefix {arxiv} url { solutionsince the title contains colon and arxiv uses colon to represent key and value the title may be recognized mistakenly so use other fields to get the eprint field to avoid this problem thanks to the advice from tobiasdiez screenshotsafter fix change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at wow that was quick 🚀 code looks good to me thanks for your contributionit is your advice that makes me efficient at the beginning i try to ignore colons in title to solve this problem but it seems not so good
7664,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,fix for issue wrong path to texstudio link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes go through the list below if a task has been completed mark it done by using please dont remove any items just leave them unchecked if they are not applicable change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at bug no matter where the extended applications are the default path of them taken texstudio as example would be set as c \program files x \texstudio\texstudioexe the way to fix i verify the existence of extended applications under related default path if there is no texstudioexe under c \program files x \texstudio\ and c \program files\texstudio\ the function detectprogrampath will return string value namely the default path will remain unset just some minor code changes but otherwise lgtm
7667,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,fix for issue endnote xml import to jabref pdf links are not imported corrected link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at just a minor code improvement but otherwise looks good to me that will benefit a lot of usersi kind of messed up the previous commits so i have incorporated your suggestion in the latest commit b c f ac c e df fbde fd f please check aloofwisdom please have a look at the checkstyle test you can also see the comments from reviewdog when you look at the files changed tab aloofwisdom please have a look at the checkstyle test you can also see the comments from reviewdog when you look at the files changed tabi could pass the checkstyle locally now please check again thanks a lot for your contribution
7671,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,migration of timestamp this pr moves the migration of the timestamp field from a postopenmigration to mutually exclusive cleanup actionsas this cleanup action migrates the timestamp field to the creationdate or modificationdate fields the modificationdate of a bibentry is not updated when this cleanup is conductedif the original timestamp field could not be parsed the cleanup does not modify the bibentry in any way to not lose data modified cleanup dialog change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at on a first look this looks good to me a few observations though the ui is a bit too complicated for my taste and i think the do not convert timestamp option is not really required instead i would propose to only have to checkboxes convert to creation date modification date and if the user selects one of them the other one is deselected that would be btw also a nice improvement for the biblatex bibtex conversion which are also mutable exclusive i addressed the first point by adding checkboxes for the corresponding cleanup actions now running cleanup ops doesnt change the modification date anymore right maybe use a more fine grained notification channel and only do this for the timestamp cleanupthis is only true for the timestamp migrations and is implemented exactly that way ^^ can you maybe explore a bit on why you choose a cleanup op over a migration thanksas an adr or just as a comment hereit boils down to the discussion lead here on a first look this looks good to me a few observations though the ui is a bit too complicated for my taste and i think the do not convert timestamp option is not really required instead i would propose to only have to checkboxes convert to creation date modification date and if the user selects one of them the other one is deselected that would be btw also a nice improvement for the biblatex bibtex conversion which are also mutable exclusive i addressed the first point by adding checkboxes for the corresponding cleanup actions thanks that looks good to me now running cleanup ops doesnt change the modification date anymore right maybe use a more fine grained notification channel and only do this for the timestamp cleanup this is only true for the timestamp migrations and is implemented exactly that way ^^ohh you are right sorry i misread the code can you maybe explore a bit on why you choose a cleanup op over a migration thanks as an adr or just as a comment here it boils down to the discussion lead here as a comment is more than enough for me maybe directly in the pr description though as far as i see it the advantage of cleanup ops is that they are only run once and thus dont make the db load process slower on the other hand the migration had the advantage that users dont need to run something manually the reason for making it a cleanup is that some users use the timestamp field in other waysadditionally this makes the database load process fastermigrating the timestamp field this way leads to negative ux see ok thanksi dont have the time for a through out review but scrolling over the code i couldnt find anything so from my side this is good to go
7672,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix threading cleanup in performsearch fixes link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7672,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix threading cleanup in performsearch fixes link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7674,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fixes jabref the rfc fetcher is not compatible with the draftfix for issue link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repositorywe can first determine whether the rfc id contains the prefix draft if it is we will not add the prefix rfcnow rfc fetcher can work welltry process drafts id draft ietf sidrops aspa verification ready fixing the bug befor fix fixing the bug after fixed https user imagesentcom c d a eb f f fedpng please have a look at the checkstyle haha i made this mistake again it has been now and i wont make this mistake next time
7675,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix cleanup run on wrong entry when fetching from doi cleanup did use the wrong entry link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7685,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,add and extend unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pull request contributes to issue which is to add more unit tests to the projecttests added validcitationkeycheckertesttests extended added boundary cases addbracesformattertestnormalizepagesformattertest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7687,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,refactoring existing unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pull request contributes to issue which is to add more unit tests or improve existing onestests refactored minifynamelistformatterteststringlengthcomparatortestcapitalizeformattertestauthorstestremovebracketsaddcommatestsdoichecktestfilelinktestfirstpagetestremovetildetest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at nice to see work on using paramterized tests please do that everywhere general comment it would be nice to have one pull request per test class otherwise reviewing gets hard because there are soooo many lines changed i also updated i hope not to annoy people when always wringint things not to do hi koppori understand that it might become tedious to review all the changes but would it also help if for example there is one commit for every class that is changed in this case youd also have a better overview over the changed code in a class im asking this question since ive already started working on a new branch similar to this one but with fewer classes involved nevertheless i will start applying this comment for each new upcoming branch but would it also help if for example there is one commit for every class that is changed in this case youd also have a better overview over the changed code in a classlooking at our mass of pull requests i decided to have global reviewing strategy workflow for our core developers deciding on a case bases makes it difficult to handle the mass of open pull requestsfurthermore if at class a there is a comment but class b can go as is the changes of class b wont go into main because it is stalled by the unrelated class a im asking this question since ive already started working on a new branch similar to this one but with fewer classes involved you could use the git cherry pick magic maybe also the git checkout master && git checkout b new branch && git checkout your working branch && git reset new branch magic and then commiting line wise with git gui nevertheless i will start applying this comment for each new upcoming branch i will merge and wait for parameterized authorstest in a follow up pr
7693,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,refactoring existing unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pull request contributes to issue which is to add more unit tests or improve existing onesi therefore have refactored three classes converted to parameterized tests and extended one by adding a boundary casetests refactored lastpagetestnospacebetweenabbreviationswrapcontenttest extendedunprotecttermsformatter added empty string boundary case change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7694,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,add and extend unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pull request contributes to issue which is to add more unit tests to the projecttests added citationkeydeviationcheckertest citationkeyduplicationcheckertesttests extended added boundary edge cases removebracesformattertest bracescorrectortest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thank you for these test twice approved and once
7696,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,add simple unit tests link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there this pull request contributes to issue which is to add more unit tests or improve existing onesi added the trivial but important test case that the output should remain unmodified in case the input was already validtests extended cleanupurlformattertest removehyphenatednewlinesformattertest removenewlinesformattertest lowercaseformattertest removebracketstest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository i addressed the requested changes in the last commit should be all good now
7697,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,refactor nobibtexfieldcheckertest to increase mutation coverage this pull request contributes to issue which is to add more unit tests or improve existing ones i used pitest to compute the mutation coverage and found that some conditions were not covered in the unit test and some conditions tested were redundant because they would not be reached following are the changes switched to using parametrized test covers missing conditions standardfielddoi standardfieldurl redundant conditions still remains in source code and tests standardfieldabstract standardfieldcomment they are not included in the fields of neither bibtexentrytypedefinitionsall nor biblatexentrytypedefinitionsall before change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7698,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,added doiduplicationcheckertest to increase coverage this pull request contributes to issue which is to add more unit tests or improve existing ones i used pitest to compute the line and mutation coverage since doiduplicationchecker did not have its unit test its method was being tested in other test classes i added the test to increase both coverages before change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7700,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,refactoring existing unit tests into parametrized tests this pull request contributes to issue which is to add more unit tests or improve existing onestests refactored doistriptestdefaulttest paramlayoutformatter touppercasetestifpluraltesthtmlparagraphstestentrytypeformattertestauthororgscitestauthornatbibtestauthorfirstlastcommastest change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks for your contribution we took the liberty to finish it ourselves
7702,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,fix for issue do not store downloaded file if it is already attached link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fix change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository reproduce this issue choose an entry click search full text document online in lookup if it is the first time you download it it works well but if it is not it will download a duplicate file with the same content the bib file will has two duplicate files as below file { banerjee a a survey on influence maximization in a social network pdf banerjee a a survey on influence maximization in a social network pdf banerjee a a survey on influence maximization in a social networkpdf pdf} in this issue we want to keep the new file with different contents but delete the same one thus after download a new file we need to first judge whether the file name is the duplicate form like xxx compare to the other files in the target directory if yes then compare the content of these files sharing the similar name if the new file has the same content as one of them then delete it and do not add it to the linked file process to fix the issue the related code is in linkedfileviewmodeljava inside the function download because we suppose that the file has already been download the code should be inside downloadtaskonsuccess we define a boolean function isduplicatedfile in filenameuniquenessjava to judge whether the file is a duplicated one in content if yes the newly downloaded file will be deleted and it will not be added to the linked file in filenameuniquenessjava we also define function named eraseduplicatemarks to change the file name like xxx to xxx and return the same string if it is not in the form of duplicate file name in the boolean function isduplicatedfile it will first judge whether there are other files have similar name with its if do not have return false indicating not duplicate if have compare use comgooglecommoniofilesequal the content of the newly downloaded file with all the files has similar file name if the content is different from all of them return false if one of them has the same content with the new files content delete the new file display warning message and return true to indicate duplication happens screenshot of the result use the following bib file for test article{banerjee a titlea survey on influence maximization in a social network authorsuman {banerjee} and mamata {jenamani} and dilip kumar {pratihar} journalknowledge and information systems volume number pages notessourced from microsoft academic year } before after search full text document online for three times test _files { banerjee a a survey on influence maximization in a social network pdf banerjee a a survey on influence maximization in a social network pdf banerjee a a survey on influence maximization in a social networkpdf pdf} after test after search full text document online for three times test _files { banerjee a a survey on influence maximization in a social networkpdf pdf} test after test in order to test whether it will compare the content of the file we replace the downloaded pdf file banerjee a a survey on influence maximization in a social networkpdf with a new pdf file but keep a same name in the same folder and then search full text document online the new file replace_file the outcome replace_message { banerjee a a survey on influence maximization in a social network pdf banerjee a a survey on influence maximization in a social networkpdf pdf} thanks for your feedback i am a little busy today but i will improve my code as soon as possible i modify my code and manually test it in running jabref again it works but i delete the test cases because the method eraseduplicatemarks in filenameuniquenessjava is now private i think my latest commit has solved all the problems in the recommendations i am not very familiar with the pull request operate in github and i just clicked all the resolve conversation buttons is that matter besides is there any other recommendations for my current pr any feedback will be appreiated siedlerchr thanks for the reply i will fix my codes as soon as possible i add an overload function getbasename in fileutil imitating the code style of the function getfileextension in fileutil to pass the path variable as parameter please have a look at the failing unit test you need to add the missing language keys i just add the missing language keys into jabref_enproperties is there anything else to modify ok i it koppor any other comments to improve my pr any feedback is appreciated thank you for keep working on this puts a smile on my face and a nice present for me at my free time hobby project jabref
7705,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,added preset for new entry keybindings and reintroduced defaults added preset for new entry keybindings on public demand fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at seem like someone was too fast with merging unit tests i think tobi fixed them a few minutes agomerged main hope checkstyle will be fine 😇 before merging we should get to a conclusion about which shortcuts to keepdoes ctrl in uppercase work now or should i change them now also i dont really understand why on macos we need two different shortcuts one for opening the entry editor and one for closing it this needs to be fixed before merging we should get to a conclusion about which shortcuts to keep does ctrl in uppercase work now or should i change them nowshould be lowercase regarding the ctrl e which maps to cmd e on mac i think i found the issue and i remember its a bug in javafx the event is fired twice for some reason thats why after closing it immediately goes into the openentryeditor again and reopens the entry editoredit yep already was an issue with copy paste happening twice
7705,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,added preset for new entry keybindings and reintroduced defaults added preset for new entry keybindings on public demand fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at seem like someone was too fast with merging unit tests i think tobi fixed them a few minutes agomerged main hope checkstyle will be fine 😇 before merging we should get to a conclusion about which shortcuts to keepdoes ctrl in uppercase work now or should i change them now also i dont really understand why on macos we need two different shortcuts one for opening the entry editor and one for closing it this needs to be fixed before merging we should get to a conclusion about which shortcuts to keep does ctrl in uppercase work now or should i change them nowshould be lowercase regarding the ctrl e which maps to cmd e on mac i think i found the issue and i remember its a bug in javafx the event is fired twice for some reason thats why after closing it immediately goes into the openentryeditor again and reopens the entry editoredit yep already was an issue with copy paste happening twice
7708,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,select the entry which has smaller dictonary order when merge link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there changed the selected entry when merge two entries if two entrys citation key are empty the above one will be selectedif only one entry has citation key then it will be selectedif two entries both have citation key the one who has smaller dictionary order will be selectedfixes the screenshot shows that the a is selected although it is below b test for change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at i like the idea of having a default order when merging but isnt this a problem when one citation key is empty not null and the other one is not can that happen and is it worth worrying aboutthis should be handled by the entrycomparator too test cases should cover this suxichangzhen please add this test case to entrycomparatortest yes i think the real problem may be how to define a valid citation key for example should not be a valid onesince bib is a text file where users can input nearly arbitrary things we have to be relaxed in as many places as possiblewe have the orgjabreflogicintegritycitationkeychecker which checks for the empty key i am not that up to date with the merging and i might have sown some accidental confusion sorry 😜 based on how jabref generates duplicate keys some cases are easier to deal withif the generated citation key is duplicated citation keys will be a b etc and it is indeed correct that a should be preferred over b just as should be preferred over a this might be a good test case as well but if you are merging and should in my opinion not be sorted above as i said this might very well not be worth worrying about but if you are merging and should in my opinion not be sorted above fair i did not see that casethen this is a call for citationkeycomparator in the package orgjabreflogicbibtexcomparator this comparator works as initially implemented by suxichangzhen and handles this case tooi would re use comparison code of entrycomparator but not call entrycomparator because the empty string handling is different ok nvm ignore me and my apologies for the confusion ill have to read up a bit more about merging it seems that jabref will not produce a citation key like since if the citation key is then key_field does not exist but key_field does allow something like one blank should i consider this case i notice that in the bibentry the method getcitationkey indicates what is a valid ciatation key so i use it in the entrycomparator now the blanked citation key will be replaced when merge two entries thank you for your suggestion i have used orelse
7709,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix for issue open all files of multiple entries change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at same beahviour as now in line with siedlerchr comment above what do you think about adding the functionality to the existing open file action so if a user has only a single entry selected then the linked file of this entry is opened but if multiple files are selected then all linked files are opened i agree when one entry selected if open all files has the same behavior as open file as siedlerchr suggested which means the function of the new added option totally covers the original one then why not merge them as one option just as you proposedso should i delete openallexternalfileaction class and add its function to openexternalfileaction yes please donei will update detailed description later may i ask why these tests are failingall these failures have the exactly same error home runner work jabref jabref src test java org jabref logic integrity editioncheckertestjava error cannot find symbol assertequals optionalempty checkercheckvalue ^ symbol variable checker location class editioncheckertest home runner work jabref jabref src test java org jabref logic integrity editioncheckertestjava error cannot find symbol assertequals optionalempty checkercheckvalue null ^ symbol variable checker location class editioncheckertest home runner work jabref jabref src test java org jabref logic integrity editioncheckertestjava error cannot find symbol var editionchecker new editionchecker bibtex false ^ symbol variable bibtex location class editioncheckertest home runner work jabref jabref src test java org jabref logic integrity editioncheckertestjava error cannot find symbol var editionchecker new editionchecker bibtex false ^ symbol variable bibtex location class editioncheckertest but i didnt change anything in editionchecker same as i noticed that the tests are so is there still anything more i need to change in my code you need to push the commit after merging as well because the tests are still failing doneremoved dialog and resolved a conflict in changelogmd ok i will fix it two changes open all linked files of an entry modify boolean bindingunder discussion how to handle opening a large number of files yep thats a good idea you are about to open more than files continue i would simply create a constant with i think thats appropriate continue canceldoneps online links are includedtest video
7711,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix make fields sorted by lexicographical order link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes we fix that some fields are in random order issue we use treemap which is ordered to replace linkedhashmap and added a comparison function to the treemap to ensure that fields are ordered by lexicographical order change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository normally this would be a suitable way however this is a special case as you can reorder the fields in the custom entry types dialog refs the treeset will now kill any individual order what we only need is a sorting in the dropdown box so you need to add a sorting in the gui viewmodel thanks for guidance i found they both use src main java org jabref gui commonfxcontrols fieldformattercleanupspanelviewmodeljava so i change it in the cleanupspanel
7717,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix make more fields fomatters ids and languages sorted by alphabetical order link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes we fix that more fields fomatters ids and languages sorted by alphabetical order solving them by either adding sort to relative property or using a sortedlist to wrapper the observablelist change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository thanks for the quick follow up lgtm to me now for external contributors a second developer needs to review and approve i merged too early forgot the check for changelogmd in please remember the changelogmd for your next pr 🎉 koppor i wanted to check on this but in the files are dating back to may a problem with the automatic build process happens from time to time most often the mac build fails due to notarization somehow not working at apples side you can then downlod the artifact from the run
7733,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,fix for issue rewrite acm fetcher link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at from issue acm fetcher needs to be rewritten because of acm website changesone solution is to get the doi from the html results of the search page then use the export interface to get the json format data and finally parse themsearch api api did i do rewrited acmportalfetcher added acmportalparser added modified acmportalfetchertest and acmportalparsertestsuccessfully get data from amc fetcher acm portal https user imagesentcom ad b b eb f d da ade eapng acm portal imported https user imagesgithubusercontentcom af e b b eb d b eed a cpng siedlerchr koppor thank you very much for your help and suggestionsthe above problem has been and i also updated some codes thank you for working on it this brings jabref a step forward
7734,1,0,1,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,support fall back fields in citation key generation link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there to support pattern like field fall back field i first change contentbetweenbrackets because it did not support nested brackets and in the applymodifiers before it used substring to get the content inside parentheses now i use expandbrackets to parse it so theoretically it can support many nested brackets something like author title year i also add the test case to test the fall back fieldfixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository sorry did not see the last suggestion i have added test cases fall back to string original two fall back field unbalanced brackets fall back to field and string and fall back to special string i update the javadoc remove the null parameter and add a test case for citation key generator can you explain more about paramterized tests thank you koppor parameterized tests allow you to re use test methods with different data say one method for testing expandbracketswithfallback you can find a few different examples in the jabref source code eg is also more information on what options uses exist in the junit documentation thank you for all your suggestions i have changed the method and used parameterizedtest
7775,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fix ris importer follow up link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there follow up from fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7775,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,fix ris importer follow up link issues that are eg link it eg fixes title of the pr must not reference an issue because github does not support autolinking there follow up from fixes change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7797,1,0,0,0,0,1,1,0,1,0,1,1,1,0,1,1,0,0,0,added auto key generation task to task progress auto key generation tasks are now shown in the list of background taskstogether with a progress representing entries done entries link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository screenshot from https user imagesentcom c f eb e d fdae a png from my point of view this looks now good dont forge the l n see failing unit test \ entries entries
7808,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,implemented a select all button for the library import function issue selectallscreenshot implemented a select all button for the library import function that fixes issue added a new function selectallentires to importentriesdialog and a button to importentriesdialogfxmlnew localization string select all entries also added to jabref_enproperties link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
7808,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,implemented a select all button for the library import function issue selectallscreenshot implemented a select all button for the library import function that fixes issue added a new function selectallentires to importentriesdialog and a button to importentriesdialogfxmlnew localization string select all entries also added to jabref_enproperties link issues that are eg fixes link it eg fixes title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described in a way that is understandable for the average user if applicable for ui changes if not created an issue at or even better submitted a pull request to the documentation repository
